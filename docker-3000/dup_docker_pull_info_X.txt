[{"A_title": "fixed the -it example", "A_clean_title": ["fix", "it", "exampl"], "B_title": "exec docs syntax fix", "B_clean_title": ["exec", "doc", "syntax", "fix"], "A_body": "```\njijo@jijo:~$ sudo docker exec ubuntu_bash -it bash\n2014/10/16 20:31:02 docker-exec: failed to exec: exec: \"-it\": executable file not found in $PATH\n\njijo@jijo:~$ sudo docker exec -it ubuntu_bash bash\nroot@ff5017acc959:/#\n```\n", "A_clean_body": ["jijo", "jijo", "sudo", "docker", "exec", "ubuntu", "bash", "it", "bash", "2014", "10", "16", "20:31:02", "docker", "exec", "fail", "exec", "exec", "it", "execut", "file", "not", "found", "path", "jijo", "jijo", "sudo", "docker", "exec", "it", "ubuntu", "bash", "bash", "root", "ff5017acc959"], "B_body": "The flags must come before the container name.\n", "B_clean_body": ["flag", "must", "come", "befor", "contain", "name"], "title_sim": [0.06350393677920917], "body_sim": [-0.01094659388181705], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 0}, {"A_title": "Carry #27834 \u2014 Do not require `.git` in the build context", "A_clean_title": ["carri", "27834", "not", "requir", "git", "build", "context"], "B_title": "Fix bundle dir for integration-cli", "B_clean_title": ["fix", "bundl", "dir", "integr", "cli"], "A_body": "Carry #27834 and hopefully fixes builds :angel:.\r\n\r\n- Add `.git` to `.dockerignore`\r\n- export DOCKER_GITCOMMIT in the Makefile\r\n- prioritize DOCKER_GITCOMMIT against the `git` command in\r\n  `./hack/make.sh`\r\n- Also add `integration-cli/bundles` to gitignore (it's generated when\r\n  using integration-cli shell)\r\n\r\nNote that, on my laptop for example, I'm sending `30M` of context with this, and `150M` without :scream_cat:, so I really think this can be a huge win :angel: \r\n\r\n/cc @tianon @jhowardmsft @icecrime @thaJeztah @cpuguy83 \r\n\r\n:frog: ", "A_clean_body": ["carri", "27834", "hope", "fix", "build", "angel", "add", "git", "dockerignor", "export", "docker", "gitcommit", "makefil", "priorit", "docker", "gitcommit", "against", "git", "command", "sh", "hack", "make", "also", "add", "integr", "cli", "bundl", "gitignor", "it", "'s", "gener", "when", "integr", "cli", "shell", "note", "that", "my", "laptop", "exampl", "'m", "send", "30m", "context", "thi", "150m", "without", "scream", "cat", "so", "realli", "think", "thi", "huge", "win", "angel", "cc", "tianon", "jhowardmsft", "icecrim", "thajeztah", "tha", "jeztah", "cpuguy83", "frog"], "B_body": "<!--\r\nPlease make sure you've read and understood our contributing guidelines;\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md\r\n\r\n** Make sure all your commits include a signature generated with `git commit -s` **\r\n\r\nFor additional information on our contributing process, read our contributing\r\nguide https://docs.docker.com/opensource/code/\r\n\r\nIf this is a bug fix, make sure your description includes \"fixes #xxxx\", or\r\n\"closes #xxxx\"\r\n\r\nPlease provide the following information:\r\n-->\r\n\r\n**- What I did**\r\n`test.main` was unexpectedly created under `docker/integration-cli/bundles/$VERSION/test-integration-cli `directory.\r\nThis commit moves `test.main` to `docker/bundles/$VERSION/test-integration-cli`.\r\n\r\n\"cherry-pick\" https://github.com/docker/docker/pull/26684/files#r79300354\r\n\r\n\r\n**- How I did it**\r\nSee above\r\n\r\n**- How to verify it**\r\n```console\r\n$ make shell\r\nroot@c9bc09cc4e3e:/go/src/github.com/docker/docker# hack/make.sh build-integration-test-binary dynbinary test-integration-cli\r\nroot@c9bc09cc4e3e:/go/src/github.com/docker/docker# ls integration-cli/bundles\r\nls: cannot access integration-cli/bundles: No such file or directory\r\nroot@c9bc09cc4e3e:/go/src/github.com/docker/docker# ls bundles/latest/test-integration-cli/test.main \r\nbundles/latest/test-integration-cli/test.main\r\n\r\n```\r\n**- Description for the changelog**\r\n<!--\r\nWrite a short (one line) summary that describes the changes in this\r\npull request for inclusion in the changelog:\r\n-->\r\n\r\n\r\n**- A picture of a cute animal (not mandatory but encouraged)**\r\n\r\n\r\n\r\n\r\nSigned-off-by: Akihiro Suda <suda.akihiro@lab.ntt.co.jp>", "B_clean_body": ["pleas", "make", "sure", "you", "'ve", "read", "understood", "our", "contribut", "guidelin", "http", "md", "github", "com", "docker", "docker", "blob", "master", "contribut", "make", "sure", "all", "your", "commit", "includ", "signatur", "gener", "git", "commit", "addit", "inform", "our", "contribut", "process", "read", "our", "contribut", "guid", "http", "docker", "doc", "com", "opensourc", "code", "thi", "bug", "fix", "make", "sure", "your", "descript", "includ", "fix", "xxxx", "or", "close", "xxxx", "pleas", "provid", "follow", "inform", "what", "did**", "test", "main", "wa", "unexpectedli", "creat", "under", "docker", "integr", "cli", "bundl", "integr", "cli", "version", "test", "directori", "thi", "commit", "move", "test", "main", "docker", "bundl", "integr", "cli", "version", "test", "cherri", "pick", "http", "github", "com", "docker", "docker", "pull", "26684", "file", "r79300354", "how", "did", "it**", "see", "abov", "how", "verifi", "it**", "consol", "make", "shell", "root", "c9bc09cc4e3e", "go", "src", "github", "com", "docker", "docker", "sh", "hack", "make", "build", "integr", "test", "binari", "dynbinari", "test", "integr", "cli", "root", "c9bc09cc4e3e", "go", "src", "github", "com", "docker", "docker", "ls", "integr", "cli", "bundl", "ls", "not", "access", "integr", "cli", "bundl", "no", "such", "file", "or", "directori", "root", "c9bc09cc4e3e", "go", "src", "github", "com", "docker", "docker", "ls", "integr", "bundl", "latest", "test", "main", "cli", "test", "integr", "bundl", "latest", "test", "main", "cli", "test", "descript", "changelog**", "write", "short", "one", "line", "summari", "that", "describ", "chang", "thi", "pull", "request", "inclus", "changelog", "pictur", "cute", "anim", "not", "mandatori", "but", "encourag", "sign", "off", "by", "akihiro", "suda", "suda", "akihiro", "lab", "ntt", "co", "jp"], "title_sim": [-0.003345571301114802], "body_sim": [0.4458814791813015], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 45}, {"A_title": "Update Container Wait", "A_clean_title": ["updat", "contain", "wait"], "B_title": "Add timeout in CLI waiting for autoremove", "B_clean_title": ["add", "timeout", "cli", "wait", "autoremov"], "A_body": "**Summary**\r\n\r\nThe goal for this PR is to be able to use the `POST /containers/{name}/wait` API in order to no longer rely on the Events API when doing `docker run ...` and `docker start` in attached mode. Here is the set of behavioral changes in the API and CLI:\r\n\r\n- The wait API now has on optional query parameter, `condition`, which specifies the state of the container which the client would like to wait for:\r\n\r\n    - **`not-running`**\r\n\r\n        This is the default value which maintains the existing behavior of the Wait API. It blocks if the container is in a state which is considered to be *running*, i.e., any of *running*, *paused*, or *restarting*. If it is already not in any of those states, then it would not block at all and return immediately with the current exit code.\r\n\r\n    - **`next-exit`**\r\n\r\n        This condition allows the client to wait for the container's state to *change* to a not-running state or to be removed. This is different from the *not-running* option because it will block if the container is in the *created*, *exited*, *dead*, or *removing* state, blocking through a transition to one of the running states and back to one of *exited* states or until the container is removed, whichever comes first. It is similar to waiting for a *die* or *destroy* event. This option is very useful to use before issuing a container start API request.\r\n\r\n    - **`removed`**\r\n\r\n        This condition allows the client to wait for the container to be removed. It is similar to waiting for a *destroy* event.\r\n\r\n- The Wait API will now return HTTP response headers immediately. This serves an an acknowledgement that a wait has been registered. The JSON response body will not be returned until the wait condition is met.\r\n\r\n- The Wait API's request context is extended to wait for a `http.CloseNotifier` event in the case that the client closes the connection while the server is blocked on the wait condition. This prevents leaked goroutines but should only be necessary until we switch to using Go 1.8's request context which cancels automatically if the client disconnects.\r\n\r\n- ~~To handle a manual detach (when the user enters the detach keys sequence when attached in TTY mode), the CLI now detects this key sequence, stops sending stdin, and causes the CLI to exit immediately. This is done as an alternative to waiting for a *detach* event.~~ The rug has been pulled out from under this bullet point. This will have to be done in the github.com/docker/cli repo along with the other CLI changes.\r\n\r\nFollow-up to #31794\r\n\r\nFixes #32242", "A_clean_body": ["**summary**", "goal", "thi", "pr", "abl", "use", "post", "contain", "name", "wait", "api", "order", "no", "longer", "reli", "event", "api", "when", "do", "docker", "run", "docker", "start", "attach", "mode", "here", "set", "behavior", "chang", "api", "cli", "wait", "api", "now", "ha", "option", "queri", "paramet", "condit", "which", "specifi", "state", "contain", "which", "client", "would", "like", "wait", "not", "run", "thi", "default", "valu", "which", "maintain", "exist", "behavior", "wait", "api", "it", "block", "contain", "state", "which", "consid", "*running*", "ani", "*running*", "*paused*", "or", "*restarting*", "it", "alreadi", "not", "ani", "those", "state", "then", "it", "would", "not", "block", "at", "all", "return", "immedi", "current", "exit", "code", "next", "exit", "thi", "condit", "allow", "client", "wait", "contain", "'s", "state", "*change*", "not", "run", "state", "or", "remov", "thi", "differ", "*not", "running*", "option", "becaus", "it", "will", "block", "contain", "*created*", "*exited*", "*dead*", "or", "*removing*", "state", "block", "through", "transit", "one", "run", "state", "back", "one", "*exited*", "state", "or", "until", "contain", "remov", "whichev", "come", "first", "it", "similar", "wait", "*die*", "or", "*destroy*", "event", "thi", "option", "veri", "use", "use", "befor", "issu", "contain", "start", "api", "request", "remov", "thi", "condit", "allow", "client", "wait", "contain", "remov", "it", "similar", "wait", "*destroy*", "event", "wait", "api", "will", "now", "return", "http", "respons", "header", "immedi", "thi", "serv", "acknowledg", "that", "wait", "ha", "been", "regist", "json", "respons", "bodi", "will", "not", "return", "until", "wait", "condit", "met", "wait", "api", "'s", "request", "context", "extend", "wait", "http", "closenotifi", "close", "notifi", "event", "case", "that", "client", "close", "connect", "while", "server", "block", "wait", "condit", "thi", "prevent", "leak", "goroutin", "but", "onli", "necessari", "until", "we", "switch", "go", "'s", "request", "context", "which", "cancel", "automat", "client", "disconnect", "~~to", "handl", "manual", "detach", "when", "user", "enter", "detach", "key", "sequenc", "when", "attach", "tti", "mode", "cli", "now", "detect", "thi", "key", "sequenc", "stop", "send", "stdin", "caus", "cli", "exit", "immedi", "thi", "done", "as", "altern", "wait", "*detach*", "event", "rug", "ha", "been", "pull", "out", "under", "thi", "bullet", "point", "thi", "will", "have", "done", "github", "com", "docker", "cli", "repo", "along", "other", "cli", "chang", "follow", "up", "31794", "fix", "32242"], "B_body": "This makes sure the CLI doesn't hang in case, for whatever reason, an\r\nevent never comes.\r\n", "B_clean_body": ["thi", "make", "sure", "cli", "n't", "hang", "case", "whatev", "reason", "event", "never", "come"], "title_sim": [0.33338564284989053], "body_sim": [0.2301744549980489], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.2968122731507306, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 20}, {"A_title": "Remove distro packaging, replace Makefile with Dockerfile+shell script", "A_clean_title": ["remov", "distro", "packag", "replac", "makefil", "dockerfile+shel", "script"], "B_title": "Update instructions to build packages on Debian wheezy", "B_clean_title": ["updat", "instruct", "build", "packag", "debian", "wheezi"], "A_body": "", "A_clean_body": [], "B_body": "This should fix issue #1441\n", "B_clean_body": ["thi", "fix", "issu", "1441"], "title_sim": [0.41308062169480286], "body_sim": [0.0], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 0}, {"A_title": "Bind daemon to 0.0.0.0 in Vagrant", "A_clean_title": ["bind", "daemon", "vagrant"], "B_title": "Add the rest api port to vagrantfile's port_forward", "B_clean_title": ["add", "rest", "api", "port", "vagrantfil", "'s", "port", "forward"], "A_body": "Fixes #1304.\n", "A_clean_body": ["fix", "1304"], "B_body": "What do you think about adding, the rest api port (4243) in the Vagrantfile port_forward ?\n\nLike this the client in your host can connect to the deamon in your vm, with no further configuration.\n\nIn my case, I compiled docker on OS X, so (once the ppa will include a version of docker with the rest api) I can do :\n\n```\n$>vagrant up\n$>docker images\n```\n\nAnd it'll list docker's images inside the vm.\n", "B_clean_body": ["what", "you", "think", "about", "ad", "rest", "api", "port", "4243", "vagrantfil", "port", "forward", "like", "thi", "client", "your", "host", "connect", "deamon", "your", "vm", "no", "further", "configur", "my", "case", "compil", "docker", "os", "so", "onc", "ppa", "will", "includ", "version", "docker", "rest", "api", "vagrant", "up", "docker", "imag", "it", "'ll", "list", "docker", "'s", "imag", "insid", "vm"], "title_sim": [0.013309158176281803], "body_sim": [0.022572127379266917], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 72}, {"A_title": "Formatting and consistency fixes to CLI and RUN references", "A_clean_title": ["format", "consist", "fix", "cli", "run", "refer"], "B_title": "Rebased Dockerignore", "B_clean_title": ["rebas", "dockerignor"], "A_body": "- Removed double backticks.\n- Reformatted paragraphs.\n- Fixed consistent STDOUT/STDIN/STDERR references.\n- Fixed several broken URLs.\n- Fixed backtick mismatches.\n\nDocker-DCO-1.1-Signed-off-by: James Turnbull james@lovedthanlost.net (github: jamtur01)\n", "A_clean_body": ["remov", "doubl", "backtick", "reformat", "paragraph", "fix", "consist", "stdout", "stdin", "stderr", "refer", "fix", "sever", "broken", "url", "ur", "ls", "fix", "backtick", "mismatch", "docker", "dco", "sign", "off", "by", "jame", "turnbul", "jame", "lovedthanlost", "net", "github", "jamtur01"], "B_body": "Close #4165\nFixes #2224\n", "B_clean_body": ["close", "4165", "fix", "2224"], "title_sim": [3.378344879335306e-16], "body_sim": [0.16838772514719838], "file_list_sim": 0.1, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.06070287539936102, 0.2585034013605442], "pattern": -1, "time": 9}, {"A_title": "Always mark as stopped for non running containers", "A_clean_title": ["alway", "mark", "as", "stop", "non", "run", "contain"], "B_title": "Update in daemon.restore() the `last` fields of globalMap in portallocator", "B_clean_title": ["updat", "daemon", "restor", "last", "field", "globalmap", "global", "map", "portalloc"], "A_body": "Fixes #7154\n\nDocker-DCO-1.1-Signed-off-by: Michael Crosby michael@docker.com (github: crosbymichael)\n", "A_clean_body": ["fix", "7154", "docker", "dco", "sign", "off", "by", "michael", "crosbi", "michael", "docker", "com", "github", "crosbymichael"], "B_body": "Fixes #7154\n\nDocker-DCO-1.1-Signed-off-by: Tibor Vass teabee89@gmail.com (github: tiborvass)\n", "B_clean_body": ["fix", "7154", "docker", "dco", "sign", "off", "by", "tibor", "vass", "teabee89", "gmail", "com", "github", "tiborvass"], "title_sim": [-0.007633669459531028], "body_sim": [0.5549498555041441], "file_list_sim": 0.3333333333333333, "overlap_files_len": 1, "code_sim": [0.7503274519816291, 0.0], "location_sim": [0.0, 0.0], "pattern": 1, "time": 0}, {"A_title": "Fixes pointer error", "A_clean_title": ["fix", "pointer", "error"], "B_title": "Fix positive case test.", "B_clean_title": ["fix", "posit", "case", "test"], "A_body": "Fixes https://github.com/docker/docker/issues/11790\n\nSigned-off-by: Paul Mou ppymou@gmail.com\n", "A_clean_body": ["fix", "http", "github", "com", "docker", "docker", "issu", "11790", "sign", "off", "by", "paul", "mou", "ppymou", "gmail", "com"], "B_body": "Signed-off-by: Allen Madsen blatyo@gmail.com\n#11779 was incorrect. It was testing that two pointers were not equal instead that the structs were equal.\n", "B_clean_body": ["sign", "off", "by", "allen", "madsen", "blatyo", "gmail", "com", "11779", "wa", "incorrect", "it", "wa", "test", "that", "two", "pointer", "were", "not", "equal", "instead", "that", "struct", "were", "equal"], "title_sim": [0.14688462754839213], "body_sim": [0.3493729567175721], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": -1, "time": 0}, {"A_title": "Re-vendor Notary and docker/go", "A_clean_title": ["re", "vendor", "notari", "docker", "go"], "B_title": "change url for jfrazelle/go", "B_clean_title": ["chang", "url", "jfrazel", "go"], "A_body": "This updates Notary and updates `github.com/jfrazelle/go` to be `github.com/docker/go`.\n\nThis also includes @thaJeztah's changes in #19739 which update the notary versions in all the Dockerfiles for different architectures to use the notary tag.  This PR bumps the version to `docker-1.10-4` instead of `docker-1.10-3`.\n\nRepeating his comment re: the versions here:\n- Dockerfile.aarch64 uses Golang 1.5.3, so guess we should be safe there\n- Dockerfile.armhf uses Golang 1.4.3, but already used Notary 1.10-2 (not sure which version of notary added the Yubico things)\n- Dockerfile.ppc64le has notary disabled; do we need it enabled in there?\n- Dockerfile.s390x mentions \"after we upgrade to Go 1.5+\". I don't see a Go version in there, only `GO_TOOLS_COMMIT`; is that what determins the Go version in that file? If so, we should probably should not change it\n", "A_clean_body": ["thi", "updat", "notari", "updat", "github", "com", "jfrazel", "go", "github", "com", "docker", "go", "thi", "also", "includ", "thajeztah", "tha", "jeztah", "'s", "chang", "19739", "which", "updat", "notari", "version", "all", "dockerfil", "differ", "architectur", "use", "notari", "tag", "thi", "pr", "bump", "version", "docker", "10", "instead", "docker", "10", "repeat", "hi", "comment", "re", "version", "here", "dockerfil", "aarch64", "use", "golang", "so", "guess", "we", "safe", "there", "dockerfil", "armhf", "use", "golang", "but", "alreadi", "use", "notari", "10", "not", "sure", "which", "version", "notari", "ad", "yubico", "thing", "dockerfil", "ppc64le", "ha", "notari", "disabl", "we", "need", "it", "enabl", "there", "dockerfil", "s390x", "mention", "after", "we", "upgrad", "go", "5+", "n't", "see", "go", "version", "there", "onli", "go", "tool", "commit", "that", "what", "determin", "go", "version", "that", "file", "so", "we", "probabl", "not", "chang", "it"], "B_body": "Signed-off-by: Jessica Frazelle acidburn@docker.com\n", "B_clean_body": ["sign", "off", "by", "jessica", "frazel", "acidburn", "docker", "com"], "title_sim": [0.2562481669881282], "body_sim": [0.07684845375306551], "file_list_sim": 0.7428571428571429, "overlap_files_len": 26, "code_sim": [0.9990471432566271, 1.0000000000000002], "location_sim": [0.9394121175764847, 1.0], "pattern": 0, "time": 1}, {"A_title": "Pass b.config to b.builder.Commit", "A_clean_title": ["pass", "config", "builder", "commit"], "B_title": "Finalize implementation of 'docker build'", "B_clean_title": ["final", "implement", "'docker", "build"], "A_body": "Fixes a bug where the final image from docker build would end up without a config section in its json file, rendering CMD and EXPOSE inoperable.\n", "A_clean_body": ["fix", "bug", "where", "final", "imag", "docker", "build", "would", "end", "up", "without", "config", "section", "it", "json", "file", "render", "cmd", "expos", "inoper"], "B_body": "", "B_clean_body": [], "title_sim": [-0.027315452978798033], "body_sim": [0.0], "file_list_sim": 0.2, "overlap_files_len": 1, "code_sim": [0.06728357751606018, 0.08522498630529884], "location_sim": [0.1676300578034682, 0.27488151658767773], "pattern": 0, "time": 1}, {"A_title": "fix the conflict between nameserver settings and the network used by bridge interface", "A_clean_title": ["fix", "conflict", "between", "nameserv", "set", "network", "use", "by", "bridg", "interfac"], "B_title": "Prevent DNS server conflicts in CreateBridgeIface", "B_clean_title": ["prevent", "dn", "server", "conflict", "createbridgeifac", "creat", "bridg", "ifac"], "A_body": "When launching docker in docker on a vm, there is a bug that the nested docker may choose a docker network that conflicts with vm's network. This pull request fixes this problem.\n\nSpecifically, suppose the vm uses 10.0.XX and has 10.0.4.1 as its nameserver. The first launched docker will avoid that and choose 172.17.42.1/16 as its network. That is no problem.\n\nWhen we launch nested docker in the first docker, the nested docker only sees the route table of first docker (172.17.42.1/16), so it will choose 10.0.42.1/16 in func CreateBridgeIface as its network. Although there is no conflict between two networks, the chosen network of nested docker will conflict with the nameserver (10.0.4.1) of original vm.\n\nThus, the network of nested docker can not work well since its dns lookup requests can not reach correct destination.\n\nThis commit adds additional check of nameserver settings in func CreateBridgeIface when choosing docker network.\n", "A_clean_body": ["when", "launch", "docker", "docker", "vm", "there", "bug", "that", "nest", "docker", "may", "choos", "docker", "network", "that", "conflict", "vm", "'s", "network", "thi", "pull", "request", "fix", "thi", "problem", "specif", "suppos", "vm", "use", "10", "xx", "ha", "10", "as", "it", "nameserv", "first", "launch", "docker", "will", "avoid", "that", "choos", "172", "17", "42", "16", "as", "it", "network", "that", "no", "problem", "when", "we", "launch", "nest", "docker", "first", "docker", "nest", "docker", "onli", "see", "rout", "tabl", "first", "docker", "172", "17", "42", "16", "so", "it", "will", "choos", "10", "42", "16", "func", "createbridgeifac", "creat", "bridg", "ifac", "as", "it", "network", "although", "there", "no", "conflict", "between", "two", "network", "chosen", "network", "nest", "docker", "will", "conflict", "nameserv", "10", "origin", "vm", "thu", "network", "nest", "docker", "not", "work", "well", "sinc", "it", "dn", "lookup", "request", "not", "reach", "correct", "destin", "thi", "commit", "add", "addit", "check", "nameserv", "set", "func", "createbridgeifac", "creat", "bridg", "ifac", "when", "choos", "docker", "network"], "B_body": "Fixes #1502\n- Read /etc/resolv.conf and extract listed nameservers. Format them as CIDR blocks (\"1.2.3.4/32\")\n- Check for conflicts when generating a bridge network block\n- Add tests to cover extensions in utils and network\n", "B_clean_body": ["fix", "1502", "read", "conf", "etc", "resolv", "extract", "list", "nameserv", "format", "them", "as", "cidr", "block", "32", "check", "conflict", "when", "gener", "bridg", "network", "block", "add", "test", "cover", "extens", "util", "network"], "title_sim": [0.23804378806022483], "body_sim": [0.43347731603858236], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.24223001199302427, 0.28819822701411374], "location_sim": [0.4978540772532189, 0.8111888111888111], "pattern": -1, "time": 61}, {"A_title": "hack/make.sh: rm unneeded linker flags", "A_clean_title": ["sh", "hack", "make", "rm", "unneed", "linker", "flag"], "B_title": "Remove -lpthread and -ldl from ldflags", "B_clean_title": ["remov", "lpthread", "ldl", "ldflag"], "A_body": "1. Flag -ldl was added by me in commit 15aad5d. No one (including me)\n   noticed that since sqlite3 is now being built with OMIT_LOAD_EXTENTION\n   (see https://github.com/docker/docker/pull/16094) we no longer need -ldl.\n2. Flag -lpthread was added by @crosbymichael in commit a263e07, I can't\n   figure out why. I tried rebuilding with this flag removed and it's\n   working just fine, so let's assume the flag is no longer needed.\n\nPS ideally these should be two separate commits, but let's go wild!\n\nThis is sort of a followup to https://github.com/docker/docker/pull/15387.\n", "A_clean_body": ["flag", "ldl", "wa", "ad", "by", "me", "commit", "15aad5d", "no", "one", "includ", "me", "notic", "that", "sinc", "sqlite3", "now", "be", "built", "omit", "load", "extent", "see", "http", "github", "com", "docker", "docker", "pull", "16094", "we", "no", "longer", "need", "ldl", "flag", "lpthread", "wa", "ad", "by", "crosbymichael", "commit", "a263e07", "can't", "figur", "out", "whi", "tri", "rebuild", "thi", "flag", "remov", "it'", "work", "just", "fine", "so", "let", "'s", "assum", "flag", "no", "longer", "need", "ps", "ideal", "these", "two", "separ", "commit", "but", "let", "'s", "go", "wild", "thi", "sort", "followup", "http", "github", "com", "docker", "docker", "pull", "15387"], "B_body": "There is no need in those flags now when we use amalgamated sqlite3 from\nmattn/go-sqlite3.\n", "B_clean_body": ["there", "no", "need", "those", "flag", "now", "when", "we", "use", "amalgam", "sqlite3", "sqlite3", "mattn", "go"], "title_sim": [0.014988815760487242], "body_sim": [0.5975777798108957], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.36363636363636365, 1.0], "pattern": 0, "time": 0}, {"A_title": "Avoid calling Plugin.Activate on every 'List' call", "A_clean_title": ["avoid", "call", "plugin", "activ", "everi", "'list", "call"], "B_title": "Fix plugin file descriptor leaks", "B_clean_title": ["fix", "plugin", "file", "descriptor", "leak"], "A_body": "<!--\nPlease make sure you've read and understood our contributing guidelines;\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md\n\n** Make sure all your commits include a signature generated with `git commit -s` **\n\nFor additional information on our contributing process, read our contributing\nguide https://docs.docker.com/opensource/code/\n\nIf this is a bug fix, make sure your description includes \"fixes #xxxx\", or\n\"closes #xxxx\"\n-->\n\nPlease provide the following information:\n- What did you do?\n- How did you do it?\n- How do I see it or verify it?\n- A picture of a cute animal (not mandatory but encouraged)\n\nWhen docker is used with swarm, 'List' is called often, and\nplugins.GetAll() is called every time during this. Since GetAll\nuses loadWithRetry method, the plugin is initialized more than once.\nThis leaves a lot of connections to the plugin open and resulting on\nPlugin.Activate called more than once\n\nThis patch uses plugins.Get method which does what is needed from this\nAPI\n\nCloses: #20815\nSigned-off-by: Babu Shanmugam babu.shanmugam@gmail.com\n", "A_clean_body": ["pleas", "make", "sure", "you", "'ve", "read", "understood", "our", "contribut", "guidelin", "http", "md", "github", "com", "docker", "docker", "blob", "master", "contribut", "make", "sure", "all", "your", "commit", "includ", "signatur", "gener", "git", "commit", "addit", "inform", "our", "contribut", "process", "read", "our", "contribut", "guid", "http", "docker", "doc", "com", "opensourc", "code", "thi", "bug", "fix", "make", "sure", "your", "descript", "includ", "fix", "xxxx", "or", "close", "xxxx", "pleas", "provid", "follow", "inform", "what", "did", "you", "how", "did", "you", "it", "how", "see", "it", "or", "verifi", "it", "pictur", "cute", "anim", "not", "mandatori", "but", "encourag", "when", "docker", "use", "swarm", "'list", "call", "often", "plugin", "getal", "get", "all", "call", "everi", "time", "dure", "thi", "sinc", "getal", "get", "all", "use", "loadwithretri", "load", "retri", "method", "plugin", "initi", "more", "than", "onc", "thi", "leav", "lot", "connect", "plugin", "open", "result", "plugin", "activ", "call", "more", "than", "onc", "thi", "patch", "use", "plugin", "get", "method", "which", "what", "need", "thi", "api", "close", "20815", "sign", "off", "by", "babu", "shanmugam", "babu", "shanmugam", "gmail", "com"], "B_body": "Ping @cpuguy83 \n\nThis PR fixes a newly discovered issue where the retrieval of available plugins would cause file descriptor leaks. This issue is documented here https://github.com/emccode/rexray/issues/291.\n\nThe problem becomes worse as documented in https://github.com/docker/swarm/issues/1847 with Swarm, since it constantly issues List() calls. This eventually and quickly causes open files problems.\n\nThe following is an example of the old behavior where a List() or Get() would result in newly initialized plugins and more file descriptors, note the 48 and 60.\n\n```\n[root@localhost vagrant]# docker volume ls;sudo lsof |grep rexray.sock|wc -l\nDRIVER              VOLUME NAME\nlocal               921i190k2910di290id190i2d1921i90d2\nlocal               921i190k2910di290id190i2d1921i90d20192912i1290i12i9029021i\nrexray              48ac602a85bac429400a2016d71d796\nrexray              1234567890123456789012345678901\nrexray              6001118f6f4eb0216512a89ef244415\nrexray              de4f74e72a4c0202e58b9a1cc1b59d0\nrexray              8a66790a0f70706cfb0b4a0fe1dc4f0\nrexray              734c30512c6af261ddd3ad5f808a454\nrexray              29027582b27d8a5026ca556754891a3\nrexray              testabc1\nrexray              testabc\n48\n[root@localhost vagrant]# docker volume ls;sudo lsof |grep rexray.sock|wc -l\nDRIVER              VOLUME NAME\nlocal               921i190k2910di290id190i2d1921i90d2\nlocal               921i190k2910di290id190i2d1921i90d20192912i1290i12i9029021i\nrexray              48ac602a85bac429400a2016d71d796\nrexray              1234567890123456789012345678901\nrexray              6001118f6f4eb0216512a89ef244415\nrexray              de4f74e72a4c0202e58b9a1cc1b59d0\nrexray              8a66790a0f70706cfb0b4a0fe1dc4f0\nrexray              734c30512c6af261ddd3ad5f808a454\nrexray              29027582b27d8a5026ca556754891a3\nrexray              testabc1\nrexray              testabc\n60\n```\n\nThe following is a trace after to List() methods which shows the rexray.sock being opened initialized twice (lstat, stat, connect, getpeername).\n\n```\n947  lstat(\"/run/docker/plugins/rexray.sock\", {st_mode=S_IFSOCK|0755, st_size=0, ...}) = 0\n8947  stat(\"/run/docker/plugins/rexray.sock\", {st_mode=S_IFSOCK|0755, st_size=0, ...}) = 0\n8947  connect(12, {sa_family=AF_LOCAL, sun_path=\"/run/docker/plugins/rexray.sock\"}, 34) = 0\n8947  getpeername(12, {sa_family=AF_LOCAL, sun_path=\"/run/docker/plugins/rexray.sock\"}, [34]) = 0\n8947  lstat(\"/run/docker/plugins/rexray.sock\", {st_mode=S_IFSOCK|0755, st_size=0, ...}) = 0\n8947  stat(\"/run/docker/plugins/rexray.sock\", {st_mode=S_IFSOCK|0755, st_size=0, ...}) = 0\n8947  connect(13, {sa_family=AF_LOCAL, sun_path=\"/run/docker/plugins/rexray.sock\"}, 34) = 0\n8947  getpeername(13, {sa_family=AF_LOCAL, sun_path=\"/run/docker/plugins/rexray.sock\"}, [34]) = 0\n```\n\nThis is after the fix, consistently there are the same amount of descriptors open.\n\n```\n[root@localhost vagrant]# docker volume ls ;sudo lsof |grep scaleio|wc -l\nDRIVER              VOLUME NAME\nscaleio1            test1\nscaleio1            test2\nscaleio1            test3\nscaleio1            testabc4\n24\n[root@localhost vagrant]# docker volume ls ;sudo lsof |grep scaleio|wc -l\nDRIVER              VOLUME NAME\nscaleio1            test1\nscaleio1            test2\nscaleio1            test3\nscaleio1            testabc4\n24\n```\n\nSigned-off-by: Clinton Kitson clintonskitson@gmail.com\n", "B_clean_body": ["ping", "cpuguy83", "thi", "pr", "fix", "newli", "discov", "issu", "where", "retriev", "avail", "plugin", "would", "caus", "file", "descriptor", "leak", "thi", "issu", "document", "here", "http", "github", "com", "emccod", "rexray", "issu", "291", "problem", "becom", "wors", "as", "document", "http", "github", "com", "docker", "swarm", "issu", "1847", "swarm", "sinc", "it", "constantli", "issu", "list", "call", "thi", "eventu", "quickli", "caus", "open", "file", "problem", "follow", "exampl", "old", "behavior", "where", "list", "or", "get", "would", "result", "newli", "initi", "plugin", "more", "file", "descriptor", "note", "48", "60", "root", "localhost", "vagrant", "docker", "volum", "ls", "sudo", "lsof", "|grep", "rexray", "sock|wc", "driver", "volum", "name", "local", "921i190k2910di290id190i2d1921i90d2", "local", "921i190k2910di290id190i2d1921i90d20192912i1290i12i9029021i", "rexray", "48ac602a85bac429400a2016d71d796", "rexray", "1234567890123456789012345678901", "rexray", "6001118f6f4eb0216512a89ef244415", "rexray", "de4f74e72a4c0202e58b9a1cc1b59d0", "rexray", "8a66790a0f70706cfb0b4a0fe1dc4f0", "rexray", "734c30512c6af261ddd3ad5f808a454", "rexray", "29027582b27d8a5026ca556754891a3", "rexray", "testabc1", "rexray", "testabc", "48", "root", "localhost", "vagrant", "docker", "volum", "ls", "sudo", "lsof", "|grep", "rexray", "sock|wc", "driver", "volum", "name", "local", "921i190k2910di290id190i2d1921i90d2", "local", "921i190k2910di290id190i2d1921i90d20192912i1290i12i9029021i", "rexray", "48ac602a85bac429400a2016d71d796", "rexray", "1234567890123456789012345678901", "rexray", "6001118f6f4eb0216512a89ef244415", "rexray", "de4f74e72a4c0202e58b9a1cc1b59d0", "rexray", "8a66790a0f70706cfb0b4a0fe1dc4f0", "rexray", "734c30512c6af261ddd3ad5f808a454", "rexray", "29027582b27d8a5026ca556754891a3", "rexray", "testabc1", "rexray", "testabc", "60", "follow", "trace", "after", "list", "method", "which", "show", "rexray", "sock", "be", "open", "initi", "twice", "lstat", "stat", "connect", "getpeernam", "947", "lstat", "sock", "run", "docker", "plugin", "rexray", "st", "mode=", "ifsock|0755", "st", "size=0", "8947", "stat", "sock", "run", "docker", "plugin", "rexray", "st", "mode=", "ifsock|0755", "st", "size=0", "8947", "connect", "12", "sa", "family=af", "local", "sun", "path=", "sock", "run", "docker", "plugin", "rexray", "34", "8947", "getpeernam", "12", "sa", "family=af", "local", "sun", "path=", "sock", "run", "docker", "plugin", "rexray", "34", "8947", "lstat", "sock", "run", "docker", "plugin", "rexray", "st", "mode=", "ifsock|0755", "st", "size=0", "8947", "stat", "sock", "run", "docker", "plugin", "rexray", "st", "mode=", "ifsock|0755", "st", "size=0", "8947", "connect", "13", "sa", "family=af", "local", "sun", "path=", "sock", "run", "docker", "plugin", "rexray", "34", "8947", "getpeernam", "13", "sa", "family=af", "local", "sun", "path=", "sock", "run", "docker", "plugin", "rexray", "34", "thi", "after", "fix", "consist", "there", "are", "same", "amount", "descriptor", "open", "root", "localhost", "vagrant", "docker", "volum", "ls", "sudo", "lsof", "|grep", "scaleio|wc", "driver", "volum", "name", "scaleio1", "test1", "scaleio1", "test2", "scaleio1", "test3", "scaleio1", "testabc4", "24", "root", "localhost", "vagrant", "docker", "volum", "ls", "sudo", "lsof", "|grep", "scaleio|wc", "driver", "volum", "name", "scaleio1", "test1", "scaleio1", "test2", "scaleio1", "test3", "scaleio1", "testabc4", "24", "sign", "off", "by", "clinton", "kitson", "clintonskitson", "gmail", "com"], "title_sim": [0.3682486854198586], "body_sim": [0.39309166669512574], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": -1, "time": 5}, {"A_title": "concurrent read and write operations on a map should use lock", "A_clean_title": ["concurr", "read", "write", "oper", "map", "use", "lock"], "B_title": "Fix race/deadlock in v1 plugin handlers", "B_clean_title": ["fix", "race", "deadlock", "v1", "plugin", "handler"], "A_body": "Signed-off-by: frank yang <yyb196@gmail.com>\r\n\r\ni bumped into a docker panic with version 1.12.3, and i checked upstream code found that it hasn't been fixed, so i commit a pull request to fix it.\r\n\r\nraw panic output:\r\n```\r\nfatal error: concurrent map read and map write\r\n\r\ngoroutine 4307 [running]:\r\nruntime.throw(0x17dae67, 0x21)\r\n    /usr/local/go/src/runtime/panic.go:566 +0x95 fp=0xc421730a50 sp=0xc421730a30\r\nruntime.mapaccess2_faststr(0x15ad500, 0xc420345dd0, 0xc420fc57bb, 0x49, 0xc420fc566b, 0x49)\r\n    /usr/local/go/src/runtime/hashmap_fast.go:306 +0x52b fp=0xc421730ab0 sp=0xc421730a50\r\ngithub.com/docker/docker/pkg/plugins.GetAll(0x17b4fba, 0xc, 0xc42018e9a0, 0x0, 0x0, 0x0, 0x0)\r\n    /go/src/github.com/docker/docker/pkg/plugins/plugins.go:247 +0x10f fp=0xc421730ba0 sp=0xc421730ab0\r\ngithub.com/docker/docker/plugin.FindWithCapability(0x17b4fba, 0xc, 0x6d6289af05a799e, 0xecff83c3d, 0xb, 0x2, 0x0)\r\n    /go/src/github.com/docker/docker/plugin/legacy.go:9 +0x3f fp=0xc421730c20 sp=0xc421730ba0\r\ngithub.com/docker/docker/volume/drivers.GetAllDrivers(0x0, 0x0, 0x0, 0x0, 0x0)\r\n    /go/src/github.com/docker/docker/volume/drivers/extpoint.go:154 +0x87 fp=0xc421730d90 sp=0xc421730c20\r\ngithub.com/docker/docker/volume/store.(*VolumeStore).getVolume(0xc4200eb320, 0xc420f69400, 0x40, 0x0, 0x0, 0xc420fd7d00, 0x0)\r\n    /go/src/github.com/docker/docker/volume/store/store.go:400 +0x28f fp=0xc421730f08 sp=0xc421730d90\r\ngithub.com/docker/docker/volume/store.(*VolumeStore).create(0xc4200eb320, 0xc420f69400, 0x40, 0x0, 0x0, 0xc421a13ef0, 0x0, 0x1673860, 0xc421a13f80, 0xc4218f81d8, ...)\r\n    /go/src/github.com/docker/docker/volume/store/store.go:268 +0x83c fp=0xc421731060 sp=0xc421730f08\r\ngithub.com/docker/docker/volume/store.(*VolumeStore).CreateWithRef(0xc4200eb320, 0xc420f69400, 0x40, 0x0, 0x0, 0xc420f68c00, 0x40, 0xc421a13ef0, 0x0, 0x0, ...)\r\n    /go/src/github.com/docker/docker/volume/store/store.go:222 +0x136 fp=0xc4217310f0 sp=0xc421731060\r\ngithub.com/docker/docker/daemon.(*Daemon).createContainerPlatformSpecificSettings(0xc420242000, 0xc420d2d2c0, 0xc420f9d540, 0xc4218a4000, 0x0, 0x0)\r\n    /go/src/github.com/docker/docker/daemon/create_unix.go:69 +0x567 fp=0xc4217312f8 sp=0xc4217310f0\r\ngithub.com/docker/docker/daemon.(*Daemon).create(0xc420242000, 0xc421a455e3, 0x2c, 0xc420f9d540, 0xc4218a4000, 0xc420430438, 0x0, 0x0, 0x0, 0x0, ...)\r\n    /go/src/github.com/docker/docker/daemon/create.go:253 +0x54f fp=0xc4217313a0 sp=0xc4217312f8\r\ngithub.com/docker/docker/daemon.(*Daemon).containerCreate(0xc420242000, 0xc421a455e3, 0x2c, 0xc420f9d540, 0xc4218a4000, 0xc420430438, 0x0, 0x0, 0x0, 0x0, ...)\r\n    /go/src/github.com/docker/docker/daemon/create.go:67 +0x1a8 fp=0xc4217314c0 sp=0xc4217313a0\r\ngithub.com/docker/docker/daemon.(*Daemon).ContainerCreate(0xc420242000, 0xc421a455e3, 0x2c, 0xc420f9d540, 0xc4218a4000, 0xc420430438, 0x0, 0x0, 0x0, 0x0, ...)\r\n    /go/src/github.com/docker/docker/daemon/create.go:41 +0xad fp=0xc421731570 sp=0xc4217314c0\r\ngithub.com/docker/docker/api/server/router/container.(*containerRouter).postContainersCreate(0xc420e22fc0, 0x21d5320, 0xc4219f7e90, 0x21d1c60, 0xc420dfe340, 0xc42189c960, 0xc4219f7d40, 0xc421a4f301, 0xc4219f7e90)\r\n    /go/src/github.com/docker/docker/api/server/router/container/container_routes.go:374 +0x5ec fp=0xc421731790 sp=0xc421731570\r\ngithub.com/docker/docker/api/server/router/container.(*containerRouter).(github.com/docker/docker/api/server/router/container.postContainersCreate)-fm(0x21d5320, 0xc4219f7e90, 0x21d1c60, 0xc420dfe340, 0xc42189c960, 0xc4219f7d40, 0x15, 0x4)\r\n    /go/src/github.com/docker/docker/api/server/router/container/container.go:55 +0x69 fp=0xc4217317e8 sp=0xc421731790\r\ngithub.com/docker/docker/api/server/middleware.VersionMiddleware.WrapHandler.func1(0x21d5320, 0xc4219f7e60, 0x21d1c60, 0xc420dfe340, 0xc42189c960, 0xc4219f7d40, 0xc420d23320, 0x21aa2f0)\r\n    /go/src/github.com/docker/docker/api/server/middleware/version.go:56 +0x73c fp=0xc421731970 sp=0xc4217317e8\r\n```\r\n\r\n**- What I did**\r\n\r\n**- How I did it**\r\n\r\n**- How to verify it**\r\n\r\n**- Description for the changelog**\r\n<!--\r\nWrite a short (one line) summary that describes the changes in this\r\npull request for inclusion in the changelog:\r\n-->\r\n\r\n\r\n**- A picture of a cute animal (not mandatory but encouraged)**\r\n\r\n", "A_clean_body": ["sign", "off", "by", "frank", "yang", "yyb196", "gmail", "com", "bump", "into", "docker", "panic", "version", "12", "check", "upstream", "code", "found", "that", "it", "ha", "n't", "been", "fix", "so", "commit", "pull", "request", "fix", "it", "raw", "panic", "output", "fatal", "error", "concurr", "map", "read", "map", "write", "goroutin", "4307", "run", "runtim", "throw", "0x17dae67", "0x21", "go:566", "usr", "local", "go", "src", "runtim", "panic", "+0x95", "fp=0xc421730a50", "sp=0xc421730a30", "runtim", "mapaccess2", "faststr", "0x15ad500", "0xc420345dd0", "0xc420fc57bb", "0x49", "0xc420fc566b", "0x49", "go:306", "fast", "usr", "local", "go", "src", "runtim", "hashmap", "+0x52b", "fp=0xc421730ab0", "sp=0xc421730a50", "github", "getal", "com", "docker", "docker", "pkg", "plugin", "get", "all", "0x17b4fba", "0xc", "0xc42018e9a0", "0x0", "0x0", "0x0", "0x0", "go:247", "go", "src", "github", "com", "docker", "docker", "pkg", "plugin", "plugin", "+0x10f", "fp=0xc421730ba0", "sp=0xc421730ab0", "github", "findwithcap", "com", "docker", "docker", "plugin", "find", "capabl", "0x17b4fba", "0xc", "0x6d6289af05a799", "0xecff83c3d", "0xb", "0x2", "0x0", "go:9", "go", "src", "github", "com", "docker", "docker", "plugin", "legaci", "+0x3f", "fp=0xc421730c20", "sp=0xc421730ba0", "github", "getalldriv", "com", "docker", "docker", "volum", "driver", "get", "all", "driver", "0x0", "0x0", "0x0", "0x0", "0x0", "go:154", "go", "src", "github", "com", "docker", "docker", "volum", "driver", "extpoint", "+0x87", "fp=0xc421730d90", "sp=0xc421730c20", "github", "com", "docker", "docker", "volum", "store", "*volumestor", "*volum", "store", "getvolum", "get", "volum", "0xc4200eb320", "0xc420f69400", "0x40", "0x0", "0x0", "0xc420fd7d00", "0x0", "go:400", "go", "src", "github", "com", "docker", "docker", "volum", "store", "store", "+0x28f", "fp=0xc421730f08", "sp=0xc421730d90", "github", "com", "docker", "docker", "volum", "store", "*volumestor", "*volum", "store", "creat", "0xc4200eb320", "0xc420f69400", "0x40", "0x0", "0x0", "0xc421a13ef0", "0x0", "0x1673860", "0xc421a13f80", "0xc4218f81d8", "go:268", "go", "src", "github", "com", "docker", "docker", "volum", "store", "store", "+0x83c", "fp=0xc421731060", "sp=0xc421730f08", "github", "com", "docker", "docker", "volum", "store", "*volumestor", "*volum", "store", "createwithref", "creat", "ref", "0xc4200eb320", "0xc420f69400", "0x40", "0x0", "0x0", "0xc420f68c00", "0x40", "0xc421a13ef0", "0x0", "0x0", "go:222", "go", "src", "github", "com", "docker", "docker", "volum", "store", "store", "+0x136", "fp=0xc4217310f0", "sp=0xc421731060", "github", "com", "docker", "docker", "daemon", "*daemon", "createcontainerplatformspecificset", "creat", "contain", "platform", "specif", "set", "0xc420242000", "0xc420d2d2c0", "0xc420f9d540", "0xc4218a4000", "0x0", "0x0", "go:69", "go", "src", "github", "unix", "com", "docker", "docker", "daemon", "creat", "+0x567", "fp=0xc4217312f8", "sp=0xc4217310f0", "github", "com", "docker", "docker", "daemon", "*daemon", "creat", "0xc420242000", "0xc421a455e3", "0x2c", "0xc420f9d540", "0xc4218a4000", "0xc420430438", "0x0", "0x0", "0x0", "0x0", "go:253", "go", "src", "github", "com", "docker", "docker", "daemon", "creat", "+0x54f", "fp=0xc4217313a0", "sp=0xc4217312f8", "github", "com", "docker", "docker", "daemon", "*daemon", "containercr", "contain", "creat", "0xc420242000", "0xc421a455e3", "0x2c", "0xc420f9d540", "0xc4218a4000", "0xc420430438", "0x0", "0x0", "0x0", "0x0", "go:67", "go", "src", "github", "com", "docker", "docker", "daemon", "creat", "+0x1a8", "fp=0xc4217314c0", "sp=0xc4217313a0", "github", "com", "docker", "docker", "daemon", "*daemon", "containercr", "contain", "creat", "0xc420242000", "0xc421a455e3", "0x2c", "0xc420f9d540", "0xc4218a4000", "0xc420430438", "0x0", "0x0", "0x0", "0x0", "go:41", "go", "src", "github", "com", "docker", "docker", "daemon", "creat", "+0xad", "fp=0xc421731570", "sp=0xc4217314c0", "github", "com", "docker", "docker", "api", "server", "router", "contain", "*containerrout", "*contain", "router", "postcontainerscr", "post", "contain", "creat", "0xc420e22fc0", "0x21d5320", "0xc4219f7e90", "0x21d1c60", "0xc420dfe340", "0xc42189c960", "0xc4219f7d40", "0xc421a4f301", "0xc4219f7e90", "go:374", "go", "src", "github", "rout", "com", "docker", "docker", "api", "server", "router", "contain", "contain", "+0x5ec", "fp=0xc421731790", "sp=0xc421731570", "github", "com", "docker", "docker", "api", "server", "router", "contain", "*containerrout", "*contain", "router", "github", "postcontainerscr", "com", "docker", "docker", "api", "server", "router", "contain", "post", "contain", "creat", "fm", "0x21d5320", "0xc4219f7e90", "0x21d1c60", "0xc420dfe340", "0xc42189c960", "0xc4219f7d40", "0x15", "0x4", "go:55", "go", "src", "github", "com", "docker", "docker", "api", "server", "router", "contain", "contain", "+0x69", "fp=0xc4217317e8", "sp=0xc421731790", "github", "versionmiddlewar", "wraphandl", "func1", "com", "docker", "docker", "api", "server", "middlewar", "version", "middlewar", "wrap", "handler", "0x21d5320", "0xc4219f7e60", "0x21d1c60", "0xc420dfe340", "0xc42189c960", "0xc4219f7d40", "0xc420d23320", "0x21aa2f0", "go:56", "go", "src", "github", "com", "docker", "docker", "api", "server", "middlewar", "version", "+0x73c", "fp=0xc421731970", "sp=0xc4217317e8", "what", "did**", "how", "did", "it**", "how", "verifi", "it**", "descript", "changelog**", "write", "short", "one", "line", "summari", "that", "describ", "chang", "thi", "pull", "request", "inclus", "changelog", "pictur", "cute", "anim", "not", "mandatori", "but", "encourag"], "B_body": "When a plugin is activated, and then `plugins.Handle` is called to\r\nregister a new handler for a given plugin type, a deadlock occurs for anything which calls `waitActive`, including `Get`, and `GetAll`.\r\n\r\nThis happens because `Handle()` is setting `activated` to `false` to\r\nensure that plugin handlers are run on next activation.\r\nMaybe these handlers should be called immediately for any plugins which\r\nare already registered... but to preserve the existing behavior while\r\nfixing the deadlock, track if handlers have been run on plugins and\r\nreset when a new handler is registered.\r\n\r\nThe simplest way to reproduce the deadlock with Docker is to add a `-v\r\n/foo` to the test container created for the external graphdriver tests.\r\n\r\nping @mavenugo @anusha-ragunathan @tiborvass ", "B_clean_body": ["when", "plugin", "activ", "then", "plugin", "handl", "call", "regist", "new", "handler", "given", "plugin", "type", "deadlock", "occur", "anyth", "which", "call", "waitact", "wait", "activ", "includ", "get", "getal", "get", "all", "thi", "happen", "becaus", "handl", "set", "activ", "fals", "ensur", "that", "plugin", "handler", "are", "run", "next", "activ", "mayb", "these", "handler", "call", "immedi", "ani", "plugin", "which", "are", "alreadi", "regist", "but", "preserv", "exist", "behavior", "while", "fix", "deadlock", "track", "handler", "have", "been", "run", "plugin", "reset", "when", "new", "handler", "regist", "simplest", "way", "reproduc", "deadlock", "docker", "add", "foo", "test", "contain", "creat", "extern", "graphdriv", "test", "ping", "mavenugo", "anusha", "ragunathan", "tiborvass"], "title_sim": [0.010310971977404153], "body_sim": [0.19655411594754982], "file_list_sim": 0.3333333333333333, "overlap_files_len": 1, "code_sim": [0.14243581302633881, 0.16730299754371608], "location_sim": [0.2594594594594595, 0.34782608695652173], "pattern": 0, "time": 6}, {"A_title": "Adding support for elementary OS distro in install script.", "A_clean_title": ["ad", "support", "elementari", "os", "distro", "instal", "script"], "B_title": "recongnizing elementary OS and pretending it is Ubuntu Trusty", "B_clean_title": ["recongn", "elementari", "os", "pretend", "it", "ubuntu", "trusti"], "A_body": "Adding support for elementary OS in the installer script.\n\nThe script will query the upstream release from the command `$ lsb_release -a -u`, so, it's now very easy to add support for more forked distros.\n\n~~I don't know what are the side effects of checking the upstream release for all distros. For that reason, I've restricted this check to elementary OS, which I've been able to test.~~\n\nI've tested this in elementary OS 0.3 (freya) and it's working just fine.\n\nCredits to Daniel For\u00e9 and Cody Garver from elementary OS for [helping me out to achieve this](http://elementaryos.stackexchange.com/a/769).\n\n**TL;DR:**\nWe've tested the command in some distros (based and non-based in Debian/Ubuntu) and have achieved a solution that should work across all distros. It'll check for the existince and success of the command `lsb_release -a -u` to then retrieve the upstream release info.\n", "A_clean_body": ["ad", "support", "elementari", "os", "instal", "script", "script", "will", "queri", "upstream", "releas", "command", "lsb", "releas", "so", "it", "'s", "now", "veri", "easi", "add", "support", "more", "fork", "distro", "~~i", "n't", "know", "what", "are", "side", "effect", "check", "upstream", "releas", "all", "distro", "that", "reason", "'ve", "restrict", "thi", "check", "elementari", "os", "which", "'ve", "been", "abl", "test", "'ve", "test", "thi", "elementari", "os", "freya", "it", "'s", "work", "just", "fine", "credit", "daniel", "for\u00e9", "codi", "garver", "elementari", "os", "help", "me", "out", "achiev", "thi", "http", "stackexchang", "elementaryo", "com", "769", "**tl", "dr", "we", "'ve", "test", "command", "some", "distro", "base", "non", "base", "debian", "ubuntu", "have", "achiev", "solut", "that", "work", "across", "all", "distro", "it", "'ll", "check", "existinc", "success", "command", "lsb", "releas", "then", "retriev", "upstream", "releas", "info"], "B_body": "Elementary Freya is the latest release of Elementary OS: https://elementary.io/\nIt is based on Ubuntu 14.04 LTS, codename Trusty.\n\nTested it installs and works.\nWorks when running docker in sudo. Could not get it to work without sudo.\n", "B_clean_body": ["elementari", "freya", "latest", "releas", "elementari", "os", "http", "elementari", "io", "it", "base", "ubuntu", "14", "04", "lt", "codenam", "trusti", "test", "it", "instal", "work", "work", "when", "run", "docker", "sudo", "could", "not", "get", "it", "work", "without", "sudo"], "title_sim": [0.2259252587571517], "body_sim": [0.5080777074500108], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.45835423261187913, 0.45835423261187913], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1}, {"A_title": "Correct port range in OS X installation doc", "A_clean_title": ["correct", "port", "rang", "os", "instal", "doc"], "B_title": "Correct port number forwarding bash script", "B_clean_title": ["correct", "port", "number", "forward", "bash", "script"], "A_body": "", "A_clean_body": [], "B_body": "The documentation states that the VM port range that docker uses is 49000 - 49900. However, the included bash script was incorrectly mapping 4900 - 49900.\n\nDocker-DCO-1.1-Signed-off-by: Michael Italia michael.italia@gmail.com (github: mitalia)\n", "B_clean_body": ["document", "state", "that", "vm", "port", "rang", "that", "docker", "use", "49000", "49900", "howev", "includ", "bash", "script", "wa", "incorrectli", "map", "4900", "49900", "docker", "dco", "sign", "off", "by", "michael", "italia", "michael", "italia", "gmail", "com", "github", "mitalia"], "title_sim": [0.6510019704708877], "body_sim": [0.0], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 0}, {"A_title": "volume-create returns error if volume exist", "A_clean_title": ["volum", "creat", "return", "error", "volum", "exist"], "B_title": "volume create error on conflict option", "B_clean_title": ["volum", "creat", "error", "conflict", "option"], "A_body": "Signed-off-by: Deng Guangxing dengguangxing@huawei.com\n\n```\n#docker volume\nDRIVER              VOLUME NAME\nlocal                    test\n# docker volume create --name test --driver anotherdriver\ntest\n```\n\nCreating a volume with existing name(in different driver) would return successfully. This pr will return an error instead\n\n``````\n# docker volume create --name test--driver anotherdriver\nError response from daemon: volume test already exist in driver local\n```.\n``````\n", "A_clean_body": ["sign", "off", "by", "deng", "guangx", "dengguangx", "huawei", "com", "docker", "volum", "driver", "volum", "name", "local", "test", "docker", "volum", "creat", "name", "test", "driver", "anotherdriv", "test", "creat", "volum", "exist", "name", "differ", "driver", "would", "return", "success", "thi", "pr", "will", "return", "error", "instead", "docker", "volum", "creat", "name", "test", "driver", "anotherdriv", "error", "respons", "daemon", "volum", "test", "alreadi", "exist", "driver", "local"], "B_body": "fixes #15998\nSigned-off-by: Kun Zhang zkazure@gmail.com\n", "B_clean_body": ["fix", "15998", "sign", "off", "by", "kun", "zhang", "zkazur", "gmail", "com"], "title_sim": [0.6889931654966082], "body_sim": [0.10677686932027725], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.8035396282882489, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 20}, {"A_title": "Update ps.rst with complete docstring", "A_clean_title": ["updat", "ps", "rst", "complet", "docstr"], "B_title": "Switch to getopt", "B_clean_title": ["switch", "getopt"], "A_body": "", "A_clean_body": [], "B_body": "Switch to getopt, feel free to add suggestions. I probably missed many reference in the documentation.\n\nSo now it support short (-p), long (--port) version and multiple short `docker run -it ubuntu bash`\nMost of the multi letters options we previously have (-no-trunc) only have long version (--no-trunc)\n\nOtherwise it's pretty much the same.\n\nRegarding the help, I think I didn't change the way it works:\n\n`docker --help` or `docker -h` display the usage \"daemon mode\"\n`docker help` display the usage \"client mode\" (with the list of commands)\n`docker help ps` display the usage of docker ps\n`docker ps --help` or `docker ps -h` displays the usage of docker ps\n\n@shykes @creack @crosbymichael @keeb please take a look when you have time\n", "B_clean_body": ["switch", "getopt", "feel", "free", "add", "suggest", "probabl", "miss", "mani", "refer", "document", "so", "now", "it", "support", "short", "long", "port", "version", "multipl", "short", "docker", "run", "it", "ubuntu", "bash", "most", "multi", "letter", "option", "we", "previous", "have", "no", "trunc", "onli", "have", "long", "version", "no", "trunc", "otherwis", "it", "'s", "pretti", "much", "same", "regard", "help", "think", "did", "n't", "chang", "way", "it", "work", "docker", "help", "or", "docker", "display", "usag", "daemon", "mode", "docker", "help", "display", "usag", "client", "mode", "list", "command", "docker", "help", "ps", "display", "usag", "docker", "ps", "docker", "ps", "help", "or", "docker", "ps", "display", "usag", "docker", "ps", "shyke", "creack", "crosbymichael", "keeb", "pleas", "take", "look", "when", "you", "have", "time"], "title_sim": [-0.015929716542347653], "body_sim": [0.0], "file_list_sim": 0.024390243902439025, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.02364066193853428, 1.0], "pattern": 0, "time": 0}, {"A_title": "Systemd init script should support DOCKER_OPTS", "A_clean_title": ["systemd", "init", "script", "support", "docker", "opt"], "B_title": "make docker-engine RPM configuration backward compatible with older 1.6 docker RPMs", "B_clean_title": ["make", "docker", "engin", "rpm", "configur", "backward", "compat", "older", "docker", "rpm", "rp", "ms"], "A_body": "See #9889 (specifically, [here](https://github.com/docker/docker/issues/9889#issuecomment-109766580)). The systemd daemon should support `DOCKER_OPTS` the same as upstart and sysv do.\n", "A_clean_body": ["see", "9889", "specif", "here", "http", "github", "com", "docker", "docker", "issu", "9889", "issuecom", "109766580", "systemd", "daemon", "support", "docker", "opt", "same", "as", "upstart", "sysv"], "B_body": "At some point in the conversion from the docker RPM to\nthe docker-engine RPM, the ability to source configuration files\nin /etc/sysconfig/docker, etc was lost.\n\nThis commit adds them back in.\n\nSpecifically, this is an issue in the CentOS7 docker-engine 1.7 RPM\nreferenced on this page: https://docs.docker.com/installation/centos/\n\nRelated issues include:\nhttps://github.com/docker/docker/issues/14323\nhttps://github.com/docker/docker/issues/14319\nhttps://github.com/docker/docker/issues/14130\nhttps://github.com/docker/docker/issues/13923\nhttps://github.com/docker/docker/issues/14149\nhttps://github.com/docker/docker/issues/10551\nhttps://github.com/docker/docker/issues/12087\n", "B_clean_body": ["at", "some", "point", "convers", "docker", "rpm", "docker", "engin", "rpm", "abil", "sourc", "configur", "file", "etc", "sysconfig", "docker", "etc", "wa", "lost", "thi", "commit", "add", "them", "back", "specif", "thi", "issu", "centos7", "cent", "os7", "docker", "engin", "rpm", "referenc", "thi", "page", "http", "docker", "doc", "com", "instal", "cento", "relat", "issu", "includ", "http", "github", "com", "docker", "docker", "issu", "14323", "http", "github", "com", "docker", "docker", "issu", "14319", "http", "github", "com", "docker", "docker", "issu", "14130", "http", "github", "com", "docker", "docker", "issu", "13923", "http", "github", "com", "docker", "docker", "issu", "14149", "http", "github", "com", "docker", "docker", "issu", "10551", "http", "github", "com", "docker", "docker", "issu", "12087"], "title_sim": [0.03318695363554814], "body_sim": [0.5216096112354318], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": -1, "time": 42}, {"A_title": "Use https when fetching Docker's GPG key", "A_clean_title": ["use", "http", "when", "fetch", "docker", "'s", "gpg", "key"], "B_title": "Use SSL to fetch the GPG key", "B_clean_title": ["use", "ssl", "fetch", "gpg", "key"], "A_body": "", "A_clean_body": [], "B_body": "If we're going to use curl then at least over https\n", "B_clean_body": ["we", "'re", "go", "use", "curl", "then", "at", "least", "over", "http"], "title_sim": [0.7068035989077549], "body_sim": [0.0], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.6129032258064516, 0.6129032258064516], "pattern": 0, "time": 0}, {"A_title": "7747 docker ps", "A_clean_title": ["7747", "docker", "ps"], "B_title": "Proposal: docker ps: add fields for ordering and column selection", "B_clean_title": ["propos", "docker", "ps", "add", "field", "order", "column", "select"], "A_body": "This changes makes the default ps output only 4 columns and reflects the wishes of 95% of the comments in the ticket #7477.  I have also updated the tests in integration-cli to refect these changes.\n\nSigned-off-by: Paul Fortin paul@cp-soft.com\n", "A_clean_body": ["thi", "chang", "make", "default", "ps", "output", "onli", "column", "reflect", "wish", "95", "comment", "ticket", "7477", "have", "also", "updat", "test", "integr", "cli", "refect", "these", "chang", "sign", "off", "by", "paul", "fortin", "paul", "cp", "soft", "com"], "B_body": "- api/client/commands.go: Refactor CmdPs to use a fields list of\n  characters to determine which columns to print on `docker ps`\n  invocation.\n\nThis adds an ability for the docker command to print the columns of\noutput in arbitrary order.\n\nThis is nominally related to #7477 \n\nSigned-off-by: Jeff Mickey j@codemac.net\n", "B_clean_body": ["go", "api", "client", "command", "refactor", "cmdp", "cmd", "ps", "use", "field", "list", "charact", "determin", "which", "column", "print", "docker", "ps", "invoc", "thi", "add", "abil", "docker", "command", "print", "column", "output", "arbitrari", "order", "thi", "nomin", "relat", "7477", "sign", "off", "by", "jeff", "mickey", "codemac", "net"], "title_sim": [0.3587892865003228], "body_sim": [0.2554810922677913], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.03550580809167427, 0.06077710169081137], "location_sim": [0.4942528735632184, 1.0], "pattern": 1, "time": 99}, {"A_title": "Adding support for Environment variable arguments", "A_clean_title": ["ad", "support", "environ", "variabl", "argument"], "B_title": "Add DOCKER_HOST env var for client", "B_clean_title": ["add", "docker", "host", "env", "var", "client"], "A_body": "is good to allow for config via environment variables for the cli to reduce keypress by user.   Starting simple and just adding support for setting the Host ( which is the one that I do a lot ).\n", "A_clean_body": ["good", "allow", "config", "via", "environ", "variabl", "cli", "reduc", "keypress", "by", "user", "start", "simpl", "just", "ad", "support", "set", "host", "which", "one", "that", "lot"], "B_body": "This env var will set the -H flag on the docker\nclient.\n\nThis is the same as doing:\n\n``` bash\ndocker -H :4243 ps\n# or\nexport DOCKER_HOST=\":4243\"\ndocker ps\n```\n", "B_clean_body": ["thi", "env", "var", "will", "set", "flag", "docker", "client", "thi", "same", "as", "do", "bash", "docker", ":4243", "ps", "or", "export", "docker", "host=", ":4243", "docker", "ps"], "title_sim": [-0.04831482540995277], "body_sim": [0.0423714882090751], "file_list_sim": 1.0, "overlap_files_len": 2, "code_sim": [0.6424518902680298, 0.6424518902680298], "location_sim": [0.7878787878787878, 0.7878787878787878], "pattern": 0, "time": 2}, {"A_title": "Fix repo validation in import", "A_clean_title": ["fix", "repo", "valid", "import"], "B_title": "Fix the bug of docker import command when import a image with a tag use format 'URL|- [REPOSITORY[:TAG]]'", "B_clean_title": ["fix", "bug", "docker", "import", "command", "when", "import", "imag", "tag", "use", "format", "'url|", "repositori", "tag"], "A_body": "Fixes #7714 \n", "A_clean_body": ["fix", "7714"], "B_body": "In latest version 1.1.2,when use command 'docker import' to import a image with a tag use format 'URL|- \n[REPOSITORY[:TAG]]',it will return a error message shows that the repository name is invalid,for example:\n\n[root@localhost images]# tar -c . | docker import - test:v1\n2014/08/21 08:12:33 Invalid repository name (test:v1), only [a-z0-9-_.] are allowed\n\nIn previous version,it will parse the Arg[1] which value is 'REPOSITORY:TAG' ,get the REPOSITORY and TAG,then check if REPOSITORY can be resolved,but in the 1.1.2 version when import a image with a tag use format 'URL|- [REPOSITORY[:TAG]]',it will check the variable 'repository' which value is Arg[1] directly,but in fact the value of variable 'repository' is 'REPOSITORY:TAG' which contains a colon and colon is not in character set [a-z0-9-_.],so the error occurred.\nI add codes to call parsers.ParseRepositoryTag function to parse variable 'repository' and return the REPOSITORY which store in variable 'repo',then check the variable 'repo'.\n\nFixes #7714\n", "B_clean_body": ["latest", "version", "when", "use", "command", "'docker", "import", "import", "imag", "tag", "use", "format", "'url|", "repositori", "tag", "it", "will", "return", "error", "messag", "show", "that", "repositori", "name", "invalid", "exampl", "root", "localhost", "imag", "tar", "docker", "import", "test", "v1", "2014", "08", "21", "08:12:33", "invalid", "repositori", "name", "test", "v1", "onli", "z0", "are", "allow", "previou", "version", "it", "will", "pars", "arg", "which", "valu", "'repositori", "tag", "get", "repositori", "tag", "then", "check", "repositori", "resolv", "but", "version", "when", "import", "imag", "tag", "use", "format", "'url|", "repositori", "tag", "it", "will", "check", "variabl", "'repositori", "which", "valu", "arg", "directli", "but", "fact", "valu", "variabl", "'repositori", "'repositori", "tag", "which", "contain", "colon", "colon", "not", "charact", "set", "z0", "so", "error", "occur", "add", "code", "call", "parser", "parserepositorytag", "pars", "repositori", "tag", "function", "pars", "variabl", "'repositori", "return", "repositori", "which", "store", "variabl", "'repo", "then", "check", "variabl", "'repo", "fix", "7714"], "title_sim": [0.30535734527966574], "body_sim": [0.06910164286249605], "file_list_sim": 1.0, "overlap_files_len": 2, "code_sim": [0.8297028007234973, 0.8297028007234973], "location_sim": [1.0, 1.0], "pattern": 1, "time": 0}, {"A_title": "Update notary and re-enable on arm", "A_clean_title": ["updat", "notari", "re", "enabl", "arm"], "B_title": "notary delegation integration into docker", "B_clean_title": ["notari", "deleg", "integr", "into", "docker"], "A_body": "See discussion in #19076\n\nNotary now builds on arm, so re-enable build and make all\nreleases use the same version.\n\nSigned-off-by: Justin Cormack justin.cormack@unikernel.com\n", "A_clean_body": ["see", "discuss", "19076", "notari", "now", "build", "arm", "so", "re", "enabl", "build", "make", "all", "releas", "use", "same", "version", "sign", "off", "by", "justin", "cormack", "justin", "cormack", "unikernel", "com"], "B_body": "Adds newest notary code into docker, which includes delegations.\n\nDocker changes:\n- We prioritize a `releases` delegation role as a highest priority, but fall back to the `targets` role if the `releases` delegation role does not exist\n- Update integration tests to comply with new notary error formats and server configuration format\n\nNotary changes:\n- Also introduces remote snapshot signing (the `snapshot` key will be maintained on the server) to allow for delegation functionality\n- Key role information is now included in PEM headers rather than as a suffix on the key filename, but the code is backwards compatible with older keys on old repos/clients \n- Command line key rotation for a single key and/or having the server manage the snapshot key\n\nCaveats:\n- Old clients cannot push to repos created or updated by new clients\n- Old clients cannot read keys on new repos created by new clients\n\nSigned-off-by: Riyaz Faizullabhoy riyaz.faizullabhoy@docker.com\n", "B_clean_body": ["add", "newest", "notari", "code", "into", "docker", "which", "includ", "deleg", "docker", "chang", "we", "priorit", "releas", "deleg", "role", "as", "highest", "prioriti", "but", "fall", "back", "target", "role", "releas", "deleg", "role", "not", "exist", "updat", "integr", "test", "compli", "new", "notari", "error", "format", "server", "configur", "format", "notari", "chang", "also", "introduc", "remot", "snapshot", "sign", "snapshot", "key", "will", "maintain", "server", "allow", "deleg", "function", "key", "role", "inform", "now", "includ", "pem", "header", "rather", "than", "as", "suffix", "key", "filenam", "but", "code", "backward", "compat", "older", "key", "old", "repo", "client", "command", "line", "key", "rotat", "singl", "key", "or", "have", "server", "manag", "snapshot", "key", "caveat", "old", "client", "not", "push", "repo", "creat", "or", "updat", "by", "new", "client", "old", "client", "not", "read", "key", "new", "repo", "creat", "by", "new", "client", "sign", "off", "by", "riyaz", "faizullabhoy", "riyaz", "faizullabhoy", "docker", "com"], "title_sim": [-0.026954032206726493], "body_sim": [0.11664482231428636], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 13}, {"A_title": "Start adding ports at right order of magnitude", "A_clean_title": ["start", "ad", "port", "at", "right", "order", "magnitud"], "B_title": "Correct port range in OS X installation doc", "B_clean_title": ["correct", "port", "rang", "os", "instal", "doc"], "A_body": "The documentation says to start at 4900, which if you copy/paste on a brand new MacBook Pro retina with SSD takes over an hour. Oops.\n", "A_clean_body": ["document", "say", "start", "at", "4900", "which", "you", "copi", "past", "brand", "new", "macbook", "mac", "book", "pro", "retina", "ssd", "take", "over", "hour", "oop"], "B_body": "", "B_clean_body": [], "title_sim": [0.37243111218942637], "body_sim": [0.0], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 0}, {"A_title": "Move secret name or ID prefix resolving from client to daemon", "A_clean_title": ["move", "secret", "name", "or", "id", "prefix", "resolv", "client", "daemon"], "B_title": "[WIP]make remove multiple secret run normally", "B_clean_title": ["wip", "make", "remov", "multipl", "secret", "run", "normal"], "A_body": "**- What I did**\r\n\r\nThis fix is a follow up for comment:\r\nhttps://github.com/docker/docker/pull/28896#issuecomment-265392703\r\n\r\nCurrently secret name or ID prefix resolving is done at the client side, which means different behavior of API and CMD.\r\n\r\n/cc @thaJeztah @ehazlett @allencloud \r\n\r\n**- How I did it**\r\nThis fix is a follow up for comment:\r\nhttps://github.com/docker/docker/pull/28896#issuecomment-265392703\r\n\r\nCurrently secret name or ID prefix resolving is done at the client side, which means different behavior of API and CMD.\r\n\r\n**- How to verify it**\r\n\r\nAll existing tests should pass.\r\n\r\n**- Description for the changelog**\r\n\r\n**- A picture of a cute animal (not mandatory but encouraged)**\r\n\r\n![x240-khu](https://cloud.githubusercontent.com/assets/6932348/20982627/3f2be844-bc6e-11e6-8581-67dccfe9e37a.jpg)\r\n\r\n\r\nThis fix is related to #28896, #28884 and may be related to #29125.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>", "A_clean_body": ["what", "did**", "thi", "fix", "follow", "up", "comment", "http", "github", "com", "docker", "docker", "pull", "28896", "issuecom", "265392703", "current", "secret", "name", "or", "id", "prefix", "resolv", "done", "at", "client", "side", "which", "mean", "differ", "behavior", "api", "cmd", "cc", "thajeztah", "tha", "jeztah", "ehazlett", "allencloud", "how", "did", "it**", "thi", "fix", "follow", "up", "comment", "http", "github", "com", "docker", "docker", "pull", "28896", "issuecom", "265392703", "current", "secret", "name", "or", "id", "prefix", "resolv", "done", "at", "client", "side", "which", "mean", "differ", "behavior", "api", "cmd", "how", "verifi", "it**", "all", "exist", "test", "pass", "descript", "changelog**", "pictur", "cute", "anim", "not", "mandatori", "but", "encourag", "x240", "khu", "http", "bc6e", "11e6", "8581", "githubusercont", "67dccfe9e37a", "jpg", "cloud", "com", "asset", "6932348", "20982627", "3f2be844", "thi", "fix", "relat", "28896", "28884", "may", "relat", "29125", "sign", "off", "by", "yong", "tang", "yong", "tang", "github", "outlook", "com"], "B_body": "fix https://github.com/docker/docker/issues/29125\r\n\r\n**- What I did**\r\n1. make `getCliRequestedSecretIDs` returned slice have equal length of input slice\r\n2. add a secret remove test file\r\n\r\n**- How I did it**\r\n\r\n**- How to verify it**\r\n\r\n**- Description for the changelog**\r\n<!--\r\nWrite a short (one line) summary that describes the changes in this\r\npull request for inclusion in the changelog:\r\n-->\r\n\r\n\r\n**- A picture of a cute animal (not mandatory but encouraged)**\r\n\r\n\r\nSigned-off-by: allencloud <allen.sun@daocloud.io>", "B_clean_body": ["fix", "http", "github", "com", "docker", "docker", "issu", "29125", "what", "did**", "make", "getclirequestedsecretid", "get", "cli", "request", "secret", "ds", "return", "slice", "have", "equal", "length", "input", "slice", "add", "secret", "remov", "test", "file", "how", "did", "it**", "how", "verifi", "it**", "descript", "changelog**", "write", "short", "one", "line", "summari", "that", "describ", "chang", "thi", "pull", "request", "inclus", "changelog", "pictur", "cute", "anim", "not", "mandatori", "but", "encourag", "sign", "off", "by", "allencloud", "allen", "sun", "daocloud", "io"], "title_sim": [0.07097425372369025], "body_sim": [0.3585339423663695], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.5332395742646361, 0.0], "location_sim": [0.0, 0.0], "pattern": 1, "time": 2}, {"A_title": "Switch to getopt", "A_clean_title": ["switch", "getopt"], "B_title": "Update ps.rst", "B_clean_title": ["updat", "ps", "rst"], "A_body": "Switch to getopt, feel free to add suggestions. I probably missed many reference in the documentation.\n\nSo now it support short (-p), long (--port) version and multiple short `docker run -it ubuntu bash`\nMost of the multi letters options we previously have (-no-trunc) only have long version (--no-trunc)\n\nOtherwise it's pretty much the same.\n\nRegarding the help, I think I didn't change the way it works:\n\n`docker --help` or `docker -h` display the usage \"daemon mode\"\n`docker help` display the usage \"client mode\" (with the list of commands)\n`docker help ps` display the usage of docker ps\n`docker ps --help` or `docker ps -h` displays the usage of docker ps\n\n@shykes @creack @crosbymichael @keeb please take a look when you have time\n", "A_clean_body": ["switch", "getopt", "feel", "free", "add", "suggest", "probabl", "miss", "mani", "refer", "document", "so", "now", "it", "support", "short", "long", "port", "version", "multipl", "short", "docker", "run", "it", "ubuntu", "bash", "most", "multi", "letter", "option", "we", "previous", "have", "no", "trunc", "onli", "have", "long", "version", "no", "trunc", "otherwis", "it", "'s", "pretti", "much", "same", "regard", "help", "think", "did", "n't", "chang", "way", "it", "work", "docker", "help", "or", "docker", "display", "usag", "daemon", "mode", "docker", "help", "display", "usag", "client", "mode", "list", "command", "docker", "help", "ps", "display", "usag", "docker", "ps", "docker", "ps", "help", "or", "docker", "ps", "display", "usag", "docker", "ps", "shyke", "creack", "crosbymichael", "keeb", "pleas", "take", "look", "when", "you", "have", "time"], "B_body": "I think that this update is correct.\n", "B_clean_body": ["think", "that", "thi", "updat", "correct"], "title_sim": [-0.0029109629730126167], "body_sim": [0.11652612596732054], "file_list_sim": 0.024390243902439025, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.01977848101265823, 1.0], "pattern": 0, "time": 0}, {"A_title": "Fix DOCKER_OPTS not being honored on debian 8. Fixes #14130", "A_clean_title": ["fix", "docker", "opt", "not", "be", "honor", "debian", "fix", "14130"], "B_title": "Use `default/docker` when starting with systemd", "B_clean_title": ["use", "default", "docker", "when", "start", "systemd"], "A_body": "Adds the default environment file /etc/default/docker to the default systemd configuration, and applies the DOCKER_OPTS variable to the daemon options.\n\nThis fixes DOCKER_OPTS not applying properly on debian 8 without hacking this file.\n\nSee #14130\n", "A_clean_body": ["add", "default", "environ", "file", "etc", "default", "docker", "default", "systemd", "configur", "appli", "docker", "opt", "variabl", "daemon", "option", "thi", "fix", "docker", "opt", "not", "appli", "properli", "debian", "without", "hack", "thi", "file", "see", "14130"], "B_body": "", "B_clean_body": [], "title_sim": [0.08824424851919654], "body_sim": [0.0], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 12}, {"A_title": "Remove explanation of removed argument", "A_clean_title": ["remov", "explan", "remov", "argument"], "B_title": "Update the \"docker attach\" section of the Hello World example", "B_clean_title": ["updat", "docker", "attach", "section", "hello", "world", "exampl"], "A_body": "", "A_clean_body": [], "B_body": "This removes the description about \"-sig-proxy=true\" from the example in Hello, World.  I removed this from the example because it is not currently being used in the example when you use \"docker attach\".  Having the description for an option that is not being used in the Hello, World example is confusing for new learners of Docker.\n", "B_clean_body": ["thi", "remov", "descript", "about", "sig", "proxy=tru", "exampl", "hello", "world", "remov", "thi", "exampl", "becaus", "it", "not", "current", "be", "use", "exampl", "when", "you", "use", "docker", "attach", "have", "descript", "option", "that", "not", "be", "use", "hello", "world", "exampl", "confus", "new", "learner", "docker"], "title_sim": [-0.01627810369328828], "body_sim": [0.0], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 1}, {"A_title": "fix copying file from overlay volume path", "A_clean_title": ["fix", "copi", "file", "overlay", "volum", "path"], "B_title": "Make `docker cp` bind-mount volumes", "B_clean_title": ["make", "docker", "cp", "bind", "mount", "volum"], "A_body": "$docker run -v /a:/layer1/ -v /b:/layer1/layer2 XXX\n$docker cp ContainerID:/layer1/layer2/xxx failed with:\n    FATA[0000] Error response from daemon: Could\nnot find the file /layer1/layer2/xxx in container.\n\nThis commit fix this.\n\nSigned-off-by: Deng Guangxing dengguangxing@huawei.com\n", "A_clean_body": ["docker", "run", "layer1", "layer1", "layer2", "xxx", "docker", "cp", "containerid", "contain", "id", "layer1", "layer2", "xxx", "fail", "fata", "0000", "error", "respons", "daemon", "could", "not", "find", "file", "layer1", "layer2", "xxx", "contain", "thi", "commit", "fix", "thi", "sign", "off", "by", "deng", "guangx", "dengguangx", "huawei", "com"], "B_body": "Allows `docker cp` to work seamlessly, and a lot more cleanly.\n", "B_clean_body": ["allow", "docker", "cp", "work", "seamlessli", "lot", "more", "cleanli"], "title_sim": [0.256447007750367], "body_sim": [0.31342269934575734], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.125697069699108, 0.008884476197547982], "location_sim": [0.0, 0.0], "pattern": 0, "time": 26}, {"A_title": "Fix up nameserver localhost detection", "A_clean_title": ["fix", "up", "nameserv", "localhost", "detect"], "B_title": "Clean up localhost resolv logic and add IPv6 support to regexp", "B_clean_title": ["clean", "up", "localhost", "resolv", "logic", "add", "ipv6", "pv6", "support", "regexp"], "A_body": "The current code only cares about 127.0.0.1, but lets the equally\ndevestating ::1 through.  That needs fixing.\n", "A_clean_body": ["current", "code", "onli", "care", "about", "127", "but", "let", "equal", "devest", ":1", "through", "that", "need", "fix"], "B_body": "Addresses #5811\n\nThis cleans up an error in the logic which removes localhost resolvers\nfrom the host resolv.conf at container creation start time. Specifically\nwhen the determination is made if any nameservers are left after\nremoving localhost resolvers, it was using a string match on the word\n\"nameserver\", which could have been anywhere (including commented out)\nleading to incorrect situations where no nameservers were left but the\ndefault ones were not added.\n\nThis also adds some complexity to the regular expressions for finding\nnameservers in general, as well as matching on localhost resolvers due\nto the recent addition of IPv6 support.  Because of IPv6 support now\navailable in the Docker daemon, the resolvconf code is now aware of\nIPv6 enable/disable state and uses that for both filter/cleaning of\nnameservers as well as adding default Google DNS (IPv4 only vs. IPv4\nand IPv6 if IPv6 enabled).  For all these changes, tests have been\nadded/strengthened to test these additional capabilities.\n\nDocker-DCO-1.1-Signed-off-by: Phil Estes estesp@linux.vnet.ibm.com (github: estesp)\n", "B_clean_body": ["address", "5811", "thi", "clean", "up", "error", "logic", "which", "remov", "localhost", "resolv", "host", "resolv", "conf", "at", "contain", "creation", "start", "time", "specif", "when", "determin", "made", "ani", "nameserv", "are", "left", "after", "remov", "localhost", "resolv", "it", "wa", "string", "match", "word", "nameserv", "which", "could", "have", "been", "anywher", "includ", "comment", "out", "lead", "incorrect", "situat", "where", "no", "nameserv", "were", "left", "but", "default", "one", "were", "not", "ad", "thi", "also", "add", "some", "complex", "regular", "express", "find", "nameserv", "gener", "as", "well", "as", "match", "localhost", "resolv", "due", "recent", "addit", "ipv6", "pv6", "support", "becaus", "ipv6", "pv6", "support", "now", "avail", "docker", "daemon", "resolvconf", "code", "now", "awar", "ipv6", "pv6", "enabl", "disabl", "state", "use", "that", "both", "filter", "clean", "nameserv", "as", "well", "as", "ad", "default", "googl", "dn", "ipv4", "pv4", "onli", "vs", "ipv4", "pv4", "ipv6", "pv6", "ipv6", "pv6", "enabl", "all", "these", "chang", "test", "have", "been", "ad", "strengthen", "test", "these", "addit", "capabl", "docker", "dco", "sign", "off", "by", "phil", "est", "estesp", "linux", "vnet", "ibm", "com", "github", "estesp"], "title_sim": [0.34256714055996207], "body_sim": [0.24409033110177367], "file_list_sim": 0.4, "overlap_files_len": 2, "code_sim": [0.26949311001194426, 0.2937779217367342], "location_sim": [0.5611814345991561, 0.7732558139534884], "pattern": -1, "time": 6}, {"A_title": "Fix #7944 add check/test for localhost in ParseHost", "A_clean_title": ["fix", "7944", "add", "check", "test", "localhost", "parsehost", "pars", "host"], "B_title": "Error on missing :// in docker host.", "B_clean_title": ["error", "miss", "docker", "host"], "A_body": "Fixes #7944, adds a test case for `addr` set to `localhost:5000`.\n\nDocker-DCO-1.1-Signed-off-by: Jessica Frazelle jess@docker.com (github: jfrazelle)\n", "A_clean_body": ["fix", "7944", "add", "test", "case", "addr", "set", "localhost:5000", "docker", "dco", "sign", "off", "by", "jessica", "frazel", "jess", "docker", "com", "github", "jfrazel"], "B_body": "", "B_clean_body": [], "title_sim": [0.2648681442567188], "body_sim": [0.0], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.42507862863276236, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 0}, {"A_title": "Set container to exit if it has running=true state but not alive", "A_clean_title": ["set", "contain", "exit", "it", "ha", "running=tru", "state", "but", "not", "aliv"], "B_title": "Check if the container is running if no event", "B_clean_title": ["check", "contain", "run", "no", "event"], "A_body": "<!--\nPlease make sure you've read and understood our contributing guidelines;\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md\n\n** Make sure all your commits include a signature generated with `git commit -s` **\n\nFor additional information on our contributing process, read our contributing\nguide https://docs.docker.com/opensource/code/\n\nIf this is a bug fix, make sure your description includes \"fixes #xxxx\", or\n\"closes #xxxx\"\n\nPlease provide the following information:\n-->\n\n**\\- What I did**\nFixes #25157 \n\nping @mlaventure \n**\\- How I did it**\n\n**\\- How to verify it**\n\n**\\- Description for the changelog**\n\n<!--\nWrite a short (one line) summary that describes the changes in this\npull request for inclusion in the changelog:\n-->\n\n**\\- A picture of a cute animal (not mandatory but encouraged)**\n\nSigned-off-by: Lei Jitang leijitang@huawei.com\n", "A_clean_body": ["pleas", "make", "sure", "you", "'ve", "read", "understood", "our", "contribut", "guidelin", "http", "md", "github", "com", "docker", "docker", "blob", "master", "contribut", "make", "sure", "all", "your", "commit", "includ", "signatur", "gener", "git", "commit", "addit", "inform", "our", "contribut", "process", "read", "our", "contribut", "guid", "http", "docker", "doc", "com", "opensourc", "code", "thi", "bug", "fix", "make", "sure", "your", "descript", "includ", "fix", "xxxx", "or", "close", "xxxx", "pleas", "provid", "follow", "inform", "what", "did**", "fix", "25157", "ping", "mlaventur", "how", "did", "it**", "how", "verifi", "it**", "descript", "changelog**", "write", "short", "one", "line", "summari", "that", "describ", "chang", "thi", "pull", "request", "inclus", "changelog", "pictur", "cute", "anim", "not", "mandatori", "but", "encourag", "sign", "off", "by", "lei", "jitang", "leijitang", "huawei", "com"], "B_body": "When there is no event for the container it can happen because of a\ncrash and the container state on the persistent disk will have a\nmismatch between what was in `/run` ( machine crash ).\n\nThis situation will create an unkillable container in docker because\ncontainerd does not see it and it is not running but docker thinks it is\nand you cannot tell it anything different.\n\nThis fixes the issue by checking if containerd has the container running\nif we do not have an event instead of just returning.\n\nFixes the other half of #25109\n\nSigned-off-by: Michael Crosby crosbymichael@gmail.com\n", "B_clean_body": ["when", "there", "no", "event", "contain", "it", "happen", "becaus", "crash", "contain", "state", "persist", "disk", "will", "have", "mismatch", "between", "what", "wa", "run", "machin", "crash", "thi", "situat", "will", "creat", "unkil", "contain", "docker", "becaus", "containerd", "not", "see", "it", "it", "not", "run", "but", "docker", "think", "it", "you", "not", "tell", "it", "anyth", "differ", "thi", "fix", "issu", "by", "check", "containerd", "ha", "contain", "run", "we", "not", "have", "event", "instead", "just", "return", "fix", "other", "half", "25109", "sign", "off", "by", "michael", "crosbi", "crosbymichael", "gmail", "com"], "title_sim": [0.1622902836332899], "body_sim": [0.10873032515341444], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.3222199960638563, 0.3222199960638563], "location_sim": [1.0, 1.0], "pattern": -1, "time": 0}, {"A_title": "Don't output a warning if `~/.dockercfg` is missing.", "A_clean_title": ["n't", "output", "warn", "dockercfg", "miss"], "B_title": "load authConfig only when needed and fix useless WARNING", "B_clean_title": ["load", "authconfig", "auth", "config", "onli", "when", "need", "fix", "useless", "warn"], "A_body": "This file is not needed unless we need to use a private repository or\nto send images.\n", "A_clean_body": ["thi", "file", "not", "need", "unless", "we", "need", "use", "privat", "repositori", "or", "send", "imag"], "B_body": "Fixes #1528 \n", "B_clean_body": ["fix", "1528"], "title_sim": [0.29295031295115964], "body_sim": [-0.017672568173174336], "file_list_sim": 0.5, "overlap_files_len": 1, "code_sim": [0.11277228476589364, 0.057042707179889254], "location_sim": [0.17777777777777778, 0.25396825396825395], "pattern": 0, "time": 5}, {"A_title": "daemon: graphdriver: btrfs: use kernel structures", "A_clean_title": ["daemon", "graphdriv", "btrf", "use", "kernel", "structur"], "B_title": "Fix compilation errors with btrfs-progs-4.5", "B_clean_title": ["fix", "compil", "error", "btrf", "prog"], "A_body": "In an update for libbtrfs-devel, the ioctl structure\nC.struct_btrfs_ioctl_vol_args_v2 was changed such that one of the fields\nused in the Go code were in a union. Since Go doesn't support unions,\nthis caused Docker to not compile.\n\nBy using the kernel definition (which is guaranteed to never change,\nthanks to Linus' fanatical obsession to backwards compatibility) we can\nensure that Docker will build no matter what changes are made to other\nheaders.\n\n![penguin omg](https://c8.staticflickr.com/7/6020/5877251295_45b810e599.jpg)\n\nSigned-off-by: Aleksa Sarai asarai@suse.de\n\nImage source: https://www.flickr.com/photos/wwarby/5877251295/in/pool-creative_commons-_free_pictures/\n", "A_clean_body": ["updat", "libbtrf", "devel", "ioctl", "structur", "struct", "btrf", "ioctl", "vol", "arg", "v2", "wa", "chang", "such", "that", "one", "field", "use", "go", "code", "were", "union", "sinc", "go", "n't", "support", "union", "thi", "caus", "docker", "not", "compil", "by", "kernel", "definit", "which", "guarante", "never", "chang", "thank", "linu", "fanat", "obsess", "backward", "compat", "we", "ensur", "that", "docker", "will", "build", "no", "matter", "what", "chang", "are", "made", "other", "header", "penguin", "omg", "http", "staticflickr", "jpg", "c8", "45b810e599", "com", "6020", "5877251295", "sign", "off", "by", "aleksa", "sarai", "asarai", "suse", "de", "imag", "sourc", "http", "flickr", "creativ", "common", "free", "www", "com", "photo", "wwarbi", "5877251295", "pool", "pictur"], "B_body": "<!--\nPlease make sure you've read and understood our contributing guidelines;\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md\n\n** Make sure all your commits include a signature generated with `git commit -s` **\n\nFor additional information on our contributing process, read our contributing\nguide https://docs.docker.com/opensource/code/\n\nIf this is a bug fix, make sure your description includes \"fixes #xxxx\", or\n\"closes #xxxx\"\n\nPlease provide the following information:\n-->\n\nbtrfs-progs-4.5 introduces device delete by devid\nfor this reason btrfs_ioctl_vol_args_v2's name was encapsulated\nin a union\n\nthis patch is for setting btrfs_ioctl_vol_args_v2's name\nusing a C function in order to preserve compatibility\nwith all btrfs-progs versions\n\nSigned-off-by: Julio Montes imc.coder@gmail.com\n", "B_clean_body": ["pleas", "make", "sure", "you", "'ve", "read", "understood", "our", "contribut", "guidelin", "http", "md", "github", "com", "docker", "docker", "blob", "master", "contribut", "make", "sure", "all", "your", "commit", "includ", "signatur", "gener", "git", "commit", "addit", "inform", "our", "contribut", "process", "read", "our", "contribut", "guid", "http", "docker", "doc", "com", "opensourc", "code", "thi", "bug", "fix", "make", "sure", "your", "descript", "includ", "fix", "xxxx", "or", "close", "xxxx", "pleas", "provid", "follow", "inform", "btrf", "prog", "introduc", "devic", "delet", "by", "devid", "thi", "reason", "btrf", "ioctl", "vol", "arg", "v2", "'s", "name", "wa", "encapsul", "union", "thi", "patch", "set", "btrf", "ioctl", "vol", "arg", "v2", "'s", "name", "function", "order", "preserv", "compat", "all", "btrf", "prog", "version", "sign", "off", "by", "julio", "mont", "imc", "coder", "gmail", "com"], "title_sim": [0.6547506170623894], "body_sim": [0.36161732387495227], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.5610805507274913, 0.5610805507274913], "location_sim": [0.7058823529411765, 0.7058823529411765], "pattern": 0, "time": 5}, {"A_title": "Update path used for copying runc during deb/rpm generation", "A_clean_title": ["updat", "path", "use", "copi", "runc", "dure", "deb", "rpm", "gener"], "B_title": "cherry-pick \"runc install path changed from /usr/local/bin to /usr/local/sbin\"", "B_clean_title": ["cherri", "pick", "runc", "instal", "path", "chang", "usr", "local", "bin", "usr", "local", "sbin"], "A_body": "Signed-off-by: Kenfe-Mickael Laventure mickael.laventure@gmail.com\n\n---\n\nThis should fix the docker automatic experimental build generator.\n\n![koala](http://justcuteanimals.com/wp-content/uploads/2014/09/happy-koala-bear-cute-animal-pictures-pics.jpg)\n", "A_clean_body": ["sign", "off", "by", "kenf", "mickael", "laventur", "mickael", "laventur", "gmail", "com", "thi", "fix", "docker", "automat", "experiment", "build", "gener", "koala", "http", "koala", "bear", "cute", "anim", "pictur", "content", "upload", "2014", "09", "happi", "pic", "jpg", "justcuteanim", "com", "wp"], "B_body": "cherry-pick https://github.com/docker/docker/pull/21998 into master\n\nfixes https://github.com/docker/docker/issues/22089\ncloses https://github.com/docker/docker/pull/22090 \n", "B_clean_body": ["cherri", "pick", "http", "github", "com", "docker", "docker", "pull", "21998", "into", "master", "fix", "http", "github", "com", "docker", "docker", "issu", "22089", "close", "http", "github", "com", "docker", "docker", "pull", "22090"], "title_sim": [0.3236738449474505], "body_sim": [0.268688600238793], "file_list_sim": 1.0, "overlap_files_len": 2, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 0}, {"A_title": "Split api cleanup", "A_clean_title": ["split", "api", "cleanup"], "B_title": "Remove daemon dependency from api/server.", "B_clean_title": ["remov", "daemon", "depend", "api", "server"], "A_body": "little cleanup things.\n- seeing `deamon` in the image router was personally irritating.\n- using the `interface{}` return value matches ContainerInspect, and was in the original #19133, but I'm not sure why it was dropped from #19772\n\nWith this, the only reference to the daemon is in api/server/server.go\n\nStill some references to builder, but mainly involving the calculation of context and context handling. Maybe that functionality should become a pkg for reuse.\n", "A_clean_body": ["littl", "cleanup", "thing", "see", "deamon", "imag", "router", "wa", "person", "irrit", "interfac", "return", "valu", "match", "containerinspect", "contain", "inspect", "wa", "origin", "19133", "but", "'m", "not", "sure", "whi", "it", "wa", "drop", "19772", "thi", "onli", "refer", "daemon", "go", "api", "server", "server", "still", "some", "refer", "builder", "but", "mainli", "involv", "calcul", "context", "context", "handl", "mayb", "that", "function", "becom", "pkg", "reus"], "B_body": "I think those are the last references to the daemon package we have in the api :tada:\n- Move routers initialization to the docker package.\n- Extract inspect types for `docker exec`.\n- Remove coupling between server reload and daemon config.\n\n```\n\u279c  docker git:(remove_last_daemon_references) ag 'docker/daemon' api\n\u279c  docker git:(remove_last_daemon_references)\n```\n\nSigned-off-by: David Calavera david.calavera@gmail.com\n", "B_clean_body": ["think", "those", "are", "last", "refer", "daemon", "packag", "we", "have", "api", "tada", "move", "router", "initi", "docker", "packag", "extract", "inspect", "type", "docker", "exec", "remov", "coupl", "between", "server", "reload", "daemon", "config", "docker", "git", "remov", "last", "daemon", "refer", "ag", "'docker", "daemon", "api", "docker", "git", "remov", "last", "daemon", "refer", "sign", "off", "by", "david", "calavera", "david", "calavera", "gmail", "com"], "title_sim": [0.27172064137901525], "body_sim": [0.32318470083464346], "file_list_sim": 0.2222222222222222, "overlap_files_len": 2, "code_sim": [0.1669478877081386, 0.0], "location_sim": [0.2302839116719243, 1.0], "pattern": 0, "time": 0}, {"A_title": "Return failure if docker pid file still not exists after waiting dock\u2026", "A_clean_title": ["return", "failur", "docker", "pid", "file", "still", "not", "exist", "after", "wait", "dock\u2026"], "B_title": "Allow RHEL init script to detect daemon start pid failure", "B_clean_title": ["allow", "rhel", "init", "script", "detect", "daemon", "start", "pid", "failur"], "A_body": "\u2026er to start for 10 seconds\n\nSigned-off-by: Chun Chen ramichen@tencent.com\n\nI've seen several times that `service docker start` succeeds even docker daemon fails to start and I think its reasonable to choose failure rather than success if daemon can't create pid file after 10 seconds waiting.\n\nBefore:\n\n```\n[root@docker-10-149-27-182 /data/home/gaia/chenchun]# service docker start\nStarting docker (via systemctl):                           [  OK  ]\n[root@docker-10-149-27-182 /data/home/gaia/chenchun]# \n[root@docker-10-149-27-182 /data/home/gaia/chenchun]# docker ps\nFATA[0000] Get http:///var/run/docker.sock/v1.18/containers/json: dial unix /var/run/docker.sock: no such file or directory. Are you trying to connect to a TLS-enabled daemon without TLS?\n```\n\nAfter:\n\n```\n[root@docker-10-149-27-182 /data/home/gaia/chenchun]# service docker start\nStarting docker (via systemctl):  Job for docker.service failed. See 'systemctl status docker.service' and 'journalctl -xn' for details.\n                                                           [FAILED]\n[root@docker-10-149-27-182 /data/home/gaia/chenchun]# \n[root@docker-10-149-27-182 /data/home/gaia/chenchun]# systemctl status -l docker.service\ndocker.service - LSB: start and stop docker\n   Loaded: loaded (/etc/rc.d/init.d/docker)\n   Active: failed (Result: exit-code) since Tue 2015-08-11 17:37:10 CST; 4s ago\n  Process: 1944 ExecStart=/etc/rc.d/init.d/docker start (code=exited, status=7)\n\nAug 11 17:37:00 docker-10-149-27-182 docker[1944]: Redirecting to /bin/systemctl status  cgconfig.service\nAug 11 17:37:10 docker-10-149-27-182 docker[1944]: Starting docker:        [FAILED]\nAug 11 17:37:10 docker-10-149-27-182 docker[1944]: /var/run/docker.pid not exists after waiting docker to initialize for 10 seconds, probably something is wrong, you can check docker logs at /gaia/docker/var/lib/docker/docker ...\nAug 11 17:37:10 docker-10-149-27-182 systemd[1]: docker.service: control process exited, code=exited status=7\nAug 11 17:37:10 docker-10-149-27-182 systemd[1]: Failed to start LSB: start and stop docker.\nAug 11 17:37:10 docker-10-149-27-182 systemd[1]: Unit docker.service entered failed state.\n```\n", "A_clean_body": ["\u2026er", "start", "10", "second", "sign", "off", "by", "chun", "chen", "ramichen", "tencent", "com", "'ve", "seen", "sever", "time", "that", "servic", "docker", "start", "succe", "even", "docker", "daemon", "fail", "start", "think", "it", "reason", "choos", "failur", "rather", "than", "success", "daemon", "ca", "n't", "creat", "pid", "file", "after", "10", "second", "wait", "befor", "root", "docker", "10", "149", "27", "182", "data", "home", "gaia", "chenchun", "servic", "docker", "start", "start", "docker", "via", "systemctl", "ok", "root", "docker", "10", "149", "27", "182", "data", "home", "gaia", "chenchun", "root", "docker", "10", "149", "27", "182", "data", "home", "gaia", "chenchun", "docker", "ps", "fata", "0000", "get", "http", "var", "run", "docker", "sock", "v1", "18", "contain", "json", "dial", "unix", "sock", "var", "run", "docker", "no", "such", "file", "or", "directori", "are", "you", "tri", "connect", "tl", "enabl", "daemon", "without", "tl", "after", "root", "docker", "10", "149", "27", "182", "data", "home", "gaia", "chenchun", "servic", "docker", "start", "start", "docker", "via", "systemctl", "job", "docker", "servic", "fail", "see", "'systemctl", "statu", "docker", "servic", "'journalctl", "xn", "detail", "fail", "root", "docker", "10", "149", "27", "182", "data", "home", "gaia", "chenchun", "root", "docker", "10", "149", "27", "182", "data", "home", "gaia", "chenchun", "systemctl", "statu", "docker", "servic", "docker", "servic", "lsb", "start", "stop", "docker", "load", "load", "etc", "rc", "init", "docker", "activ", "fail", "result", "exit", "code", "sinc", "tue", "2015", "08", "11", "17:37:10", "cst", "4s", "ago", "process", "1944", "execstart=", "etc", "rc", "init", "docker", "exec", "start=", "start", "code=exit", "status=7", "aug", "11", "17:37:00", "docker", "10", "149", "27", "182", "docker", "1944", "redirect", "bin", "systemctl", "statu", "cgconfig", "servic", "aug", "11", "17:37:10", "docker", "10", "149", "27", "182", "docker", "1944", "start", "docker", "fail", "aug", "11", "17:37:10", "docker", "10", "149", "27", "182", "docker", "1944", "pid", "var", "run", "docker", "not", "exist", "after", "wait", "docker", "initi", "10", "second", "probabl", "someth", "wrong", "you", "check", "docker", "log", "at", "gaia", "docker", "var", "lib", "docker", "docker", "aug", "11", "17:37:10", "docker", "10", "149", "27", "182", "systemd", "docker", "servic", "control", "process", "exit", "code=exit", "status=7", "aug", "11", "17:37:10", "docker", "10", "149", "27", "182", "systemd", "fail", "start", "lsb", "start", "stop", "docker", "aug", "11", "17:37:10", "docker", "10", "149", "27", "182", "systemd", "unit", "docker", "servic", "enter", "fail", "state"], "B_body": "If you have some kind of bogus `other_args` in `/etc/sysconfig/docker` the start script will report \"started\" but it's full of lies. This enhances the flow so that if the pidfile never shows up (failure to start) you get a proper failure message.\n\nI also added dots for fun.\n\nSigned-off-by: Jeff Minard jeff.minard@creditkarma.com\n", "B_clean_body": ["you", "have", "some", "kind", "bogu", "other", "arg", "etc", "sysconfig", "docker", "start", "script", "will", "report", "start", "but", "it", "'s", "full", "lie", "thi", "enhanc", "flow", "so", "that", "pidfil", "never", "show", "up", "failur", "start", "you", "get", "proper", "failur", "messag", "also", "ad", "dot", "fun", "sign", "off", "by", "jeff", "minard", "jeff", "minard", "creditkarma", "com"], "title_sim": [0.2944868520458393], "body_sim": [0.2601577111172518], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 19}, {"A_title": "fix panic in monitor", "A_clean_title": ["fix", "panic", "monitor"], "B_title": "DON'T PANIC when migrating to native drivers with --lxc-conf.", "B_clean_title": ["n't", "panic", "when", "migrat", "nativ", "driver", "lxc", "conf"], "A_body": "If you do a `while true; do docker run ubuntu ls; done` let it run for a while and `<ctrl-c>` the daemon.\n\nWhen you restart the daemon you'll get a panic.\n\nWe already fixed a bug like this in https://github.com/vieux/docker/blob/1dfc44073399aadb226c1b4c1909fb15c033d44a/runtime/container.go#L811\n", "A_clean_body": ["you", "while", "true", "docker", "run", "ubuntu", "ls", "done", "let", "it", "run", "while", "ctrl", "daemon", "when", "you", "restart", "daemon", "you", "'ll", "get", "panic", "we", "alreadi", "fix", "bug", "like", "thi", "http", "go", "github", "com", "vieux", "docker", "blob", "1dfc44073399aadb226c1b4c1909fb15c033d44a", "runtim", "contain", "l811"], "B_body": "Addresses dotcloud/docker#4590.\n", "B_clean_body": ["address", "dotcloud", "docker", "4590"], "title_sim": [0.39136254794601233], "body_sim": [0.1362588911037124], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 5}, {"A_title": "Support Elementary OS", "A_clean_title": ["support", "elementari", "os"], "B_title": "Updated install.sh, added elementary os to install", "B_clean_title": ["updat", "instal", "sh", "ad", "elementari", "os", "instal"], "A_body": "Its an Ubuntu based distro, all worked for me with the above changes. Assumed the quotes were needed because of the space.\n", "A_clean_body": ["it", "ubuntu", "base", "distro", "all", "work", "me", "abov", "chang", "assum", "quot", "were", "need", "becaus", "space"], "B_body": "Signed-off-by: Rohit Verma rohitatiit@gmail.com\n\nTested installation on elementary os freya beta, based on ubuntu 14.04.\n", "B_clean_body": ["sign", "off", "by", "rohit", "verma", "rohitatiit", "gmail", "com", "test", "instal", "elementari", "os", "freya", "beta", "base", "ubuntu", "14", "04"], "title_sim": [0.15907278909828174], "body_sim": [0.27003935966128473], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 15}, {"A_title": "Rename overlayfs to overlay", "A_clean_title": ["renam", "overlayf", "overlay"], "B_title": "overlayfs: search for upstream filesystem name", "B_clean_title": ["overlayf", "search", "upstream", "filesystem", "name"], "A_body": "Since Linux 3.18-rc6, overlayfs has been renamed overlay.\n\nThis change was introduced by the following commit in linux.git:\nef94b1864d1ed5be54376404bb23d22ed0481feb ovl: rename filesystem type to \"overlay\"\n\nSigned-off-by: L\u00e9na\u00efc Huard lhuard@amadeus.com\n", "A_clean_body": ["sinc", "linux", "rc6", "18", "overlayf", "ha", "been", "renam", "overlay", "thi", "chang", "wa", "introduc", "by", "follow", "commit", "linux", "git", "ef94b1864d1ed5be54376404bb23d22ed0481feb", "ovl", "renam", "filesystem", "type", "overlay", "sign", "off", "by", "l\u00e9na\u00efc", "huard", "lhuard", "amadeu", "com"], "B_body": "upstream switched the word from \"overlayfs\" to \"overlay\".\nhttps://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=ef94b1864d1ed5be54376404bb23d22ed0481feb\n\nPing @jfrazelle @tiborvass @unclejack \nMight should be cherry-picked, since 3.18 will release during the docker-1.4.0 cycle\n\nSigned-off-by: Vincent Batts vbatts@redhat.com\n", "B_clean_body": ["upstream", "switch", "word", "overlayf", "overlay", "http", "kernel", "git", "org", "cgit", "linux", "kernel", "git", "torvald", "linux", "git", "commit", "id=ef94b1864d1ed5be54376404bb23d22ed0481feb", "ping", "jfrazel", "tiborvass", "unclejack", "might", "cherri", "pick", "sinc", "18", "will", "releas", "dure", "docker", "cycl", "sign", "off", "by", "vincent", "batt", "vbatt", "redhat", "com"], "title_sim": [0.040600914578690216], "body_sim": [0.5613600184173075], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.9993304187090476, 0.0], "location_sim": [0.0, 0.0], "pattern": 1, "time": 1}, {"A_title": "Fix panic in `stats --format 'table {{.Name}}'` with no container", "A_clean_title": ["fix", "panic", "stat", "format", "'tabl", "name", "no", "contain"], "B_title": "Send \"Name\" and \"ID\" when stating stopped containers", "B_clean_title": ["send", "name", "id", "when", "state", "stop", "contain"], "A_body": "This fix fixes the issue in #30277 where `stats --format 'table {{.Name}}'` will panic when there is no container available.\r\n\r\nThe reason for the panic is becuse `c.s.Name[1:]` is out of bound.  When there is no container, the placeholder is only invoked for the header printout.\r\n\r\nThis fix fixes the issue.\r\n\r\nThis fix fixes #30277.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n", "A_clean_body": ["thi", "fix", "fix", "issu", "30277", "where", "stat", "format", "'tabl", "name", "will", "panic", "when", "there", "no", "contain", "avail", "reason", "panic", "becus", "name", "out", "bound", "when", "there", "no", "contain", "placehold", "onli", "invok", "header", "printout", "thi", "fix", "fix", "issu", "thi", "fix", "fix", "30277", "sign", "off", "by", "yong", "tang", "yong", "tang", "github", "outlook", "com"], "B_body": "When `docker stats` stopped containers, client will get empty stats data,\r\nthis commit will gurantee client always get \"Name\" and \"ID\" field, so\r\nthat it can format with `ID` and `Name` fields successfully.\r\n\r\nSigned-off-by: Zhang Wei <zhangwei555@huawei.com>\r\n\r\n\r\n<del>\r\nThis commit fixes panic when execute stats command:\r\n\r\n* use `--format {{.Name}}` with `--all` when there're exited containers.\r\n* use `--format {{.Name}}` while stating exited container.\r\n\r\nThe root cause is when stating an exited container, the result from the\r\napi didn't contain the `Name` and `ID` field, which will make `format`\r\nprocess panic.\r\n\r\nPanic log is like this:\r\n\r\n```\r\npanic: runtime error: slice bounds out of range [recovered]\r\n\tpanic: runtime error: slice bounds out of range\r\n\r\ngoroutine 1 [running]:\r\npanic(0xb20f80, 0xc420014110)\r\n\t/usr/local/go/src/runtime/panic.go:500 +0x1a1\r\ntext/template.errRecover(0xc4201773e8)\r\n\t/usr/local/go/src/text/template/exec.go:140 +0x2ad\r\npanic(0xb20f80, 0xc420014110)\r\n\t/usr/local/go/src/runtime/panic.go:458 +0x243\r\ngithub.com/docker/docker/cli/command/formatter.(*containerStatsContext).Name(0xc420430160,\r\n0x0, 0x0)\r\n\t/go/src/github.com/docker/docker/cli/command/formatter/stats.go:148\r\n+0x86\r\nreflect.Value.call(0xb9a3a0, 0xc420430160, 0x2213, 0xbe3657, 0x4,\r\n0x11bc9f8, 0x0, 0x0, 0x4d75b3, 0x1198940, ...)\r\n\t/usr/local/go/src/reflect/value.go:434 +0x5c8\r\nreflect.Value.Call(0xb9a3a0, 0xc420430160, 0x2213, 0x11bc9f8, 0x0, 0x0,\r\n0xc420424028, 0xb, 0xb)\r\n\t/usr/local/go/src/reflect/value.go:302 +0xa4\r\ntext/template.(*state).evalCall(0xc420177368, 0xb9a3a0, 0xc420430160,\r\n0x16, 0xb9a3a0, 0xc420430160, 0x2213, 0x1178fa0, 0xc4203ea330,\r\n0xc4203de283, ...)\r\n\t/usr/local/go/src/text/template/exec.go:658 +0x530\r\n```\r\n\r\nSigned-off-by: Zhang Wei <zhangwei555@huawei.com>\r\n</del>\r\n\r\nIntroduced in https://github.com/docker/docker/pull/27797, ping @vdemeester ", "B_clean_body": ["when", "docker", "stat", "stop", "contain", "client", "will", "get", "empti", "stat", "data", "thi", "commit", "will", "gurante", "client", "alway", "get", "name", "id", "field", "so", "that", "it", "format", "id", "name", "field", "success", "sign", "off", "by", "zhang", "wei", "zhangwei555", "huawei", "com", "del", "thi", "commit", "fix", "panic", "when", "execut", "stat", "command", "use", "format", "name", "all", "when", "there", "'re", "exit", "contain", "use", "format", "name", "while", "state", "exit", "contain", "root", "caus", "when", "state", "exit", "contain", "result", "api", "did", "n't", "contain", "name", "id", "field", "which", "will", "make", "format", "process", "panic", "panic", "log", "like", "thi", "panic", "runtim", "error", "slice", "bound", "out", "rang", "recov", "panic", "runtim", "error", "slice", "bound", "out", "rang", "goroutin", "run", "panic", "0xb20f80", "0xc420014110", "go:500", "usr", "local", "go", "src", "runtim", "panic", "+0x1a1", "errrecov", "text", "templat", "err", "recov", "0xc4201773e8", "go:140", "usr", "local", "go", "src", "text", "templat", "exec", "+0x2ad", "panic", "0xb20f80", "0xc420014110", "go:458", "usr", "local", "go", "src", "runtim", "panic", "+0x243", "github", "com", "docker", "docker", "cli", "command", "formatt", "*containerstatscontext", "*contain", "stat", "context", "name", "0xc420430160", "0x0", "0x0", "go:148", "go", "src", "github", "com", "docker", "docker", "cli", "command", "formatt", "stat", "+0x86", "reflect", "valu", "call", "0xb9a3a0", "0xc420430160", "0x2213", "0xbe3657", "0x4", "0x11bc9f8", "0x0", "0x0", "0x4d75b3", "0x1198940", "go:434", "usr", "local", "go", "src", "reflect", "valu", "+0x5c8", "reflect", "valu", "call", "0xb9a3a0", "0xc420430160", "0x2213", "0x11bc9f8", "0x0", "0x0", "0xc420424028", "0xb", "0xb", "go:302", "usr", "local", "go", "src", "reflect", "valu", "+0xa4", "text", "templat", "*state", "evalcal", "eval", "call", "0xc420177368", "0xb9a3a0", "0xc420430160", "0x16", "0xb9a3a0", "0xc420430160", "0x2213", "0x1178fa0", "0xc4203ea330", "0xc4203de283", "go:658", "usr", "local", "go", "src", "text", "templat", "exec", "+0x530", "sign", "off", "by", "zhang", "wei", "zhangwei555", "huawei", "com", "del", "introduc", "http", "github", "com", "docker", "docker", "pull", "27797", "ping", "vdemeest"], "title_sim": [0.19954630390663944], "body_sim": [0.38070878255144613], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 24}, {"A_title": "Allow access to /dev/shm", "A_clean_title": ["allow", "access", "dev", "shm"], "B_title": "Change shm mode to 1777", "B_clean_title": ["chang", "shm", "mode", "1777"], "A_body": "`/dev/shm` is mounted writable for root only, which disallows non-root processes in the container from using POSIX shared memory IPC.\n", "A_clean_body": ["dev", "shm", "mount", "writabl", "root", "onli", "which", "disallow", "non", "root", "process", "contain", "posix", "share", "memori", "ipc"], "B_body": "Fixes #5126\nDocker-DCO-1.1-Signed-off-by: Michael Crosby michael@crosbymichael.com (github: crosbymichael)\n", "B_clean_body": ["fix", "5126", "docker", "dco", "sign", "off", "by", "michael", "crosbi", "michael", "crosbymichael", "com", "github", "crosbymichael"], "title_sim": [-0.01822829636385006], "body_sim": [0.03882701029906532], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [1.0, 1.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 6}, {"A_title": "Freezer integration to support container pause/unpause", "A_clean_title": ["freezer", "integr", "support", "contain", "paus", "unpaus"], "B_title": "Add ability to pause/unpause containers via cgroups freeze", "B_clean_title": ["add", "abil", "paus", "unpaus", "contain", "via", "cgroup", "freez"], "A_body": "Fixes #5948\n", "A_clean_body": ["fix", "5948"], "B_body": "This patch adds pause/unpause to the command line, api and drivers\nfor use on containers.  This is implemented using the cgroups/freeze\nutility in libcontainer.\n\nThis is possibly a WIP.  We're running into an issue with the systemd implementation not supporting freeze.  The fs version works well though.\n\nThis is a start to fix bug #5948\n\nCo-Authored-By: Eric Windisch ewindisch@docker.com\nCo-Authored-By: Chris Alfonso calfonso@redhat.com\nDocker-DCO-1.1-Signed-off-by: Ian Main imain@redhat.com (github: imain)\n", "B_clean_body": ["thi", "patch", "add", "paus", "unpaus", "command", "line", "api", "driver", "use", "contain", "thi", "implement", "cgroup", "freez", "util", "libcontain", "thi", "possibl", "wip", "we", "'re", "run", "into", "issu", "systemd", "implement", "not", "support", "freez", "fs", "version", "work", "well", "though", "thi", "start", "fix", "bug", "5948", "co", "author", "by", "eric", "windisch", "ewindisch", "docker", "com", "co", "author", "by", "chri", "alfonso", "calfonso", "redhat", "com", "docker", "dco", "sign", "off", "by", "ian", "main", "imain", "redhat", "com", "github", "imain"], "title_sim": [0.1187053902067215], "body_sim": [0.05739503853512587], "file_list_sim": 0.9, "overlap_files_len": 9, "code_sim": [0.9897209486632231, 0.9890924420445253], "location_sim": [0.8832116788321168, 0.9138972809667674], "pattern": 1, "time": 6}, {"A_title": "Fix check for terminal output.", "A_clean_title": ["fix", "check", "termin", "output"], "B_title": "Fix #6509: Interactive container hangs when redirecting stdout", "B_clean_title": ["fix", "6509", "interact", "contain", "hang", "when", "redirect", "stdout"], "A_body": "Previously, 26b4a492 fixed which stream was being checked, but the\nsurrounding check for whether it is nil was testing the wrong\nvariable.\n\nSigned-off-by: Ewen Cheslack-Postava me@ewencp.org\n", "A_clean_body": ["previous", "26b4a492", "fix", "which", "stream", "wa", "be", "check", "but", "surround", "check", "whether", "it", "nil", "wa", "test", "wrong", "variabl", "sign", "off", "by", "ewen", "cheslack", "postava", "me", "ewencp", "org"], "B_body": "These two commits fix both:\n- `docker run --rm -i ubuntu cat /etc/passwd | grep root` should not hang (issue #6509)\n- `docker events > /tmp/out` should not print control characters to non-terminal STDOUT (commit 26b4a4920adca614f6be17a96f254f331271faf0)\n", "B_clean_body": ["these", "two", "commit", "fix", "both", "docker", "run", "rm", "ubuntu", "cat", "etc", "passwd", "grep", "root", "not", "hang", "issu", "6509", "docker", "event", "tmp", "out", "not", "print", "control", "charact", "non", "termin", "stdout", "commit", "26b4a4920adca614f6be17a96f254f331271faf0"], "title_sim": [0.051147739064958106], "body_sim": [0.044768659349197805], "file_list_sim": 0.3333333333333333, "overlap_files_len": 1, "code_sim": [0.48662546778537125, 0.331868602121291], "location_sim": [0.48623853211009177, 0.7464788732394366], "pattern": 0, "time": 0}, {"A_title": "Fix --volumes-from mount failure", "A_clean_title": ["fix", "volum", "mount", "failur"], "B_title": "Use specParts for volumes from id", "B_clean_title": ["use", "specpart", "spec", "part", "volum", "id"], "A_body": "As explained in https://github.com/dotcloud/docker/issues/4979\n--volumes-from fails with ENOFILE errors.\n\nThis is because the code tries to look at the \"from\" volume without\nensuring that it is mounted yet. We fix this by mounting the containers\nbefore stating in it.\n\nDocker-DCO-1.1-Signed-off-by: Alexander Larsson alexl@redhat.com (github: alexlarsson)\n", "A_clean_body": ["as", "explain", "http", "github", "com", "dotcloud", "docker", "issu", "4979", "volum", "fail", "enofil", "error", "thi", "becaus", "code", "tri", "look", "at", "volum", "without", "ensur", "that", "it", "mount", "yet", "we", "fix", "thi", "by", "mount", "contain", "befor", "state", "it", "docker", "dco", "sign", "off", "by", "alexand", "larsson", "alexl", "redhat", "com", "github", "alexlarsson"], "B_body": "Docker-DCO-1.1-Signed-off-by: Michael Crosby michael@crosbymichael.com (github: crosbymichael)\n", "B_clean_body": ["docker", "dco", "sign", "off", "by", "michael", "crosbi", "michael", "crosbymichael", "com", "github", "crosbymichael"], "title_sim": [0.44750576999910413], "body_sim": [0.3648140810966067], "file_list_sim": 0.5, "overlap_files_len": 1, "code_sim": [0.14054173883095603, 0.6005291226878998], "location_sim": [0.4666666666666667, 1.0], "pattern": 1, "time": 0}, {"A_title": "Check Linux kernel version >= 3.10 [#13618]", "A_clean_title": ["check", "linux", "kernel", "version", "10", "13618"], "B_title": "update recommended kernel in checkKernel", "B_clean_title": ["updat", "recommend", "kernel", "checkkernel", "check", "kernel"], "A_body": "Should fix #13618 according to @unclejack [comment](https://github.com/docker/docker/issues/13618#issuecomment-107247798).\n- Add a build flag `nokernelcheck` for disabling the check (useful for\n  CentOS/RHEL 6 for example).\n- The check is done only for the daemon part, in the \"main\".\n- First time I fiddle around the `buildflags` ;\u00a0and I'm not sure the name of file I choosed are right.\n- Wasn't sure how to provide tests on this :cry:.\n- Should probably add documentation, right ?\n- Should probably do something upstream (for Centos/RHEL6) too, right ?\n\n:wink: \ud83d\udc38\n\nSigned-off-by: Vincent Demeester vincent@sbr.pm\n", "A_clean_body": ["fix", "13618", "accord", "unclejack", "comment", "http", "github", "com", "docker", "docker", "issu", "13618", "issuecom", "107247798", "add", "build", "flag", "nokernelcheck", "disabl", "check", "use", "cento", "rhel", "cent", "os", "exampl", "check", "done", "onli", "daemon", "part", "main", "first", "time", "fiddl", "around", "buildflag", "'m", "not", "sure", "name", "file", "choos", "are", "right", "wa", "n't", "sure", "how", "provid", "test", "thi", "cri", "probabl", "add", "document", "right", "probabl", "someth", "upstream", "cento", "rhel6", "too", "right", "wink", "sign", "off", "by", "vincent", "demeest", "vincent", "sbr", "pm"], "B_body": "We already changed docs: https://github.com/docker/docker/pull/10652\nShould change code as well.\n\nSigned-off-by: Qiang Huang h.huangqiang@huawei.com\n", "B_clean_body": ["we", "alreadi", "chang", "doc", "http", "github", "com", "docker", "docker", "pull", "10652", "chang", "code", "as", "well", "sign", "off", "by", "qiang", "huang", "huangqiang", "huawei", "com"], "title_sim": [0.5803731305641209], "body_sim": [0.2025321917362248], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.039205344920851946, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 39}, {"A_title": "image: don't use the dev version of TarSum", "A_clean_title": ["imag", "n't", "use", "dev", "version", "tarsum", "tar", "sum"], "B_title": "Image checksums computed using tarsum v1", "B_clean_title": ["imag", "checksum", "comput", "tarsum", "v1"], "A_body": "ping @jlhawn ...\n\nSigned-off-by: Vincent Batts vbatts@redhat.com\n", "A_clean_body": ["ping", "jlhawn", "sign", "off", "by", "vincent", "batt", "vbatt", "redhat", "com"], "B_body": "Docker-DCO-1.1-Signed-off-by: Josh Hawn josh.hawn@docker.com (github: jlhawn)\n", "B_clean_body": ["docker", "dco", "sign", "off", "by", "josh", "hawn", "josh", "hawn", "docker", "com", "github", "jlhawn"], "title_sim": [0.1229983670525365], "body_sim": [0.5172398691819633], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.6666666666666666, 0.6666666666666666], "pattern": 0, "time": 0}, {"A_title": "Fix registry auth and remove other hidden ping commands from client code", "A_clean_title": ["fix", "registri", "auth", "remov", "other", "hidden", "ping", "command", "client", "code"], "B_title": "Do not ping registry from the cli", "B_clean_title": ["not", "ping", "registri", "cli"], "A_body": "This fix addresses #4267 and finishes SHA: e2eace9715253b5254d1596f3ee91e2f61127929\n\nSolution discussed with @crosbymichael on IRC.\n", "A_clean_body": ["thi", "fix", "address", "4267", "finish", "sha", "e2eace9715253b5254d1596f3ee91e2f61127929", "solut", "discuss", "crosbymichael", "irc"], "B_body": "Fixes #3683\n\nThis a problem because the cli was pinging the registry to inspect the transport if not provided.  I moved this to the daemon so that all requests to the registries flow thought the daemon.  This is true for every command, even login, expect for this first ping if a registry was provided. \n\nDocker-DCO-1.1-Signed-off-by: Michael Crosby michael@crosbymichael.com (github: crosbymichael)\n", "B_clean_body": ["fix", "3683", "thi", "problem", "becaus", "cli", "wa", "ping", "registri", "inspect", "transport", "not", "provid", "move", "thi", "daemon", "so", "that", "all", "request", "registri", "flow", "thought", "daemon", "thi", "true", "everi", "command", "even", "login", "expect", "thi", "first", "ping", "registri", "wa", "provid", "docker", "dco", "sign", "off", "by", "michael", "crosbi", "michael", "crosbymichael", "com", "github", "crosbymichael"], "title_sim": [0.6445448137598759], "body_sim": [0.05961351949201591], "file_list_sim": 0.2857142857142857, "overlap_files_len": 2, "code_sim": [0.037208415883301635, 0.06174038643009194], "location_sim": [0.0, 0.0], "pattern": -1, "time": 14}, {"A_title": "[dockerfile] Allow ARG in FROM", "A_clean_title": ["dockerfil", "allow", "arg"], "B_title": "Do not commit after ARG dockerfile command", "B_clean_title": ["not", "commit", "after", "arg", "dockerfil", "command"], "A_body": "Fixes #18119\r\n\r\nThis has been a major pain point for building from common base images. There's no way to build a base image with a unique tag (git sha is a common one), and then build app specific images from that tag.", "A_clean_body": ["fix", "18119", "thi", "ha", "been", "major", "pain", "point", "build", "common", "base", "imag", "there", "'s", "no", "way", "build", "base", "imag", "uniqu", "tag", "git", "sha", "common", "one", "then", "build", "app", "specif", "imag", "that", "tag"], "B_body": "Since the ARG Dockerfile command doesn't change anything in the image\r\nwe're building there's no point in committing anything after processing\r\nthe command.\r\n\r\nSigned-off-by: Doug Davis <dug@us.ibm.com>", "B_clean_body": ["sinc", "arg", "dockerfil", "command", "n't", "chang", "anyth", "imag", "we", "'re", "build", "there", "'s", "no", "point", "commit", "anyth", "after", "process", "command", "sign", "off", "by", "doug", "davi", "dug", "us", "ibm", "com"], "title_sim": [0.7551122231945926], "body_sim": [0.3364452606895989], "file_list_sim": 0.16666666666666666, "overlap_files_len": 2, "code_sim": [0.29690473059699224, 0.2800025619071085], "location_sim": [0.0, 0.0], "pattern": 0, "time": 57}, {"A_title": "adding elementary OS to install script", "A_clean_title": ["ad", "elementari", "os", "instal", "script"], "B_title": "Updated install.sh, added elementary os to install", "B_clean_title": ["updat", "instal", "sh", "ad", "elementari", "os", "instal"], "A_body": "It's basically just an Ubuntu, I'm a total noob but I've tried it on elementary OS \"Freya\" and it worked.\n\nIt's worth mentioning that I needed to install lsb-core first though because there was no LSB modules available.\n\n```\nsudo apt-get install lsb-core\n```\n\n[solution to no LSB modules available](http://askubuntu.com/questions/230766/how-lsb-module-affects-system-and-can-be-made-available-to-the-system)\n", "A_clean_body": ["it", "'s", "basic", "just", "ubuntu", "'m", "total", "noob", "but", "'ve", "tri", "it", "elementari", "os", "freya", "it", "work", "it", "'s", "worth", "mention", "that", "need", "instal", "lsb", "core", "first", "though", "becaus", "there", "wa", "no", "lsb", "modul", "avail", "sudo", "apt", "get", "instal", "lsb", "core", "solut", "no", "lsb", "modul", "avail", "http", "lsb", "modul", "affect", "system", "made", "avail", "system", "askubuntu", "com", "question", "230766", "how"], "B_body": "Signed-off-by: Rohit Verma rohitatiit@gmail.com\n\nTested installation on elementary os freya beta, based on ubuntu 14.04.\n", "B_clean_body": ["sign", "off", "by", "rohit", "verma", "rohitatiit", "gmail", "com", "test", "instal", "elementari", "os", "freya", "beta", "base", "ubuntu", "14", "04"], "title_sim": [0.7678937601390619], "body_sim": [0.3178638328435952], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 19}, {"A_title": "add install support to elementary OS", "A_clean_title": ["add", "instal", "support", "elementari", "os"], "B_title": "adding elementary OS to install script", "B_clean_title": ["ad", "elementari", "os", "instal", "script"], "A_body": "elementary OS is based on Ubuntu, take a look at https://elementary.io\n", "A_clean_body": ["elementari", "os", "base", "ubuntu", "take", "look", "at", "http", "io", "elementari"], "B_body": "It's basically just an Ubuntu, I'm a total noob but I've tried it on elementary OS \"Freya\" and it worked.\n\nIt's worth mentioning that I needed to install lsb-core first though because there was no LSB modules available.\n\n```\nsudo apt-get install lsb-core\n```\n\n[solution to no LSB modules available](http://askubuntu.com/questions/230766/how-lsb-module-affects-system-and-can-be-made-available-to-the-system)\n", "B_clean_body": ["it", "'s", "basic", "just", "ubuntu", "'m", "total", "noob", "but", "'ve", "tri", "it", "elementari", "os", "freya", "it", "work", "it", "'s", "worth", "mention", "that", "need", "instal", "lsb", "core", "first", "though", "becaus", "there", "wa", "no", "lsb", "modul", "avail", "sudo", "apt", "get", "instal", "lsb", "core", "solut", "no", "lsb", "modul", "avail", "http", "lsb", "modul", "affect", "system", "made", "avail", "system", "askubuntu", "com", "question", "230766", "how"], "title_sim": [0.5981621692444893], "body_sim": [0.10970269603658327], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [1.0, 1.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 0}, {"A_title": "Fix remote ADD cache processing", "A_clean_title": ["fix", "remot", "add", "cach", "process"], "B_title": "Fix ADD remote issue. Different file's content hit the same cache (#3847)", "B_clean_title": ["fix", "add", "remot", "issu", "differ", "file", "'s", "content", "hit", "same", "cach", "3847"], "A_body": "/cc @amuino, you showed me a Dockerfile with a false cache HIT, but can't find it. This PR should solve that issue.\n", "A_clean_body": ["cc", "amuino", "you", "show", "me", "dockerfil", "fals", "cach", "hit", "but", "ca", "n't", "find", "it", "thi", "pr", "solv", "that", "issu"], "B_body": "Force reading of downloaded file contents to obtain the checksum used by cache validation.\n\nDocker-DCO-1.1-Signed-off-by: German Del Zotto germ@ndz.com.ar (github: GermanDZ)\n", "B_clean_body": ["forc", "read", "download", "file", "content", "obtain", "checksum", "use", "by", "cach", "valid", "docker", "dco", "sign", "off", "by", "german", "del", "zotto", "germ", "ndz", "com", "ar", "github", "germandz", "german", "dz"], "title_sim": [0.6318456871192261], "body_sim": [0.161078542136345], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.8977214602111845, 1.0000000000000002], "location_sim": [0.0, 0.0], "pattern": 0, "time": 18}, {"A_title": "Adds support for setting cgroup CPU CFS period.", "A_clean_title": ["add", "support", "set", "cgroup", "cpu", "cf", "period"], "B_title": "add cpu.cfs_period_us  support", "B_clean_title": ["add", "cpu", "cf", "period", "us", "support"], "A_body": "This allows one to set the cpu period used in cpu quota calculation.\n\nSigned-off-by: Mrunal Patel mrunalp@gmail.com\n", "A_clean_body": ["thi", "allow", "one", "set", "cpu", "period", "use", "cpu", "quota", "calcul", "sign", "off", "by", "mrunal", "patel", "mrunalp", "gmail", "com"], "B_body": "Signed-off-by: Ma Shimiao mashimiao.fnst@cn.fujitsu.com\n\nWe can use this to control cpu period and quota of a container.\n", "B_clean_body": ["sign", "off", "by", "ma", "shimiao", "mashimiao", "fnst", "cn", "fujitsu", "com", "we", "use", "thi", "control", "cpu", "period", "quota", "contain"], "title_sim": [0.7501804963423835], "body_sim": [0.6771418415460198], "file_list_sim": 0.6818181818181818, "overlap_files_len": 15, "code_sim": [0.9909004121381052, 0.9889832588354833], "location_sim": [0.4968553459119497, 0.5925], "pattern": 0, "time": 16}, {"A_title": "Make test-unit work without parallel", "A_clean_title": ["make", "test", "unit", "work", "without", "parallel"], "B_title": "Fix test-unit run without parallel", "B_clean_title": ["fix", "test", "unit", "run", "without", "parallel"], "A_body": "Closes #10832 \n\nYou can test by removing `parallel` from the Dockerfile and running `make test-unit`\n", "A_clean_body": ["close", "10832", "you", "test", "by", "remov", "parallel", "dockerfil", "run", "make", "test", "unit"], "B_body": "Test-unit fails when running without parallel because BUILDFLAGS_FILE is not created in this conditional branch. This PR moves the code outside of the conditional expression.\n\nSigned-off-by: Fabiano Rosas farosas@br.ibm.com\n\nCloses #10832\n", "B_clean_body": ["test", "unit", "fail", "when", "run", "without", "parallel", "becaus", "buildflag", "file", "not", "creat", "thi", "condit", "branch", "thi", "pr", "move", "code", "outsid", "condit", "express", "sign", "off", "by", "fabiano", "rosa", "farosa", "br", "ibm", "com", "close", "10832"], "title_sim": [0.7382661783332943], "body_sim": [0.29602783549353356], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.8292682926829268, 0.8292682926829268], "pattern": 1, "time": 0}, {"A_title": "cgroups: Allow mknod for any device in systemd cgroup backend", "A_clean_title": ["cgroup", "allow", "mknod", "ani", "devic", "systemd", "cgroup", "backend"], "B_title": "Allow mknod with systemd cgroup implementation ", "B_clean_title": ["allow", "mknod", "systemd", "cgroup", "implement"], "A_body": "Without this any container startup fails:\n2014/05/20 09:20:36 setup mount namespace copy additional dev nodes mknod fuse operation not permitted\n\nDocker-DCO-1.1-Signed-off-by: Alexander Larsson alexl@redhat.com (github: alexlarsson)\n", "A_clean_body": ["without", "thi", "ani", "contain", "startup", "fail", "2014", "05", "20", "09:20:36", "setup", "mount", "namespac", "copi", "addit", "dev", "node", "mknod", "fuse", "oper", "not", "permit", "docker", "dco", "sign", "off", "by", "alexand", "larsson", "alexl", "redhat", "com", "github", "alexlarsson"], "B_body": "Docker-DCO-1.1-Signed-off-by: Michael Crosby michael@crosbymichael.com (github: crosbymichael)\n", "B_clean_body": ["docker", "dco", "sign", "off", "by", "michael", "crosbi", "michael", "crosbymichael", "com", "github", "crosbymichael"], "title_sim": [0.6732925128567716], "body_sim": [0.3363260022641972], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.23202447322519854, 0.23202447322519854], "location_sim": [1.0, 1.0], "pattern": 1, "time": 0}, {"A_title": "Port test from integration tests to integration-cli", "A_clean_title": ["port", "test", "integr", "test", "integr", "cli"], "B_title": "Move integration/server_test tests to integration-cli", "B_clean_title": ["move", "test", "integr", "server", "test", "integr", "cli"], "A_body": "Addresses #12255\nSigned-off-by: Srini Brahmaroutu srbrahma@us.ibm.com\n", "A_clean_body": ["address", "12255", "sign", "off", "by", "srini", "brahmaroutu", "srbrahma", "us", "ibm", "com"], "B_body": "", "B_clean_body": [], "title_sim": [0.8394828731804935], "body_sim": [0.0], "file_list_sim": 0.2, "overlap_files_len": 1, "code_sim": [0.19946821058041278, 0.12581805735490834], "location_sim": [0.16083916083916083, 1.0], "pattern": 0, "time": 5}, {"A_title": "Fix regression in /v.../containers/json for empty array", "A_clean_title": ["fix", "regress", "contain", "json", "empti", "array"], "B_title": "Fix GET /containers/json emtpy response regression", "B_clean_title": ["fix", "get", "contain", "json", "emtpi", "respons", "regress"], "A_body": "Reported as https://github.com/docker/compose/issues/2009\n\nI believe 06699f73fb6d779894a875f9177afc5a1f3bc5b3 broke the API return value for `/v.../containers/json` when the response is empty. It should be an empty json array, currently it returns `null`.\n\n+area/api\n+kind/bug\n", "A_clean_body": ["report", "as", "http", "github", "com", "docker", "compos", "issu", "2009", "believ", "06699f73fb6d779894a875f9177afc5a1f3bc5b3", "broke", "api", "return", "valu", "contain", "json", "when", "respons", "empti", "it", "empti", "json", "array", "current", "it", "return", "null", "+area", "api", "+kind", "bug"], "B_body": "GET /containers/json route used to reply with and empty array `[]` when no\ncontainers where available. Daemon containers list refactor introduced\nthis bug by declaring an empty slice istead of initializing it as well\nand it was now replying with `null`.\n\nSigned-off-by: Antonio Murdaca runcom@linux.com\n", "B_clean_body": ["get", "contain", "json", "rout", "use", "repli", "empti", "array", "when", "no", "contain", "where", "avail", "daemon", "contain", "list", "refactor", "introduc", "thi", "bug", "by", "declar", "empti", "slice", "istead", "initi", "it", "as", "well", "it", "wa", "now", "repli", "null", "sign", "off", "by", "antonio", "murdaca", "runcom", "linux", "com"], "title_sim": [0.5092307615164143], "body_sim": [0.5871606735999333], "file_list_sim": 0.3333333333333333, "overlap_files_len": 1, "code_sim": [0.17403495760914442, 0.0], "location_sim": [0.17073170731707318, 1.0], "pattern": 0, "time": 0}, {"A_title": "Add support for installing on Linux Mint", "A_clean_title": ["add", "support", "instal", "linux", "mint"], "B_title": "hack/install.sh: Add Linux Mint support", "B_clean_title": ["sh", "hack", "instal", "add", "linux", "mint", "support"], "A_body": "Resolves error message about unsupported platform.\n\nLinux Mint is a Linux distribution based on Ubuntu and Debian.\nStarting with Mint 17 and continuing until 2016, every release of\nLinux Mint will be built on Ubuntu 14.04 LTS.\n", "A_clean_body": ["resolv", "error", "messag", "about", "unsupport", "platform", "linux", "mint", "linux", "distribut", "base", "ubuntu", "debian", "start", "mint", "17", "continu", "until", "2016", "everi", "releas", "linux", "mint", "will", "built", "ubuntu", "14", "04", "lt"], "B_body": "Linux Mint is based off Ubuntu. The above change renames the lsb_dist and dist_version\nvariables to the correct Ubuntu version Linux Mint was built on.\n", "B_clean_body": ["linux", "mint", "base", "off", "ubuntu", "abov", "chang", "renam", "lsb", "dist", "dist", "version", "variabl", "correct", "ubuntu", "version", "linux", "mint", "wa", "built"], "title_sim": [0.7288739024855134], "body_sim": [0.4687575276593455], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.6974453594802524, 0.6974453594802524], "location_sim": [1.0, 1.0], "pattern": 0, "time": 1}, {"A_title": "Update containerd and runc", "A_clean_title": ["updat", "containerd", "runc"], "B_title": "Update runc", "B_clean_title": ["updat", "runc"], "A_body": "Signed-off-by: Kenfe-Mickael Laventure mickael.laventure@gmail.com\n## \n\nFixes #25880, #25470, #26995\n", "A_clean_body": ["sign", "off", "by", "kenf", "mickael", "laventur", "mickael", "laventur", "gmail", "com", "fix", "25880", "25470", "26995"], "B_body": "Found some issues when working on #26979 which looked unrelated to that PR\nbut may be related to other changes.\n\nSigned-off-by: Justin Cormack justin.cormack@docker.com\n\n![cute-running-puppies](https://cloud.githubusercontent.com/assets/482364/18923250/81cc8a16-85a3-11e6-8581-ef73cca667b5.jpg)\n", "B_clean_body": ["found", "some", "issu", "when", "work", "26979", "which", "look", "unrel", "that", "pr", "but", "may", "relat", "other", "chang", "sign", "off", "by", "justin", "cormack", "justin", "cormack", "docker", "com", "cute", "run", "puppi", "http", "85a3", "11e6", "8581", "githubusercont", "ef73cca667b5", "jpg", "cloud", "com", "asset", "482364", "18923250", "81cc8a16"], "title_sim": [0.8184811523205423], "body_sim": [0.26657435321895023], "file_list_sim": 0.7727272727272727, "overlap_files_len": 17, "code_sim": [0.37689555350984827, 0.9995184715950215], "location_sim": [0.6436170212765957, 0.852112676056338], "pattern": -1, "time": 6}, {"A_title": "Fix to avoid a compile error due to float to int truncation with GCCGO", "A_clean_title": ["fix", "avoid", "compil", "error", "due", "float", "int", "truncat", "gccgo"], "B_title": "Fix to avoid a compile error due to float to int truncation with GCCGO", "B_clean_title": ["fix", "avoid", "compil", "error", "due", "float", "int", "truncat", "gccgo"], "A_body": "As part of Power and Z system port, compiling docker with latest gccgo compiler.\n", "A_clean_body": ["as", "part", "power", "system", "port", "compil", "docker", "latest", "gccgo", "compil"], "B_body": "The unit test `pkg/units/size_test.go` fails with GCCGO due to a compilation error:\n\n```\ninagaki@black3:~/upstream/src/github.com/docker/docker/pkg/units$ go version\ngo version gccgo (GCC) 5.0.0 20141029 (experimental) linux/amd64\ninagaki@black3:~/upstream/src/github.com/docker/docker/pkg/units$ go test\n# _/home/inagaki/upstream/src/github.com/docker/docker/pkg/units\n./size_test.go:28:43: error: floating point constant truncated to integer\n  assertEquals(t, \"2.22 PB\", HumanSize(2.22*PB))\n                                           ^\nFAIL    _/home/inagaki/upstream/src/github.com/docker/docker/pkg/units [build failed]\ninagaki@black3:~/upstream/src/github.com/docker/docker/pkg/units$\n```\n\nAccording to [the discussion on GCC Bugzilla](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63812#c3), this is due to the difference between GCCGO and GC in the implementations of floating point constant expression. The [language](http://golang.org/ref/spec#Constant_expressions) specifies that a compiler raises an error when a floating point constant expression is truncated to integer, a precision of the internal representation is implementation-dependent. While my workaround is modifying `size_test.go` as:\n\n```\nassertEquals(t, \"2.22 PB\", HumanSize(int64(float64(2.22*PB))))\n```\n\n, is it better to modify the parameter of `HumanSize()` from `int64` to `float64` like `BytesSize()`?\nSigned-off-by: Tatsushi Inagaki e29253@jp.ibm.com\n", "B_clean_body": ["unit", "test", "go", "test", "pkg", "unit", "size", "fail", "gccgo", "due", "compil", "error", "inagaki", "black3", "upstream", "src", "github", "com", "docker", "docker", "pkg", "unit", "go", "version", "go", "version", "gccgo", "gcc", "20141029", "experiment", "linux", "amd64", "inagaki", "black3", "upstream", "src", "github", "com", "docker", "docker", "pkg", "unit", "go", "test", "com", "docker", "docker", "pkg", "unit", "home", "inagaki", "upstream", "src", "github", "go:28:43", "test", "size", "error", "float", "point", "constant", "truncat", "integ", "assertequ", "assert", "equal", "22", "pb", "humans", "human", "size", "22*pb", "fail", "com", "docker", "docker", "pkg", "unit", "home", "inagaki", "upstream", "src", "github", "build", "fail", "inagaki", "black3", "upstream", "src", "github", "com", "docker", "docker", "pkg", "unit", "accord", "discuss", "gcc", "bugzilla", "http", "gnu", "cgi", "gcc", "bug", "org", "bugzilla", "show", "id=63812", "c3", "thi", "due", "differ", "between", "gccgo", "gc", "implement", "float", "point", "constant", "express", "languag", "http", "golang", "org", "ref", "spec", "constant", "express", "specifi", "that", "compil", "rais", "error", "when", "float", "point", "constant", "express", "truncat", "integ", "precis", "intern", "represent", "implement", "depend", "while", "my", "workaround", "modifi", "go", "size", "test", "as", "assertequ", "assert", "equal", "22", "pb", "humans", "human", "size", "int64", "float64", "22*pb", "it", "better", "modifi", "paramet", "humans", "human", "size", "int64", "float64", "like", "bytess", "byte", "size", "sign", "off", "by", "tatsushi", "inagaki", "e29253", "jp", "ibm", "com"], "title_sim": [1.0000000000000002], "body_sim": [0.10538669193896466], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.874913156973667, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 28}]