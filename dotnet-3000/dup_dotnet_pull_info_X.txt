[{"A_title": "Add exclusion for ToolRuntime directory in the linux test script", "A_clean_title": ["add", "exclus", "toolruntim", "tool", "runtim", "directori", "linux", "test", "script"], "B_title": "DoNotMerge: Revert \"Update to BuildTools version 87\"", "B_clean_title": ["donotmerg", "not", "merg", "revert", "updat", "buildtool", "build", "tool", "version", "87"], "A_body": "This should take care of the current linux tests running failing. The reason they were failing is because the run-test script was finding the windows versions of some of the libraries in the new ToolRuntime directory and it was overlaying those over top the linux overlay.\n", "A_clean_body": ["thi", "take", "care", "current", "linux", "test", "run", "fail", "reason", "they", "were", "fail", "becaus", "run", "test", "script", "wa", "find", "window", "version", "some", "librari", "new", "toolruntim", "tool", "runtim", "directori", "it", "wa", "overlay", "those", "over", "top", "linux", "overlay"], "B_body": "This reverts commit f2d4efc72a78f4d0a4a35d4129b16d790069e5a5. (seeing if the Linux builds get better)\n", "B_clean_body": ["thi", "revert", "commit", "f2d4efc72a78f4d0a4a35d4129b16d790069e5a5", "see", "linux", "build", "get", "better"], "title_sim": [0.34926228932781317], "body_sim": [0.6872608967716595], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 0}, {"A_title": "Upgrade dotnet CLI version", "A_clean_title": ["upgrad", "dotnet", "cli", "version"], "B_title": "Update buildtools to 00176", "B_clean_title": ["updat", "buildtool", "00176"], "A_body": "The CLI version upgrade changes restore from using DNX to using xplat nuget. This was blocking https://github.com/dotnet/corefx/issues/5707. This change also means that the internal and open builds will use the same restore tool which will make it harder to get TFS-only errors when changing project.jsons.\n\nproject.json changes:\n- Adding win7 runtimes to the redist packages allows xplat restore. xplat RIDs would otherwise be inferred.\n- Capitalization fix for NetNative -> NETNative avoids xplat nuget race condition. (https://github.com/NuGet/Home/issues/2102)\n\n/cc @ericstj @weshaggard \n", "A_clean_body": ["cli", "version", "upgrad", "chang", "restor", "dnx", "xplat", "nuget", "thi", "wa", "block", "http", "github", "com", "dotnet", "corefx", "issu", "5707", "thi", "chang", "also", "mean", "that", "intern", "open", "build", "will", "use", "same", "restor", "tool", "which", "will", "make", "it", "harder", "get", "tf", "onli", "error", "when", "chang", "project", "json", "project", "json", "chang", "ad", "win7", "runtim", "redist", "packag", "allow", "xplat", "restor", "xplat", "rid", "ri", "ds", "would", "otherwis", "infer", "capit", "fix", "netn", "net", "nativ", "netn", "net", "nativ", "avoid", "xplat", "nuget", "race", "condit", "http", "github", "com", "nuget", "home", "issu", "2102", "nu", "get", "cc", "ericstj", "weshaggard"], "B_body": "", "B_clean_body": [], "title_sim": [-0.10207170693637743], "body_sim": [0.0], "file_list_sim": 0.06666666666666667, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.017094017094017096, 1.0], "pattern": 0, "time": 0}, {"A_title": "Allow C# 6 to be used in corefx", "A_clean_title": ["allow", "use", "corefx"], "B_title": "Using Full Framework roslyn compilers for Windows builds.", "B_clean_title": ["full", "framework", "roslyn", "compil", "window", "build"], "A_body": "- Remove constraint from dir.props\n- Augment coding guidelines\n\ncc: @weshaggard \n", "A_clean_body": ["remov", "constraint", "dir", "prop", "augment", "code", "guidelin", "cc", "weshaggard"], "B_body": "In order to be able to use C#6 features and also to ensure that we close the gap between the compilers used in x-plat and Windows, we want to enable using the roslyn compilers for our builds in Windows.\n\nIn order for this PR to be merged, we depend on dotnet/buildtools#453 to be merged first, and a new package is generated since that is the version that contains the compilers. Once that buildtools package is available, I'll update this PR to consume that new version of buildtools.\n\ncc: @weshaggard \nfyi: @agocke @jaredpar \n", "B_clean_body": ["order", "abl", "use", "featur", "also", "ensur", "that", "we", "close", "gap", "between", "compil", "use", "plat", "window", "we", "want", "enabl", "roslyn", "compil", "our", "build", "window", "order", "thi", "pr", "merg", "we", "depend", "dotnet", "buildtool", "453", "merg", "first", "new", "packag", "gener", "sinc", "that", "version", "that", "contain", "compil", "onc", "that", "buildtool", "packag", "avail", "'ll", "updat", "thi", "pr", "consum", "that", "new", "version", "buildtool", "cc", "weshaggard", "fyi", "agock", "jaredpar"], "title_sim": [-0.06680091723210524], "body_sim": [0.2602215995982115], "file_list_sim": 0.5, "overlap_files_len": 3, "code_sim": [0.0, 0.0], "location_sim": [0.3333333333333333, 0.47058823529411764], "pattern": 0, "time": 0}, {"A_title": "Manually build mscorlib shim to allow for internal type forwards & Adding TypeForwardFrom to serialiazable types", "A_clean_title": ["manual", "build", "mscorlib", "shim", "allow", "intern", "type", "forward", "ad", "typeforwardfrom", "type", "forward", "serialiaz", "type"], "B_title": "[WIP] Core Desktop Serialization Roundtrip work", "B_clean_title": ["wip", "core", "desktop", "serial", "roundtrip", "work"], "A_body": "@ViktorHofer here is the change needed to build mscorlib facade manually. You will need to give mscorlib InternalsVisibleTo in System.Private.CoreLib to type-forward the other types.\r\n\r\ncc @jkotas @danmosemsft @ericstj ", "A_clean_body": ["viktorhof", "viktor", "hofer", "here", "chang", "need", "build", "mscorlib", "facad", "manual", "you", "will", "need", "give", "mscorlib", "internalsvisibleto", "intern", "visibl", "system", "privat", "corelib", "core", "lib", "type", "forward", "other", "type", "cc", "jkota", "danmosemsft", "ericstj"], "B_body": "Stub for out serialization NetFX work - work in progress\r\n\r\nTypes with failures when deserializing netfx->core:\r\n- [ ] System.Net.CookieCollection\r\n- [ ] System.Net.CookieContainer\r\n- [ ] System.Collections.BitArray\r\n- [ ] System.Collections.ArrayList\r\n- [ ] System.Collections.Comparer\r\n- [ ] System.Collections.Queue\r\n- [ ] System.Collections.Generic.SortedDictionary\r\n- [ ] System.Collections.SortedList\r\n- [ ] System.Collections.Hashtable\r\n- [ ] System.ComponentModel.BindingList\r\n- [ ] System.Collections.Stack\r\n- [ ] System.Collections.Specialized.StringDictionary\r\n- [ ] System.Collections.Specialized.StringCollection\r\n- [ ] System.Collections.Specialized.HybridDictionary\r\n- [ ] System.Collections.ObjectModel.ObservableCollection\r\n- [ ] System.Collections.ObjectModel.ReadOnlyObservableCollection\r\n- [ ] System.Collections.ObjectModel.ReadOnlyDictionary\r\n- [ ] System.Runtime.Serialization.Formatters.Tests.SimpleKeyedCollection\r\n\r\ncc: @ViktorHofer\r\n[log.txt](https://github.com/dotnet/corefx/files/1046203/log.txt)\r\n", "B_clean_body": ["stub", "out", "serial", "netfx", "net", "fx", "work", "work", "progress", "type", "failur", "when", "deseri", "netfx", "core", "system", "net", "cookiecollect", "cooki", "collect", "system", "net", "cookiecontain", "cooki", "contain", "system", "collect", "bitarray", "bit", "array", "system", "collect", "arraylist", "array", "list", "system", "collect", "compar", "system", "collect", "queue", "system", "collect", "gener", "sorteddictionari", "sort", "dictionari", "system", "collect", "sortedlist", "sort", "list", "system", "collect", "hashtabl", "system", "componentmodel", "bindinglist", "compon", "model", "bind", "list", "system", "collect", "stack", "system", "collect", "special", "stringdictionari", "string", "dictionari", "system", "collect", "special", "stringcollect", "string", "collect", "system", "collect", "special", "hybriddictionari", "hybrid", "dictionari", "system", "collect", "objectmodel", "observablecollect", "object", "model", "observ", "collect", "system", "collect", "objectmodel", "readonlyobservablecollect", "object", "model", "read", "onli", "observ", "collect", "system", "collect", "objectmodel", "readonlydictionari", "object", "model", "read", "onli", "dictionari", "system", "runtim", "serial", "formatt", "test", "simplekeyedcollect", "simpl", "key", "collect", "cc", "viktorhof", "viktor", "hofer", "log", "txt", "http", "txt", "github", "com", "dotnet", "corefx", "file", "1046203", "log"], "title_sim": [0.27534914581018005], "body_sim": [0.8551046840316026], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 3}, {"A_title": "tests in corefx that party on corelib internals using reflection", "A_clean_title": ["test", "corefx", "that", "parti", "corelib", "intern", "reflect"], "B_title": "Update CoreClr, ProjectNTfs, Standard to beta-25123-03, beta-25123-00, beta-25123-01, respectively (master)", "B_clean_title": ["updat", "coreclr", "core", "clr", "projectntf", "project", "tf", "standard", "beta", "25123", "03", "beta", "25123", "00", "beta", "25123", "01", "respect", "master"], "A_body": "Fixes #17413 ", "A_clean_body": ["fix", "17413"], "B_body": "Fixes https://github.com/dotnet/corefx/issues/17426", "B_clean_body": ["fix", "http", "github", "com", "dotnet", "corefx", "issu", "17426"], "title_sim": [0.7655301312185733], "body_sim": [0.4049991887329317], "file_list_sim": 0.1, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.16363636363636364, 1.0], "pattern": -1, "time": 0}, {"A_title": "Merge master -> dev/api", "A_clean_title": ["merg", "master", "dev", "api"], "B_title": "Updating CoreFx dependencies to beta-devapi-24330-01", "B_clean_title": ["updat", "corefx", "core", "fx", "depend", "beta", "devapi", "24330", "01"], "A_body": "Merging master to dev/api to get the rhel package fix in order to be able to consume corefx packages.\n\nFYI: @weshaggard @maririos \n", "A_clean_body": ["merg", "master", "dev", "api", "get", "rhel", "packag", "fix", "order", "abl", "consum", "corefx", "packag", "fyi", "weshaggard", "maririo"], "B_body": "/cc @dotnet/corefx-contrib\n", "B_clean_body": ["cc", "contrib", "dotnet", "corefx"], "title_sim": [0.0], "body_sim": [0.2314781234213605], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 0}, {"A_title": "Ensure we set Configuration on P2P and traversal", "A_clean_title": ["ensur", "we", "set", "configur", "p2p", "travers"], "B_title": "Update projects to netcoreapp2.0 and netstandard2.0", "B_clean_title": ["updat", "project", "netcoreapp2", "netstandard2"], "A_body": "Similar to https://github.com/dotnet/corefx/pull/15037/commits/c572ae1d2169eccdd1827b9bdcab991a3f916d50\r\nwhich solved this problem for static evaulation, do the same\r\non traversal builds and P2P references.\r\n\r\nSubmitting for CI coverage.  @alexperovich will pick this up in his change.\r\n\r\n/cc @weshaggard @chcosta ", "A_clean_body": ["similar", "http", "github", "com", "dotnet", "corefx", "pull", "15037", "commit", "c572ae1d2169eccdd1827b9bdcab991a3f916d50", "which", "solv", "thi", "problem", "static", "evaul", "same", "travers", "build", "p2p", "refer", "submit", "ci", "coverag", "alexperovich", "will", "pick", "thi", "up", "hi", "chang", "cc", "weshaggard", "chcosta"], "B_body": "Fixes #14501 ", "B_clean_body": ["fix", "14501"], "title_sim": [0.0], "body_sim": [0.36485645962241026], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 4}, {"A_title": "Tests should be aware of the Current Culture Info", "A_clean_title": ["test", "awar", "current", "cultur", "info"], "B_title": "Fix Vector4ToStringTest to use correct variable for assertion and to wor...", "B_clean_title": ["fix", "vector4tostringtest", "vector4to", "string", "test", "use", "correct", "variabl", "assert", "wor"], "A_body": "Hello,\n\nAs i'm French, my CultureInfo.CurrentCulture is set to \"fr-FR\" while running tests.\nBut for some tests, especially for the ToString() methods, tests are write to check \"en-US\" Culture.\n", "A_clean_body": ["hello", "as", "'m", "french", "my", "cultureinfo", "currentcultur", "cultur", "info", "current", "cultur", "set", "fr", "fr", "while", "run", "test", "but", "some", "test", "especi", "tostr", "string", "method", "test", "are", "write", "check", "en", "us", "cultur"], "B_body": "...k on non en-US culture machines\n", "B_clean_body": ["non", "en", "us", "cultur", "machin"], "title_sim": [0.6729119921291435], "body_sim": [0.0], "file_list_sim": 0.14285714285714285, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.23563218390804597, 1.0], "pattern": 0, "time": 0}, {"A_title": "Allows to build Release build", "A_clean_title": ["allow", "build", "releas", "build"], "B_title": "Move src\\dirs.props properties into the root", "B_clean_title": ["move", "prop", "src", "dir", "properti", "into", "root"], "A_body": "Use: build.cmd /p:Configuration=Release\n", "A_clean_body": ["use", "build", "cmd", "configuration=releas"], "B_body": "Avoids issues where setting Configuration to anything will cause the build to fail because of checks in the Microsoft common targets.\n", "B_clean_body": ["avoid", "issu", "where", "set", "configur", "anyth", "will", "caus", "build", "fail", "becaus", "check", "microsoft", "common", "target"], "title_sim": [0.0], "body_sim": [0.3525966761943808], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1}, {"A_title": "Updating BuildTools to get new OfficialBuildId fixes", "A_clean_title": ["updat", "buildtool", "build", "tool", "get", "new", "officialbuildid", "offici", "build", "id", "fix"], "B_title": "Package baseline", "B_clean_title": ["packag", "baselin"], "A_body": "Once this is merged, OfficialBuildId will be used as BuildNumberMajor date seed if it is passed in.\n\ncc: @jhendrixMSFT @weshaggard\n", "A_clean_body": ["onc", "thi", "merg", "officialbuildid", "offici", "build", "id", "will", "use", "as", "buildnumbermajor", "build", "number", "major", "date", "seed", "it", "pass", "cc", "jhendrixmsft", "jhendrix", "msft", "weshaggard"], "B_body": "This enables the package baseline to live in the repo that builds the\npackages, avoiding a roundtrip to buildtools every time we update\npackage versions.\n\nI've updated the baseline with the latest changes to corefx package \nversions.\n\nRequires: https://github.com/dotnet/buildtools/pull/646\n", "B_clean_body": ["thi", "enabl", "packag", "baselin", "live", "repo", "that", "build", "packag", "avoid", "roundtrip", "buildtool", "everi", "time", "we", "updat", "packag", "version", "'ve", "updat", "baselin", "latest", "chang", "corefx", "packag", "version", "requir", "http", "github", "com", "dotnet", "buildtool", "pull", "646"], "title_sim": [-0.008540728844983662], "body_sim": [0.5928474398605866], "file_list_sim": 0.1, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0019743336623889436, 1.0], "pattern": 0, "time": 0}, {"A_title": "Ensure dynamic method is not inlined", "A_clean_title": ["ensur", "dynam", "method", "not", "inlin"], "B_title": "Allow default xunit parallelization for System.Net.Http.Functional.Tests", "B_clean_title": ["allow", "default", "xunit", "parallel", "system", "net", "http", "function", "test"], "A_body": "Ensure that dynamically emitted method for the load context RefEmit tests do not get inlined or optimized out.\r\n\r\nFixes issues like https://github.com/dotnet/corefx/pull/16064#issuecomment-279142715\r\n\r\nCC @stephentoub @jkotas ", "A_clean_body": ["ensur", "that", "dynam", "emit", "method", "load", "context", "refemit", "ref", "emit", "test", "not", "get", "inlin", "or", "optim", "out", "fix", "issu", "like", "http", "github", "com", "dotnet", "corefx", "pull", "16064", "issuecom", "279142715", "cc", "stephentoub", "jkota"], "B_body": "The System.Net.Http functional tests currently run serially, but the stated reasons for disabling xunit's parallelism no longer exist.  The only remaining reason I see for them to not run concurrently is that some of the tests exercise EventSources/DiagnosticSources, which affect the entire process.\n\nThis PR:\n- Makes each of those tests run in its own process, so that they don't affect and are unaffected by other tests in the same process\n- Enables the default xunit parallelism\n\nNo test logic was changed in this PR, other than moving some tests to their own file and wrapping the body of those tests with RemoveInvoke.\n\nAs a result, the innerloop execution time drops on my machine from ~60s to ~40s.  The majority of the remaining time is spent in the HttpClientHandlerTest class, and simply by splitting up that class, the execution time can easily be dropped to ~15s on a quad core, resulting in xunit's default parallelism level being 4.  (I've not done that in this PR, however.)\n\ncc: @davidsh, @cipop, @ericeil, @Priya91\n", "B_clean_body": ["system", "net", "http", "function", "test", "current", "run", "serial", "but", "state", "reason", "disabl", "xunit", "'s", "parallel", "no", "longer", "exist", "onli", "remain", "reason", "see", "them", "not", "run", "concurr", "that", "some", "test", "exercis", "eventsourc", "diagnosticsourc", "event", "sourc", "diagnost", "sourc", "which", "affect", "entir", "process", "thi", "pr", "make", "each", "those", "test", "run", "it", "own", "process", "so", "that", "they", "n't", "affect", "are", "unaffect", "by", "other", "test", "same", "process", "enabl", "default", "xunit", "parallel", "no", "test", "logic", "wa", "chang", "thi", "pr", "other", "than", "move", "some", "test", "their", "own", "file", "wrap", "bodi", "those", "test", "removeinvok", "remov", "invok", "as", "result", "innerloop", "execut", "time", "drop", "my", "machin", "~60", "~40", "major", "remain", "time", "spent", "httpclienthandlertest", "http", "client", "handler", "test", "class", "simpli", "by", "split", "up", "that", "class", "execut", "time", "easili", "drop", "~15", "quad", "core", "result", "xunit", "'s", "default", "parallel", "level", "be", "'ve", "not", "done", "that", "thi", "pr", "howev", "cc", "davidsh", "cipop", "ericeil", "priya91"], "title_sim": [0.0], "body_sim": [0.7776665306583793], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 236}, {"A_title": "Temporary removing Microsoft.VisualBasic.Tests.csproj from the tests builds", "A_clean_title": ["temporari", "remov", "microsoft", "visualbas", "test", "csproj", "visual", "basic", "test", "build"], "B_title": "Modify NetworkInformation tests to search deeper for test files.", "B_clean_title": ["modifi", "networkinform", "network", "inform", "test", "search", "deeper", "test", "file"], "A_body": "Because of Microsoft/MSBuild#137 Microsoft.VisualBasic.vbproj can't be built in Unix so it has been disabled for some time. Now we have a build break because even though the product side project build is being disabled, the test build is trying to build the project again, causing the build to fail. This change temporarily disables the VisualBasic test project from building.\n\ncc: @weshaggard @sokket \n", "A_clean_body": ["becaus", "microsoft", "msbuild", "ms", "build", "137", "microsoft", "visualbas", "vbproj", "visual", "basic", "ca", "n't", "built", "unix", "so", "it", "ha", "been", "disabl", "some", "time", "now", "we", "have", "build", "break", "becaus", "even", "though", "product", "side", "project", "build", "be", "disabl", "test", "build", "tri", "build", "project", "again", "caus", "build", "fail", "thi", "chang", "temporarili", "disabl", "visualbas", "visual", "basic", "test", "project", "build", "cc", "weshaggard", "sokket"], "B_body": "Helix builds for the Open tests for System.Net.NetworkInformation.FunctionalTests are failing because the testdata is being binplaced differently from in the open. The Helix build is placing the testdata into a \"NetworkFiles\" subdirectory like it is in the project structure, whereas it is binplaced to the dnxcore50 directory when running them normally. Rather than add complicated special-casing for Helix for this particular test project, I instead modified the only place we use that testdata to check both possible places before performing the file read.\n\n@CIPop @MattGal @joshfree @davidsh \n", "B_clean_body": ["helix", "build", "open", "test", "system", "net", "networkinform", "functionaltest", "network", "inform", "function", "test", "are", "fail", "becaus", "testdata", "be", "binplac", "differ", "open", "helix", "build", "place", "testdata", "into", "networkfil", "network", "file", "subdirectori", "like", "it", "project", "structur", "wherea", "it", "binplac", "dnxcore50", "directori", "when", "run", "them", "normal", "rather", "than", "add", "complic", "special", "case", "helix", "thi", "particular", "test", "project", "instead", "modifi", "onli", "place", "we", "use", "that", "testdata", "check", "both", "possibl", "place", "befor", "perform", "file", "read", "cipop", "ci", "pop", "mattgal", "matt", "gal", "joshfre", "davidsh"], "title_sim": [0.5340245820863158], "body_sim": [0.7122392942327621], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1}, {"A_title": "Port Microsoft.NETCore.Targets and Microsoft.NetCore.Platform packages", "A_clean_title": ["port", "microsoft", "netcor", "target", "net", "core", "microsoft", "netcor", "platform", "net", "core", "packag"], "B_title": "Net standard.library package", "B_clean_title": ["net", "standard", "librari", "packag"], "A_body": "/cc @weshaggard @ericstj\n", "A_clean_body": ["cc", "weshaggard", "ericstj"], "B_body": "Moves NETStandard.Library, MS.NETCore.Targets, and MS.NETCore.Platforms to corefx.\n\nFixes https://github.com/dotnet/corefx/issues/6561\n", "B_clean_body": ["move", "netstandard", "librari", "net", "standard", "ms", "netcor", "target", "net", "core", "ms", "netcor", "platform", "net", "core", "corefx", "fix", "http", "github", "com", "dotnet", "corefx", "issu", "6561"], "title_sim": [0.9737031857222082], "body_sim": [0.593572848019513], "file_list_sim": 0.7, "overlap_files_len": 7, "code_sim": [0.0, 0.0], "location_sim": [0.900990099009901, 1.0], "pattern": 0, "time": 1}, {"A_title": "Revert CodeNamespaceImportCollection to using ArrayList", "A_clean_title": ["revert", "codenamespaceimportcollect", "code", "namespac", "import", "collect", "arraylist", "array", "list"], "B_title": "System.CodeDom.Tests fix for desktop", "B_clean_title": ["system", "codedom", "test", "code", "dom", "fix", "desktop"], "A_body": "When I brought CodeDom to corefx, in response to PR feedback I changed CodeNamespaceImportCollection's storage from using an ArrayList to using a List.  But this breaks behavioral compatibility on CopyTo for exceptional cases, so I'm changing it back.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/17130\r\ncc: @safern, @tarekgh ", "A_clean_body": ["when", "brought", "codedom", "code", "dom", "corefx", "respons", "pr", "feedback", "chang", "codenamespaceimportcollect", "code", "namespac", "import", "collect", "'s", "storag", "arraylist", "array", "list", "list", "but", "thi", "break", "behavior", "compat", "copyto", "copi", "except", "case", "so", "'m", "chang", "it", "back", "fix", "http", "github", "com", "dotnet", "corefx", "issu", "17130", "cc", "safern", "tarekgh"], "B_body": "As stated in issue #17130 there is a difference in behavior in `CodeNamespaceImportCollection` in desktop vs Core. \r\n\r\nThis fixes the tests in System.CodeDom to test as expected in desktop an core considering those differences. \r\n\r\ncc: @tarekgh @danmosemsft @stephentoub ", "B_clean_body": ["as", "state", "issu", "17130", "there", "differ", "behavior", "codenamespaceimportcollect", "code", "namespac", "import", "collect", "desktop", "vs", "core", "thi", "fix", "test", "system", "codedom", "code", "dom", "test", "as", "expect", "desktop", "core", "consid", "those", "differ", "cc", "tarekgh", "danmosemsft", "stephentoub"], "title_sim": [0.6024893759188197], "body_sim": [0.9782675793522183], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 1, "time": 0}, {"A_title": "Avoid char buffer allocations in System.IO.Compression", "A_clean_title": ["avoid", "char", "buffer", "alloc", "system", "io", "compress"], "B_title": "ZipFile: Reduce string allocations", "B_clean_title": ["zipfil", "zip", "file", "reduc", "string", "alloc"], "A_body": "These changes avoid creating an intermediate `char[]` buffer when creating a string.\n", "A_clean_body": ["these", "chang", "avoid", "creat", "intermedi", "char", "buffer", "when", "creat", "string"], "B_body": "When creating entry names, reuse a single `char[]` buffer across all entries to avoid intermediary `char[]` array allocations for each entry. Append the `PathSeparator` (if necessary) as part of this operation to avoid additional string concatenation allocations.\n", "B_clean_body": ["when", "creat", "entri", "name", "reus", "singl", "char", "buffer", "across", "all", "entri", "avoid", "intermediari", "char", "array", "alloc", "each", "entri", "append", "pathsepar", "path", "separ", "necessari", "as", "part", "thi", "oper", "avoid", "addit", "string", "concaten", "alloc"], "title_sim": [0.6188569298133798], "body_sim": [0.8925532865102681], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2}, {"A_title": "Test for issue 4150.", "A_clean_title": ["test", "issu", "4150"], "B_title": "Fix for MethodCallExpression write-back behavior in the interpreter", "B_clean_title": ["fix", "methodcallexpress", "method", "call", "express", "write", "back", "behavior", "interpret"], "A_body": "Tests #4150 including both compilation (works) and interpreter (currently fails so marked as `ActiveIssue`).\n", "A_clean_body": ["test", "4150", "includ", "both", "compil", "work", "interpret", "current", "fail", "so", "mark", "as", "activeissu", "activ", "issu"], "B_body": "Repro to isolate the reported behavior to the interpreter. The compiler seems to be fine:\n\n``` csharp\nvar asm = AppDomain.CurrentDomain.DefineDynamicAssembly(new AssemblyName(\"bar\"), System.Reflection.Emit.AssemblyBuilderAccess.Save);\nvar mod = asm.DefineDynamicModule(\"bar.dll\");\nvar typ = mod.DefineType(\"Foo\");\nvar mtd = typ.DefineMethod(\"Qux\", MethodAttributes.Public | MethodAttributes.Static, typeof(void), new[] { typeof(Bar) });\n\nvar b = Expression.Parameter(typeof(Bar));\nvar f = Expression.PropertyOrField(b, \"F\");\nExpression.Lambda<Action<Bar>>(Expression.Block(typeof(void), Expression.Invoke(f)), b).CompileToMethod(mtd);\n\ntyp.CreateType();\n\nasm.Save(\"bar.dll\");\n```\n\nwith\n\n``` csharp\nclass Bar\n{\n    public Func<int> F = () => 0;\n}\n```\n\nproduces\n\n```\n.method public static \n    void Qux (\n        class [ConsoleApplication20]Bar ''\n    ) cil managed \n{\n    // Method begins at RVA 0x2050\n    // Code size 13 (0xd)\n    .maxstack 1\n\n    IL_0000: ldarg.0\n    IL_0001: ldfld class [mscorlib]System.Func`1<int32> [ConsoleApplication20]Bar::F\n    IL_0006: callvirt instance !0 class [mscorlib]System.Func`1<int32>::Invoke()\n    IL_000b: pop\n    IL_000c: ret\n} // end of method Foo::Qux\n```\n\nwith no write-back into the instance of the invocation.\n", "B_clean_body": ["repro", "isol", "report", "behavior", "interpret", "compil", "seem", "fine", "csharp", "var", "asm", "appdomain", "currentdomain", "definedynamicassembl", "app", "domain", "current", "domain", "defin", "dynam", "assembl", "new", "assemblynam", "assembl", "name", "bar", "system", "reflect", "emit", "assemblybuilderaccess", "save", "assembl", "builder", "access", "var", "mod", "asm", "definedynamicmodul", "defin", "dynam", "modul", "bar", "dll", "var", "typ", "mod", "definetyp", "defin", "type", "foo", "var", "mtd", "typ", "definemethod", "defin", "method", "qux", "methodattribut", "public", "method", "attribut", "methodattribut", "static", "method", "attribut", "typeof", "void", "new", "typeof", "bar", "var", "express", "paramet", "typeof", "bar", "var", "express", "propertyorfield", "properti", "or", "field", "express", "lambda", "action", "bar", "express", "block", "typeof", "void", "express", "invok", "compiletomethod", "compil", "method", "mtd", "typ", "createtyp", "creat", "type", "asm", "save", "bar", "dll", "csharp", "class", "bar", "public", "func", "int", "produc", "method", "public", "static", "void", "qux", "class", "consoleapplication20", "consol", "application20", "bar", "cil", "manag", "method", "begin", "at", "rva", "0x2050", "code", "size", "13", "0xd", "maxstack", "il", "0000", "ldarg", "il", "0001", "ldfld", "class", "mscorlib", "system", "func", "int32", "consoleapplication20", "consol", "application20", "bar", ":f", "il", "0006", "callvirt", "instanc", "class", "mscorlib", "system", "func", "int32", ":invok", "il", "000b", "pop", "il", "000c", "ret", "end", "method", "foo", ":qux", "no", "write", "back", "into", "instanc", "invoc"], "title_sim": [0.7206241570582281], "body_sim": [0.4214752316323405], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.6951470518081674, 0.9726896714590866], "location_sim": [0.39933993399339934, 0.952755905511811], "pattern": 0, "time": 0}, {"A_title": "Add missing System.Runtime tests", "A_clean_title": ["add", "miss", "system", "runtim", "test"], "B_title": "Cleanup Array tests", "B_clean_title": ["cleanup", "array", "test"], "A_body": "Porting missing tests that are present in SystemRuntimeBringup internally.\n", "A_clean_body": ["port", "miss", "test", "that", "are", "present", "systemruntimebringup", "system", "runtim", "bringup", "intern"], "B_body": "The Array.\\* test files were removed because their functionality was\nduplicated in Array.cs or I added tests that did the same thing in a\nbetter way in Array.\n\nThis was not done to combine test files into a single class.\n\nIncreases coverage to over 90%\n", "B_clean_body": ["array", "test", "file", "were", "remov", "becaus", "their", "function", "wa", "duplic", "array", "cs", "or", "ad", "test", "that", "did", "same", "thing", "better", "way", "array", "thi", "wa", "not", "done", "combin", "test", "file", "into", "singl", "class", "increas", "coverag", "over", "90"], "title_sim": [0.22879177087203317], "body_sim": [0.9477352405932812], "file_list_sim": 0.1, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 44}, {"A_title": "Improve CI: disable socket eventarg test", "A_clean_title": ["improv", "ci", "disabl", "socket", "eventarg", "test"], "B_title": "Disable CancelConnectAsync_InstanceConnect_CancelsInProgressConnect test", "B_clean_title": ["disabl", "cancelconnectasync", "instanceconnect", "cancelsinprogressconnect", "cancel", "connect", "async", "instanc", "connect", "cancel", "progress", "connect", "test"], "A_body": "Disabling new test CancelConnectAsync_InstanceConnect_CancelsInProgressConnect since it is failing in CI\r\n\r\nApplies to issue https://github.com/dotnet/corefx/issues/16765", "A_clean_body": ["disabl", "new", "test", "cancelconnectasync", "instanceconnect", "cancelsinprogressconnect", "cancel", "connect", "async", "instanc", "connect", "cancel", "progress", "connect", "sinc", "it", "fail", "ci", "appli", "issu", "http", "github", "com", "dotnet", "corefx", "issu", "16765"], "B_body": "It appears to be suffering the same random failures as its static counterpart, which was disabled yesterday.", "B_clean_body": ["it", "appear", "suffer", "same", "random", "failur", "as", "it", "static", "counterpart", "which", "wa", "disabl", "yesterday"], "title_sim": [-0.02354046632211549], "body_sim": [0.6363645015657466], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 0}, {"A_title": "Revert \"Add FormatterServices.GetUninitializedObject, partial for #8133\"", "A_clean_title": ["revert", "add", "formatterservic", "getuninitializedobject", "formatt", "servic", "get", "uniniti", "object", "partial", "8133"], "B_title": "Remove FormatterServices from System.Runtime contract", "B_clean_title": ["remov", "formatterservic", "formatt", "servic", "system", "runtim", "contract"], "A_body": "Reverts dotnet/corefx#8570 per discussion with @weshaggard \n", "A_clean_body": ["revert", "dotnet", "corefx", "8570", "per", "discuss", "weshaggard"], "B_body": "", "B_clean_body": [], "title_sim": [0.2663174832568656], "body_sim": [0.0], "file_list_sim": 1.0, "overlap_files_len": 3, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 0}, {"A_title": "Add tests for new String.Join overloads ", "A_clean_title": ["add", "test", "new", "string", "join", "overload"], "B_title": "[WIP] Expose string.Join APIs in System.Runtime", "B_clean_title": ["wip", "expos", "string", "join", "api", "ap", "system", "runtim"], "A_body": "Close #5552", "A_clean_body": ["close", "5552"], "B_body": "**Description:** This PR exposes and adds tests for `string.Join` overloads accepting a char in System.Runtime.\r\n\r\n**Notes:** I'm very hopeful that this will build, but unable to test or even compile this locally because I'm consistently running into an issue: https://github.com/dotnet/corefx/issues/14423. So I will try to inspect any errors raised by CI and hopefully fix them, and then un-WIP this.\r\n\r\n**Fixes:** #12655, #5552", "B_clean_body": ["**descript", "thi", "pr", "expos", "add", "test", "string", "join", "overload", "accept", "char", "system", "runtim", "**note", "'m", "veri", "hope", "that", "thi", "will", "build", "but", "unabl", "test", "or", "even", "compil", "thi", "local", "becaus", "'m", "consist", "run", "into", "issu", "http", "github", "com", "dotnet", "corefx", "issu", "14423", "so", "will", "tri", "inspect", "ani", "error", "rais", "by", "ci", "hope", "fix", "them", "then", "un", "wip", "thi", "**fix", "12655", "5552"], "title_sim": [-0.004159654026055848], "body_sim": [0.0], "file_list_sim": 1.0, "overlap_files_len": 2, "code_sim": [0.468292905790847, 0.468292905790847], "location_sim": [0.8921161825726142, 0.8921161825726142], "pattern": 1, "time": 0}, {"A_title": "Refactor memory mapped files with PAL", "A_clean_title": ["refactor", "memori", "map", "file", "pal"], "B_title": "Make fields readonly in System.IO.MemoryMappedFiles", "B_clean_title": ["make", "field", "readonli", "system", "io", "memorymappedfil", "memori", "map", "file"], "A_body": "Moved all Windows code to Windows-specific files, and added corresponding Unix stubbed out methods to match.\n", "A_clean_body": ["move", "all", "window", "code", "window", "specif", "file", "ad", "correspond", "unix", "stub", "out", "method", "match"], "B_body": "", "B_clean_body": [], "title_sim": [0.0], "body_sim": [0.0], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 0}, {"A_title": "Enabling cross building of native corefx for Ubuntu 14.04 ARM target", "A_clean_title": ["enabl", "cross", "build", "nativ", "corefx", "ubuntu", "14", "04", "arm", "target"], "B_title": "Cross-compilation support for native code", "B_clean_title": ["cross", "compil", "support", "nativ", "code"], "A_body": "ARM: Using the cross build process of coreclr, enable cross building\nof native corefx components for Ubuntu 14.04 ARM target.\n(e.g. u14.04$> ROOTFS_DIR=/work/dotnet/rootfs-corefx/arm \\\n        ./build.sh native arm clean cross )\n\nSigned-off-by: MyungJoo Ham myungjoo.ham@samsung.com\nSigned-off-by: Geunsik Lim geunsik.lim@samsung.com\nSigned-off-by: Prajwal A N an.prajwal@samsung.com\n", "A_clean_body": ["arm", "cross", "build", "process", "coreclr", "enabl", "cross", "build", "nativ", "corefx", "compon", "ubuntu", "14", "04", "arm", "target", "u14", "04", "rootf", "corefx", "arm", "dir=", "work", "dotnet", "rootf", "sh", "build", "nativ", "arm", "clean", "cross", "sign", "off", "by", "myungjoo", "myung", "joo", "ham", "myungjoo", "ham", "samsung", "com", "sign", "off", "by", "geunsik", "lim", "geunsik", "lim", "samsung", "com", "sign", "off", "by", "prajwal", "prajwal", "samsung", "com"], "B_body": "Add support for compiling the native code via cross compilation. \n\nIt uses almost the same setup as CoreCLR/CoreRT.\n", "B_clean_body": ["add", "support", "compil", "nativ", "code", "via", "cross", "compil", "it", "use", "almost", "same", "setup", "as", "coreclr", "corert", "core", "clr", "core", "rt"], "title_sim": [-0.029818666803107238], "body_sim": [0.3762158432160214], "file_list_sim": 0.9, "overlap_files_len": 9, "code_sim": [0.8164965809277261, 0.8164965809277261], "location_sim": [0.9316455696202531, 0.942381562099872], "pattern": 0, "time": 12}, {"A_title": "Disable two System.Net.Security tests on desktop", "A_clean_title": ["disabl", "two", "system", "net", "secur", "test", "desktop"], "B_title": "Disable failed tests for 9 issues.", "B_clean_title": ["disabl", "fail", "test", "issu"], "A_body": "These tests are .NET Core-specific, as they're verifying that protocols that have been explicitly made unsupported for security reasons fail appropriately, but they're still supported on desktop.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/19456\r\nFixes https://github.com/dotnet/corefx/issues/19458\r\ncc: @cipop, @davidsh, @safern", "A_clean_body": ["these", "test", "are", "net", "core", "specif", "as", "they", "'re", "verifi", "that", "protocol", "that", "have", "been", "explicitli", "made", "unsupport", "secur", "reason", "fail", "appropri", "but", "they", "'re", "still", "support", "desktop", "fix", "http", "github", "com", "dotnet", "corefx", "issu", "19456", "fix", "http", "github", "com", "dotnet", "corefx", "issu", "19458", "cc", "cipop", "davidsh", "safern"], "B_body": "Disabled following issues:\r\n#19462 \r\n#19458 \r\n#19456 \r\n#19455 \r\n#18806 \r\n#19384 \r\n#19383 \r\n#19286 \r\n#19179 \r\n\r\ncc: @danmosemsft @safern ", "B_clean_body": ["disabl", "follow", "issu", "19462", "19458", "19456", "19455", "18806", "19384", "19383", "19286", "19179", "cc", "danmosemsft", "safern"], "title_sim": [0.8581070474961411], "body_sim": [0.7659493885297651], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 1, "time": 0}, {"A_title": "Update S.R.InteropServices to ns2.0", "A_clean_title": ["updat", "interopservic", "interop", "servic", "ns2"], "B_title": "Port Misc InteropServices APIs", "B_clean_title": ["port", "misc", "interopservic", "interop", "servic", "api", "ap"], "A_body": "ref #12162 \nThis change updates S.R.InteropServices with all netstandard2.0 types that didn't require code changes in coreclr.\n", "A_clean_body": ["ref", "12162", "thi", "chang", "updat", "interopservic", "interop", "servic", "all", "netstandard2", "type", "that", "did", "n't", "requir", "code", "chang", "coreclr"], "B_body": "Port  the following miscellenous InteropServices API Changes:\n\nM:System.Runtime.InteropServices.COMException.ToString\nM:System.Runtime.InteropServices.CriticalHandle.Close\nM:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr\nM:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)\n", "B_clean_body": ["port", "follow", "miscellen", "interopservic", "interop", "servic", "api", "chang", "system", "runtim", "interopservic", "comexcept", "tostr", "interop", "servic", "com", "except", "string", "system", "runtim", "interopservic", "criticalhandl", "close", "interop", "servic", "critic", "handl", "system", "runtim", "interopservic", "handleref", "interop", "servic", "handl", "ref", "op", "explicit", "system", "runtim", "interopservic", "handleref", "interop", "servic", "handl", "ref", "~system", "intptr", "int", "ptr", "system", "runtim", "interopservic", "handleref", "tointptr", "interop", "servic", "handl", "ref", "int", "ptr", "system", "runtim", "interopservic", "handleref", "interop", "servic", "handl", "ref"], "title_sim": [0.5092865681088155], "body_sim": [0.4810308352680353], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 0}, {"A_title": "Update BuildTools.TestSuite and Xunit.Console.NetCore runner", "A_clean_title": ["updat", "buildtool", "testsuit", "build", "tool", "test", "suit", "xunit", "consol", "netcor", "net", "core", "runner"], "B_title": "Update BuildTools version to 1.0.26-prerelease-00518-01", "B_clean_title": ["updat", "buildtool", "build", "tool", "version", "prereleas", "00518", "01", "26"], "A_body": "Update references to Microsoft.DotNet.BuildTools.TestSuite to a version that understands uap10.0, add version validation rule for same.\n\nUpdate reference to Xunit.Console.Netcore to pick up new version which does not throw if Console Color APIs do.\n\n@ericstj  \n", "A_clean_body": ["updat", "refer", "microsoft", "dotnet", "buildtool", "testsuit", "dot", "net", "build", "tool", "test", "suit", "version", "that", "understand", "uap10", "add", "version", "valid", "rule", "same", "updat", "refer", "xunit", "consol", "netcor", "pick", "up", "new", "version", "which", "not", "throw", "consol", "color", "api", "ap", "ericstj"], "B_body": "Update BuildTools version to 1.0.26-prerelease-00518-01\n", "B_clean_body": ["updat", "buildtool", "build", "tool", "version", "prereleas", "00518", "01", "26"], "title_sim": [0.8818881693151542], "body_sim": [0.7686869768116545], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 0}, {"A_title": "Use optimized N-ary BlockExpression nodes from all Block factories", "A_clean_title": ["use", "optim", "ari", "blockexpress", "block", "express", "node", "all", "block", "factori"], "B_title": "Use BlockExpression subclasses more widely.", "B_clean_title": ["use", "blockexpress", "block", "express", "subclass", "more", "wide"], "A_body": "This addresses issue #3297 by using Block2-Block5 types when applicable, regardless of the factory method used to create the BlockExpression.\n", "A_clean_body": ["thi", "address", "issu", "3297", "by", "block2", "block5", "type", "when", "applic", "regardless", "factori", "method", "use", "creat", "blockexpress", "block", "express"], "B_body": "BlockExpression has several subclasses that cover various numbers of sub-\nexpressions when the type is the same as the last expression, and there are\nno variables. These are only used in one or two of the possible paths under\nwhich they make sense. Use them more widely.\n", "B_clean_body": ["blockexpress", "block", "express", "ha", "sever", "subclass", "that", "cover", "variou", "number", "sub", "express", "when", "type", "same", "as", "last", "express", "there", "are", "no", "variabl", "these", "are", "onli", "use", "one", "or", "two", "possibl", "path", "under", "which", "they", "make", "sens", "use", "them", "more", "wide"], "title_sim": [1.0], "body_sim": [0.9301378038516209], "file_list_sim": 0.4, "overlap_files_len": 2, "code_sim": [0.8899291640186475, 0.994355469588127], "location_sim": [0.11578947368421053, 0.5116279069767442], "pattern": 0, "time": 35}, {"A_title": "Update buildtools to 1.0.25-prerelease-00148", "A_clean_title": ["updat", "buildtool", "prereleas", "00148", "25"], "B_title": "Update buildtools to pick up newer code coverage tools", "B_clean_title": ["updat", "buildtool", "pick", "up", "newer", "code", "coverag", "tool"], "A_body": "This contains an update to the NuGet binaries that \nallow us to use the latest TFM:generation mappings.\nSpecifically dotnet5.6.\n", "A_clean_body": ["thi", "contain", "updat", "nuget", "nu", "get", "binari", "that", "allow", "us", "use", "latest", "tfm", "gener", "map", "specif", "dotnet5"], "B_body": "cc: @weshaggard, @mmitche \n", "B_clean_body": ["cc", "weshaggard", "mmitch"], "title_sim": [0.9854459516231356], "body_sim": [0.025778627497624912], "file_list_sim": 1.0, "overlap_files_len": 2, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 0}, {"A_title": "Remove workarounds for System.Private.Xml and S.P.Xml.Linq", "A_clean_title": ["remov", "workaround", "system", "privat", "xml", "xml", "linq"], "B_title": "Update core fx dependencies and remove System.Private.Xml workaround", "B_clean_title": ["updat", "core", "fx", "depend", "remov", "system", "privat", "xml", "workaround"], "A_body": "", "A_clean_body": [], "B_body": "fixes: #10687 \nreplaces: #10704 \n\nFYI: @krwq @weshaggard \n", "B_clean_body": ["fix", "10687", "replac", "10704", "fyi", "krwq", "weshaggard"], "title_sim": [0.0], "body_sim": [0.0], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 0}, {"A_title": "Updating CoreFx dependencies to rc4-24203-07", "A_clean_title": ["updat", "corefx", "core", "fx", "depend", "rc4", "24203", "07"], "B_title": "Update CoreFx dependencies to build rc4-24203-07", "B_clean_title": ["updat", "corefx", "core", "fx", "depend", "build", "rc4", "24203", "07"], "A_body": "/cc @dotnet/corefx-contrib\n", "A_clean_body": ["cc", "contrib", "dotnet", "corefx"], "B_body": "Remove System.IO.Compression and System.Data.SqlClient from the External dependencies\n\ncc @stephentoub \n\nThis PR should be preferred over the automatic one getting ready to be submitted for this build, as it fixes the external dependencies that should be corefx now instead of external. @jhendrix.\n", "B_clean_body": ["remov", "system", "io", "compress", "system", "data", "sqlclient", "sql", "client", "extern", "depend", "cc", "stephentoub", "thi", "pr", "prefer", "over", "automat", "one", "get", "readi", "submit", "thi", "build", "as", "it", "fix", "extern", "depend", "that", "corefx", "now", "instead", "extern", "jhendrix"], "title_sim": [0.9331159471464557], "body_sim": [0.26378953408267974], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 1, "time": 0}, {"A_title": "Updating External dependencies to rc3-21210-00", "A_clean_title": ["updat", "extern", "depend", "rc3", "21210", "00"], "B_title": "Updating External dependencies to rc3-24209-02", "B_clean_title": ["updat", "extern", "depend", "rc3", "24209", "02"], "A_body": "", "A_clean_body": [], "B_body": "Update to new TFS package drop manually because the auto-PR failed: https://devdiv.visualstudio.com/DevDiv/_build?_a=summary&buildId=206705 (due to https://github.com/dotnet/versions/issues/24)\n", "B_clean_body": ["updat", "new", "tf", "packag", "drop", "manual", "becaus", "auto", "pr", "fail", "http", "visualstudio", "devdiv", "build", "com", "devdiv", "dev", "div", "a=summari", "buildid=206705", "build", "id=206705", "due", "http", "github", "com", "dotnet", "version", "issu", "24"], "title_sim": [1.0000000000000002], "body_sim": [0.0], "file_list_sim": 1.0, "overlap_files_len": 29, "code_sim": [0.0, 0.0], "location_sim": [1.0, 1.0], "pattern": 0, "time": 0}]