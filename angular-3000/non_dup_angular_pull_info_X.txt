[{"A_title": "chore(*): update all Karma-related packages except Karma", "A_clean_title": ["chore", "updat", "all", "karma", "relat", "packag", "except", "karma"], "B_title": "docs($filter): add link to built-in filters page", "B_clean_title": ["doc", "filter", "add", "link", "built", "filter", "page"], "A_body": "The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["updat", "karma", "chrome", "launcher", "add", "support", "chromeheadless", "chrome", "headless", "chromecanaryheadless", "chrome", "canari", "headless", "launcher", "test", "karma", "start", "karma", "jqlite", "conf", "js", "browsers=chromecanaryheadless", "browsers=chrom", "canari", "headless", "updat", "karma", "firefox", "launcher", "disabl", "multi", "process", "which", "may", "increas", "stabil", "jenkin", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "tired to seek page with built-in filters every time I go to filters\n", "B_clean_body": ["tire", "seek", "page", "built", "filter", "everi", "time", "go", "filter"], "title_sim": [0.09978979125753114], "body_sim": [0.00502135607612082], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 280}, {"A_title": "docs(CONTRIBUTING.md): Updated commit types.", "A_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "B_title": "refactor($sniffer): make $sniffer service private", "B_clean_title": ["refactor", "sniffer", "make", "sniffer", "servic", "privat"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "B_body": "This service has been accidentaly documented in the past, it should not be considered\nto be public api.\n\nI'm also removing fallback to Modernizr since we don't need it.\n\nBreaks any app that depends on this service and its fallback to Modernizr, please\nmigrate to custom \"Modernizr\" service:\n\n```\nmodule.value('Modernizr', function() { return Modernizr; });\n```\n", "B_clean_body": ["thi", "servic", "ha", "been", "accidentali", "document", "past", "it", "not", "consid", "public", "api", "'m", "also", "remov", "fallback", "modernizr", "sinc", "we", "n't", "need", "it", "break", "ani", "app", "that", "depend", "thi", "servic", "it", "fallback", "modernizr", "pleas", "migrat", "custom", "modernizr", "servic", "modul", "valu", "'modernizr", "function", "return", "modernizr"], "title_sim": [0.005492850637433907], "body_sim": [0.19937414400955755], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1679}, {"A_title": "docs(guide/Unit Testing): Changed $scope = {} to $scope = $rootScope.\u2026", "A_clean_title": ["doc", "guid", "unit", "test", "chang", "scope", "scope", "rootscop", "root", "scope"], "B_title": "fix(ngMessages): create new scope for ngMessage, clean it up correctly", "B_clean_title": ["fix", "ngmessag", "ng", "messag", "creat", "new", "scope", "ngmessag", "ng", "messag", "clean", "it", "up", "correctli"], "A_body": "\u2026$new()\r\n\r\n{} will just create an empty object. This will break if the module uses for example $watch or others.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["new", "will", "just", "creat", "empti", "object", "thi", "will", "break", "modul", "use", "exampl", "watch", "or", "other", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n#14307\n\n**What is the new behavior (if this is a feature change)?**\nngMessage creates a child scope instead of reusing the ngMessages scope.\n\n**Does this PR introduce a breaking change?**\nPossibly. Needs investigation.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nPreviously, ngMessage elements used the same scope as ngMessages. When ngMessage\nhas interpolation in the textContent, then removing the message would not remove\nthe watcher from the scope - it would only be removed when the whole ngMessages\nelement was removed.\n\nThis commit changes the ngMessage transclude function to create a new child scope\ninstead, which can be destroyed safely when the message element is removed and\nthe message is detached\n\nFixes #14307\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "14307", "**what", "new", "behavior", "thi", "featur", "chang", "ngmessag", "ng", "messag", "creat", "child", "scope", "instead", "reus", "ngmessag", "ng", "messag", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "need", "investig", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "previous", "ngmessag", "ng", "messag", "element", "use", "same", "scope", "as", "ngmessag", "ng", "messag", "when", "ngmessag", "ng", "messag", "ha", "interpol", "textcont", "text", "content", "then", "remov", "messag", "would", "not", "remov", "watcher", "scope", "it", "would", "onli", "remov", "when", "whole", "ngmessag", "ng", "messag", "element", "wa", "remov", "thi", "commit", "chang", "ngmessag", "ng", "messag", "transclud", "function", "creat", "new", "child", "scope", "instead", "which", "destroy", "safe", "when", "messag", "element", "remov", "messag", "detach", "fix", "14307"], "title_sim": [0.3161942560555554], "body_sim": [0.8345146095062987], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 588}, {"A_title": "feat($location): allow automatic rewriting of links to be disabled", "A_clean_title": ["feat", "locat", "allow", "automat", "rewrit", "link", "disabl"], "B_title": "fix(select): don't register options when select has no ngModel", "B_clean_title": ["fix", "select", "n't", "regist", "option", "when", "select", "ha", "no", "ngmodel", "ng", "model"], "A_body": "Currently, when the location provider is set to html5 mode, all links\non the page are hijacked and automatically rewritten. While this may be\ndesirable behavior in some cases (such as using ngRoute), not all cases\nwhere html5 mode are enabled imply the desire for this behavior.\n\nOne example would be an application using the\n[ui-router](https://github.com/angular-ui/ui-router) library, with some\npages that exist outside of angular. Links that are meant to go through\nthe router use the `ui-sref` directive, so the rewrite behavior is\nunnecessary.\n\nCloses #5487\n", "A_clean_body": ["current", "when", "locat", "provid", "set", "html5", "mode", "all", "link", "page", "are", "hijack", "automat", "rewritten", "while", "thi", "may", "desir", "behavior", "some", "case", "such", "as", "ngrout", "ng", "rout", "not", "all", "case", "where", "html5", "mode", "are", "enabl", "impli", "desir", "thi", "behavior", "one", "exampl", "would", "applic", "ui", "router", "http", "router", "ui", "ui", "github", "com", "angular", "librari", "some", "page", "that", "exist", "outsid", "angular", "link", "that", "are", "meant", "go", "through", "router", "use", "ui", "sref", "direct", "so", "rewrit", "behavior", "unnecessari", "close", "5487"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nOptions are added even if select has no ngModel. ngValue replaces the value attribute of the element with a hashed value, and this might break tests (it does in angular material)\n\n**What is the new behavior (if this is a feature change)?**\nOptions are not added to select\n\n**Does this PR introduce a breaking change?**\n?\nI can't think of a valid use case where you'd want registerning options without ngModel integration. If you don't have model binding, then you don't need to store the options internally. You can actually use ngOptions without ngModel to render a list of options - but you don't need to register the options for that.\n\nThe registerOption function is also not documented, so this is an implementation detail from the perspective of the user\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nWhen option elements use ngValue, value or interpolated text simply to set\nthe option value, i.e. when the parent select doesn't have an ngModel,\nthere is no necessity in registering the options with the select controller.\nThis was previously no problem, as the ngModelController is set to a noop controller,\nso that all further interactions are aborted ($render etc)\n\nHowever, ngValue sets a hashed value inside the option value (to support arbitrary object types).\nThis can cause issues with tests that expect unhashed values.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "option", "are", "ad", "even", "select", "ha", "no", "ngmodel", "ng", "model", "ngvalu", "ng", "valu", "replac", "valu", "attribut", "element", "hash", "valu", "thi", "might", "break", "test", "it", "angular", "materi", "**what", "new", "behavior", "thi", "featur", "chang", "option", "are", "not", "ad", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ca", "n't", "think", "valid", "use", "case", "where", "you", "'d", "want", "registern", "option", "without", "ngmodel", "ng", "model", "integr", "you", "n't", "have", "model", "bind", "then", "you", "n't", "need", "store", "option", "intern", "you", "actual", "use", "ngoption", "ng", "option", "without", "ngmodel", "ng", "model", "render", "list", "option", "but", "you", "n't", "need", "regist", "option", "that", "registeropt", "regist", "option", "function", "also", "not", "document", "so", "thi", "implement", "detail", "perspect", "user", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "when", "option", "element", "use", "ngvalu", "ng", "valu", "valu", "or", "interpol", "text", "simpli", "set", "option", "valu", "when", "parent", "select", "n't", "have", "ngmodel", "ng", "model", "there", "no", "necess", "regist", "option", "select", "control", "thi", "wa", "previous", "no", "problem", "as", "ngmodelcontrol", "ng", "model", "control", "set", "noop", "control", "so", "that", "all", "further", "interact", "are", "abort", "render", "etc", "howev", "ngvalu", "ng", "valu", "set", "hash", "valu", "insid", "option", "valu", "support", "arbitrari", "object", "type", "thi", "caus", "issu", "test", "that", "expect", "unhash", "valu"], "title_sim": [0.05641165497765145], "body_sim": [0.3062290456151798], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.004190484118608891, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 636}, {"A_title": "docs($resourceProvider): Correct JS syntax error", "A_clean_title": ["doc", "resourceprovid", "resourc", "provid", "correct", "js", "syntax", "error"], "B_title": "Revert \"fix($parse): standardize one-time literal vs non-literal and interceptors\"", "B_clean_title": ["revert", "fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nExample code has a syntax error\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nExample code no longer has a syntax error\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "code", "ha", "syntax", "error", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "code", "no", "longer", "ha", "syntax", "error", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Reverts 60394a9d91dad8932fa900af7c8529837f1d4557 to fix #15905 in 1.6. Currently plan is to NOT revert in 1.7.\r\n\r\nFixes #15905 ", "B_clean_body": ["revert", "60394a9d91dad8932fa900af7c8529837f1d4557", "fix", "15905", "current", "plan", "not", "revert", "fix", "15905"], "title_sim": [-0.013808755346205664], "body_sim": [0.24538612557462844], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 181}, {"A_title": "feat($location): allow automatic rewriting of links to be disabled", "A_clean_title": ["feat", "locat", "allow", "automat", "rewrit", "link", "disabl"], "B_title": "docs(CONTRIBUTING.md): add note about scope wildcard", "B_clean_title": ["doc", "contribut", "md", "add", "note", "about", "scope", "wildcard"], "A_body": "Currently, when the location provider is set to html5 mode, all links\non the page are hijacked and automatically rewritten. While this may be\ndesirable behavior in some cases (such as using ngRoute), not all cases\nwhere html5 mode are enabled imply the desire for this behavior.\n\nOne example would be an application using the\n[ui-router](https://github.com/angular-ui/ui-router) library, with some\npages that exist outside of angular. Links that are meant to go through\nthe router use the `ui-sref` directive, so the rewrite behavior is\nunnecessary.\n\nCloses #5487\n", "A_clean_body": ["current", "when", "locat", "provid", "set", "html5", "mode", "all", "link", "page", "are", "hijack", "automat", "rewritten", "while", "thi", "may", "desir", "behavior", "some", "case", "such", "as", "ngrout", "ng", "rout", "not", "all", "case", "where", "html5", "mode", "are", "enabl", "impli", "desir", "thi", "behavior", "one", "exampl", "would", "applic", "ui", "router", "http", "router", "ui", "ui", "github", "com", "angular", "librari", "some", "page", "that", "exist", "outsid", "angular", "link", "that", "are", "meant", "go", "through", "router", "use", "ui", "sref", "direct", "so", "rewrit", "behavior", "unnecessari", "close", "5487"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nno hint that `*` is a valid scope -- it hints you could omit the `(...)` bit, but most commits of late don't\n\n**What is the new behavior (if this is a feature change)?**\n\ndocumentation of `*`\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "hint", "that", "valid", "scope", "it", "hint", "you", "could", "omit", "bit", "but", "most", "commit", "late", "don't", "**what", "new", "behavior", "thi", "featur", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [0.005575062839409826], "body_sim": [0.2664241085818897], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0014408583680394417, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 752}, {"A_title": "docs(guide/Forms): add labels to forms", "A_clean_title": ["doc", "guid", "form", "add", "label", "form"], "B_title": "chore(ci): remove repeated tests running from Travis build", "B_clean_title": ["chore", "ci", "remov", "repeat", "test", "run", "travi", "build"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nno label tags in the inputs\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nnot a feature\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nI can add label tags to the other input fields in the docs.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "label", "tag", "input", "**what", "new", "behavior", "thi", "featur", "chang", "not", "featur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "label", "tag", "other", "input", "field", "doc"], "B_body": "In b2902446eb41591f5d868846d3c5bad3a888bcba the doce2e tests were moved\ninto the 'unit' test job on Travis, but only half of this change ever made\nit into v1.2.x. This change fixes up the other half, so that the doce2e\ntests are run only once.\n", "B_clean_body": ["b2902446eb41591f5d868846d3c5bad3a888bcba", "doce2", "test", "were", "move", "into", "'unit", "test", "job", "travi", "but", "onli", "half", "thi", "chang", "ever", "made", "it", "into", "v1", "thi", "chang", "fix", "up", "other", "half", "so", "that", "doce2", "test", "are", "run", "onli", "onc"], "title_sim": [0.006715708976145058], "body_sim": [0.29450588985693327], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 779}, {"A_title": "Feat: ngRef directive to publish controllers, or elements into current scope ", "A_clean_title": ["feat", "ngref", "ng", "ref", "direct", "publish", "control", "or", "element", "into", "current", "scope"], "B_title": "docs($exceptionHandler): code snippet syntax is incorrect", "B_clean_title": ["doc", "exceptionhandl", "except", "handler", "code", "snippet", "syntax", "incorrect"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\npublish a component's or element-directive's, or jqlite wrapped DOM element into the containing scope\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThis is a rebased and updated version of https://github.com/angular/angular.js/pull/14080 with the following changes:\r\n\r\n- publish the jqlite-wrapped DOM element instead of the raw DOM element. In AngularJS, we don't deal with raw DOM elements, so this would create an inconsistency\r\n- introduce a `ngRefElement` attribute that indicates that you always want to publish the jqlite-wrapped DOM element, even if a controller exists\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "new", "behavior", "thi", "featur", "chang", "publish", "compon", "'s", "or", "element", "direct", "'s", "or", "jqlite", "wrap", "dom", "element", "into", "contain", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "rebas", "updat", "version", "http", "github", "com", "angular", "angular", "js", "pull", "14080", "follow", "chang", "publish", "jqlite", "wrap", "dom", "element", "instead", "raw", "dom", "element", "angularj", "angular", "js", "we", "n't", "deal", "raw", "dom", "element", "so", "thi", "would", "creat", "inconsist", "introduc", "ngrefel", "ng", "ref", "element", "attribut", "that", "indic", "that", "you", "alway", "want", "publish", "jqlite", "wrap", "dom", "element", "even", "control", "exist"], "B_body": "Updated the documentation on exception handler, there was an end bracket missing.\n\nSupposedly not a breaking change, it's only documentation update.\n", "B_clean_body": ["updat", "document", "except", "handler", "there", "wa", "end", "bracket", "miss", "supposedli", "not", "break", "chang", "it", "'s", "onli", "document", "updat"], "title_sim": [-0.01355264644412895], "body_sim": [0.3062537621942947], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 651}, {"A_title": "Scenario runner element", "A_clean_title": ["scenario", "runner", "element"], "B_title": "chore(gruntfile): check the node version before starting", "B_clean_title": ["chore", "gruntfil", "check", "node", "version", "befor", "start"], "A_body": "Adds all the missing jQuery methods to element() DSL\n", "A_clean_body": ["add", "all", "miss", "jqueri", "queri", "method", "element", "dsl"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe specify the node version that is required to run the build in the `.nvmrc`\nfile. So let's check that the current node version satisfies this and report\na helpful message if it is not.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "we", "specifi", "node", "version", "that", "requir", "run", "build", "nvmrc", "file", "so", "let", "'s", "check", "that", "current", "node", "version", "satisfi", "thi", "report", "help", "messag", "it", "not"], "title_sim": [0.03802047835839798], "body_sim": [0.02021359091753294], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.001416986509497796, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2184}, {"A_title": "fix(numberFilter): correctly round fractions despite floating-point arithmetics issues in JS", "A_clean_title": ["fix", "numberfilt", "number", "filter", "correctli", "round", "fraction", "despit", "float", "point", "arithmet", "issu", "js"], "B_title": "docs(*): remove usage of global grunt-cli", "B_clean_title": ["doc", "remov", "usag", "global", "grunt", "cli"], "A_body": "Closes #7870\nCloses #7878\n", "A_clean_body": ["close", "7870", "close", "7878"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nCurrently, the contributing docs tell people to globally install grunt and build angularjs using the `grunt` cli command.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit ensures grunt is not required globally by updating all the commands to use `yarn grunt` instead of `grunt`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "current", "contribut", "doc", "tell", "peopl", "global", "instal", "grunt", "build", "angularj", "grunt", "cli", "command", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "ensur", "grunt", "not", "requir", "global", "by", "updat", "all", "command", "use", "yarn", "grunt", "instead", "grunt", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.05539423285113923], "body_sim": [0.00035671065785377996], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1208}, {"A_title": "fix(input): Take timezone into account when validating minimum and ma\u2026", "A_clean_title": ["fix", "input", "take", "timezon", "into", "account", "when", "valid", "minimum", "ma\u2026"], "B_title": "Scenario runner navigate 404", "B_clean_title": ["scenario", "runner", "navig", "404"], "A_body": "\u2026ximum date spans.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix \r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nAll details in issue for Issue https://github.com/angular/angular.js/issues/16342\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll details in issue for Issue https://github.com/angular/angular.js/issues/16342\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["\u2026ximum", "date", "span", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "all", "detail", "issu", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16342", "**what", "new", "behavior", "thi", "featur", "chang", "all", "detail", "issu", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16342", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Check if the URL in navigateTo() is going to return a 2xx (success) status code. Now navigateTo() fails tests if navigating to a 404 or a 500. Also display better error messages about sandbox exceptions (cross domain or file://). Better test cases for Application sandbox error handling as well.\n\nAlso implements the http HEAD method in the nodeserver for testing.\n\nNote: This new code will behave badly if your server side code modifies state on a http HEAD request. For example, if your app used onetime URL tokens so that a URL could only be visited once the navigateTo() would fail since it would visit the URL twice. The same is true if you naviateTo('delete_something.html') and performed the actual delete on a HEAD request. No well behaved application should do this since it's entirely against the definition of the HEAD http method.\n", "B_clean_body": ["check", "url", "navigateto", "navig", "go", "return", "2xx", "success", "statu", "code", "now", "navigateto", "navig", "fail", "test", "navig", "404", "or", "500", "also", "display", "better", "error", "messag", "about", "sandbox", "except", "cross", "domain", "or", "file", "better", "test", "case", "applic", "sandbox", "error", "handl", "as", "well", "also", "implement", "http", "head", "method", "nodeserv", "test", "note", "thi", "new", "code", "will", "behav", "badli", "your", "server", "side", "code", "modifi", "state", "http", "head", "request", "exampl", "your", "app", "use", "onetim", "url", "token", "so", "that", "url", "could", "onli", "visit", "onc", "navigateto", "navig", "would", "fail", "sinc", "it", "would", "visit", "url", "twice", "same", "true", "you", "naviateto", "naviat", "html", "'delet", "someth", "perform", "actual", "delet", "head", "request", "no", "well", "behav", "applic", "thi", "sinc", "it", "'s", "entir", "against", "definit", "head", "http", "method"], "title_sim": [0.0], "body_sim": [0.1843708683544712], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06826814314107463, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2625}, {"A_title": "feat(jqLite): return [] for .val() on <select multiple> with no selection", "A_clean_title": ["feat", "jqlite", "jq", "lite", "return", "val", "select", "multipl", "no", "select"], "B_title": "feat:$xhr: provide access to $xhr header defaults", "B_clean_title": ["feat", "xhr", "provid", "access", "xhr", "header", "default"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFeature (an API change).\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe `.val()` getter on `<select multiple>...</select>` returns `null` if no options are selected.\n\n**What is the new behavior (if this is a feature change)?**\nThe `.val()` getter on `<select multiple>...</select>` returns an empty array if no options are selected.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features) -- what should I do here?\n\n**Other information**:\n\nFixes #14370\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "api", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "val", "getter", "select", "multipl", "select", "return", "null", "no", "option", "are", "select", "**what", "new", "behavior", "thi", "featur", "chang", "val", "getter", "select", "multipl", "select", "return", "empti", "array", "no", "option", "are", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "what", "here", "**other", "information**", "fix", "14370"], "B_body": "$xhr header defaults are now exposed as $xhr.defaults.headers.common and\n$xhr.default.headers.<httpmethod>. This allows applications to configure\ntheir defaults as needed.\n\nThis commit doesn't allow headers to be set per request, only per\napplication. Per request change would require api change, which I tried\nto avoid _for now_.\n", "B_clean_body": ["xhr", "header", "default", "are", "now", "expos", "as", "xhr", "default", "header", "common", "xhr", "default", "header", "httpmethod", "thi", "allow", "applic", "configur", "their", "default", "as", "need", "thi", "commit", "n't", "allow", "header", "set", "per", "request", "onli", "per", "applic", "per", "request", "chang", "would", "requir", "api", "chang", "which", "tri", "avoid", "now"], "title_sim": [0.014275680622640091], "body_sim": [0.13281394864756524], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.006257975099604218, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1897}, {"A_title": "perf(orderBy): copy array with slice instead of for loop", "A_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "B_title": "test($parse): add tests for watching one-time array/object literals", "B_clean_title": ["test", "pars", "add", "test", "watch", "one", "time", "array", "object", "liter"], "A_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "A_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "B_body": "These are some examples of cases which 189461f9bf6fda18ddbd16c42f2e959cf939c3da enabled. All the one-time tests failed before that commit.\r\n\r\nIt's possible that these overlap with [these tests](https://github.com/angular/angular.js/blob/189461f9bf6fda18ddbd16c42f2e959cf939c3da/test/ng/parseSpec.js#L2692) a bit (the non-deep ones), but I think at least the `should ignore changes within nested objects` tests are a good addition.", "B_clean_body": ["these", "are", "some", "exampl", "case", "which", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "enabl", "all", "one", "time", "test", "fail", "befor", "that", "commit", "it", "'s", "possibl", "that", "these", "overlap", "these", "test", "http", "js", "github", "com", "angular", "angular", "js", "blob", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "test", "ng", "parsespec", "pars", "spec", "l2692", "bit", "non", "deep", "one", "but", "think", "at", "least", "ignor", "chang", "within", "nest", "object", "test", "are", "good", "addit"], "title_sim": [0.20860351224186066], "body_sim": [0.15952497509797012], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06887536791936126, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1208}, {"A_title": "fix(ngAnimate): let $animate.cancel() reject the runner promise", "A_clean_title": ["fix", "nganim", "ng", "anim", "let", "anim", "cancel", "reject", "runner", "promis"], "B_title": "Update badjsonp.ngdoc", "B_clean_title": ["updat", "badjsonp", "ngdoc"], "A_body": "<!-- General PR submission guidelines ../blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #14204\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThere is another aspect to this problem that is not fixed by this PR:\r\n2. Cancelling css animations should immediately abort the animation and set the DOM / css to its final state. This is currently broken in FF and IE11 (at least), see https://bugzilla.mozilla.org/show_bug.cgi?id=1425014. This must be tested with e2e test. Fixing this is not a BC.\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "md", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14204", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "blob", "master", "develop", "commit", "fix", "featur", "doc", "md", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "there", "anoth", "aspect", "thi", "problem", "that", "not", "fix", "by", "thi", "pr", "cancel", "css", "anim", "immedi", "abort", "anim", "set", "dom", "css", "it", "final", "state", "thi", "current", "broken", "ff", "ie11", "at", "least", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=1425014", "thi", "must", "test", "e2e", "test", "fix", "thi", "not", "bc"], "B_body": "\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nThis is docs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere is a typo in badjsonp.ngdoc\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocumentation is now correct.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "thi", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "badjsonp", "ngdoc", "**what", "new", "behavior", "thi", "featur", "chang", "document", "now", "correct", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.007131153053033148], "body_sim": [0.8907625314315002], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 217}, {"A_title": "Fix $browser.xhr (JSONP)", "A_clean_title": ["fix", "browser", "xhr", "jsonp"], "B_title": "feat(jqLite): return [] for .val() on <select multiple> with no selection", "B_clean_title": ["feat", "jqlite", "jq", "lite", "return", "val", "select", "multipl", "no", "select"], "A_body": "Creating &lt;script&gt; tags would require a lot of extra work if we want all browsers\nto load and execute these scripts. We decided to not implement that in jqLite.\n\nSee #369 for more information.\n\nCloses #369\n", "A_clean_body": ["creat", "lt", "script", "gt", "tag", "would", "requir", "lot", "extra", "work", "we", "want", "all", "browser", "load", "execut", "these", "script", "we", "decid", "not", "implement", "that", "jqlite", "jq", "lite", "see", "369", "more", "inform", "close", "369"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFeature (an API change).\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe `.val()` getter on `<select multiple>...</select>` returns `null` if no options are selected.\n\n**What is the new behavior (if this is a feature change)?**\nThe `.val()` getter on `<select multiple>...</select>` returns an empty array if no options are selected.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features) -- what should I do here?\n\n**Other information**:\n\nFixes #14370\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "api", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "val", "getter", "select", "multipl", "select", "return", "null", "no", "option", "are", "select", "**what", "new", "behavior", "thi", "featur", "chang", "val", "getter", "select", "multipl", "select", "return", "empti", "array", "no", "option", "are", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "what", "here", "**other", "information**", "fix", "14370"], "title_sim": [-0.027022732165530788], "body_sim": [0.03539345300386775], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005053057243510125, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1899}, {"A_title": "test($compile): use FQDN for img[src]", "A_clean_title": ["test", "compil", "use", "fqdn", "img", "src"], "B_title": "docs($location): fix typo", "B_clean_title": ["doc", "locat", "fix", "typo"], "A_body": "img[src]=\"https://foo\" has the unfortunate problem that the browser will\nactually try retrieving the resource the non FQDN foo.  The local DNS\nmight suffix a domain to this, resolve it, and try to present a\ncertificate for the https request and prompt the user to pick a\ncertificate. This commit avoids that by making foo a FQDN.  Note that it\nmight be better to replace foo with example.com (ref\nhttp://tools.ietf.org/html/rfc2606#section-3).\n", "A_clean_body": ["img", "src", "http", "foo", "ha", "unfortun", "problem", "that", "browser", "will", "actual", "tri", "retriev", "resourc", "non", "fqdn", "foo", "local", "dn", "might", "suffix", "domain", "thi", "resolv", "it", "tri", "present", "certif", "http", "request", "prompt", "user", "pick", "certif", "thi", "commit", "avoid", "that", "by", "make", "foo", "fqdn", "note", "that", "it", "might", "better", "replac", "foo", "exampl", "com", "ref", "http", "ietf", "tool", "org", "html", "rfc2606", "section"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.029288672102904822], "body_sim": [0.1608101422722741], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1660}, {"A_title": "Revert ng style regression for 1.3.x", "A_clean_title": ["revert", "ng", "style", "regress"], "B_title": "Overload \"component\" method to accept object map of components", "B_clean_title": ["overload", "compon", "method", "accept", "object", "map", "compon"], "A_body": "I know, 1.4 is around the corner, but this should be handled nevertheless.\n", "A_clean_body": ["know", "around", "corner", "but", "thi", "handl", "nevertheless"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\"component\" method does not allow multiple components registration\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\"component\" method accepts object as a parameter where the keys are component names and the values are the component definition objects\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compon", "method", "not", "allow", "multipl", "compon", "registr", "**what", "new", "behavior", "thi", "featur", "chang", "compon", "method", "accept", "object", "as", "paramet", "where", "key", "are", "compon", "name", "valu", "are", "compon", "definit", "object", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.05901392972458701], "body_sim": [0.1736955652088185], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.10175228028337463, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 773}, {"A_title": "fix($sce): do not assume $document[0] exists", "A_clean_title": ["fix", "sce", "not", "assum", "document", "exist"], "B_title": "chore(browserstack): Update browserstacktunnel-wrapper, fix options", "B_clean_title": ["chore", "browserstack", "updat", "browserstacktunnel", "wrapper", "fix", "option"], "A_body": "this is important so that people can mock $window without having to add stuff that angular uses internally into it\n\nCloses #9661\n", "A_clean_body": ["thi", "import", "so", "that", "peopl", "mock", "window", "without", "have", "add", "stuff", "that", "angular", "use", "intern", "into", "it", "close", "9661"], "B_body": "Only the latest version of the package works correctly (the backend for it at\r\nBrowserStack is not versioned) and the options have changed in the new version\r\nof the package.\r\n\r\nAlso, iOS 8.0 is no longer available on BrowserStack, only 8.3 is. Instead,\r\nthis commit changes it to 9.3 as we shouldn't be testing on 8 anymore anyway.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix in the testing infrastructure.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe Browserstack wrapper doesn't set the local identified correctly, old wrapper is used that uses incorrect parameter names.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nPackage got updated, params are fine again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["onli", "latest", "version", "packag", "work", "correctli", "backend", "it", "at", "browserstack", "browser", "stack", "not", "version", "option", "have", "chang", "new", "version", "packag", "also", "io", "os", "no", "longer", "avail", "browserstack", "browser", "stack", "onli", "instead", "thi", "commit", "chang", "it", "as", "we", "n't", "test", "anymor", "anyway", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "test", "infrastructur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browserstack", "wrapper", "n't", "set", "local", "identifi", "correctli", "old", "wrapper", "use", "that", "use", "incorrect", "paramet", "name", "**what", "new", "behavior", "thi", "featur", "chang", "packag", "got", "updat", "param", "are", "fine", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.09971447093323962], "body_sim": [0.28037047103502866], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 901}, {"A_title": "feat(docs): adding the <doc:protractor> ngdoc-tag", "A_clean_title": ["feat", "doc", "ad", "doc", "protractor", "ngdoc", "tag"], "B_title": "fix(ngModel, input): improve handling of built-in named parsers", "B_clean_title": ["fix", "ngmodel", "ng", "model", "input", "improv", "handl", "built", "name", "parser"], "A_body": "This is the first step in migrating tests from doc:scenario to doc:protractor.\nIn-documentation examples with doc:protractor sections will have their contents\noutput to a tab on the docs site as well as output to a standalone test file in\nbuild/docs/ptore2e.\n", "A_clean_body": ["thi", "first", "step", "migrat", "test", "doc", "scenario", "doc", "protractor", "document", "exampl", "doc", "protractor", "section", "will", "have", "their", "content", "output", "tab", "doc", "site", "as", "well", "as", "output", "standalon", "test", "file", "build", "doc", "ptore2"], "B_body": "This commit changes how input elements use the private $$parserName\r\nproperty on the ngModelController to name parse errors. Until now,\r\nthe input types (number, date etc.) would set $$parserName when\r\nthe inputs were initialized, which meant that any other parsers on\r\nthe ngModelController would also be named after that type. The\r\neffect of that was that the `$error` property and the `ng-invalid-...`\r\nclass would always be that of the built-in parser, even if the custom\r\nparser had nothing to do with it.\r\n\r\nThe new behavior is that the $$parserName is only set if the actual\r\nparser is invalid, i.e. returns `undefined`.\r\n\r\nAlso, $$parserName has been removed from input[email] and input[url],\r\nas these types do not have a built-in parser anymore.\r\n\r\nBREAKING CHANGE:\r\n\r\nCustom parsers that fail to parse on input types email, url, date, month, time,\r\ndatetime-local, week, do no longer set $error[inputType], and no longer set the class\r\n`ng-invalid-[inputType]`. Instead, they set $error.parse and `ng-invalid-parse`.\r\n\r\nCloses #14292 \r\nCloses #10076\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nThis is a general fix to https://github.com/angular/angular.js/issues/10076 and also incorporates the changes in https://github.com/angular/angular.js/pull/14292.\r\nWhile it's not a very common problem, I always found this section of the API very strange, especially since it uses an undocumented API (so if you stumble on it, it's even more difficult to find out what causes it).\r\nSince https://github.com/angular/angular.js/pull/14292 is already a very small BC I thought a general solution to this issue would be welcome.\r\nNote that I will include tests for the other input types if this implementation is approved.\r\n\r\n", "B_clean_body": ["thi", "commit", "chang", "how", "input", "element", "use", "privat", "parsernam", "parser", "name", "properti", "ngmodelcontrol", "ng", "model", "control", "name", "pars", "error", "until", "now", "input", "type", "number", "date", "etc", "would", "set", "parsernam", "parser", "name", "when", "input", "were", "initi", "which", "meant", "that", "ani", "other", "parser", "ngmodelcontrol", "ng", "model", "control", "would", "also", "name", "after", "that", "type", "effect", "that", "wa", "that", "error", "properti", "ng", "invalid", "class", "would", "alway", "that", "built", "parser", "even", "custom", "parser", "had", "noth", "it", "new", "behavior", "that", "parsernam", "parser", "name", "onli", "set", "actual", "parser", "invalid", "return", "undefin", "also", "parsernam", "parser", "name", "ha", "been", "remov", "input", "email", "input", "url", "as", "these", "type", "not", "have", "built", "parser", "anymor", "break", "chang", "custom", "parser", "that", "fail", "pars", "input", "type", "email", "url", "date", "month", "time", "datetim", "local", "week", "no", "longer", "set", "error", "inputtyp", "input", "type", "no", "longer", "set", "class", "ng", "invalid", "inputtyp", "input", "type", "instead", "they", "set", "error", "pars", "ng", "invalid", "pars", "close", "14292", "close", "10076", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "gener", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "10076", "also", "incorpor", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "while", "it", "'s", "not", "veri", "common", "problem", "alway", "found", "thi", "section", "api", "veri", "strang", "especi", "sinc", "it", "use", "undocu", "api", "so", "you", "stumbl", "it", "it", "'s", "even", "more", "difficult", "find", "out", "what", "caus", "it", "sinc", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "alreadi", "veri", "small", "bc", "thought", "gener", "solut", "thi", "issu", "would", "welcom", "note", "that", "will", "includ", "test", "other", "input", "type", "thi", "implement", "approv"], "title_sim": [0.2043483248129565], "body_sim": [0.3059287007006833], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01814447145561661, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1419}, {"A_title": "fix(booleanAttrs): convert to boolean", "A_clean_title": ["fix", "booleanattr", "boolean", "attr", "convert", "boolean"], "B_title": "Docs: update $location guide info; fix some headlines", "B_clean_title": ["doc", "updat", "locat", "guid", "info", "fix", "some", "headlin"], "A_body": "jQuery's attr() does not handle 0 as false, when it comes to boolean attrs.\n\nAnother solution might be to not set attr() for boolean attrs at all...\n", "A_clean_body": ["jqueri", "queri", "'s", "attr", "not", "handl", "as", "fals", "when", "it", "come", "boolean", "attr", "anoth", "solut", "might", "not", "set", "attr", "boolean", "attr", "at", "all"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.3274154227224021], "body_sim": [0.008698276327637158], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2282}, {"A_title": "refactor($parse): add lgalfaso's refactors and suggestions", "A_clean_title": ["refactor", "pars", "add", "lgalfaso", "'s", "refactor", "suggest"], "B_title": "fix($parse): do not shallow-watch computed property keys", "B_clean_title": ["fix", "pars", "not", "shallow", "watch", "comput", "properti", "key"], "A_body": "@lgalfaso's PR #7543 had two aspects of it that I didn't include in my last changes to $parse (#7552, #7555)\n- Lexer should only take care of `constant`, and the Parser should deduce that a _primary_ `constant` is also a `literal`\n- Simplify the logic of Parser.filter \n", "A_clean_body": ["lgalfaso", "'s", "pr", "7543", "had", "two", "aspect", "it", "that", "did", "n't", "includ", "my", "last", "chang", "pars", "7552", "7555", "lexer", "onli", "take", "care", "constant", "parser", "deduc", "that", "primari", "constant", "also", "liter", "simplifi", "logic", "parser", "filter"], "B_body": "Fixes a case which b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f missed. ES6 computed keys can implicitly invoke `.toString()` of an object so we can't shallow-watch it.\r\n\r\nThe other option is shallow-watching `String(key)` instead, but I'm a little hesitant to watch something slightly different then how it's used in the real expression.", "B_clean_body": ["fix", "case", "which", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "miss", "es6", "comput", "key", "implicitli", "invok", "tostr", "string", "object", "so", "we", "ca", "n't", "shallow", "watch", "it", "other", "option", "shallow", "watch", "string", "key", "instead", "but", "'m", "littl", "hesit", "watch", "someth", "slightli", "differ", "then", "how", "it", "'s", "use", "real", "express"], "title_sim": [0.05254387798697718], "body_sim": [0.24845228395880992], "file_list_sim": 0.5, "overlap_files_len": 1, "code_sim": [0.03072080506288741, 0.0259999873828646], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1151}, {"A_title": "chore(doc-gen, docs-app): generate version for stable snapshot", "A_clean_title": ["chore", "doc", "gen", "doc", "app", "gener", "version", "stabl", "snapshot"], "B_title": "perf(jqLite): avoid repeated add/removeAttribute in jqLiteRemoveClass", "B_clean_title": ["perf", "jqlite", "jq", "lite", "avoid", "repeat", "add", "removeattribut", "remov", "attribut", "jqliteremoveclass", "jq", "lite", "remov", "class"], "A_body": "The \"stable snapshot\" is based on the latest commit on the current stable\r\nbranch, i.e. a preview of the next patch version.\r\n\r\nNext thing:\r\n- update the Firebase deployment so that on the branch with distTag = latest gets deployed to docs.angularjs.org and as to gcs as snapshot-stable\r\n\r\n\r\n", "A_clean_body": ["stabl", "snapshot", "base", "latest", "commit", "current", "stabl", "branch", "preview", "next", "patch", "version", "next", "thing", "updat", "firebas", "deploy", "so", "that", "branch", "disttag", "dist", "tag", "latest", "get", "deploy", "doc", "angularj", "org", "as", "gc", "as", "snapshot", "stabl"], "B_body": "This does something similar to what was suggested in #16078, although keeps it a little more like `jqLiteAddClass` for now.", "B_clean_body": ["thi", "someth", "similar", "what", "wa", "suggest", "16078", "although", "keep", "it", "littl", "more", "like", "jqliteaddclass", "jq", "lite", "add", "class", "now"], "title_sim": [-0.018237860904004668], "body_sim": [0.11904471389158099], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.025984671358354906, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 82}, {"A_title": "fix(ngView): use animation promises ensure that only one leave animation...", "A_clean_title": ["fix", "ngview", "ng", "view", "use", "anim", "promis", "ensur", "that", "onli", "one", "leav", "anim"], "B_title": "perf($animate): listen for document visibility changes", "B_clean_title": ["perf", "anim", "listen", "document", "visibl", "chang"], "A_body": "... occurs at a time\n\nthe tracking depended on a local flag variable, which was susceptible to corruption due to\nrace conditions.\n\nCloses #9355\nCloses #7606\n", "A_clean_body": ["occur", "at", "time", "track", "depend", "local", "flag", "variabl", "which", "wa", "suscept", "corrupt", "due", "race", "condit", "close", "9355", "close", "7606"], "B_body": "Accessing the document for the hidden state is costly for\nplatforms like Electron.\n\nCloses #14066\n", "B_clean_body": ["access", "document", "hidden", "state", "costli", "platform", "like", "electron", "close", "14066"], "title_sim": [0.3722454635091189], "body_sim": [0.13786913199877981], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 504}, {"A_title": "fix(ngMessageFormat): ensure bindings are valid for Protractor", "A_clean_title": ["fix", "ngmessageformat", "ng", "messag", "format", "ensur", "bind", "are", "valid", "protractor"], "B_title": "test($resource): check we do not throw if response.data is the resour\u2026", "B_clean_title": ["test", "resourc", "check", "we", "not", "throw", "respons", "data", "resour\u2026"], "A_body": "Refer original PR #11644 \n", "A_clean_body": ["refer", "origin", "pr", "11644"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n\u2026ce object\n\nCloses #4508\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026ce", "object", "close", "4508"], "title_sim": [0.04767729562127457], "body_sim": [0.3572047001692218], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02088887632121048, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 415}, {"A_title": "doc:$route: Fix $route example and couple of typos in docs", "A_clean_title": ["doc", "rout", "fix", "rout", "exampl", "coupl", "typo", "doc"], "B_title": "refactor($compile): remove unnecessary try/catch", "B_clean_title": ["refactor", "compil", "remov", "unnecessari", "tri", "catch"], "A_body": "Rewrite $route example a bit, as it required $location and $route services\nto be eager published in the root scope.\n\nAdd missing partials (move them to docs/examples directory)\n\nFix small typos in formatter and ng:options docs.\n", "A_clean_body": ["rewrit", "rout", "exampl", "bit", "as", "it", "requir", "locat", "rout", "servic", "eager", "publish", "root", "scope", "add", "miss", "partial", "move", "them", "doc", "exampl", "directori", "fix", "small", "typo", "formatt", "ng", "option", "doc"], "B_body": "I don't see anything in there that could throw...\n", "B_clean_body": ["n't", "see", "anyth", "there", "that", "could", "throw"], "title_sim": [-0.00706296454610823], "body_sim": [0.10609542964900909], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.020851308553816294, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1589}, {"A_title": "docs(ngAria): fix markdown spacing for headers", "A_clean_title": ["doc", "ngaria", "ng", "aria", "fix", "markdown", "space", "header"], "B_title": "Scenario runner binding throw", "B_clean_title": ["scenario", "runner", "bind", "throw"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "I was wrong about throw being the same as done(error) in a DSL statement. Throw is an \"error\" and done(error) is a \"failure\".\n\nAlso, there was a test for the binding not matching before, but it tested in a condition where there were no bindings at all in the document in which case elements() in your new binding() would still throw.\n\nI added a new test that checks for bindings existing but none of them matching.\n\nI also fixed an issue where you were using contains() and checking if the return value was >= 0 but the function returns a boolean and false >= 0 is true. I'll code review more carefully next time.\n", "B_clean_body": ["wa", "wrong", "about", "throw", "be", "same", "as", "done", "error", "dsl", "statement", "throw", "error", "done", "error", "failur", "also", "there", "wa", "test", "bind", "not", "match", "befor", "but", "it", "test", "condit", "where", "there", "were", "no", "bind", "at", "all", "document", "which", "case", "element", "your", "new", "bind", "would", "still", "throw", "ad", "new", "test", "that", "check", "bind", "exist", "but", "none", "them", "match", "also", "fix", "issu", "where", "you", "were", "contain", "check", "return", "valu", "wa", "but", "function", "return", "boolean", "fals", "true", "'ll", "code", "review", "more", "care", "next", "time"], "title_sim": [0.002624718041446951], "body_sim": [0.17537443502187655], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2001}, {"A_title": "$resource with promises", "A_clean_title": ["resourc", "promis"], "B_title": "refactor($rootScope): simplify $emit stopPropagation handling", "B_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "A_body": "This is just finishing https://github.com/angular/angular.js/pull/2060.\n\nMy changes, that will get squashed into the first commit:\n- change `.$resolved` to be boolean (true/false), rather than undefined/true\n- keep the original promise (do not update `.$promise` after subsequent instance calls)\n- success callbacks gets response (with value as `.resource`), instead of direct value (this is just reverting to the original behavior of $resource)\n- docs: reflect these changes\n- some style/formatting (reverting trailing white spaces, etc.)\n\n**Passsing whole response into the promise:**\nI did this, because I think it is very helpful to have access to the http response. More than that, people might be already relying on it.\nThe reason for passing just the value (resource instance) was to simplify $route resolve, but I think it's not that worse (unless I'm missing something):\n\n``` javascript\n// passing whole response\nMyController.resolve = function(MyResource) {\n  return MyResource.get(...).promise.then(function(response) {\n    return response.resource;\n  });\n};\n\n// passing direct resource instace\nMyController.resolve = function(MyResource) {\n  return MyResource.get(...).promise;\n};\n```\n\nBefore merging:\n- [ ] squash\n- [ ] add BREAKING CHANGE message\n", "A_clean_body": ["thi", "just", "finish", "http", "github", "com", "angular", "angular", "js", "pull", "2060", "my", "chang", "that", "will", "get", "squash", "into", "first", "commit", "chang", "resolv", "boolean", "true", "fals", "rather", "than", "undefin", "true", "keep", "origin", "promis", "not", "updat", "promis", "after", "subsequ", "instanc", "call", "success", "callback", "get", "respons", "valu", "as", "resourc", "instead", "direct", "valu", "thi", "just", "revert", "origin", "behavior", "resourc", "doc", "reflect", "these", "chang", "some", "style", "format", "revert", "trail", "white", "space", "etc", "**passs", "whole", "respons", "into", "promis", "did", "thi", "becaus", "think", "it", "veri", "help", "have", "access", "http", "respons", "more", "than", "that", "peopl", "might", "alreadi", "reli", "it", "reason", "pass", "just", "valu", "resourc", "instanc", "wa", "simplifi", "rout", "resolv", "but", "think", "it", "'s", "not", "that", "wors", "unless", "'m", "miss", "someth", "javascript", "pass", "whole", "respons", "mycontrol", "resolv", "my", "control", "function", "myresourc", "my", "resourc", "return", "myresourc", "get", "my", "resourc", "promis", "then", "function", "respons", "return", "respons", "resourc", "pass", "direct", "resourc", "instac", "mycontrol", "resolv", "my", "control", "function", "myresourc", "my", "resourc", "return", "myresourc", "get", "my", "resourc", "promis", "befor", "merg", "squash", "add", "break", "chang", "messag"], "B_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "B_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "title_sim": [-0.025776132414784936], "body_sim": [0.25792673954368656], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1660}, {"A_title": "refactor($parse): do not pass scope,locals to interceptor fns", "A_clean_title": ["refactor", "pars", "not", "pass", "scope", "local", "interceptor", "fn"], "B_title": "refactor(compileSpec): make tests consistent", "B_clean_title": ["refactor", "compilespec", "compil", "spec", "make", "test", "consist"], "A_body": "After @lgalfaso's [comment](https://github.com/angular/angular.js/pull/16015/files#r126528737) I thought it would be a good idea to remove these params from interceptors. All the internal uses of interceptors are for doing things like data conversion/normalizing, never reading state out of the scope/locals. I think this is the intended use, and makes them like filters (which receive the input value + args).\r\n\r\nNote that scope/locals still get passed through to the expression being wrapped/intercepted, it's just the interceptor-fn itself that now only receives the value.", "A_clean_body": ["after", "lgalfaso", "'s", "comment", "http", "github", "com", "angular", "angular", "js", "pull", "16015", "file", "r126528737", "thought", "it", "would", "good", "idea", "remov", "these", "param", "interceptor", "all", "intern", "use", "interceptor", "are", "do", "thing", "like", "data", "convers", "normal", "never", "read", "state", "out", "scope", "local", "think", "thi", "intend", "use", "make", "them", "like", "filter", "which", "receiv", "input", "valu", "arg", "note", "that", "scope", "local", "still", "get", "pass", "through", "express", "be", "wrap", "intercept", "it", "'s", "just", "interceptor", "fn", "itself", "that", "now", "onli", "receiv", "valu"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nrefactor\n\n**What is the current behavior? (You can also link to an open issue here)**\nTests are duplicated and have non-optimal expects\n\n**What is the new behavior (if this is a feature change)?**\nTests use they and have been moved to one place\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "test", "are", "duplic", "have", "non", "optim", "expect", "**what", "new", "behavior", "thi", "featur", "chang", "test", "use", "they", "have", "been", "move", "one", "place"], "title_sim": [0.33476491860584257], "body_sim": [0.12445896153594706], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0036439315797145815, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 298}, {"A_title": "test($http): ignore date-toJSON test if running in IE8", "A_clean_title": ["test", "http", "ignor", "date", "tojson", "json", "test", "run", "ie8"], "B_title": "fix($httpBackend): Ignore multiple calls to onreadystatechange with read...", "B_clean_title": ["fix", "httpbackend", "http", "backend", "ignor", "multipl", "call", "onreadystatechang", "read"], "A_body": "IE8 does not implement Date.prototype.toISOString(), which is necessary for\nthis feature. The feature still works if this method is polyfilled, but these\ntests are not run with polyfills.\n\n/CC @IgorMinar (Please review, shouldn't take long!)\n", "A_clean_body": ["ie8", "not", "implement", "date", "prototyp", "toisostr", "iso", "string", "which", "necessari", "thi", "featur", "featur", "still", "work", "thi", "method", "polyfil", "but", "these", "test", "are", "not", "run", "polyfil", "cc", "igorminar", "igor", "minar", "pleas", "review", "n't", "take", "long"], "B_body": "...yState=4\n\nOn mobile webkit `onreadystatechange` might by called multiple times\nwith `readyState===4`  caused by xhrs that are resolved while the app is\nin the background.\n\n Fixes #5426.\n", "B_clean_body": ["ystate=4", "state=4", "mobil", "webkit", "onreadystatechang", "might", "by", "call", "multipl", "time", "readystate===4", "readi", "state===4", "caus", "by", "xhr", "that", "are", "resolv", "while", "app", "background", "fix", "5426"], "title_sim": [0.4802951942567442], "body_sim": [0.2803968490694988], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 194}, {"A_title": "docs(directive): show arguments as a subsection of the usage section", "A_clean_title": ["doc", "direct", "show", "argument", "as", "subsect", "usag", "section"], "B_title": "chore(doc-gen, docs-app): create plnkr examples with correct Angular \u2026", "B_clean_title": ["chore", "doc", "gen", "doc", "app", "creat", "plnkr", "exampl", "correct", "angular"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreviously, on the docs of directives which include the `animation` section, `arguments` are shown as an `h3` element below the `animation` `h2` element, making it look like it's a subsection of `animations`.\r\n\r\n#15645\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit ensures that the \u00e0rgument` `h3`element is rendered correctly after the `usage` `h2` element by moving the \u00e0nimation`section to the end of the template file.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "previous", "doc", "direct", "which", "includ", "anim", "section", "argument", "are", "shown", "as", "h3", "element", "below", "anim", "h2", "element", "make", "it", "look", "like", "it", "'s", "subsect", "anim", "15645", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "ensur", "that", "\u00e0rgument", "h3", "element", "render", "correctli", "after", "usag", "h2", "element", "by", "move", "\u00e0nimat", "section", "end", "templat", "file", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs-gen / app fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe plnkr examples include the latest stable Angular version instead of the snapshot version when opened from snapshot docs.\n\n**What is the new behavior (if this is a feature change)?**\nFixes the plnkr examples generated from snapshot docs\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\n\u2026version\n\nWhen the docs are based on the snapshot, the plnkr examples must use the snapshot files\nfrom code.angularjs.org\n\nFixes https://github.com/angular/angular.js/issues/15267\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "gen", "app", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "plnkr", "exampl", "includ", "latest", "stabl", "angular", "version", "instead", "snapshot", "version", "when", "open", "snapshot", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "plnkr", "exampl", "gener", "snapshot", "doc", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026version", "when", "doc", "are", "base", "snapshot", "plnkr", "exampl", "must", "use", "snapshot", "file", "code", "angularj", "org", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "15267"], "title_sim": [0.25046044556047986], "body_sim": [0.8640084173654607], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 105}, {"A_title": "docs(app): adds border", "A_clean_title": ["doc", "app", "add", "border"], "B_title": "fix(numberFilter): correctly round fractions despite floating-point arithmetics issues in JS", "B_clean_title": ["fix", "numberfilt", "number", "filter", "correctli", "round", "fraction", "despit", "float", "point", "arithmet", "issu", "js"], "A_body": "Adds a border to the top of the h2 like the current docs app.\n", "A_clean_body": ["add", "border", "top", "h2", "like", "current", "doc", "app"], "B_body": "Closes #7870\nCloses #7878\n", "B_clean_body": ["close", "7870", "close", "7878"], "title_sim": [0.03635269686786816], "body_sim": [-0.0018138396553452141], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 183}, {"A_title": "Fix $browser.xhr (JSONP)", "A_clean_title": ["fix", "browser", "xhr", "jsonp"], "B_title": "refactor($rootScope): consistently use noop as the default $watch listener", "B_clean_title": ["refactor", "rootscop", "root", "scope", "consist", "use", "noop", "as", "default", "watch", "listen"], "A_body": "Creating &lt;script&gt; tags would require a lot of extra work if we want all browsers\nto load and execute these scripts. We decided to not implement that in jqLite.\n\nSee #369 for more information.\n\nCloses #369\n", "A_clean_body": ["creat", "lt", "script", "gt", "tag", "would", "requir", "lot", "extra", "work", "we", "want", "all", "browser", "load", "execut", "these", "script", "we", "decid", "not", "implement", "that", "jqlite", "jq", "lite", "see", "369", "more", "inform", "close", "369"], "B_body": "By doing the `isFunction(listener)` check before delegating to `$$watchDelegate` it removes that check from some `$$watchDelegate` methods.", "B_clean_body": ["by", "do", "isfunct", "function", "listen", "check", "befor", "deleg", "watchdeleg", "watch", "deleg", "it", "remov", "that", "check", "some", "watchdeleg", "watch", "deleg", "method"], "title_sim": [0.1911185233514678], "body_sim": [0.07892000499145889], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2342}, {"A_title": "Scenario runner navigate 404", "A_clean_title": ["scenario", "runner", "navig", "404"], "B_title": "refactor($parse): add lgalfaso's refactors and suggestions", "B_clean_title": ["refactor", "pars", "add", "lgalfaso", "'s", "refactor", "suggest"], "A_body": "Check if the URL in navigateTo() is going to return a 2xx (success) status code. Now navigateTo() fails tests if navigating to a 404 or a 500. Also display better error messages about sandbox exceptions (cross domain or file://). Better test cases for Application sandbox error handling as well.\n\nAlso implements the http HEAD method in the nodeserver for testing.\n\nNote: This new code will behave badly if your server side code modifies state on a http HEAD request. For example, if your app used onetime URL tokens so that a URL could only be visited once the navigateTo() would fail since it would visit the URL twice. The same is true if you naviateTo('delete_something.html') and performed the actual delete on a HEAD request. No well behaved application should do this since it's entirely against the definition of the HEAD http method.\n", "A_clean_body": ["check", "url", "navigateto", "navig", "go", "return", "2xx", "success", "statu", "code", "now", "navigateto", "navig", "fail", "test", "navig", "404", "or", "500", "also", "display", "better", "error", "messag", "about", "sandbox", "except", "cross", "domain", "or", "file", "better", "test", "case", "applic", "sandbox", "error", "handl", "as", "well", "also", "implement", "http", "head", "method", "nodeserv", "test", "note", "thi", "new", "code", "will", "behav", "badli", "your", "server", "side", "code", "modifi", "state", "http", "head", "request", "exampl", "your", "app", "use", "onetim", "url", "token", "so", "that", "url", "could", "onli", "visit", "onc", "navigateto", "navig", "would", "fail", "sinc", "it", "would", "visit", "url", "twice", "same", "true", "you", "naviateto", "naviat", "html", "'delet", "someth", "perform", "actual", "delet", "head", "request", "no", "well", "behav", "applic", "thi", "sinc", "it", "'s", "entir", "against", "definit", "head", "http", "method"], "B_body": "@lgalfaso's PR #7543 had two aspects of it that I didn't include in my last changes to $parse (#7552, #7555)\n- Lexer should only take care of `constant`, and the Parser should deduce that a _primary_ `constant` is also a `literal`\n- Simplify the logic of Parser.filter \n", "B_clean_body": ["lgalfaso", "'s", "pr", "7543", "had", "two", "aspect", "it", "that", "did", "n't", "includ", "my", "last", "chang", "pars", "7552", "7555", "lexer", "onli", "take", "care", "constant", "parser", "deduc", "that", "primari", "constant", "also", "liter", "simplifi", "logic", "parser", "filter"], "title_sim": [0.0], "body_sim": [0.40909592143880946], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.039030897460120555, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1304}, {"A_title": "refactor($browser): remove workaround for old ff bug", "A_clean_title": ["refactor", "browser", "remov", "workaround", "old", "ff", "bug"], "B_title": "docs($location): fix examples", "B_clean_title": ["doc", "locat", "fix", "exampl"], "A_body": "- https://bugzilla.mozilla.org/show_bug.cgi?id=407172 was fixed in ff 40\r\n\r\nFF 40 is probably old enough we can remove this?", "A_clean_body": ["http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=407172", "wa", "fix", "ff", "40", "ff", "40", "probabl", "old", "enough", "we", "remov", "thi"], "B_body": "The examples contained tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixed a HTML5 browser scenarion with a non-HTML5\r\none.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe examples contains tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixes a HTML5 browser scenario with a non-HTML5\r\none.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenarion", "non", "html5", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenario", "non", "html5", "one", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.000873110233053205], "body_sim": [0.3081178369606424], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 139}, {"A_title": "fix(select): auto-select new option that is marked as selected", "A_clean_title": ["fix", "select", "auto", "select", "new", "option", "that", "mark", "as", "select"], "B_title": "Revert \"fix($parse): standardize one-time literal vs non-literal and interceptors\"", "B_clean_title": ["revert", "fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "A_body": "When adding a new <option> element, if the DOM of this option element\nstates that the element is marked as `selected`, then select the new\n<option> element\n\nCloses #6828\n\nThis is a new PR based on a wrong merge done at #7136\n", "A_clean_body": ["when", "ad", "new", "option", "element", "dom", "thi", "option", "element", "state", "that", "element", "mark", "as", "select", "then", "select", "new", "option", "element", "close", "6828", "thi", "new", "pr", "base", "wrong", "merg", "done", "at", "7136"], "B_body": "Reverts 60394a9d91dad8932fa900af7c8529837f1d4557 to fix #15905 in 1.6. Currently plan is to NOT revert in 1.7.\r\n\r\nFixes #15905 ", "B_clean_body": ["revert", "60394a9d91dad8932fa900af7c8529837f1d4557", "fix", "15905", "current", "plan", "not", "revert", "fix", "15905"], "title_sim": [0.026952319476538766], "body_sim": [0.03828886425154969], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.008506387072212074, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1030}, {"A_title": "test($parse): add one-time/interceptor tests", "A_clean_title": ["test", "pars", "add", "one", "time", "interceptor", "test"], "B_title": "fix(select): let ngValue take precedence over option text with multip\u2026", "B_clean_title": ["fix", "select", "let", "ngvalu", "ng", "valu", "take", "preced", "over", "option", "text", "multip\u2026"], "A_body": "I realized that https://github.com/angular/angular.js/commit/189461f9bf6fda18ddbd16c42f2e959cf939c3da changed this a little - previously the second test failed for two reasons\r\n1. one-time literals [did not use .inputs](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) unlike the normal [one-time delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1856), so the `identity` interceptor would throw an infdig because the literal recreated each digest was being watched\r\n2. one-time literals with interceptors [only check `isDefined`](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1933) to determine when the one time is \"done\" which is unlike [the one-time watch delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) that checks all the values in the literal, so the interceptor thought the \"one-time\" was done right away for literals\r\n\r\nI think both of these changes are correct and want to make sure we don't revert them. This should probably only go into 1.7 since this change will [probably be reverted](https://github.com/angular/angular.js/pull/15958) in 1.6.", "A_clean_body": ["realiz", "that", "http", "github", "com", "angular", "angular", "js", "commit", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "chang", "thi", "littl", "previous", "second", "test", "fail", "two", "reason", "one", "time", "liter", "did", "not", "use", "input", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "unlik", "normal", "one", "time", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1856", "so", "ident", "interceptor", "would", "throw", "infdig", "becaus", "liter", "recreat", "each", "digest", "wa", "be", "watch", "one", "time", "liter", "interceptor", "onli", "check", "isdefin", "defin", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1933", "determin", "when", "one", "time", "done", "which", "unlik", "one", "time", "watch", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "that", "check", "all", "valu", "liter", "so", "interceptor", "thought", "one", "time", "wa", "done", "right", "away", "liter", "think", "both", "these", "chang", "are", "correct", "want", "make", "sure", "we", "n't", "revert", "them", "thi", "probabl", "onli", "go", "into", "sinc", "thi", "chang", "will", "probabl", "revert", "http", "github", "com", "angular", "angular", "js", "pull", "15958"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an option contains multiple interpolations, an ngValue on the option element is ignored. See #15413\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "option", "contain", "multipl", "interpol", "ngvalu", "ng", "valu", "option", "element", "ignor", "see", "15413", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.02008183740596066], "body_sim": [0.3192192544171087], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.058261480660137845, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 198}, {"A_title": "feat(ngMock): add support for `$animate.closeAndFlush()`", "A_clean_title": ["feat", "ngmock", "ng", "mock", "add", "support", "anim", "closeandflush", "close", "flush"], "B_title": "fix($parse): do not pass scope/locals to interceptors of one-time bindings", "B_clean_title": ["fix", "pars", "not", "pass", "scope", "local", "interceptor", "one", "time", "bind"], "A_body": "Use `$animate.closeAndFlush()` to close all running animations.\n\nCloses #13005\n", "A_clean_body": ["use", "anim", "closeandflush", "close", "flush", "close", "all", "run", "anim", "close", "13005"], "B_body": "2ee5033967d5f87a516bad137686b0592e25d26b should not have added these args (see 529550d0da3d88514ce9efb038fb935fbf90f971 which dropped them elsewhere)", "B_clean_body": ["2ee5033967d5f87a516bad137686b0592e25d26b", "not", "have", "ad", "these", "arg", "see", "529550d0da3d88514ce9efb038fb935fbf90f971", "which", "drop", "them", "elsewher"], "title_sim": [-0.003030558073072304], "body_sim": [0.061481477820124274], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0063205472589202135, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 560}, {"A_title": "refactor($compile): remove unnecessary try/catch", "A_clean_title": ["refactor", "compil", "remov", "unnecessari", "tri", "catch"], "B_title": "perf($animate): listen for document visibility changes", "B_clean_title": ["perf", "anim", "listen", "document", "visibl", "chang"], "A_body": "I don't see anything in there that could throw...\n", "A_clean_body": ["n't", "see", "anyth", "there", "that", "could", "throw"], "B_body": "Accessing the document for the hidden state is costly for\nplatforms like Electron.\n\nCloses #14066\n", "B_clean_body": ["access", "document", "hidden", "state", "costli", "platform", "like", "electron", "close", "14066"], "title_sim": [-0.029456237578625588], "body_sim": [0.020128106898921565], "file_list_sim": 0.1, "overlap_files_len": 1, "code_sim": [0.01322379090663413, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 104}, {"A_title": "docs(ngOpen): add note about browser compatibility", "A_clean_title": ["doc", "ngopen", "ng", "open", "add", "note", "about", "browser", "compat"], "B_title": "docs(app): adds roboto font", "B_clean_title": ["doc", "app", "add", "roboto", "font"], "A_body": "- Add note about browser compatibility and recommend ng-show/ng-hide\n\nThis should address #7337.\n", "A_clean_body": ["add", "note", "about", "browser", "compat", "recommend", "ng", "hide", "show", "ng", "thi", "address", "7337"], "B_body": "The Google Material design docs at http://www.google.com/design/spec/style/typography.html state that we should use the font 'Roboto' for our Typography. I went ahead added the font using @import, but we could also download the fonts and add them to the project. I'm fine with either way.\n", "B_clean_body": ["googl", "materi", "design", "doc", "at", "http", "googl", "html", "www", "com", "design", "spec", "style", "typographi", "state", "that", "we", "use", "font", "'roboto", "our", "typographi", "went", "ahead", "ad", "font", "import", "but", "we", "could", "also", "download", "font", "add", "them", "project", "'m", "fine", "either", "way"], "title_sim": [0.6736769191547579], "body_sim": [0.1343062940128346], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 548}, {"A_title": "fix($rootScope): provide correct value of one-time bindings in watchGroup", "A_clean_title": ["fix", "rootscop", "root", "scope", "provid", "correct", "valu", "one", "time", "bind", "watchgroup", "watch", "group"], "B_title": "fix(input[text]): composing function dosen't works properly in IE", "B_clean_title": ["fix", "input", "text", "compos", "function", "dose", "n't", "work", "properli", "ie"], "A_body": "I don't recall how or why I came across this issue, and it's confusing me, but I found this stashed and the tests do make sense...?", "A_clean_body": ["n't", "recal", "how", "or", "whi", "came", "across", "thi", "issu", "it", "'s", "confus", "me", "but", "found", "thi", "stash", "test", "make", "sens"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nComposing function dosen't works properly in IE. Please refer to https://github.com/angular/angular.js/issues/6656 and \"Other information\" below.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt works properly in IE.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nI have investigated on #6656 issue and I found composing function works differently in only IE.\r\nI confirmed this by the scenario below.\r\n - Code changes to investigate this problem(just added console.log)\r\n    ![2017-10-12 17_53_02-engineering-system - c__users_jileeon_documents_git_engineering-system - _p](https://user-images.githubusercontent.com/5166067/31534128-7aac2cba-b030-11e7-8fb6-5a4754dcb0ed.png)\r\n - Scenario\r\n  1. Just type '\uc774\uc7ac\uc775' and focusout.(in IE and Chrome)\r\n - Result(attached images show differences)\r\n   console.log in Chrome\r\n    ![2017-10-12 18_57_52-developer tools - http___127 0 0 1_8888_system_requests_2279](https://user-images.githubusercontent.com/5166067/31534418-ccd3e2d4-b031-11e7-980e-009b635d0bba.png)\r\n   console.log in IE\r\n    ![2017-10-12 18_58_43-f12](https://user-images.githubusercontent.com/5166067/31534528-39585bba-b032-11e7-9486-34f9f479b6e9.png)\r\n   It shows that last values of $viewValue are different. '\uc774\uc7ac\uc774'(IE) != '\uc774\uc7ac\uc775'(Chrome)\r\n   Because 'compositionend' event is not occurred in IE. So $viewValue is not updated with last value in the textbox. It means that IE triggers composition events('compositionstart', 'compositionupdate', 'compositionend') wrong.\r\n   So I added additional condition(ev.originalEvent.data !== undefined) on 'if (composing) return;' statement.\r\n   As you saw these console logs(IE and Chrome) above, this additional condition makes composing function works properly in IE.(by checking ev.originalEvent.data value. if its value is undefined, $viewValue going to be updated with last value in the textbox in IE. So it works like 'compositionend').\r\n   In addition, When IE fixes this wrong event triggering, It works fine without any problems. ", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compos", "function", "dose", "n't", "work", "properli", "ie", "pleas", "refer", "http", "github", "com", "angular", "angular", "js", "issu", "6656", "other", "inform", "below", "**what", "new", "behavior", "thi", "featur", "chang", "it", "work", "properli", "ie", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "have", "investig", "6656", "issu", "found", "compos", "function", "work", "differ", "onli", "ie", "confirm", "thi", "by", "scenario", "below", "code", "chang", "investig", "thi", "problem", "just", "ad", "consol", "log", "2017", "10", "12", "engin", "system", "17", "53", "02", "system", "user", "jileeon", "document", "git", "engin", "http", "7aac2cba", "b030", "11e7", "8fb6", "user", "imag", "githubusercont", "5a4754dcb0", "png", "com", "5166067", "31534128", "scenario", "just", "type", "focusout", "ie", "chrome", "result", "attach", "imag", "show", "differ", "consol", "log", "chrome", "2017", "10", "12", "develop", "18", "57", "52", "tool", "http", "127", "8888", "system", "request", "2279", "http", "ccd3e2d4", "b031", "11e7", "980e", "user", "imag", "githubusercont", "009b635d0bba", "png", "com", "5166067", "31534418", "consol", "log", "ie", "2017", "10", "12", "f12", "18", "58", "43", "http", "39585bba", "b032", "11e7", "9486", "user", "imag", "githubusercont", "34f9f479b6e9", "png", "com", "5166067", "31534528", "it", "show", "that", "last", "valu", "viewvalu", "view", "valu", "are", "differ", "ie", "chrome", "becaus", "'compositionend", "event", "not", "occur", "ie", "so", "viewvalu", "view", "valu", "not", "updat", "last", "valu", "textbox", "it", "mean", "that", "ie", "trigger", "composit", "event", "'compositionstart", "'compositionupd", "'compositionend", "wrong", "so", "ad", "addit", "condit", "ev", "originalev", "data", "origin", "event", "undefin", "'if", "compos", "return", "statement", "as", "you", "saw", "these", "consol", "log", "ie", "chrome", "abov", "thi", "addit", "condit", "make", "compos", "function", "work", "properli", "ie", "by", "check", "ev", "originalev", "data", "origin", "event", "valu", "it", "valu", "undefin", "viewvalu", "view", "valu", "go", "updat", "last", "valu", "textbox", "ie", "so", "it", "work", "like", "'compositionend", "addit", "when", "ie", "fix", "thi", "wrong", "event", "trigger", "it", "work", "fine", "without", "ani", "problem"], "title_sim": [0.10271674413048623], "body_sim": [0.35198605598389066], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03490029369869554, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 204}, {"A_title": "docs(ngAria): fix markdown spacing for headers", "A_clean_title": ["doc", "ngaria", "ng", "aria", "fix", "markdown", "space", "header"], "B_title": "docs($compile): add known issues with replace:true", "B_clean_title": ["doc", "compil", "add", "known", "issu", "replac", "true"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "An old PR that I had lying around.\r\nTheoretically we could also close the issues that are referenced in the docs, because they are very unlikel to get fixed - especially the directive deduplication and the attribute merging are basically wontfixes.", "B_clean_body": ["old", "pr", "that", "had", "lie", "around", "theoret", "we", "could", "also", "close", "issu", "that", "are", "referenc", "doc", "becaus", "they", "are", "veri", "unlikel", "get", "fix", "especi", "direct", "dedupl", "attribut", "merg", "are", "basic", "wontfix"], "title_sim": [0.08566027448721746], "body_sim": [0.2256119998039204], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 717}, {"A_title": "docs(CONTRIBUTING.md): Updated commit types.", "A_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "B_title": "fix($parse): support constants in computed keys", "B_clean_title": ["fix", "pars", "support", "constant", "comput", "key"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "B_body": "Came across this while looking at computed keys. Super minor and mainly just to make the code more consistent...  Previously `$parse('{[\"key\"]: 1}').constant` would be `false`.", "B_clean_body": ["came", "across", "thi", "while", "look", "at", "comput", "key", "super", "minor", "mainli", "just", "make", "code", "more", "consist", "previous", "pars", "key", "constant", "would", "fals"], "title_sim": [-0.018576896507649102], "body_sim": [0.06539453385961523], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 259}, {"A_title": "feat(scope): add listener deregistration fn for $watch and $on", "A_clean_title": ["feat", "scope", "add", "listen", "deregistr", "fn", "watch"], "B_title": "Fix docs usage section for directives with void attributes", "B_clean_title": ["fix", "doc", "usag", "section", "direct", "void", "attribut"], "A_body": "- both $watch and $on now return a function which when called\n  deregisters the listener\n- $removeListener was removed and replaced with the above\n- added more tests for $watch and $on\n\nCloses #542\n", "A_clean_body": ["both", "watch", "now", "return", "function", "which", "when", "call", "deregist", "listen", "removelisten", "remov", "listen", "wa", "remov", "replac", "abov", "ad", "more", "test", "watch", "close", "542"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nImprovement for the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "improv", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.016374213745849867], "body_sim": [0.06275310623510771], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.014105764605413225, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2232}, {"A_title": "fix(jqLite): use XHTML-compliant HTML as input for jqLite", "A_clean_title": ["fix", "jqlite", "jq", "lite", "use", "xhtml", "compliant", "html", "as", "input", "jqlite", "jq", "lite"], "B_title": "chore(gruntfile): check the node version before starting", "B_clean_title": ["chore", "gruntfil", "check", "node", "version", "befor", "start"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#6917\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nClosing tags are added to HTML passed to jqLite which should make it XHTML-compliant.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated (N/A)\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass (we don't test on XHTML so it can't be tested)\r\n\r\n**Other information**:\r\n\r\nFixes #6917", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "6917", "**what", "new", "behavior", "thi", "featur", "chang", "close", "tag", "are", "ad", "html", "pass", "jqlite", "jq", "lite", "which", "make", "it", "xhtml", "compliant", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "we", "n't", "test", "xhtml", "so", "it", "ca", "n't", "test", "**other", "information**", "fix", "6917"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe specify the node version that is required to run the build in the `.nvmrc`\nfile. So let's check that the current node version satisfies this and report\na helpful message if it is not.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "we", "specifi", "node", "version", "that", "requir", "run", "build", "nvmrc", "file", "so", "let", "'s", "check", "that", "current", "node", "version", "satisfi", "thi", "report", "help", "messag", "it", "not"], "title_sim": [-0.007532172487388126], "body_sim": [0.8742173949927083], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 523}, {"A_title": "feat($resource): add support for `request` and `requestError` interceptors", "A_clean_title": ["feat", "resourc", "add", "support", "request", "requesterror", "request", "error", "interceptor"], "B_title": "fix(ngView): use animation promises ensure that only one leave animation...", "B_clean_title": ["fix", "ngview", "ng", "view", "use", "anim", "promis", "ensur", "that", "onli", "one", "leav", "anim"], "A_body": "Just a rebased version of #13273.", "A_clean_body": ["just", "rebas", "version", "13273"], "B_body": "... occurs at a time\n\nthe tracking depended on a local flag variable, which was susceptible to corruption due to\nrace conditions.\n\nCloses #9355\nCloses #7606\n", "B_clean_body": ["occur", "at", "time", "track", "depend", "local", "flag", "variabl", "which", "wa", "suscept", "corrupt", "due", "race", "condit", "close", "9355", "close", "7606"], "title_sim": [0.04456954366587198], "body_sim": [-0.006013558283061877], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 855}, {"A_title": "refactor(angular): removed unnecessary parameter for slice function", "A_clean_title": ["refactor", "angular", "remov", "unnecessari", "paramet", "slice", "function"], "B_title": "fix($parse): Allow property names that collide with native object proper...", "B_clean_title": ["fix", "pars", "allow", "properti", "name", "that", "collid", "nativ", "object", "proper"], "A_body": "- the end index for slice, if not specified, is default to the\n  end of the array it operates on.\n", "A_clean_body": ["end", "index", "slice", "not", "specifi", "default", "end", "array", "it", "oper"], "B_body": "...ties\n\nI.e. constructor, toString, or watch on FF\n(https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/watch)\n- optimize parser a bit to not create getter function for operators\n", "B_clean_body": ["tie", "constructor", "tostr", "string", "or", "watch", "ff", "http", "mozilla", "develop", "org", "en", "javascript", "refer", "global", "object", "object", "watch", "java", "script", "optim", "parser", "bit", "not", "creat", "getter", "function", "oper"], "title_sim": [0.07824861329907518], "body_sim": [0.0697787910883429], "file_list_sim": 0.2, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 219}, {"A_title": "refactor($parse): remove unnecessary .constant if when collecting inputs", "A_clean_title": ["refactor", "pars", "remov", "unnecessari", "constant", "when", "collect", "input"], "B_title": "chore(github): update the issue template", "B_clean_title": ["chore", "github", "updat", "issu", "templat"], "A_body": "The `if`s are unnecessary because the calculation of `ast.toWatch` should have taken constants into account already.", "A_clean_body": ["are", "unnecessari", "becaus", "calcul", "ast", "towatch", "watch", "have", "taken", "constant", "into", "account", "alreadi"], "B_body": "Updates the issue template.\r\n- make it more like the Angular one\r\n- include extra information into comments, so the actual output is cleaner and you can find the relevant info faster when triaging\r\n- make it easier to differentiate between bugs and features\r\n- remove section that are only relevant for features ... this is often filled out with redundant info\r\n- make sections shorter and hopefully clearer", "B_clean_body": ["updat", "issu", "templat", "make", "it", "more", "like", "angular", "one", "includ", "extra", "inform", "into", "comment", "so", "actual", "output", "cleaner", "you", "find", "relev", "info", "faster", "when", "triag", "make", "it", "easier", "differenti", "between", "bug", "featur", "remov", "section", "that", "are", "onli", "relev", "featur", "thi", "often", "fill", "out", "redund", "info", "make", "section", "shorter", "hope", "clearer"], "title_sim": [0.05581921836341466], "body_sim": [0.195875571253223], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 122}, {"A_title": "fix($browser): should use first value for a cookie.", "A_clean_title": ["fix", "browser", "use", "first", "valu", "cooki"], "B_title": "fix($parse): do not shallow-watch computed property keys", "B_clean_title": ["fix", "pars", "not", "shallow", "watch", "comput", "properti", "key"], "A_body": "With this change, $browser.cookies()[\"foo\"] will behave like\ndocCookies.getItem(\"foo\") where docCookies is defined at\nhttps://developer.mozilla.org/en-US/docs/DOM/document.cookie\n\nRef: https://github.com/angular/angular.js/issues/2635\n\nThis fixes the issue where, if there's a value for the XSRF-TOKEN cookie\nvalue with the path /, then that value is used for all applications in\nthe domain even if they set path specific values for XSRF-TOKEN.\n", "A_clean_body": ["thi", "chang", "browser", "cooki", "foo", "will", "behav", "like", "doccooki", "getitem", "doc", "cooki", "get", "item", "foo", "where", "doccooki", "doc", "cooki", "defin", "at", "http", "mozilla", "cooki", "develop", "org", "en", "us", "doc", "dom", "document", "ref", "http", "github", "com", "angular", "angular", "js", "issu", "2635", "thi", "fix", "issu", "where", "there", "'s", "valu", "xsrf", "token", "cooki", "valu", "path", "then", "that", "valu", "use", "all", "applic", "domain", "even", "they", "set", "path", "specif", "valu", "xsrf", "token"], "B_body": "Fixes a case which b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f missed. ES6 computed keys can implicitly invoke `.toString()` of an object so we can't shallow-watch it.\r\n\r\nThe other option is shallow-watching `String(key)` instead, but I'm a little hesitant to watch something slightly different then how it's used in the real expression.", "B_clean_body": ["fix", "case", "which", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "miss", "es6", "comput", "key", "implicitli", "invok", "tostr", "string", "object", "so", "we", "ca", "n't", "shallow", "watch", "it", "other", "option", "shallow", "watch", "string", "key", "instead", "but", "'m", "littl", "hesit", "watch", "someth", "slightli", "differ", "then", "how", "it", "'s", "use", "real", "express"], "title_sim": [-0.003891113501244448], "body_sim": [0.15548128104208275], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.047428127201679514, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1529}, {"A_title": "fix($compile): reject multi-expression interpolations for src attribute", "A_clean_title": ["fix", "compil", "reject", "multi", "express", "interpol", "src", "attribut"], "B_title": "chore(gitignore): exclude .log and .stackdump files", "B_clean_title": ["chore", "gitignor", "exclud", "log", "stackdump", "file"], "A_body": "BREAKING CHANGE: Concatenating expressions makes it hard to reason about\n    whether some combination of concatenated values are unsafe to use\n    and could easily lead to XSS.  By requiring that a single expression\n    be used for *[src/ng-src] such as iframe[src], object[src], etc.\n    (but not img[src/ng-src] since that value is sanitized), we ensure that the value\n    that's used is assigned or constructed by some JS code somewhere\n    that is more testable or make it obvious that you bound the value to\n    some user controlled value.  This helps reduce the load when\n    auditing for XSS issues.\n\n```\nTo migrate your code, follow the example below:\n\n    Before:\n        JS:\n            scope.baseUrl = 'page';\n            scope.a = 1;\n            scope.b = 2;\n        HTML:\n            <!-- Are a and b properly escaped here? Is baseUrl\n                 controlled by user? -->\n            <iframe src=\"{{baseUrl}}?a={{a}&b={{b}}\">\n\n    After:\n        JS:\n            var baseUrl = \"page\";\n            scope.getIframeSrc = function() {\n              // There are obviously better ways to do this.  The\n              // key point is that one will think about this and do\n              // it the right way.\n              var qs = [\"a\", \"b\"].map(function(value, name) {\n                  return encodeURIComponent(name) + \"=\" +\n                         encodeURIComponent(value);\n                }).join(\"&\");\n              // baseUrl isn't on scope so it isn't bound to a user\n              // controlled value.\n              return baseUrl + \"?\" + qs;\n            }\n        HTML: <iframe src=\"{{getIframeSrc()}}\">\n```\n", "A_clean_body": ["break", "chang", "concaten", "express", "make", "it", "hard", "reason", "about", "whether", "some", "combin", "concaten", "valu", "are", "unsaf", "use", "could", "easili", "lead", "xss", "by", "requir", "that", "singl", "express", "use", "src", "src", "ng", "such", "as", "ifram", "src", "object", "src", "etc", "but", "not", "img", "src", "src", "ng", "sinc", "that", "valu", "sanit", "we", "ensur", "that", "valu", "that", "'s", "use", "assign", "or", "construct", "by", "some", "js", "code", "somewher", "that", "more", "testabl", "or", "make", "it", "obviou", "that", "you", "bound", "valu", "some", "user", "control", "valu", "thi", "help", "reduc", "load", "when", "audit", "xss", "issu", "migrat", "your", "code", "follow", "exampl", "below", "befor", "js", "scope", "baseurl", "base", "url", "'page", "scope", "scope", "html", "are", "properli", "escap", "here", "baseurl", "base", "url", "control", "by", "user", "ifram", "src=", "baseurl", "base", "url", "a=", "b=", "after", "js", "var", "baseurl", "base", "url", "page", "scope", "getiframesrc", "get", "ifram", "src", "function", "there", "are", "obvious", "better", "way", "thi", "key", "point", "that", "one", "will", "think", "about", "thi", "it", "right", "way", "var", "qs", "map", "function", "valu", "name", "return", "encodeuricompon", "encod", "uri", "compon", "name", "encodeuricompon", "encod", "uri", "compon", "valu", "join", "baseurl", "base", "url", "n't", "scope", "so", "it", "n't", "bound", "user", "control", "valu", "return", "baseurl", "base", "url", "qs", "html", "ifram", "src=", "getiframesrc", "get", "ifram", "src"], "B_body": "Ignore those pesky .log files that are often generated by node and .stackdump, which is created by ConEmu.\n", "B_clean_body": ["ignor", "those", "peski", "log", "file", "that", "are", "often", "gener", "by", "node", "stackdump", "which", "creat", "by", "conemu", "con", "emu"], "title_sim": [0.05450010073527486], "body_sim": [0.16269982180169276], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1029}, {"A_title": "fix(ngAnimate): ignore children without animation runner when closing\u2026", "A_clean_title": ["fix", "nganim", "ng", "anim", "ignor", "children", "without", "anim", "runner", "when", "closing\u2026"], "B_title": "docs(*): document the breaking change introduced in e1da4be", "B_clean_title": ["doc", "document", "break", "chang", "introduc", "e1da4b"], "A_body": "\u2026 them\n\nDuring parent structural animations, ongoing animations on child elements\nare closed. These children are looked up by checking the data-ng-animate\nattribute. If an element is the clone of an animating element,\nit might have this attribute, but no animation runner associated with it,\nso we need to ignore it.\n\nFixes #11992\nCloses #13423\n", "A_clean_body": ["them", "dure", "parent", "structur", "anim", "ongo", "anim", "child", "element", "are", "close", "these", "children", "are", "look", "up", "by", "check", "data", "ng", "anim", "attribut", "element", "clone", "anim", "element", "it", "might", "have", "thi", "attribut", "but", "no", "anim", "runner", "associ", "it", "so", "we", "need", "ignor", "it", "fix", "11992", "close", "13423"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nAlthough e1da4be introduced a breaking change, it wasn't documented as such.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe breaking change is documented.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n<sub>(In a way. \"Let me introduce you this breaking change. It has been around for 2 releases, but I don't think you've met.)\"</sub>\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "although", "e1da4b", "introduc", "break", "chang", "it", "wa", "n't", "document", "as", "such", "**what", "new", "behavior", "thi", "featur", "chang", "break", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "sub", "way", "let", "me", "introduc", "you", "thi", "break", "chang", "it", "ha", "been", "around", "releas", "but", "n't", "think", "you", "'ve", "met", "sub", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.03071438509247169], "body_sim": [0.13430563551011693], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03866910772021251, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 360}, {"A_title": "docs(contributing): fix indentation for proper Markdown syntax", "A_clean_title": ["doc", "contribut", "fix", "indent", "proper", "markdown", "syntax"], "B_title": "docs($compile): add known issues with replace:true", "B_clean_title": ["doc", "compil", "add", "known", "issu", "replac", "true"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nMarkdown isn't displayed properly.\n\n**What is the new behavior (if this is a feature change)?**\nMarkdown is displayed properly.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "markdown", "n't", "display", "properli", "**what", "new", "behavior", "thi", "featur", "chang", "markdown", "display", "properli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "An old PR that I had lying around.\r\nTheoretically we could also close the issues that are referenced in the docs, because they are very unlikel to get fixed - especially the directive deduplication and the attribute merging are basically wontfixes.", "B_clean_body": ["old", "pr", "that", "had", "lie", "around", "theoret", "we", "could", "also", "close", "issu", "that", "are", "referenc", "doc", "becaus", "they", "are", "veri", "unlikel", "get", "fix", "especi", "direct", "dedupl", "attribut", "merg", "are", "basic", "wontfix"], "title_sim": [0.04216834819595911], "body_sim": [0.20968840120515456], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 606}, {"A_title": "Fix: set $submitted on child forms when form is submitted", "A_clean_title": ["fix", "set", "submit", "child", "form", "when", "form", "submit"], "B_title": "Align jqLite's attr method with jQuery", "B_clean_title": ["align", "jqlite", "jq", "lite", "'s", "attr", "method", "jqueri", "queri"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen submitting a form, $submitted is not set on child forms\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI don't think so.\r\nNo one in #10071 said that his might be breaking.\r\nAngularJS doesn't have nested form isolation, and ngForm is only for grouping sub-forms. I think that it's expected that a submission event will affect all sub-forms.\r\nProbably: https://github.com/angular/angular.js/pull/11023#issuecomment-143162373\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\nFollow up to https://github.com/angular/angular.js/pull/11023", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "submit", "form", "submit", "not", "set", "child", "form", "**doe", "thi", "pr", "introduc", "break", "chang", "n't", "think", "so", "no", "one", "10071", "said", "that", "hi", "might", "break", "angularj", "angular", "js", "n't", "have", "nest", "form", "isol", "ngform", "ng", "form", "onli", "group", "sub", "form", "think", "that", "it", "'s", "expect", "that", "submiss", "event", "will", "affect", "all", "sub", "form", "probabl", "http", "github", "com", "angular", "angular", "js", "pull", "11023", "issuecom", "143162373", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "follow", "up", "http", "github", "com", "angular", "angular", "js", "pull", "11023"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRefactors & breaking API changes.\n\n**What is the current behavior? (You can also link to an open issue here)**\nBoolean attribute getters take properties into account and setters modify them. All falsy values for boolean attribute setters remove the attribute and set the property to false. The `null` value in a setter (for all attributes, not only boolean ones) sets the attribute value to the string `\"null\"` instead of removing it.\n\n**What is the new behavior (if this is a feature change)?**\nBoolean attribute getters/setters don't touch properties. The `null` value in a setter (for all attributes, not only boolean ones) removes the attribute. The `false` value removes it only for boolean attributes. Other defined values for boolean attributes set the value to the lowercased attribute name.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~ - only in a form of commit messages with their `BREAKING CHANGES` sections; is anything else needed?\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "break", "api", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "boolean", "attribut", "getter", "take", "properti", "into", "account", "setter", "modifi", "them", "all", "falsi", "valu", "boolean", "attribut", "setter", "remov", "attribut", "set", "properti", "fals", "null", "valu", "setter", "all", "attribut", "not", "onli", "boolean", "one", "set", "attribut", "valu", "string", "null", "instead", "remov", "it", "**what", "new", "behavior", "thi", "featur", "chang", "boolean", "attribut", "getter", "setter", "n't", "touch", "properti", "null", "valu", "setter", "all", "attribut", "not", "onli", "boolean", "one", "remov", "attribut", "fals", "valu", "remov", "it", "onli", "boolean", "attribut", "other", "defin", "valu", "boolean", "attribut", "set", "valu", "lowercas", "attribut", "name", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "onli", "form", "commit", "messag", "their", "break", "chang", "section", "anyth", "need", "**other", "information**"], "title_sim": [0.04372932467503831], "body_sim": [0.6241362663487376], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.04390560190188814, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 164}, {"A_title": "docs(CONTRIBUTING.md): add note about scope wildcard", "A_clean_title": ["doc", "contribut", "md", "add", "note", "about", "scope", "wildcard"], "B_title": "test(ngMock): remove a broken jqLite cache clearing", "B_clean_title": ["test", "ngmock", "ng", "mock", "remov", "broken", "jqlite", "jq", "lite", "cach", "clear"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nno hint that `*` is a valid scope -- it hints you could omit the `(...)` bit, but most commits of late don't\n\n**What is the new behavior (if this is a feature change)?**\n\ndocumentation of `*`\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "hint", "that", "valid", "scope", "it", "hint", "you", "could", "omit", "bit", "but", "most", "commit", "late", "don't", "**what", "new", "behavior", "thi", "featur", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA test change.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`angular.element.cache` is reset to an empty object in one spec.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt's no longer reset at all.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nThis is blocking PR #16512.", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "angular", "element", "cach", "reset", "empti", "object", "one", "spec", "**what", "new", "behavior", "thi", "featur", "chang", "it", "'s", "no", "longer", "reset", "at", "all", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "thi", "block", "pr", "16512"], "title_sim": [0.012069486060068817], "body_sim": [0.8878478945682268], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 516}, {"A_title": "The Angular Docs do not show the restrictions", "A_clean_title": ["angular", "doc", "not", "show", "restrict"], "B_title": "chore(travis): add commitplease validation to ci-checks", "B_clean_title": ["chore", "travi", "add", "commitpleas", "valid", "ci", "check"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe Directive ng-require does not show the correct restrictions in the USAGE section.\n\n**What is the new behavior (if this is a feature change)?**\n\nIn the USAGE section it will show up as an attribute.\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [X] Tests for the changes have been added (for bug fixes / features)\n- [X] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nAdded  \\* @restrict A so it will show the correct restrictions in the docs\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "direct", "ng", "requir", "not", "show", "correct", "restrict", "usag", "section", "**what", "new", "behavior", "thi", "featur", "chang", "usag", "section", "it", "will", "show", "up", "as", "attribut", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "ad", "restrict", "so", "it", "will", "show", "correct", "restrict", "doc"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPR commit messages are not validated\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\ntravis validates PR commit messages\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format \ud83d\ude06 \r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "pr", "commit", "messag", "are", "not", "valid", "**what", "new", "behavior", "thi", "featur", "chang", "travi", "valid", "pr", "commit", "messag", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [-0.07609734146833089], "body_sim": [0.9428538278654466], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 439}, {"A_title": "fix(Angular): deprecate angular.merge", "A_clean_title": ["fix", "angular", "deprec", "angular", "merg"], "B_title": "fix(date filter): default to fullDate format", "B_clean_title": ["fix", "date", "filter", "default", "fulldat", "full", "date", "format"], "A_body": "This function has problems with special object types but since it's not used in core,\r\nit is not worth implementing fixes for these cases.\r\nA general purpose library like lodash (provides `merge`) should be used instead.\r\n\r\nCloses #12653\r\nCloses #14941\r\nCloses #15180\r\nCloses #15992\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDeprecation\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nUnclear API support\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDeprecation / docs update\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nNot sure if this should be marked fix or feat\r\n~If we deprecate only in 1.7.0, then the known issue section can still go in 1.6.x~\r\n", "A_clean_body": ["thi", "function", "ha", "problem", "special", "object", "type", "but", "sinc", "it", "'s", "not", "use", "core", "it", "not", "worth", "implement", "fix", "these", "case", "gener", "purpos", "librari", "like", "lodash", "provid", "merg", "use", "instead", "close", "12653", "close", "14941", "close", "15180", "close", "15992", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "deprec", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "unclear", "api", "support", "**what", "new", "behavior", "thi", "featur", "chang", "deprec", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "not", "sure", "thi", "mark", "fix", "or", "feat", "~if", "we", "deprec", "onli", "then", "known", "issu", "section", "still", "go", "x~"], "B_body": "The browser's behave inconsistently, so we should just stick to one format\nwhen the format is not specified by the developer\n\nCloses #605\n", "B_clean_body": ["browser", "'s", "behav", "inconsist", "so", "we", "just", "stick", "one", "format", "when", "format", "not", "specifi", "by", "develop", "close", "605"], "title_sim": [0.062407494793957824], "body_sim": [0.3031080344345234], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2057}, {"A_title": "fix(ngAnimate): safe-guard against missing document", "A_clean_title": ["fix", "nganim", "ng", "anim", "safe", "guard", "against", "miss", "document"], "B_title": "refactor(jqLite): stop patching individual jQuery methods", "B_clean_title": ["refactor", "jqlite", "jq", "lite", "stop", "patch", "individu", "jqueri", "queri", "method"], "A_body": "A different fix for the mocked document problem (in 1.4.x) that also fixes another possibly breaking access to the document.\n\nOne caveat: since we are now failing gracefully, and a missing document means no animations fire, tests that test animations and mock out document will not run animations, and this will be opaque to developers. However, I assume that most tests that mock document are actually very basic, as lots of other things should break when $document is mocked\n\nPlease check if the PR fulfills these requirements\n\n```\nThe commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n```\n", "A_clean_body": ["differ", "fix", "mock", "document", "problem", "that", "also", "fix", "anoth", "possibl", "break", "access", "document", "one", "caveat", "sinc", "we", "are", "now", "fail", "grace", "miss", "document", "mean", "no", "anim", "fire", "test", "that", "test", "anim", "mock", "out", "document", "will", "not", "run", "anim", "thi", "will", "opaqu", "develop", "howev", "assum", "that", "most", "test", "that", "mock", "document", "are", "actual", "veri", "basic", "as", "lot", "other", "thing", "break", "when", "document", "mock", "pleas", "check", "pr", "fulfil", "these", "requir", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "Currently Angular monkey-patches a few jQuery methods that remove elements\nfrom the DOM. Since methods like .remove() have multiple signatures\nthat can change what's actually removed, Angular needs to carefully\nrepeat them in its patching or it can break apps using jQuery correctly.\nSuch a strategy is also not future-safe.\n\nInstead of patching individual methods on the prototype, it's better to\nhook into jQuery.cleanData and trigger custom events there. This should be\nsafe as e.g. jQuery UI needs it and uses it. It'll also be future-safe.\n\nThe only drawback is that $destroy is no longer triggered when using $detach\nbut:\n1. Angular doesn't use this method, jqLite doesn't implement it.\n2. Detached elements can be re-attached keeping all their events & data\n    so it makes sense that $destroy is not triggered on them.\n3. The approach from this commit is so much safer that any issues with\n    .detach() working differently are outweighed by the robustness of the code.\n\nBREAKING CHANGE: the $destroy event is no longer triggered when using the\njQuery detach() method. If you want to destroy Angular data attached to the\nelement, use remove().\n\ncc @caitp\n", "B_clean_body": ["current", "angular", "monkey", "patch", "few", "jqueri", "queri", "method", "that", "remov", "element", "dom", "sinc", "method", "like", "remov", "have", "multipl", "signatur", "that", "chang", "what", "'s", "actual", "remov", "angular", "need", "care", "repeat", "them", "it", "patch", "or", "it", "break", "app", "jqueri", "queri", "correctli", "such", "strategi", "also", "not", "futur", "safe", "instead", "patch", "individu", "method", "prototyp", "it", "'s", "better", "hook", "into", "jqueri", "cleandata", "queri", "clean", "data", "trigger", "custom", "event", "there", "thi", "safe", "as", "jqueri", "queri", "ui", "need", "it", "use", "it", "it", "'ll", "also", "futur", "safe", "onli", "drawback", "that", "destroy", "no", "longer", "trigger", "when", "detach", "but", "angular", "n't", "use", "thi", "method", "jqlite", "jq", "lite", "n't", "implement", "it", "detach", "element", "re", "attach", "keep", "all", "their", "event", "data", "so", "it", "make", "sens", "that", "destroy", "not", "trigger", "them", "approach", "thi", "commit", "so", "much", "safer", "that", "ani", "issu", "detach", "work", "differ", "are", "outweigh", "by", "robust", "code", "break", "chang", "destroy", "event", "no", "longer", "trigger", "when", "jqueri", "queri", "detach", "method", "you", "want", "destroy", "angular", "data", "attach", "element", "use", "remov", "cc", "caitp"], "title_sim": [-0.034196813197018255], "body_sim": [0.3254103859579008], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.003826013482468376, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 750}, {"A_title": "fix($location): re-assign location after BFCache back", "A_clean_title": ["fix", "locat", "re", "assign", "locat", "after", "bfcach", "bf", "cach", "back"], "B_title": "test(ngMock): remove a broken jqLite cache clearing", "B_clean_title": ["test", "ngmock", "ng", "mock", "remov", "broken", "jqlite", "jq", "lite", "cach", "clear"], "A_body": "In the Android browser, the BFCache maintains\nthe state of JavaScript applications even when\nnavigating to another app, so that going\nforward and back, to and from an application\nis very fast.\n\nUnfortunately, this can have undesired side\neffects. In this instance, the location\nvariable was holding a reference to a stale\nwindow.location, and was throwing errors\nwhen going back to an Angular app after\nbrowsing to another site.\n\nThis fix makes sure that location.url()\nincludes a check to make sure that location\nis referencing the current window.location.\n\nCloses #4044\n", "A_clean_body": ["android", "browser", "bfcach", "bf", "cach", "maintain", "state", "javascript", "java", "script", "applic", "even", "when", "navig", "anoth", "app", "so", "that", "go", "forward", "back", "applic", "veri", "fast", "unfortun", "thi", "have", "undesir", "side", "effect", "thi", "instanc", "locat", "variabl", "wa", "hold", "refer", "stale", "window", "locat", "wa", "throw", "error", "when", "go", "back", "angular", "app", "after", "brows", "anoth", "site", "thi", "fix", "make", "sure", "that", "locat", "url", "includ", "check", "make", "sure", "that", "locat", "referenc", "current", "window", "locat", "close", "4044"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA test change.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`angular.element.cache` is reset to an empty object in one spec.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt's no longer reset at all.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nThis is blocking PR #16512.", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "angular", "element", "cach", "reset", "empti", "object", "one", "spec", "**what", "new", "behavior", "thi", "featur", "chang", "it", "'s", "no", "longer", "reset", "at", "all", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "thi", "block", "pr", "16512"], "title_sim": [0.0628254636655981], "body_sim": [0.15138276897450315], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1640}, {"A_title": "chore(docs-gen): create plnkr examples with the correct version", "A_clean_title": ["chore", "doc", "gen", "creat", "plnkr", "exampl", "correct", "version"], "B_title": "docs(*): ensure jsdoc type expressions are valid", "B_clean_title": ["doc", "ensur", "jsdoc", "type", "express", "are", "valid"], "A_body": "**What is the current behavior? (You can also link to an open issue here)**\r\nCurrently, plnkrs are opened with the cdnVersion of the built docs app, which means\r\nthat snapshot plunkers might not work because they use the cdn (stable version).\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\nShould we update this info for the other deployments too?\r\n\r\n", "A_clean_body": ["**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "current", "plnkr", "are", "open", "cdnversion", "cdn", "version", "built", "doc", "app", "which", "mean", "that", "snapshot", "plunker", "might", "not", "work", "becaus", "they", "use", "cdn", "stabl", "version", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "we", "updat", "thi", "info", "other", "deploy", "too"], "B_body": "These changes are to coincide with the forthcoming change to dgeni-packages: https://github.com/angular/dgeni-packages/pull/10\n\nThere are a bunch of invalid jsdoc type expressions that will break if you use the new dgeni tagParser.  This PR will fix those.  Unfortunately, the docs will look wrong if we merge them before the new tagParser arrives.\n", "B_clean_body": ["these", "chang", "are", "coincid", "forthcom", "chang", "dgeni", "packag", "http", "packag", "pull", "10", "github", "com", "angular", "dgeni", "there", "are", "bunch", "invalid", "jsdoc", "type", "express", "that", "will", "break", "you", "use", "new", "dgeni", "tagpars", "tag", "parser", "thi", "pr", "will", "fix", "those", "unfortun", "doc", "will", "look", "wrong", "we", "merg", "them", "befor", "new", "tagpars", "tag", "parser", "arriv"], "title_sim": [0.03704371931875398], "body_sim": [0.5079595463171072], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 979}, {"A_title": "fix(AngularPublic): expose missing angular public methods", "A_clean_title": ["fix", "angularpubl", "angular", "public", "expos", "miss", "angular", "public", "method"], "B_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "B_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "A_body": "- expose lowercase, uppercase and isDate to angular public api\n- remove unnecessary extention of jqLite at an early stage\n", "A_clean_body": ["expos", "lowercas", "uppercas", "isdat", "date", "angular", "public", "api", "remov", "unnecessari", "extent", "jqlite", "jq", "lite", "at", "earli", "stage"], "B_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "B_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "title_sim": [0.11949920165761149], "body_sim": [0.0714567099191853], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 910}, {"A_title": "only use window.jQuery if it supports required jQuery.fn.on", "A_clean_title": ["onli", "use", "window", "jqueri", "queri", "it", "support", "requir", "jqueri", "fn", "queri"], "B_title": "chore(travis: fix deployment condition to include tagged commits", "B_clean_title": ["chore", "travi", "fix", "deploy", "condit", "includ", "tag", "commit"], "A_body": "This is a safe and simple fix to the legacy jQuery situation referenced in #2163 until the API in issue #608 is refined and implemented.\n", "A_clean_body": ["thi", "safe", "simpl", "fix", "legaci", "jqueri", "queri", "situat", "referenc", "2163", "until", "api", "issu", "608", "refin", "implement"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.10102379058183107], "body_sim": [0.08955780903771242], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1376}, {"A_title": "chore(npm): publish artifacts to npm", "A_clean_title": ["chore", "npm", "publish", "artifact", "npm"], "B_title": "Revert ng style regression for 1.3.x", "B_clean_title": ["revert", "ng", "style", "regress"], "A_body": "Note that there are still a few pending tasks before this can land, namely getting permissions for all of the package names on npm:\n- ~~[angular](https://www.npmjs.org/package/angular)~~ \u2013 got it. Thanks @bclinkinbeard!\n- ~~[angular-animate](https://www.npmjs.org/package/angular-animate)~~ \u2013 got it. thanks @pitbeast!\n- ~~[angular-cookies](https://www.npmjs.org/package/angular-cookies)~~ \u2013 got it. Thanks @petermelias!\n- ~~[angular-mocks](https://www.npmjs.org/package/angular-mocks)~~ \u2013 got it. Thanks @zizzamia!\n- ~~[angular-route](https://www.npmjs.org/package/angular-route)~~ \u2013 got it. Thanks @mljsimone!\n- ~~[angular-resource](https://www.npmjs.org/package/angular-resource)~~ \u2013 got it. Thanks @roylines!\n- ~~[angular-sanitize](https://www.npmjs.org/package/angular-sanitize)~~ \u2013 got it. Thanks @akalinovski!\n\nIf you own one of these packages, you can help by adding user \"angularcore\" to the package\n### unclaimed:\n- angular-aria\n- angular-i18n\n- angular-loader\n- angular-scenario\n- angular-touch\n- angular-messages\n\n~~I also still need to add `package.json` for each `bower-angular-*` repo (since that's how we'll be publishing these artifacts).~~ done!\n\nCloses #2877 \n", "A_clean_body": ["note", "that", "there", "are", "still", "few", "pend", "task", "befor", "thi", "land", "name", "get", "permiss", "all", "packag", "name", "npm", "angular", "http", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "bclinkinbeard", "angular", "anim", "http", "anim", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "pitbeast", "angular", "cooki", "http", "cooki", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "petermelia", "angular", "mock", "http", "mock", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "zizzamia", "angular", "rout", "http", "rout", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "mljsimon", "angular", "resourc", "http", "resourc", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "roylin", "angular", "sanit", "http", "sanit", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "akalinovski", "you", "own", "one", "these", "packag", "you", "help", "by", "ad", "user", "angularcor", "packag", "unclaim", "angular", "aria", "angular", "i18n", "angular", "loader", "angular", "scenario", "angular", "touch", "angular", "messag", "~~i", "also", "still", "need", "add", "packag", "json", "each", "bower", "angular", "repo", "sinc", "that", "'s", "how", "we", "'ll", "publish", "these", "artifact", "done", "close", "2877"], "B_body": "I know, 1.4 is around the corner, but this should be handled nevertheless.\n", "B_clean_body": ["know", "around", "corner", "but", "thi", "handl", "nevertheless"], "title_sim": [-0.0026278093779316795], "body_sim": [0.1259526897840499], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 219}, {"A_title": "refactor($parse): add lgalfaso's refactors and suggestions", "A_clean_title": ["refactor", "pars", "add", "lgalfaso", "'s", "refactor", "suggest"], "B_title": "wip: feat(ngModel): run formatters / setModelValue", "B_clean_title": ["wip", "feat", "ngmodel", "ng", "model", "run", "formatt", "setmodelvalu", "set", "model", "valu"], "A_body": "@lgalfaso's PR #7543 had two aspects of it that I didn't include in my last changes to $parse (#7552, #7555)\n- Lexer should only take care of `constant`, and the Parser should deduce that a _primary_ `constant` is also a `literal`\n- Simplify the logic of Parser.filter \n", "A_clean_body": ["lgalfaso", "'s", "pr", "7543", "had", "two", "aspect", "it", "that", "did", "n't", "includ", "my", "last", "chang", "pars", "7552", "7555", "lexer", "onli", "take", "care", "constant", "parser", "deduc", "that", "primari", "constant", "also", "liter", "simplifi", "logic", "parser", "filter"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's currently no way to manually run the model -> view pipeline / formatters\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAn API to run the whole pipeline / the formatters is introduced.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nThe PR includes both a `$format` and a `$setModelValue` function. I think only one is needed, we just need to decide which one.\r\n\r\n$format:\r\n\r\n- PRO: does the most needed thing, very straightforward: run the formatters and updates the viewValue\r\n- CON: developer must run $render manually\r\n- CON: empty classes are set even though the DOM is not updated. Could be moved to $render()\r\n- CON: no equivalent on the view -> model side (inconsistent API)\r\n\r\n$setModelValue\r\n- PRO: equivalent to $setViewValue, runs the whole pipeline\r\n- CON: unintuitive that the function argument should / must be set to the current $modelValue, so the control does not get out of sync with the scope (same behavior as $setViewValue though)\r\n- CON: only runs $render if the viewValue has actually changed.\r\n- CON: always runs the validation, even though it might not be necessary\r\n\r\nBoth methods can handle the basic case, where an app developer wants to run the formatters the view -> model pipeline has been run, see https://github.com/angular/angular.js/issues/3407 or https://github.com/angular/angular.js/pull/5221\r\n\r\nI personally tend to introduce `$format` as it has the smaller surface area and introduces fewer side effects. The full model -> view pipeline is not really needed for most cases.\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "current", "no", "way", "manual", "run", "model", "view", "pipelin", "formatt", "**what", "new", "behavior", "thi", "featur", "chang", "api", "run", "whole", "pipelin", "formatt", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "pr", "includ", "both", "format", "setmodelvalu", "set", "model", "valu", "function", "think", "onli", "one", "need", "we", "just", "need", "decid", "which", "one", "format", "pro", "most", "need", "thing", "veri", "straightforward", "run", "formatt", "updat", "viewvalu", "view", "valu", "con", "develop", "must", "run", "render", "manual", "con", "empti", "class", "are", "set", "even", "though", "dom", "not", "updat", "could", "move", "render", "con", "no", "equival", "view", "model", "side", "inconsist", "api", "setmodelvalu", "set", "model", "valu", "pro", "equival", "setviewvalu", "set", "view", "valu", "run", "whole", "pipelin", "con", "unintuit", "that", "function", "argument", "must", "set", "current", "modelvalu", "model", "valu", "so", "control", "not", "get", "out", "sync", "scope", "same", "behavior", "as", "setviewvalu", "set", "view", "valu", "though", "con", "onli", "run", "render", "viewvalu", "view", "valu", "ha", "actual", "chang", "con", "alway", "run", "valid", "even", "though", "it", "might", "not", "necessari", "both", "method", "handl", "basic", "case", "where", "app", "develop", "want", "run", "formatt", "view", "model", "pipelin", "ha", "been", "run", "see", "http", "github", "com", "angular", "angular", "js", "issu", "3407", "or", "http", "github", "com", "angular", "angular", "js", "pull", "5221", "person", "tend", "introduc", "format", "as", "it", "ha", "smaller", "surfac", "area", "introduc", "fewer", "side", "effect", "full", "model", "view", "pipelin", "not", "realli", "need", "most", "case"], "title_sim": [-0.03895032307476726], "body_sim": [0.39857012068648434], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.060714291202400086, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1217}, {"A_title": "chore(*): normalize Vojta's email in .mailmap correctly", "A_clean_title": ["chore", "normal", "vojta", "'s", "email", "mailmap", "correctli"], "B_title": "chore(gitignore): exclude .log and .stackdump files", "B_clean_title": ["chore", "gitignor", "exclud", "log", "stackdump", "file"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nVojta's mails are not normalized.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThey are normalized.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "vojta", "'s", "mail", "are", "not", "normal", "**what", "new", "behavior", "thi", "featur", "chang", "they", "are", "normal", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**"], "B_body": "Ignore those pesky .log files that are often generated by node and .stackdump, which is created by ConEmu.\n", "B_clean_body": ["ignor", "those", "peski", "log", "file", "that", "are", "often", "gener", "by", "node", "stackdump", "which", "creat", "by", "conemu", "con", "emu"], "title_sim": [0.29426180412842906], "body_sim": [0.0937752706511853], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 585}, {"A_title": "chore(yarn): rely on Travis built-in Yarn support, update Yarn in Jenkins", "A_clean_title": ["chore", "yarn", "reli", "travi", "built", "yarn", "support", "updat", "yarn", "jenkin"], "B_title": "feat(input): add support for input[type=range]", "B_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe install an old Yarn verison manually.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nOn Travis we rely on built-in Yarn support and we only cache the Yarn cache, not `node_modules`. We install a new Yarn verison manually on Jenkins; the location of the install script changed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "instal", "old", "yarn", "verison", "manual", "**what", "new", "behavior", "thi", "featur", "chang", "travi", "we", "reli", "built", "yarn", "support", "we", "onli", "cach", "yarn", "cach", "not", "node", "modul", "we", "instal", "new", "yarn", "verison", "manual", "jenkin", "locat", "instal", "script", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "title_sim": [0.33491156440599407], "body_sim": [0.893791975643108], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 259}, {"A_title": "docs(linky): mark \"target\" param as optional in linky filter", "A_clean_title": ["doc", "linki", "mark", "target", "param", "as", "option", "linki", "filter"], "B_title": "benchmarks - remove no longer applicable, add $watchCollection", "B_clean_title": ["benchmark", "remov", "no", "longer", "applic", "add", "watchcollect", "watch", "collect"], "A_body": "This argument is optional in practice, and it is not provided in many of the examples in the documentation.\r\nIts optional presence is handled here:\r\nhttps://github.com/angular/angular.js/blob/master/src/ngSanitize/filter/linky.js#L185.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe second argument to ngSanitize's \"linky\" filter is marked as non-optional, it is handled as optional and usage shows it as being optional.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nngSanitize's \"linky\" filter has it's second parameter marked as optional.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "argument", "option", "practic", "it", "not", "provid", "mani", "exampl", "document", "it", "option", "presenc", "handl", "here", "http", "js", "github", "com", "angular", "angular", "js", "blob", "master", "src", "ngsanit", "filter", "linki", "ng", "sanit", "l185", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "second", "argument", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "mark", "as", "non", "option", "it", "handl", "as", "option", "usag", "show", "it", "as", "be", "option", "**what", "new", "behavior", "thi", "featur", "chang", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "ha", "it", "'s", "second", "paramet", "mark", "as", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Removing\r\n* cases accessing `constructor` that previously had extra \"security\" applied\r\n* the `bmPeWatchLiteral` directive that was making literals `$watch`-able, now they can be watched normally\r\n\r\nAdding\r\n* some `$watchCollection` tests", "B_clean_body": ["remov", "case", "access", "constructor", "that", "previous", "had", "extra", "secur", "appli", "bmpewatchliter", "bm", "pe", "watch", "liter", "direct", "that", "wa", "make", "liter", "watch", "abl", "now", "they", "watch", "normal", "ad", "some", "watchcollect", "watch", "collect", "test"], "title_sim": [-0.006351347428998615], "body_sim": [0.06718587302846848], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 148}, {"A_title": "feat($rootScope): allow suspending and resuming watchers on scope", "A_clean_title": ["feat", "rootscop", "root", "scope", "allow", "suspend", "resum", "watcher", "scope"], "B_title": "docs($compile): add known issues with replace:true", "B_clean_title": ["doc", "compil", "add", "known", "issu", "replac", "true"], "A_body": "This is a rebase of @shahata's original PR at #10658.\r\nWe need to think about @lgalfaso's concerns (https://github.com/angular/angular.js/pull/10658#issuecomment-75211793 and https://github.com/angular/angular.js/pull/10658#issuecomment-78611215) before merging...", "A_clean_body": ["thi", "rebas", "shahata", "'s", "origin", "pr", "at", "10658", "we", "need", "think", "about", "lgalfaso", "'s", "concern", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "75211793", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "78611215", "befor", "merg"], "B_body": "An old PR that I had lying around.\r\nTheoretically we could also close the issues that are referenced in the docs, because they are very unlikel to get fixed - especially the directive deduplication and the attribute merging are basically wontfixes.", "B_clean_body": ["old", "pr", "that", "had", "lie", "around", "theoret", "we", "could", "also", "close", "issu", "that", "are", "referenc", "doc", "becaus", "they", "are", "veri", "unlikel", "get", "fix", "especi", "direct", "dedupl", "attribut", "merg", "are", "basic", "wontfix"], "title_sim": [0.0662863795176714], "body_sim": [0.2950837620211077], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06495095271835559, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 158}, {"A_title": "fix(booleanAttrs): convert to boolean", "A_clean_title": ["fix", "booleanattr", "boolean", "attr", "convert", "boolean"], "B_title": "docs(jqlite): add known issue", "B_clean_title": ["doc", "jqlite", "add", "known", "issu"], "A_body": "jQuery's attr() does not handle 0 as false, when it comes to boolean attrs.\n\nAnother solution might be to not set attr() for boolean attrs at all...\n", "A_clean_body": ["jqueri", "queri", "'s", "attr", "not", "handl", "as", "fals", "when", "it", "come", "boolean", "attr", "anoth", "solut", "might", "not", "set", "attr", "boolean", "attr", "at", "all"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.001107176398154428], "body_sim": [0.017826008648013845], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.014976609439485393, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1463}, {"A_title": "test($log): fix up to work with Safari 9", "A_clean_title": ["test", "log", "fix", "up", "work", "safari"], "B_title": "docs(contributing): fix indentation for proper Markdown syntax", "B_clean_title": ["doc", "contribut", "fix", "indent", "proper", "markdown", "syntax"], "A_body": "On Safari 9.0.2, you are not allowed to write to `sourceUrl` or `line`\non a native Error object.\n\nThis commit uses a custom error instead.\n", "A_clean_body": ["safari", "you", "are", "not", "allow", "write", "sourceurl", "sourc", "url", "or", "line", "nativ", "error", "object", "thi", "commit", "use", "custom", "error", "instead"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nMarkdown isn't displayed properly.\n\n**What is the new behavior (if this is a feature change)?**\nMarkdown is displayed properly.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "markdown", "n't", "display", "properli", "**what", "new", "behavior", "thi", "featur", "chang", "markdown", "display", "properli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.040223853755356066], "body_sim": [0.1422144464856248], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 208}, {"A_title": "test($compile): use FQDN for img[src]", "A_clean_title": ["test", "compil", "use", "fqdn", "img", "src"], "B_title": "refactor($animate): use CSS3 transition/animation events instead of $timeouts to track ongoing animations", "B_clean_title": ["refactor", "anim", "use", "css3", "transit", "anim", "event", "instead", "timeout", "track", "ongo", "anim"], "A_body": "img[src]=\"https://foo\" has the unfortunate problem that the browser will\nactually try retrieving the resource the non FQDN foo.  The local DNS\nmight suffix a domain to this, resolve it, and try to present a\ncertificate for the https request and prompt the user to pick a\ncertificate. This commit avoids that by making foo a FQDN.  Note that it\nmight be better to replace foo with example.com (ref\nhttp://tools.ietf.org/html/rfc2606#section-3).\n", "A_clean_body": ["img", "src", "http", "foo", "ha", "unfortun", "problem", "that", "browser", "will", "actual", "tri", "retriev", "resourc", "non", "fqdn", "foo", "local", "dn", "might", "suffix", "domain", "thi", "resolv", "it", "tri", "present", "certif", "http", "request", "prompt", "user", "pick", "certif", "thi", "commit", "avoid", "that", "by", "make", "foo", "fqdn", "note", "that", "it", "might", "better", "replac", "foo", "exampl", "com", "ref", "http", "ietf", "tool", "org", "html", "rfc2606", "section"], "B_body": "Closes #3629\nCloses #3874\n", "B_clean_body": ["close", "3629", "close", "3874"], "title_sim": [0.01256202622268219], "body_sim": [0.036393133245003866], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 69}, {"A_title": "feat($timeout): add $timeout service that superceeds $deferred", "A_clean_title": ["feat", "timeout", "add", "timeout", "servic", "that", "superce", "defer"], "B_title": "Scenario runner binding throw", "B_clean_title": ["scenario", "runner", "bind", "throw"], "A_body": "$timeout has a better name ($defer got often confused with something related to $q) and\nis actually promise based with cancelation support.\n\nWith this commit the $defer service is deprecated and will be removed before 1.0.\n\nCloses #704, #532\n", "A_clean_body": ["timeout", "ha", "better", "name", "defer", "got", "often", "confus", "someth", "relat", "actual", "promis", "base", "cancel", "support", "thi", "commit", "defer", "servic", "deprec", "will", "remov", "befor", "close", "704", "532"], "B_body": "I was wrong about throw being the same as done(error) in a DSL statement. Throw is an \"error\" and done(error) is a \"failure\".\n\nAlso, there was a test for the binding not matching before, but it tested in a condition where there were no bindings at all in the document in which case elements() in your new binding() would still throw.\n\nI added a new test that checks for bindings existing but none of them matching.\n\nI also fixed an issue where you were using contains() and checking if the return value was >= 0 but the function returns a boolean and false >= 0 is true. I'll code review more carefully next time.\n", "B_clean_body": ["wa", "wrong", "about", "throw", "be", "same", "as", "done", "error", "dsl", "statement", "throw", "error", "done", "error", "failur", "also", "there", "wa", "test", "bind", "not", "match", "befor", "but", "it", "test", "condit", "where", "there", "were", "no", "bind", "at", "all", "document", "which", "case", "element", "your", "new", "bind", "would", "still", "throw", "ad", "new", "test", "that", "check", "bind", "exist", "but", "none", "them", "match", "also", "fix", "issu", "where", "you", "were", "contain", "check", "return", "valu", "wa", "but", "function", "return", "boolean", "fals", "true", "'ll", "code", "review", "more", "care", "next", "time"], "title_sim": [0.02067700408924613], "body_sim": [0.1772546473966352], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02996171566761771, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 573}, {"A_title": "test($compile): use FQDN for img[src]", "A_clean_title": ["test", "compil", "use", "fqdn", "img", "src"], "B_title": "chore(travis): turn on caching for node_modules and bower_components directories", "B_clean_title": ["chore", "travi", "turn", "cach", "node", "modul", "bower", "compon", "directori"], "A_body": "img[src]=\"https://foo\" has the unfortunate problem that the browser will\nactually try retrieving the resource the non FQDN foo.  The local DNS\nmight suffix a domain to this, resolve it, and try to present a\ncertificate for the https request and prompt the user to pick a\ncertificate. This commit avoids that by making foo a FQDN.  Note that it\nmight be better to replace foo with example.com (ref\nhttp://tools.ietf.org/html/rfc2606#section-3).\n", "A_clean_body": ["img", "src", "http", "foo", "ha", "unfortun", "problem", "that", "browser", "will", "actual", "tri", "retriev", "resourc", "non", "fqdn", "foo", "local", "dn", "might", "suffix", "domain", "thi", "resolv", "it", "tri", "present", "certif", "http", "request", "prompt", "user", "pick", "certif", "thi", "commit", "avoid", "that", "by", "make", "foo", "fqdn", "note", "that", "it", "might", "better", "replac", "foo", "exampl", "com", "ref", "http", "ietf", "tool", "org", "html", "rfc2606", "section"], "B_body": "The cache behavior is documented at http://docs.travis-ci.com/user/caching/\n\nThis commit also disabled our custom caching via npm-bundler-deps.sh\n", "B_clean_body": ["cach", "behavior", "document", "at", "http", "travi", "ci", "doc", "com", "user", "cach", "thi", "commit", "also", "disabl", "our", "custom", "cach", "via", "npm", "bundler", "dep", "sh"], "title_sim": [-0.008702017953519513], "body_sim": [0.19535671555792172], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 601}, {"A_title": "more important cookie service fixes", "A_clean_title": ["more", "import", "cooki", "servic", "fix"], "B_title": "chore(node): add karma launchers for Edge, IE, and Safari", "B_clean_title": ["chore", "node", "add", "karma", "launcher", "edg", "ie", "safari"], "A_body": "- preserve existing cookies\n- correctly handle cases when browser doesn't set cookies\n", "A_clean_body": ["preserv", "exist", "cooki", "correctli", "handl", "case", "when", "browser", "n't", "set", "cooki"], "B_body": "That makes it easier to test these browsers locally\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["that", "make", "it", "easier", "test", "these", "browser", "local", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.04457718706324638], "body_sim": [0.08448603095561504], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2665}, {"A_title": "Symlinking to bash in test.sh", "A_clean_title": ["symlink", "bash", "test", "sh"], "B_title": "Feat: ngRef directive to publish controllers, or elements into current scope ", "B_clean_title": ["feat", "ngref", "ng", "ref", "direct", "publish", "control", "or", "element", "into", "current", "scope"], "A_body": "As discussed in \n\nhttp://groups.google.com/group/angular/browse_thread/thread/235d69ffc609e1a9#\n\nThanks in advance.\n", "A_clean_body": ["as", "discuss", "http", "googl", "group", "com", "group", "angular", "brows", "thread", "thread", "235d69ffc609e1a9", "thank", "advanc"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\npublish a component's or element-directive's, or jqlite wrapped DOM element into the containing scope\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThis is a rebased and updated version of https://github.com/angular/angular.js/pull/14080 with the following changes:\r\n\r\n- publish the jqlite-wrapped DOM element instead of the raw DOM element. In AngularJS, we don't deal with raw DOM elements, so this would create an inconsistency\r\n- introduce a `ngRefElement` attribute that indicates that you always want to publish the jqlite-wrapped DOM element, even if a controller exists\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "new", "behavior", "thi", "featur", "chang", "publish", "compon", "'s", "or", "element", "direct", "'s", "or", "jqlite", "wrap", "dom", "element", "into", "contain", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "rebas", "updat", "version", "http", "github", "com", "angular", "angular", "js", "pull", "14080", "follow", "chang", "publish", "jqlite", "wrap", "dom", "element", "instead", "raw", "dom", "element", "angularj", "angular", "js", "we", "n't", "deal", "raw", "dom", "element", "so", "thi", "would", "creat", "inconsist", "introduc", "ngrefel", "ng", "ref", "element", "attribut", "that", "indic", "that", "you", "alway", "want", "publish", "jqlite", "wrap", "dom", "element", "even", "control", "exist"], "title_sim": [-0.08771948860913246], "body_sim": [0.21695605415016872], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2583}, {"A_title": "docs(ngRepeat): I added the phrase \"and by age\" on line 236", "A_clean_title": ["doc", "ngrepeat", "ng", "repeat", "ad", "phrase", "by", "age", "line", "236"], "B_title": "docs(ngOpen): add note about browser compatibility", "B_clean_title": ["doc", "ngopen", "ng", "open", "add", "note", "about", "browser", "compat"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo change in behavior introduced \n\n**What is the new behavior (if this is a feature change)?**\n\nNo change in behavior introduced\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example seems to also be filtering by age. It threw me off a bit because I was getting results when I entered numbers in the input field.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "chang", "behavior", "introduc", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "behavior", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "seem", "also", "filter", "by", "age", "it", "threw", "me", "off", "bit", "becaus", "wa", "get", "result", "when", "enter", "number", "input", "field"], "B_body": "- Add note about browser compatibility and recommend ng-show/ng-hide\n\nThis should address #7337.\n", "B_clean_body": ["add", "note", "about", "browser", "compat", "recommend", "ng", "hide", "show", "ng", "thi", "address", "7337"], "title_sim": [0.256467176067175], "body_sim": [0.06831185898587336], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 67}, {"A_title": "fix(testabilityPatch): reset cache after memory leak detection", "A_clean_title": ["fix", "testabilitypatch", "testabl", "patch", "reset", "cach", "after", "memori", "leak", "detect"], "B_title": "fix($parse): make promise unwrapping opt-in", "B_clean_title": ["fix", "pars", "make", "promis", "unwrap", "opt"], "A_body": "When you have a test failure in the angular.js project, which also causes a memory leak, such as a failure to dealocate an element or a scope, you often get a false-negative failure for every subsequent test. This change ensures that after such an error, the cache is reset so that subsequent tests can run normally.\n", "A_clean_body": ["when", "you", "have", "test", "failur", "angular", "js", "project", "which", "also", "caus", "memori", "leak", "such", "as", "failur", "dealoc", "element", "or", "scope", "you", "often", "get", "fals", "neg", "failur", "everi", "subsequ", "test", "thi", "chang", "ensur", "that", "after", "such", "error", "cach", "reset", "so", "that", "subsequ", "test", "run", "normal"], "B_body": "Previously promises found anywhere in the expression during expression\nevaluation would evaluate to undefined while unresolved and to the\nfulfillment value if fulfilled.\n\nThis is a feature that didn't prove to be wildly useful or popular,\nprimarily because of the dichotomy between data access in templates\n(accessed as raw values) and controller code (accessed as promises).\n\nIn most code we ended up resolving promises manually in controllers\nanyway and thus unifying the model access there.\n\nOther downsides of automatic promise unwrapping:\n- when building components it's often desirable to receive the\n  raw promises\n- adds complexity and slows down expression evaluation\n- makes expression code pre-generation unattractive due to the\n  amount of code that needs to be generated\n- makes IDE auto-completion and tool support hard\n- adds too much magic\n\nCloses #4158\nCloses #4270\n", "B_clean_body": ["previous", "promis", "found", "anywher", "express", "dure", "express", "evalu", "would", "evalu", "undefin", "while", "unresolv", "fulfil", "valu", "fulfil", "thi", "featur", "that", "did", "n't", "prove", "wildli", "use", "or", "popular", "primarili", "becaus", "dichotomi", "between", "data", "access", "templat", "access", "as", "raw", "valu", "control", "code", "access", "as", "promis", "most", "code", "we", "end", "up", "resolv", "promis", "manual", "control", "anyway", "thu", "unifi", "model", "access", "there", "other", "downsid", "automat", "promis", "unwrap", "when", "build", "compon", "it", "'s", "often", "desir", "receiv", "raw", "promis", "add", "complex", "slow", "down", "express", "evalu", "make", "express", "code", "pre", "gener", "unattract", "due", "amount", "code", "that", "need", "gener", "make", "ide", "auto", "complet", "tool", "support", "hard", "add", "too", "much", "magic", "close", "4158", "close", "4270"], "title_sim": [0.0819468209602801], "body_sim": [0.3164287308186629], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.004944413977753434, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 727}, {"A_title": "chore(docs-app): ensure ToC links contain the path", "A_clean_title": ["chore", "doc", "app", "ensur", "toc", "link", "contain", "path"], "B_title": "fix(ngOptions): remove selected attribute from unselected options", "B_clean_title": ["fix", "ngoption", "ng", "option", "remov", "select", "attribut", "unselect", "option"], "A_body": "Without the path the browser address changes so the hash\r\nfragment is directly on the base url. Then on refresh the\r\nbrowser navigates to an invalid page.\r\n\r\nCloses #16608\r\n", "A_clean_body": ["without", "path", "browser", "address", "chang", "so", "hash", "fragment", "directli", "base", "url", "then", "refresh", "browser", "navig", "invalid", "page", "close", "16608"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14892 nad #14419\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nWhen the select model changes, we add the \"selected\" attribute to the selected option, so that\nscreen readers know which option is selected.\n\nPreviously, we failed to remove the attribute when the model changed to match a different option, or\nthe unknown / empty option.\n\nWhen using \"track by\", the behavior would also show when a user selected an option, and then the\nmodel was changed, because track by watches the tracked expression, and calls the $render function\non change.\n\nThis fix reads the current select value, finds the matching option and removes the \"selected\"\nattribute.\n\nFixes #14892\nFixes #14419\nRelated #12731\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14892", "nad", "14419", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "when", "select", "model", "chang", "we", "add", "select", "attribut", "select", "option", "so", "that", "screen", "reader", "know", "which", "option", "select", "previous", "we", "fail", "remov", "attribut", "when", "model", "chang", "match", "differ", "option", "or", "unknown", "empti", "option", "when", "track", "by", "behavior", "would", "also", "show", "when", "user", "select", "option", "then", "model", "wa", "chang", "becaus", "track", "by", "watch", "track", "express", "call", "render", "function", "chang", "thi", "fix", "read", "current", "select", "valu", "find", "match", "option", "remov", "select", "attribut", "fix", "14892", "fix", "14419", "relat", "12731"], "title_sim": [0.19298515036086805], "body_sim": [0.11726370847126633], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0008484111346039388, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 711}, {"A_title": "Fix($animate) : svg element with classNameFilter animation fix.", "A_clean_title": ["fix", "anim", "svg", "element", "classnamefilt", "class", "name", "filter", "anim", "fix"], "B_title": "fix($parse): unwrap promise when setting a field", "B_clean_title": ["fix", "pars", "unwrap", "promis", "when", "set", "field"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nclassNameFilter for animation with svg element should work same as the other elements.\n\n**What is the current behavior? (You can also link to an open issue here)**\nclassNameFilter not working for svg element.\n\n**What is the new behavior (if this is a feature change)?**\nclassNameFilter also handles svg element.\n\n**Does this PR introduce a breaking change?**\nNO\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nThis PR fix #14508 issue.\n\nFix($animate) : svg element with classNameFilter animation fix.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "classnamefilt", "class", "name", "filter", "anim", "svg", "element", "work", "same", "as", "other", "element", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "classnamefilt", "class", "name", "filter", "not", "work", "svg", "element", "**what", "new", "behavior", "thi", "featur", "chang", "classnamefilt", "class", "name", "filter", "also", "handl", "svg", "element", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "pr", "fix", "14508", "issu", "fix", "anim", "svg", "element", "classnamefilt", "class", "name", "filter", "anim", "fix"], "B_body": "This fixes an inconsistency where you can't call the setter function\nwhen the expression resolves to a top level field name on a promise.\n\nSetting a field on an unresolved promise will throw an exception.  (This\nshouldn't really happen in your template/js code and points to a\nprogramming error.)\n\nCloses #1827\n", "B_clean_body": ["thi", "fix", "inconsist", "where", "you", "ca", "n't", "call", "setter", "function", "when", "express", "resolv", "top", "level", "field", "name", "promis", "set", "field", "unresolv", "promis", "will", "throw", "except", "thi", "n't", "realli", "happen", "your", "templat", "js", "code", "point", "program", "error", "close", "1827"], "title_sim": [0.01167195486527653], "body_sim": [0.1135052283422143], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.029518187752001164, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1014}, {"A_title": "revert: fix($resource): allow params in `hostname` (except for IPv6 addresses)", "A_clean_title": ["revert", "fix", "resourc", "allow", "param", "hostnam", "except", "ipv6", "pv6", "address"], "B_title": "docs(ngRepeat): improve info about tracking", "B_clean_title": ["doc", "ngrepeat", "ng", "repeat", "improv", "info", "about", "track"], "A_body": "This reverts commit 7f45b5fee79e2cb87d65bdd015d455304cec1ee4.", "A_clean_body": ["thi", "revert", "commit", "7f45b5fee79e2cb87d65bdd015d455304cec1ee4"], "B_body": "This is a follow-up to #16334 because I came to the conclusions that the relevant docs needed a bigger overhaul.\r\n\r\n- deduplicate info between docs section and arguments\r\n- don't draw too much attention to track by  ...\r\n- ... but highlight its drawbacks when used with one-time bindings\r\n- add example to show how tracking affects collection updates\r\n- clarify duplicates support for specific tracking expressions\r\n\r\nCloses #16332\r\nCloses #16334\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "follow", "up", "16334", "becaus", "came", "conclus", "that", "relev", "doc", "need", "bigger", "overhaul", "dedupl", "info", "between", "doc", "section", "argument", "n't", "draw", "too", "much", "attent", "track", "by", "but", "highlight", "it", "drawback", "when", "use", "one", "time", "bind", "add", "exampl", "show", "how", "track", "affect", "collect", "updat", "clarifi", "duplic", "support", "specif", "track", "express", "close", "16332", "close", "16334", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.051661430150612836], "body_sim": [0.5321147583552907], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 390}, {"A_title": "docs(jqLite): document append doesn't work well with a multi-node object", "A_clean_title": ["doc", "jqlite", "jq", "lite", "document", "append", "n't", "work", "well", "multi", "node", "object"], "B_title": "docs(component): clarify component usage", "B_clean_title": ["doc", "compon", "clarifi", "compon", "usag"], "A_body": "Contrary to jQuery jqLite's append doesn't clone elements so will not work\r\ncorrectly when invoked on a jqLite object containing more than one DOM node.\r\n\r\nRefs #11446\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#11446 (it documents the existing difference from jQuery)\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["contrari", "jqueri", "queri", "jqlite", "jq", "lite", "'s", "append", "n't", "clone", "element", "so", "will", "not", "work", "correctli", "when", "invok", "jqlite", "jq", "lite", "object", "contain", "more", "than", "one", "dom", "node", "ref", "11446", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "11446", "it", "document", "exist", "differ", "jqueri", "queri", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update for issue #15042 \n\n**What is the current behavior? (You can also link to an open issue here)**\n\noutdated documentation\n\n**What is the new behavior (if this is a feature change)?**\n\nN/A\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "issu", "15042", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "outdat", "document", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [0.09826885599481634], "body_sim": [0.8500421741684966], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 567}, {"A_title": "docs/chore(version stuff): fix how versions are handled in builds and docs", "A_clean_title": ["doc", "chore", "version", "stuff", "fix", "how", "version", "are", "handl", "build", "doc"], "B_title": "docs($sce): grammar fix - there was a word omitted", "B_clean_title": ["doc", "sce", "grammar", "fix", "there", "wa", "word", "omit"], "A_body": "There are three somewhat independent commits.\n- The first is a simple bug fix in the docs\n- The second updates how the versions are managed in the docs\n- The third does the same for the build\n", "A_clean_body": ["there", "are", "three", "somewhat", "independ", "commit", "first", "simpl", "bug", "fix", "doc", "second", "updat", "how", "version", "are", "manag", "doc", "third", "same", "build"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\nno change\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n...teeny letter missing.  Just a grammar change.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "teeni", "letter", "miss", "just", "grammar", "chang"], "title_sim": [0.22455003579684416], "body_sim": [0.3605565539183461], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 773}, {"A_title": "fix(guide) broken title overflow in navlist", "A_clean_title": ["fix", "guid", "broken", "titl", "overflow", "navlist"], "B_title": "feat(Grunt): add source maps to all min files", "B_clean_title": ["feat", "grunt", "add", "sourc", "map", "all", "min", "file"], "A_body": "## Before\n\n![screen shot 2013-08-30 at 1 25 41 pm](https://f.cloud.github.com/assets/1016365/1060537/8829f31a-11b3-11e3-8620-9751954915f4.png)\n## After\n\n![screen shot 2013-08-30 at 1 25 31 pm](https://f.cloud.github.com/assets/1016365/1060540/8b6e9efe-11b3-11e3-8777-fa52f5236a74.png)\n", "A_clean_body": ["befor", "screen", "shot", "2013", "08", "30", "at", "25", "41", "pm", "http", "11b3", "11e3", "8620", "cloud", "github", "9751954915f4", "png", "com", "asset", "1016365", "1060537", "8829f31a", "after", "screen", "shot", "2013", "08", "30", "at", "25", "31", "pm", "http", "11b3", "11e3", "8777", "cloud", "github", "fa52f5236a74", "png", "com", "asset", "1016365", "1060540", "8b6e9ef"], "B_body": "Generate source map files when build step is ran and adds source map\nheaders to all min files.\n\nSource map url must be appended to the min file otherwise the line\noffsets will be off.\n\nInspired by Ryan Seddon (PR #2858)\n\nCloses #1714\n", "B_clean_body": ["gener", "sourc", "map", "file", "when", "build", "step", "ran", "add", "sourc", "map", "header", "all", "min", "file", "sourc", "map", "url", "must", "append", "min", "file", "otherwis", "line", "offset", "will", "off", "inspir", "by", "ryan", "seddon", "pr", "2858", "close", "1714"], "title_sim": [-0.07045545002101515], "body_sim": [-0.001569456397344049], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 83}, {"A_title": "Fix failing unit tests in IE7 (Binder, select widget)", "A_clean_title": ["fix", "fail", "unit", "test", "ie7", "binder", "select", "widget"], "B_title": "docs(guide/Providers): Remove redundant apology", "B_clean_title": ["doc", "guid", "provid", "remov", "redund", "apolog"], "A_body": "The fix does not change any production code, we only need to ignore couple of attributes that IE7 should not display:\n- value attribute for LI\n- selected attribut for SELECT\n\nSimplified condition in compiler test, this should have been part of f9f0905f4ad7b1d0bb9b606a6d25fb1f88354a78\n", "A_clean_body": ["fix", "not", "chang", "ani", "product", "code", "we", "onli", "need", "ignor", "coupl", "attribut", "that", "ie7", "not", "display", "valu", "attribut", "li", "select", "attribut", "select", "simplifi", "condit", "compil", "test", "thi", "have", "been", "part", "f9f0905f4ad7b1d0bb9b606a6d25fb1f88354a78"], "B_body": "There is no longer a service called \"service\", so this is confusing.", "B_clean_body": ["there", "no", "longer", "servic", "call", "servic", "so", "thi", "confus"], "title_sim": [0.04870587730986241], "body_sim": [0.12760397599469428], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2085}, {"A_title": "feat(filterFilter): allow overwriting the special `$` property name", "A_clean_title": ["feat", "filterfilt", "filter", "filter", "allow", "overwrit", "special", "properti", "name"], "B_title": "feat($compile): support directive virtual groups", "B_clean_title": ["feat", "compil", "support", "direct", "virtual", "group"], "A_body": "Previously, the special property name that would match against any\nproperty was hard-coded to `$`.\nWith this commit, the user can specify an arbitrary property name,\nby passing a 4th argument to `filterFilter()`. E.g.:\n\n``` js\nvar items = [{foo: 'bar'}, {baz: 'qux'}];\nvar expr  =  {'%': 'bar'};\n\nconsole.log(filterFilter(items, expr, null, '%'));   // [{foo: 'bar'}]\n```\n\nFixes #13313\n", "A_clean_body": ["previous", "special", "properti", "name", "that", "would", "match", "against", "ani", "properti", "wa", "hard", "code", "thi", "commit", "user", "specifi", "arbitrari", "properti", "name", "by", "pass", "4th", "argument", "filterfilt", "filter", "filter", "js", "var", "item", "foo", "'bar", "baz", "'qux", "var", "expr", "'bar", "consol", "log", "filterfilt", "filter", "filter", "item", "expr", "null", "foo", "'bar", "fix", "13313"], "B_body": "By appending  X-start and X-end to a directive it is now possible\nto have the directive act on a group of elements.\n\nIt is now possible to iterate over multiple elements like so:\n\n```\n<table>\n  <tr ng-repeat-start=\"item in list\">I get repeated</tr>\n  <tr ng-repeat-end>I also get repeated</tr>\n</table>\n```\n", "B_clean_body": ["by", "append", "start", "end", "direct", "it", "now", "possibl", "have", "direct", "act", "group", "element", "it", "now", "possibl", "iter", "over", "multipl", "element", "like", "so", "tabl", "tr", "ng", "repeat", "start=", "item", "list", "get", "repeat", "tr", "tr", "ng", "repeat", "end", "also", "get", "repeat", "tr", "tabl"], "title_sim": [0.11506283546741308], "body_sim": [0.1944902492497051], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03417445900944368, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 910}, {"A_title": "docs ($compile): add error documentation for noslot error in $compile", "A_clean_title": ["doc", "compil", "add", "error", "document", "noslot", "error", "compil"], "B_title": "fix($compile): Allow literals in isolate scope references", "B_clean_title": ["fix", "compil", "allow", "liter", "isol", "scope", "refer"], "A_body": "there was no error page for the $compile:noslot error\r\n\r\nthis resolves #15790\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["there", "wa", "no", "error", "page", "compil", "noslot", "error", "thi", "resolv", "15790", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "When a component uses an isolate scope reference\nand the the component is used with an object literal\na new object is created on every evaluation.\nTherefore the compiler needs to compare\nthe values of the parent and the isolate scope\nusing object equality and not object reference\nequality.\n\nFixes #5296.\n", "B_clean_body": ["when", "compon", "use", "isol", "scope", "refer", "compon", "use", "object", "liter", "new", "object", "creat", "everi", "evalu", "therefor", "compil", "need", "compar", "valu", "parent", "isol", "scope", "object", "equal", "not", "object", "refer", "equal", "fix", "5296"], "title_sim": [0.5114893731391283], "body_sim": [0.05035504891351077], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1190}, {"A_title": "docs(CONTRIBUTING.md): Updated commit types.", "A_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "B_title": "docs(app): matches anchor tags to current docs theme", "B_clean_title": ["doc", "app", "match", "anchor", "tag", "current", "doc", "theme"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "B_body": "Updates the styles for the anchor tags to match the current docs theme.\n", "B_clean_body": ["updat", "style", "anchor", "tag", "match", "current", "doc", "theme"], "title_sim": [0.32102743317398325], "body_sim": [0.24598589324316367], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 691}, {"A_title": "fix(scenario): make browser().location() working if ng-app on other than...", "A_clean_title": ["fix", "scenario", "make", "browser", "locat", "work", "ng", "app", "other", "than"], "B_title": "docs(jqlite): add known issue", "B_clean_title": ["doc", "jqlite", "add", "known", "issu"], "A_body": "Make browser().location().\\* methods to work even if ng-app defined on other element than html.\n- pass $injector into action\n", "A_clean_body": ["make", "browser", "locat", "method", "work", "even", "ng", "app", "defin", "other", "element", "than", "html", "pass", "injector", "into", "action"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.0161013144983107], "body_sim": [0.011016211414289198], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1453}, {"A_title": "docs(CONTRIBUTING.md): Updated commit types.", "A_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "B_title": "(cherry-pick) fix($browser): prevent infinite digests when clearing the hash of a url", "B_clean_title": ["cherri", "pick", "fix", "browser", "prevent", "infinit", "digest", "when", "clear", "hash", "url"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "B_body": "By using `location.hash` to update the current browser location when only\nthe hash has changed, we prevent the browser from attempting to reload.\n\nCloses #9629\nCloses #9635\nCloses #10228\nCloses #10308\n", "B_clean_body": ["by", "locat", "hash", "updat", "current", "browser", "locat", "when", "onli", "hash", "ha", "chang", "we", "prevent", "browser", "attempt", "reload", "close", "9629", "close", "9635", "close", "10228", "close", "10308"], "title_sim": [0.08887094333073345], "body_sim": [0.13754310808320427], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 684}, {"A_title": "fix(ngMessages): create new scope for ngMessage, clean it up correctly", "A_clean_title": ["fix", "ngmessag", "ng", "messag", "creat", "new", "scope", "ngmessag", "ng", "messag", "clean", "it", "up", "correctli"], "B_title": "Scenario runner element", "B_clean_title": ["scenario", "runner", "element"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n#14307\n\n**What is the new behavior (if this is a feature change)?**\nngMessage creates a child scope instead of reusing the ngMessages scope.\n\n**Does this PR introduce a breaking change?**\nPossibly. Needs investigation.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nPreviously, ngMessage elements used the same scope as ngMessages. When ngMessage\nhas interpolation in the textContent, then removing the message would not remove\nthe watcher from the scope - it would only be removed when the whole ngMessages\nelement was removed.\n\nThis commit changes the ngMessage transclude function to create a new child scope\ninstead, which can be destroyed safely when the message element is removed and\nthe message is detached\n\nFixes #14307\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "14307", "**what", "new", "behavior", "thi", "featur", "chang", "ngmessag", "ng", "messag", "creat", "child", "scope", "instead", "reus", "ngmessag", "ng", "messag", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "need", "investig", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "previous", "ngmessag", "ng", "messag", "element", "use", "same", "scope", "as", "ngmessag", "ng", "messag", "when", "ngmessag", "ng", "messag", "ha", "interpol", "textcont", "text", "content", "then", "remov", "messag", "would", "not", "remov", "watcher", "scope", "it", "would", "onli", "remov", "when", "whole", "ngmessag", "ng", "messag", "element", "wa", "remov", "thi", "commit", "chang", "ngmessag", "ng", "messag", "transclud", "function", "creat", "new", "child", "scope", "instead", "which", "destroy", "safe", "when", "messag", "element", "remov", "messag", "detach", "fix", "14307"], "B_body": "Adds all the missing jQuery methods to element() DSL\n", "B_clean_body": ["add", "all", "miss", "jqueri", "queri", "method", "element", "dsl"], "title_sim": [0.06989740040133918], "body_sim": [0.07480147896184404], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.026834498631588558, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1971}, {"A_title": "docs(app): makes minor updates", "A_clean_title": ["doc", "app", "make", "minor", "updat"], "B_title": "fix(markup): Make special attrs such as ng:href work even without binding", "B_clean_title": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind"], "A_body": "Renames controller files and makes minor updates.\n", "A_clean_body": ["renam", "control", "file", "make", "minor", "updat"], "B_body": "fix(markup): Make special attrs such as ng:href work even without binding\n- special attrs such as ng:href, ng:check did not work as intended when\n  their values do not contain bindings. And this commit is to fix that\n\nCloses #534\n", "B_clean_body": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind", "special", "attr", "such", "as", "ng", "href", "ng", "check", "did", "not", "work", "as", "intend", "when", "their", "valu", "not", "contain", "bind", "thi", "commit", "fix", "that", "close", "534"], "title_sim": [0.1466396837342582], "body_sim": [0.07173287806423992], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1229}, {"A_title": "feat(ngMocks): Describe unflushed http requests", "A_clean_title": ["feat", "ngmock", "ng", "mock", "describ", "unflush", "http", "request"], "B_title": "test($compile): use FQDN for img[src]", "B_clean_title": ["test", "compil", "use", "fqdn", "img", "src"], "A_body": "The current implementation of $httpBackend.verifyNoOutstandingRequest\r\ngives an integer number describing how many requests are unflushed.\r\n\r\nWhile it's superficially easy to solve test errors from that message\r\nby simply adding an additional $httpBackend.flush(), if a developer\r\nis truly not expecting the code to make further requests this is\r\nnot ideal.\r\n\r\nThis change explicitly prints out which additional requests remain\r\nunflushed in the error message, helping her determine if the code\r\nneeds changing, or if an additional flush is appropriate.\r\n\r\nBefore this change:\r\n\r\n    Unflushed requests: 1\r\n\r\nAfter this change:\r\n\r\n    Unflushed requests:\r\n      GET /some\r\n\r\nCloses #10596\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA feature improving the output of ngMocks \"Unflushed requests\" error message.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe error message includes the number of requests remaining unflushed.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThe error message now includes a brief description of which requests remain unflushed.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo - unless the error messages are considered public API.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["current", "implement", "httpbackend", "verifynooutstandingrequest", "http", "backend", "verifi", "no", "outstand", "request", "give", "integ", "number", "describ", "how", "mani", "request", "are", "unflush", "while", "it", "'s", "superfici", "easi", "solv", "test", "error", "that", "messag", "by", "simpli", "ad", "addit", "httpbackend", "flush", "http", "backend", "develop", "truli", "not", "expect", "code", "make", "further", "request", "thi", "not", "ideal", "thi", "chang", "explicitli", "print", "out", "which", "addit", "request", "remain", "unflush", "error", "messag", "help", "her", "determin", "code", "need", "chang", "or", "addit", "flush", "appropri", "befor", "thi", "chang", "unflush", "request", "after", "thi", "chang", "unflush", "request", "get", "some", "close", "10596", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "improv", "output", "ngmock", "ng", "mock", "unflush", "request", "error", "messag", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "error", "messag", "includ", "number", "request", "remain", "unflush", "**what", "new", "behavior", "thi", "featur", "chang", "error", "messag", "now", "includ", "brief", "descript", "which", "request", "remain", "unflush", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "unless", "error", "messag", "are", "consid", "public", "api", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "img[src]=\"https://foo\" has the unfortunate problem that the browser will\nactually try retrieving the resource the non FQDN foo.  The local DNS\nmight suffix a domain to this, resolve it, and try to present a\ncertificate for the https request and prompt the user to pick a\ncertificate. This commit avoids that by making foo a FQDN.  Note that it\nmight be better to replace foo with example.com (ref\nhttp://tools.ietf.org/html/rfc2606#section-3).\n", "B_clean_body": ["img", "src", "http", "foo", "ha", "unfortun", "problem", "that", "browser", "will", "actual", "tri", "retriev", "resourc", "non", "fqdn", "foo", "local", "dn", "might", "suffix", "domain", "thi", "resolv", "it", "tri", "present", "certif", "http", "request", "prompt", "user", "pick", "certif", "thi", "commit", "avoid", "that", "by", "make", "foo", "fqdn", "note", "that", "it", "might", "better", "replac", "foo", "exampl", "com", "ref", "http", "ietf", "tool", "org", "html", "rfc2606", "section"], "title_sim": [-0.019416641003069456], "body_sim": [0.2161918735237507], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1391}, {"A_title": "Fixes to select and ngOptions - \"required\" validation and behavior with empty / unknown option", "A_clean_title": ["fix", "select", "ngoption", "ng", "option", "requir", "valid", "behavior", "empti", "unknown", "option"], "B_title": "perf(orderBy): copy array with slice instead of for loop", "B_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfixes\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n- (a) when the unknown option is selected and the select is \"required\", the required error is not set\r\n- (b) ngOptions: when the model is unmatched and an empty option exists, the empty option is always selected, even if the model is not null / undefined.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n- (a) the error is set\r\n- (b) the unknown option is selected if the model is not null / undefined\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nPossibly? For (a), the following situation is possible: The model is programatically set to a value that is no longer in select options, and the select is required. With this patch, the user cannot keep the unmatched value, because of the required error, which considers this value invalid (just realized this, so it's not in the commit message).\r\n\r\nFor (b), it's unlikely that anyone relied on the fact that the empty option is selected instead of the unmatched option - the fixd behavior was also present in regular select since the beginning.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "unknown", "option", "select", "select", "requir", "requir", "error", "not", "set", "ngoption", "ng", "option", "when", "model", "unmatch", "empti", "option", "exist", "empti", "option", "alway", "select", "even", "model", "not", "null", "undefin", "**what", "new", "behavior", "thi", "featur", "chang", "error", "set", "unknown", "option", "select", "model", "not", "null", "undefin", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "follow", "situat", "possibl", "model", "programat", "set", "valu", "that", "no", "longer", "select", "option", "select", "requir", "thi", "patch", "user", "not", "keep", "unmatch", "valu", "becaus", "requir", "error", "which", "consid", "thi", "valu", "invalid", "just", "realiz", "thi", "so", "it", "'s", "not", "commit", "messag", "it", "'s", "unlik", "that", "anyon", "reli", "fact", "that", "empti", "option", "select", "instead", "unmatch", "option", "fixd", "behavior", "wa", "also", "present", "regular", "select", "sinc", "begin", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "B_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "title_sim": [0.007179258810994759], "body_sim": [0.1239780598524068], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.012603050888664636, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 886}, {"A_title": "fix(ngModel, input): improve handling of built-in named parsers", "A_clean_title": ["fix", "ngmodel", "ng", "model", "input", "improv", "handl", "built", "name", "parser"], "B_title": "revert: fix($compile): do not add <span> elements to root text nodes", "B_clean_title": ["revert", "fix", "compil", "not", "add", "span", "element", "root", "text", "node"], "A_body": "This commit changes how input elements use the private $$parserName\r\nproperty on the ngModelController to name parse errors. Until now,\r\nthe input types (number, date etc.) would set $$parserName when\r\nthe inputs were initialized, which meant that any other parsers on\r\nthe ngModelController would also be named after that type. The\r\neffect of that was that the `$error` property and the `ng-invalid-...`\r\nclass would always be that of the built-in parser, even if the custom\r\nparser had nothing to do with it.\r\n\r\nThe new behavior is that the $$parserName is only set if the actual\r\nparser is invalid, i.e. returns `undefined`.\r\n\r\nAlso, $$parserName has been removed from input[email] and input[url],\r\nas these types do not have a built-in parser anymore.\r\n\r\nBREAKING CHANGE:\r\n\r\nCustom parsers that fail to parse on input types email, url, date, month, time,\r\ndatetime-local, week, do no longer set $error[inputType], and no longer set the class\r\n`ng-invalid-[inputType]`. Instead, they set $error.parse and `ng-invalid-parse`.\r\n\r\nCloses #14292 \r\nCloses #10076\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nThis is a general fix to https://github.com/angular/angular.js/issues/10076 and also incorporates the changes in https://github.com/angular/angular.js/pull/14292.\r\nWhile it's not a very common problem, I always found this section of the API very strange, especially since it uses an undocumented API (so if you stumble on it, it's even more difficult to find out what causes it).\r\nSince https://github.com/angular/angular.js/pull/14292 is already a very small BC I thought a general solution to this issue would be welcome.\r\nNote that I will include tests for the other input types if this implementation is approved.\r\n\r\n", "A_clean_body": ["thi", "commit", "chang", "how", "input", "element", "use", "privat", "parsernam", "parser", "name", "properti", "ngmodelcontrol", "ng", "model", "control", "name", "pars", "error", "until", "now", "input", "type", "number", "date", "etc", "would", "set", "parsernam", "parser", "name", "when", "input", "were", "initi", "which", "meant", "that", "ani", "other", "parser", "ngmodelcontrol", "ng", "model", "control", "would", "also", "name", "after", "that", "type", "effect", "that", "wa", "that", "error", "properti", "ng", "invalid", "class", "would", "alway", "that", "built", "parser", "even", "custom", "parser", "had", "noth", "it", "new", "behavior", "that", "parsernam", "parser", "name", "onli", "set", "actual", "parser", "invalid", "return", "undefin", "also", "parsernam", "parser", "name", "ha", "been", "remov", "input", "email", "input", "url", "as", "these", "type", "not", "have", "built", "parser", "anymor", "break", "chang", "custom", "parser", "that", "fail", "pars", "input", "type", "email", "url", "date", "month", "time", "datetim", "local", "week", "no", "longer", "set", "error", "inputtyp", "input", "type", "no", "longer", "set", "class", "ng", "invalid", "inputtyp", "input", "type", "instead", "they", "set", "error", "pars", "ng", "invalid", "pars", "close", "14292", "close", "10076", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "gener", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "10076", "also", "incorpor", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "while", "it", "'s", "not", "veri", "common", "problem", "alway", "found", "thi", "section", "api", "veri", "strang", "especi", "sinc", "it", "use", "undocu", "api", "so", "you", "stumbl", "it", "it", "'s", "even", "more", "difficult", "find", "out", "what", "caus", "it", "sinc", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "alreadi", "veri", "small", "bc", "thought", "gener", "solut", "thi", "issu", "would", "welcom", "note", "that", "will", "includ", "test", "other", "input", "type", "thi", "implement", "approv"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis commit reverts 7617c08da69a0d447507dadd0ef41d2415462ca7 which was accidentally\nmerged into 1.5.x (by @petebacondarwin in a moment of rebase madness) despite\nit containing a breaking change.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "commit", "revert", "7617c08da69a0d447507dadd0ef41d2415462ca7", "which", "wa", "accident", "merg", "into", "by", "petebacondarwin", "moment", "rebas", "mad", "despit", "it", "contain", "break", "chang"], "title_sim": [-0.012448992194274961], "body_sim": [0.6237089262878714], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.008556025715740712, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 620}, {"A_title": "docs(guide/Unit Testing): Changed $scope = {} to $scope = $rootScope.\u2026", "A_clean_title": ["doc", "guid", "unit", "test", "chang", "scope", "scope", "rootscop", "root", "scope"], "B_title": "test(ngAnimate): fix jasmine syntax", "B_clean_title": ["test", "nganim", "ng", "anim", "fix", "jasmin", "syntax"], "A_body": "\u2026$new()\r\n\r\n{} will just create an empty object. This will break if the module uses for example $watch or others.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["new", "will", "just", "creat", "empti", "object", "thi", "will", "break", "modul", "use", "exampl", "watch", "or", "other", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.07556183221474488], "body_sim": [0.9694716307885604], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 567}, {"A_title": "fix($location): always resolve relative links in html5mode to `<base>` url", "A_clean_title": ["fix", "locat", "alway", "resolv", "rel", "link", "html5mode", "base", "url"], "B_title": "refactor($parse): remove unused expression arguments", "B_clean_title": ["refactor", "pars", "remov", "unus", "express", "argument"], "A_body": "BREAKING CHANGE (since 1.2.0 and 1.3.0-beta.1):\n\nAngular now requires a `<base>` tag when html5 mode of `$location` is enabled. Reasoning:\nUsing html5 mode without a `<base href=\"...\">` tag makes relative links for images, links, ...\nrelative to the current url if the browser supports\nthe history API. However, if the browser does not support the history API Angular falls back to using the `#`,\nand then all links would be broken.\n\nBREAKING CHANGE (since 1.2.17 and 1.3.0-beta.10):\n\nIn html5 mode without a `<base>` tag on older browser that don't support the history API\nrelative paths were adding up. E.g. clicking on `<a href=\"page1\">` and then on `<a href=\"page2\">`\nwould produce `$location.path()==='/page1/page2'. The code that introduced this behavior was removed\nand Angular now also requires a`<base>` tag to be present when using html5 mode.\n\nCloses #8172\n", "A_clean_body": ["break", "chang", "sinc", "beta", "angular", "now", "requir", "base", "tag", "when", "html5", "mode", "locat", "enabl", "reason", "html5", "mode", "without", "base", "href=", "tag", "make", "rel", "link", "imag", "link", "rel", "current", "url", "browser", "support", "histori", "api", "howev", "browser", "not", "support", "histori", "api", "angular", "fall", "back", "then", "all", "link", "would", "broken", "break", "chang", "sinc", "17", "beta", "10", "html5", "mode", "without", "base", "tag", "older", "browser", "that", "n't", "support", "histori", "api", "rel", "path", "were", "ad", "up", "click", "href=", "page1", "then", "href=", "page2", "would", "produc", "locat", "path", "page1", "page2", "code", "that", "introduc", "thi", "behavior", "wa", "remov", "angular", "now", "also", "requir", "base", "tag", "present", "when", "html5", "mode", "close", "8172"], "B_body": "Not sure if I'm missing some...?\n", "B_clean_body": ["not", "sure", "'m", "miss", "some"], "title_sim": [0.03838193746050308], "body_sim": [0.07796926957070811], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 780}, {"A_title": "fix($parse): support constants in computed keys", "A_clean_title": ["fix", "pars", "support", "constant", "comput", "key"], "B_title": "fix($$urlUtils): remove dependency on $window", "B_clean_title": ["fix", "urlutil", "url", "util", "remov", "depend", "window"], "A_body": "Came across this while looking at computed keys. Super minor and mainly just to make the code more consistent...  Previously `$parse('{[\"key\"]: 1}').constant` would be `false`.", "A_clean_body": ["came", "across", "thi", "while", "look", "at", "comput", "key", "super", "minor", "mainli", "just", "make", "code", "more", "consist", "previous", "pars", "key", "constant", "would", "fals"], "B_body": "$window may be mocked out in tests causing those tests to fail.  So\ndon't use $window.\n", "B_clean_body": ["window", "may", "mock", "out", "test", "caus", "those", "test", "fail", "so", "n't", "use", "window"], "title_sim": [0.09616474200419481], "body_sim": [0.043763719533884624], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1454}, {"A_title": "Fix: set $submitted on child forms when form is submitted", "A_clean_title": ["fix", "set", "submit", "child", "form", "when", "form", "submit"], "B_title": "fix(input): use lowercase method to account for undefined type", "B_clean_title": ["fix", "input", "use", "lowercas", "method", "account", "undefin", "type"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen submitting a form, $submitted is not set on child forms\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI don't think so.\r\nNo one in #10071 said that his might be breaking.\r\nAngularJS doesn't have nested form isolation, and ngForm is only for grouping sub-forms. I think that it's expected that a submission event will affect all sub-forms.\r\nProbably: https://github.com/angular/angular.js/pull/11023#issuecomment-143162373\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\nFollow up to https://github.com/angular/angular.js/pull/11023", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "submit", "form", "submit", "not", "set", "child", "form", "**doe", "thi", "pr", "introduc", "break", "chang", "n't", "think", "so", "no", "one", "10071", "said", "that", "hi", "might", "break", "angularj", "angular", "js", "n't", "have", "nest", "form", "isol", "ngform", "ng", "form", "onli", "group", "sub", "form", "think", "that", "it", "'s", "expect", "that", "submiss", "event", "will", "affect", "all", "sub", "form", "probabl", "http", "github", "com", "angular", "angular", "js", "pull", "11023", "issuecom", "143162373", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "follow", "up", "http", "github", "com", "angular", "angular", "js", "pull", "11023"], "B_body": "This was causing some internal breakages. I verify that this fixes the problem, but I haven't yet pinned down exactly how this case/path occurred.\n", "B_clean_body": ["thi", "wa", "caus", "some", "intern", "breakag", "verifi", "that", "thi", "fix", "problem", "but", "have", "n't", "yet", "pin", "down", "exactli", "how", "thi", "case", "path", "occur"], "title_sim": [0.08211732031323057], "body_sim": [0.2679974739024032], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 927}, {"A_title": "test($parse): add tests for watching one-time array/object literals", "A_clean_title": ["test", "pars", "add", "test", "watch", "one", "time", "array", "object", "liter"], "B_title": "refactor(fromJson): Remove error() and just throw", "B_clean_title": ["refactor", "fromjson", "json", "remov", "error", "just", "throw"], "A_body": "These are some examples of cases which 189461f9bf6fda18ddbd16c42f2e959cf939c3da enabled. All the one-time tests failed before that commit.\r\n\r\nIt's possible that these overlap with [these tests](https://github.com/angular/angular.js/blob/189461f9bf6fda18ddbd16c42f2e959cf939c3da/test/ng/parseSpec.js#L2692) a bit (the non-deep ones), but I think at least the `should ignore changes within nested objects` tests are a good addition.", "A_clean_body": ["these", "are", "some", "exampl", "case", "which", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "enabl", "all", "one", "time", "test", "fail", "befor", "that", "commit", "it", "'s", "possibl", "that", "these", "overlap", "these", "test", "http", "js", "github", "com", "angular", "angular", "js", "blob", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "test", "ng", "parsespec", "pars", "spec", "l2692", "bit", "non", "deep", "one", "but", "think", "at", "least", "ignor", "chang", "within", "nest", "object", "test", "are", "good", "addit"], "B_body": "It's more likely you are using angular.fromJson() inside Angular world, which means you get proper\nexception handling by $exceptionHandler.\n\nThere is no point to explicitly push it to console and it causes memory leaks on most browsers \n(tried Chrome stable/canary, Safari, FF).\n", "B_clean_body": ["it", "'s", "more", "like", "you", "are", "angular", "fromjson", "json", "insid", "angular", "world", "which", "mean", "you", "get", "proper", "except", "handl", "by", "exceptionhandl", "except", "handler", "there", "no", "point", "explicitli", "push", "it", "consol", "it", "caus", "memori", "leak", "most", "browser", "tri", "chrome", "stabl", "canari", "safari", "ff"], "title_sim": [0.05735103704724764], "body_sim": [0.3913289177040577], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2189}, {"A_title": "fix(ngOptions): remove selected attribute from unselected options", "A_clean_title": ["fix", "ngoption", "ng", "option", "remov", "select", "attribut", "unselect", "option"], "B_title": "docs(app): makes minor updates", "B_clean_title": ["doc", "app", "make", "minor", "updat"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14892 nad #14419\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nWhen the select model changes, we add the \"selected\" attribute to the selected option, so that\nscreen readers know which option is selected.\n\nPreviously, we failed to remove the attribute when the model changed to match a different option, or\nthe unknown / empty option.\n\nWhen using \"track by\", the behavior would also show when a user selected an option, and then the\nmodel was changed, because track by watches the tracked expression, and calls the $render function\non change.\n\nThis fix reads the current select value, finds the matching option and removes the \"selected\"\nattribute.\n\nFixes #14892\nFixes #14419\nRelated #12731\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14892", "nad", "14419", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "when", "select", "model", "chang", "we", "add", "select", "attribut", "select", "option", "so", "that", "screen", "reader", "know", "which", "option", "select", "previous", "we", "fail", "remov", "attribut", "when", "model", "chang", "match", "differ", "option", "or", "unknown", "empti", "option", "when", "track", "by", "behavior", "would", "also", "show", "when", "user", "select", "option", "then", "model", "wa", "chang", "becaus", "track", "by", "watch", "track", "express", "call", "render", "function", "chang", "thi", "fix", "read", "current", "select", "valu", "find", "match", "option", "remov", "select", "attribut", "fix", "14892", "fix", "14419", "relat", "12731"], "B_body": "Renames controller files and makes minor updates.\n", "B_clean_body": ["renam", "control", "file", "make", "minor", "updat"], "title_sim": [-0.018107421349922735], "body_sim": [0.045525935959419866], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.013768415331188192, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 552}, {"A_title": "docs(guide/Migrating from Previous Versions): add info for 1.4 ngPatt\u2026", "A_clean_title": ["doc", "guid", "migrat", "previou", "version", "add", "info", "ngpatt\u2026", "ng", "patt\u2026"], "B_title": "docs(contributing): fix indentation for proper Markdown syntax", "B_clean_title": ["doc", "contribut", "fix", "indent", "proper", "markdown", "syntax"], "A_body": "\u2026ern and pattern breaking change\r\n\r\nIntroduced in commit 0e00108\r\n\r\nCloses #15758\r\n\r\n", "A_clean_body": ["\u2026ern", "pattern", "break", "chang", "introduc", "commit", "0e00108", "close", "15758"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nMarkdown isn't displayed properly.\n\n**What is the new behavior (if this is a feature change)?**\nMarkdown is displayed properly.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "markdown", "n't", "display", "properli", "**what", "new", "behavior", "thi", "featur", "chang", "markdown", "display", "properli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.021210497883584617], "body_sim": [0.6394615862368594], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 204}, {"A_title": "fix($compile): don't run unnecessary update to one-way bindings", "A_clean_title": ["fix", "compil", "n't", "run", "unnecessari", "updat", "one", "way", "bind"], "B_title": "fix(date): parse string input as local time unless TZ is specified", "B_clean_title": ["fix", "date", "pars", "string", "input", "as", "local", "time", "unless", "tz", "specifi"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nBug Fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe watch handler was triggering on its first invocation, even though\nits change had already been dealt with when setting up the binding.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe handler does not trigger an update on its first invocation\n\n**Does this PR introduce a breaking change?**\n\nNope - I don't think so. Although I had to modify a bunch of tests to ensure that a digest occurred between compilation and the first checks.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n  ~~\\- [ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nCloses #14546\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "watch", "handler", "wa", "trigger", "it", "first", "invoc", "even", "though", "it", "chang", "had", "alreadi", "been", "dealt", "when", "set", "up", "bind", "**what", "new", "behavior", "thi", "featur", "chang", "handler", "not", "trigger", "updat", "it", "first", "invoc", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "n't", "think", "so", "although", "had", "modifi", "bunch", "test", "ensur", "that", "digest", "occur", "between", "compil", "first", "check", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "close", "14546"], "B_body": "previously we were always parsing the string input as UTC which cased issues like:\n\n{{ '2012-04-01' | date:'d MMM yyyy' }} renders as 31 Mar 2012\n\nBREAKING CHANGE: string input without timezone info is now parsed as local time/date\n\nCloses #847\n", "B_clean_body": ["previous", "we", "were", "alway", "pars", "string", "input", "as", "utc", "which", "case", "issu", "like", "'2012", "04", "01", "date", "'d", "mmm", "yyyi", "render", "as", "31", "mar", "2012", "break", "chang", "string", "input", "without", "timezon", "info", "now", "pars", "as", "local", "time", "date", "close", "847"], "title_sim": [0.09554167433743083], "body_sim": [0.11176263765073155], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0019362977254980232, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1216}, {"A_title": "fix($parse): do not shallow-watch computed property keys", "A_clean_title": ["fix", "pars", "not", "shallow", "watch", "comput", "properti", "key"], "B_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "B_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "A_body": "Fixes a case which b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f missed. ES6 computed keys can implicitly invoke `.toString()` of an object so we can't shallow-watch it.\r\n\r\nThe other option is shallow-watching `String(key)` instead, but I'm a little hesitant to watch something slightly different then how it's used in the real expression.", "A_clean_body": ["fix", "case", "which", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "miss", "es6", "comput", "key", "implicitli", "invok", "tostr", "string", "object", "so", "we", "ca", "n't", "shallow", "watch", "it", "other", "option", "shallow", "watch", "string", "key", "instead", "but", "'m", "littl", "hesit", "watch", "someth", "slightli", "differ", "then", "how", "it", "'s", "use", "real", "express"], "B_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "B_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "title_sim": [0.10051853362696879], "body_sim": [0.17234716962063612], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1244}, {"A_title": "test(*): run class-related tests everywhere; fix eval syntax", "A_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "B_title": "fix($compile): Allow literals in isolate scope references", "B_clean_title": ["fix", "compil", "allow", "liter", "isol", "scope", "refer"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "When a component uses an isolate scope reference\nand the the component is used with an object literal\na new object is created on every evaluation.\nTherefore the compiler needs to compare\nthe values of the parent and the isolate scope\nusing object equality and not object reference\nequality.\n\nFixes #5296.\n", "B_clean_body": ["when", "compon", "use", "isol", "scope", "refer", "compon", "use", "object", "liter", "new", "object", "creat", "everi", "evalu", "therefor", "compil", "need", "compar", "valu", "parent", "isol", "scope", "object", "equal", "not", "object", "refer", "equal", "fix", "5296"], "title_sim": [0.05332227580128222], "body_sim": [0.07517036579759129], "file_list_sim": 0.16666666666666666, "overlap_files_len": 1, "code_sim": [0.018479947831134647, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1240}, {"A_title": "docs(guide/Components): snake -> kebab", "A_clean_title": ["doc", "guid", "compon", "snake", "kebab"], "B_title": "feat($location): allow automatic rewriting of links to be disabled", "B_clean_title": ["feat", "locat", "allow", "automat", "rewrit", "link", "disabl"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDoc correction.\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nDocs mention `snake_case`.\n\n**What is the new behavior (if this is a feature change)?**\n\nExample given is actually `kebab-case`.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example given is not in snake_case, it is in kebab-case.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "correct", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "mention", "snake", "case", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "given", "actual", "kebab", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "given", "not", "snake", "case", "it", "kebab", "case"], "B_body": "Currently, when the location provider is set to html5 mode, all links\non the page are hijacked and automatically rewritten. While this may be\ndesirable behavior in some cases (such as using ngRoute), not all cases\nwhere html5 mode are enabled imply the desire for this behavior.\n\nOne example would be an application using the\n[ui-router](https://github.com/angular-ui/ui-router) library, with some\npages that exist outside of angular. Links that are meant to go through\nthe router use the `ui-sref` directive, so the rewrite behavior is\nunnecessary.\n\nCloses #5487\n", "B_clean_body": ["current", "when", "locat", "provid", "set", "html5", "mode", "all", "link", "page", "are", "hijack", "automat", "rewritten", "while", "thi", "may", "desir", "behavior", "some", "case", "such", "as", "ngrout", "ng", "rout", "not", "all", "case", "where", "html5", "mode", "are", "enabl", "impli", "desir", "thi", "behavior", "one", "exampl", "would", "applic", "ui", "router", "http", "router", "ui", "ui", "github", "com", "angular", "librari", "some", "page", "that", "exist", "outsid", "angular", "link", "that", "are", "meant", "go", "through", "router", "use", "ui", "sref", "direct", "so", "rewrit", "behavior", "unnecessari", "close", "5487"], "title_sim": [-0.034395716180174896], "body_sim": [0.2814097746497337], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 559}, {"A_title": "chore(npm): publish artifacts to npm", "A_clean_title": ["chore", "npm", "publish", "artifact", "npm"], "B_title": "fix(jqLite): use getElementsByTagName for dealoc-ing elements, cz of SVG on IE", "B_clean_title": ["fix", "jqlite", "jq", "lite", "use", "getelementsbytagnam", "get", "element", "by", "tag", "name", "dealoc", "ing", "element", "cz", "svg", "ie"], "A_body": "Note that there are still a few pending tasks before this can land, namely getting permissions for all of the package names on npm:\n- ~~[angular](https://www.npmjs.org/package/angular)~~ \u2013 got it. Thanks @bclinkinbeard!\n- ~~[angular-animate](https://www.npmjs.org/package/angular-animate)~~ \u2013 got it. thanks @pitbeast!\n- ~~[angular-cookies](https://www.npmjs.org/package/angular-cookies)~~ \u2013 got it. Thanks @petermelias!\n- ~~[angular-mocks](https://www.npmjs.org/package/angular-mocks)~~ \u2013 got it. Thanks @zizzamia!\n- ~~[angular-route](https://www.npmjs.org/package/angular-route)~~ \u2013 got it. Thanks @mljsimone!\n- ~~[angular-resource](https://www.npmjs.org/package/angular-resource)~~ \u2013 got it. Thanks @roylines!\n- ~~[angular-sanitize](https://www.npmjs.org/package/angular-sanitize)~~ \u2013 got it. Thanks @akalinovski!\n\nIf you own one of these packages, you can help by adding user \"angularcore\" to the package\n### unclaimed:\n- angular-aria\n- angular-i18n\n- angular-loader\n- angular-scenario\n- angular-touch\n- angular-messages\n\n~~I also still need to add `package.json` for each `bower-angular-*` repo (since that's how we'll be publishing these artifacts).~~ done!\n\nCloses #2877 \n", "A_clean_body": ["note", "that", "there", "are", "still", "few", "pend", "task", "befor", "thi", "land", "name", "get", "permiss", "all", "packag", "name", "npm", "angular", "http", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "bclinkinbeard", "angular", "anim", "http", "anim", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "pitbeast", "angular", "cooki", "http", "cooki", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "petermelia", "angular", "mock", "http", "mock", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "zizzamia", "angular", "rout", "http", "rout", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "mljsimon", "angular", "resourc", "http", "resourc", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "roylin", "angular", "sanit", "http", "sanit", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "akalinovski", "you", "own", "one", "these", "packag", "you", "help", "by", "ad", "user", "angularcor", "packag", "unclaim", "angular", "aria", "angular", "i18n", "angular", "loader", "angular", "scenario", "angular", "touch", "angular", "messag", "~~i", "also", "still", "need", "add", "packag", "json", "each", "bower", "angular", "repo", "sinc", "that", "'s", "how", "we", "'ll", "publish", "these", "artifact", "done", "close", "2877"], "B_body": "See comments in #8075\n", "B_clean_body": ["see", "comment", "8075"], "title_sim": [-0.002992254321837225], "body_sim": [0.08316504286711726], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01892837284407445, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 83}, {"A_title": "perf(orderBy): copy array with slice instead of for loop", "A_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "B_title": "chore(node): update karma-sauce-launcher", "B_clean_title": ["chore", "node", "updat", "karma", "sauc", "launcher"], "A_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "A_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "B_body": "Related to #14961\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["relat", "14961", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.029079382942873697], "body_sim": [0.11628662679021504], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1067}, {"A_title": "test($rootScope): add $watch/$watchCollection tests", "A_clean_title": ["test", "rootscop", "root", "scope", "add", "watch", "watchcollect", "watch", "collect", "test"], "B_title": "Fix($animate) : svg element with classNameFilter animation fix.", "B_clean_title": ["fix", "anim", "svg", "element", "classnamefilt", "class", "name", "filter", "anim", "fix"], "A_body": "These are various cases that I felt were missing tests, mainly around constant/literal/one-time $watch/$watchCollection.", "A_clean_body": ["these", "are", "variou", "case", "that", "felt", "were", "miss", "test", "mainli", "around", "time", "constant", "liter", "one", "watch", "watchcollect", "watch", "collect"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nclassNameFilter for animation with svg element should work same as the other elements.\n\n**What is the current behavior? (You can also link to an open issue here)**\nclassNameFilter not working for svg element.\n\n**What is the new behavior (if this is a feature change)?**\nclassNameFilter also handles svg element.\n\n**Does this PR introduce a breaking change?**\nNO\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nThis PR fix #14508 issue.\n\nFix($animate) : svg element with classNameFilter animation fix.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "classnamefilt", "class", "name", "filter", "anim", "svg", "element", "work", "same", "as", "other", "element", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "classnamefilt", "class", "name", "filter", "not", "work", "svg", "element", "**what", "new", "behavior", "thi", "featur", "chang", "classnamefilt", "class", "name", "filter", "also", "handl", "svg", "element", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "pr", "fix", "14508", "issu", "fix", "anim", "svg", "element", "classnamefilt", "class", "name", "filter", "anim", "fix"], "title_sim": [-0.021892543416636743], "body_sim": [0.08051460545459832], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.09524870959735571, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 365}, {"A_title": "fix(jenkins): reset baseUrl in protractor conf", "A_clean_title": ["fix", "jenkin", "reset", "baseurl", "base", "url", "protractor", "conf"], "B_title": "chore(browserstack): Update browserstacktunnel-wrapper, fix options", "B_clean_title": ["chore", "browserstack", "updat", "browserstacktunnel", "wrapper", "fix", "option"], "A_body": "(Tested before and after fix locally and manually on ci.angularjs.org)\n\nCommit 22b817ec11f7ab1a81342a4b60acd644a3f2a8c3 changed the url\nused by protractor in all docs tests to add build/docs, which\nwas already set to the baseUrl in protractor-jenkins.conf. This\ncommit just changes the protractor config's baseUrl to adapt\nto the changes in the spec files.\n\nCloses #9783\n", "A_clean_body": ["test", "befor", "after", "fix", "local", "manual", "ci", "angularj", "org", "commit", "22b817ec11f7ab1a81342a4b60acd644a3f2a8c3", "chang", "url", "use", "by", "protractor", "all", "doc", "test", "add", "build", "doc", "which", "wa", "alreadi", "set", "baseurl", "base", "url", "protractor", "jenkin", "conf", "thi", "commit", "just", "chang", "protractor", "config", "'s", "baseurl", "base", "url", "adapt", "chang", "spec", "file", "close", "9783"], "B_body": "Only the latest version of the package works correctly (the backend for it at\r\nBrowserStack is not versioned) and the options have changed in the new version\r\nof the package.\r\n\r\nAlso, iOS 8.0 is no longer available on BrowserStack, only 8.3 is. Instead,\r\nthis commit changes it to 9.3 as we shouldn't be testing on 8 anymore anyway.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix in the testing infrastructure.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe Browserstack wrapper doesn't set the local identified correctly, old wrapper is used that uses incorrect parameter names.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nPackage got updated, params are fine again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["onli", "latest", "version", "packag", "work", "correctli", "backend", "it", "at", "browserstack", "browser", "stack", "not", "version", "option", "have", "chang", "new", "version", "packag", "also", "io", "os", "no", "longer", "avail", "browserstack", "browser", "stack", "onli", "instead", "thi", "commit", "chang", "it", "as", "we", "n't", "test", "anymor", "anyway", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "test", "infrastructur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browserstack", "wrapper", "n't", "set", "local", "identifi", "correctli", "old", "wrapper", "use", "that", "use", "incorrect", "paramet", "name", "**what", "new", "behavior", "thi", "featur", "chang", "packag", "got", "updat", "param", "are", "fine", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.0864783680040065], "body_sim": [0.4494439500808559], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 890}, {"A_title": "feat($sanitize): Added support for the sftp protocol in $$ SanitizeUriProvider and linky filter", "A_clean_title": ["feat", "sanit", "ad", "support", "sftp", "protocol", "sanitizeuriprovid", "sanit", "uri", "provid", "linki", "filter"], "B_title": "feat(ngModel): bind to getters/setters", "B_clean_title": ["feat", "ngmodel", "ng", "model", "bind", "getter", "setter"], "A_body": "\u2026 SanitizeUriProvider\r\n\r\nAdded support for the sftp protocol in $$ SanitizeUriProvider and linky filter\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsftp not suported\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nsftp suported\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["sanitizeuriprovid", "sanit", "uri", "provid", "ad", "support", "sftp", "protocol", "sanitizeuriprovid", "sanit", "uri", "provid", "linki", "filter", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "sftp", "not", "suport", "**what", "new", "behavior", "thi", "featur", "chang", "sftp", "suport", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Currently, you might do this if you want to bind to getters/setters:\n\n> controller\n\n``` javascript\n// ...\n$scope.watch(function () {\n  return myModel.getterSetter();\n}, function (newValue) {\n  $scope.someProp = newValue;\n});\n\n$scope.watch('someProp', function (newValue) {\n  myModel.getterSetter(newValue);\n});\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"someProp\">\n```\n\nThe implementation in this PR changes the semantics of `ngModel` in the following ways:\n\nIf the expression bound to `ngModel` resolves to a function, the function is invoked to get the current value to be expressed in the DOM. When the binding changes, if the expression bound to `ngModel` resolves to a function (at that time) the function is invoked with the new value.\n\nThis means instead, you could do this:\n\n> controller\n\n``` javascript\n// ...\n$scope.myModel = myModel;\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"myModel.getterSetter\">\n```\n\nI like that to end developers, this feels like \"uniform access\" for common cases. I don't like that this means there's a difference in semantics between `ngModel` and expressions elsewhere in Angular.\n\nThis would be a breaking change, but I don't think that this would affect any legitimate use cases. The only case I can think of is if hypothetically, you bind to some property that's originally a function, overwriting it with a string. I can't think of any good reason to write controller code like that.\n\n@IgorMinar suggested a different syntax so that the difference in semantics is obvious. Something like:\n\n``` html\n<input ng-model=\"myModel.getterSetter()\">\n```\n\nI like that this makes the semantics obvious. I don't like that this still violates the \"uniform access principle.\"\n\nCloses #768\n", "B_clean_body": ["current", "you", "might", "thi", "you", "want", "bind", "getter", "setter", "control", "javascript", "scope", "watch", "function", "return", "mymodel", "gettersett", "my", "model", "getter", "setter", "function", "newvalu", "new", "valu", "scope", "someprop", "some", "prop", "newvalu", "new", "valu", "scope", "watch", "'someprop", "'some", "prop", "function", "newvalu", "new", "valu", "mymodel", "gettersett", "my", "model", "getter", "setter", "newvalu", "new", "valu", "templat", "html", "input", "ng", "model=", "someprop", "some", "prop", "implement", "thi", "pr", "chang", "semant", "ngmodel", "ng", "model", "follow", "way", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "function", "invok", "get", "current", "valu", "express", "dom", "when", "bind", "chang", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "at", "that", "time", "function", "invok", "new", "valu", "thi", "mean", "instead", "you", "could", "thi", "control", "javascript", "scope", "mymodel", "my", "model", "mymodel", "my", "model", "templat", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "end", "develop", "thi", "feel", "like", "uniform", "access", "common", "case", "n't", "like", "that", "thi", "mean", "there", "'s", "differ", "semant", "between", "ngmodel", "ng", "model", "express", "elsewher", "angular", "thi", "would", "break", "chang", "but", "n't", "think", "that", "thi", "would", "affect", "ani", "legitim", "use", "case", "onli", "case", "think", "hypothet", "you", "bind", "some", "properti", "that", "'s", "origin", "function", "overwrit", "it", "string", "ca", "n't", "think", "ani", "good", "reason", "write", "control", "code", "like", "that", "igorminar", "igor", "minar", "suggest", "differ", "syntax", "so", "that", "differ", "semant", "obviou", "someth", "like", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "thi", "make", "semant", "obviou", "n't", "like", "that", "thi", "still", "violat", "uniform", "access", "principl", "close", "768"], "title_sim": [0.05586211988333414], "body_sim": [0.16002045644518317], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.09045554981758654, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1112}, {"A_title": "chore(build): fix bower install", "A_clean_title": ["chore", "build", "fix", "bower", "instal"], "B_title": "docs(guide/Developer Guide): Update twitter handle", "B_clean_title": ["doc", "guid", "develop", "guid", "updat", "twitter", "handl"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Replaced the old Angular twitter handle with the new one.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["replac", "old", "angular", "twitter", "handl", "new", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.010133751983088031], "body_sim": [0.99491379734024], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 96}, {"A_title": "fix($httpBackend): use ActiveX XHR when making PATCH requests on IE8", "A_clean_title": ["fix", "httpbackend", "http", "backend", "use", "activex", "activ", "xhr", "when", "make", "patch", "request", "ie8"], "B_title": "refactor($rootScope): simplify $emit stopPropagation handling", "B_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "A_body": "IE8's native XHR doesn't support PATCH requests, but the ActiveX one does.\n\nCloses #2518\nCloses #5043\n", "A_clean_body": ["ie8", "'s", "nativ", "xhr", "n't", "support", "patch", "request", "but", "activex", "activ", "one", "close", "2518", "close", "5043"], "B_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "B_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "title_sim": [0.032668143053320026], "body_sim": [0.08361952097820892], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1440}, {"A_title": "chore(browserstack): Update browserstacktunnel-wrapper, fix options", "A_clean_title": ["chore", "browserstack", "updat", "browserstacktunnel", "wrapper", "fix", "option"], "B_title": "docs(guide/Conceptual Overview): fix external api example", "B_clean_title": ["doc", "guid", "conceptu", "overview", "fix", "extern", "api", "exampl"], "A_body": "Only the latest version of the package works correctly (the backend for it at\r\nBrowserStack is not versioned) and the options have changed in the new version\r\nof the package.\r\n\r\nAlso, iOS 8.0 is no longer available on BrowserStack, only 8.3 is. Instead,\r\nthis commit changes it to 9.3 as we shouldn't be testing on 8 anymore anyway.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix in the testing infrastructure.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe Browserstack wrapper doesn't set the local identified correctly, old wrapper is used that uses incorrect parameter names.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nPackage got updated, params are fine again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["onli", "latest", "version", "packag", "work", "correctli", "backend", "it", "at", "browserstack", "browser", "stack", "not", "version", "option", "have", "chang", "new", "version", "packag", "also", "io", "os", "no", "longer", "avail", "browserstack", "browser", "stack", "onli", "instead", "thi", "commit", "chang", "it", "as", "we", "n't", "test", "anymor", "anyway", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "test", "infrastructur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browserstack", "wrapper", "n't", "set", "local", "identifi", "correctli", "old", "wrapper", "use", "that", "use", "incorrect", "paramet", "name", "**what", "new", "behavior", "thi", "featur", "chang", "packag", "got", "updat", "param", "are", "fine", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nExample is broken in the snapshot because of changes to JSONP\n\n**Other information**:\n\nThe example will still be broken when opened in a plnkr, because they use the stable version instead of the snapshot.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "broken", "snapshot", "becaus", "chang", "jsonp", "**other", "information**", "exampl", "will", "still", "broken", "when", "open", "plnkr", "becaus", "they", "use", "stabl", "version", "instead", "snapshot"], "title_sim": [0.04777478526114993], "body_sim": [0.7632486466514748], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 157}, {"A_title": "test($parse): add one-time/interceptor tests", "A_clean_title": ["test", "pars", "add", "one", "time", "interceptor", "test"], "B_title": "docs(select.SelectController): fix example", "B_clean_title": ["doc", "select", "selectcontrol", "select", "control", "fix", "exampl"], "A_body": "I realized that https://github.com/angular/angular.js/commit/189461f9bf6fda18ddbd16c42f2e959cf939c3da changed this a little - previously the second test failed for two reasons\r\n1. one-time literals [did not use .inputs](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) unlike the normal [one-time delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1856), so the `identity` interceptor would throw an infdig because the literal recreated each digest was being watched\r\n2. one-time literals with interceptors [only check `isDefined`](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1933) to determine when the one time is \"done\" which is unlike [the one-time watch delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) that checks all the values in the literal, so the interceptor thought the \"one-time\" was done right away for literals\r\n\r\nI think both of these changes are correct and want to make sure we don't revert them. This should probably only go into 1.7 since this change will [probably be reverted](https://github.com/angular/angular.js/pull/15958) in 1.6.", "A_clean_body": ["realiz", "that", "http", "github", "com", "angular", "angular", "js", "commit", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "chang", "thi", "littl", "previous", "second", "test", "fail", "two", "reason", "one", "time", "liter", "did", "not", "use", "input", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "unlik", "normal", "one", "time", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1856", "so", "ident", "interceptor", "would", "throw", "infdig", "becaus", "liter", "recreat", "each", "digest", "wa", "be", "watch", "one", "time", "liter", "interceptor", "onli", "check", "isdefin", "defin", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1933", "determin", "when", "one", "time", "done", "which", "unlik", "one", "time", "watch", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "that", "check", "all", "valu", "liter", "so", "interceptor", "thought", "one", "time", "wa", "done", "right", "away", "liter", "think", "both", "these", "chang", "are", "correct", "want", "make", "sure", "we", "n't", "revert", "them", "thi", "probabl", "onli", "go", "into", "sinc", "thi", "chang", "will", "probabl", "revert", "http", "github", "com", "angular", "angular", "js", "pull", "15958"], "B_body": "Closes #16271\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["close", "16271", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.008895965483912227], "body_sim": [0.30307117617172685], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.022116576581279537, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 127}, {"A_title": "perf($animate): listen for document visibility changes", "A_clean_title": ["perf", "anim", "listen", "document", "visibl", "chang"], "B_title": "docs(app): fixes material build", "B_clean_title": ["doc", "app", "fix", "materi", "build"], "A_body": "Accessing the document for the hidden state is costly for\nplatforms like Electron.\n\nCloses #14066\n", "A_clean_body": ["access", "document", "hidden", "state", "costli", "platform", "like", "electron", "close", "14066"], "B_body": "The theme css files were reorganized at some point in Angular Material 0.7.x and the build is now failing because the files are missing. The styles on the site do not work correctly now with 0.7.x because the css is missing. This change will keep us on 0.6.x until we can update the theme issue.\n", "B_clean_body": ["theme", "css", "file", "were", "reorgan", "at", "some", "point", "angular", "materi", "build", "now", "fail", "becaus", "file", "are", "miss", "style", "site", "not", "work", "correctli", "now", "becaus", "css", "miss", "thi", "chang", "will", "keep", "us", "until", "we", "updat", "theme", "issu"], "title_sim": [-0.04104293639248803], "body_sim": [0.07132097999280881], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 396}, {"A_title": "fix($location): re-assign location after BFCache back", "A_clean_title": ["fix", "locat", "re", "assign", "locat", "after", "bfcach", "bf", "cach", "back"], "B_title": "docs(guide/Conceptual Overview): fix external api example", "B_clean_title": ["doc", "guid", "conceptu", "overview", "fix", "extern", "api", "exampl"], "A_body": "In the Android browser, the BFCache maintains\nthe state of JavaScript applications even when\nnavigating to another app, so that going\nforward and back, to and from an application\nis very fast.\n\nUnfortunately, this can have undesired side\neffects. In this instance, the location\nvariable was holding a reference to a stale\nwindow.location, and was throwing errors\nwhen going back to an Angular app after\nbrowsing to another site.\n\nThis fix makes sure that location.url()\nincludes a check to make sure that location\nis referencing the current window.location.\n\nCloses #4044\n", "A_clean_body": ["android", "browser", "bfcach", "bf", "cach", "maintain", "state", "javascript", "java", "script", "applic", "even", "when", "navig", "anoth", "app", "so", "that", "go", "forward", "back", "applic", "veri", "fast", "unfortun", "thi", "have", "undesir", "side", "effect", "thi", "instanc", "locat", "variabl", "wa", "hold", "refer", "stale", "window", "locat", "wa", "throw", "error", "when", "go", "back", "angular", "app", "after", "brows", "anoth", "site", "thi", "fix", "make", "sure", "that", "locat", "url", "includ", "check", "make", "sure", "that", "locat", "referenc", "current", "window", "locat", "close", "4044"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nExample is broken in the snapshot because of changes to JSONP\n\n**Other information**:\n\nThe example will still be broken when opened in a plnkr, because they use the stable version instead of the snapshot.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "broken", "snapshot", "becaus", "chang", "jsonp", "**other", "information**", "exampl", "will", "still", "broken", "when", "open", "plnkr", "becaus", "they", "use", "stabl", "version", "instead", "snapshot"], "title_sim": [0.05083497030785281], "body_sim": [0.17090546378928598], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1125}, {"A_title": "fix(ng-bind-html): watch string value instead of wrapper", "A_clean_title": ["fix", "ng", "bind", "html", "watch", "string", "valu", "instead", "wrapper"], "B_title": "fix(testabilityPatch): reset cache after memory leak detection", "B_clean_title": ["fix", "testabilitypatch", "testabl", "patch", "reset", "cach", "after", "memori", "leak", "detect"], "A_body": "Ref: https://github.com/angular/angular.js/pull/4045\n\nI have this sinking feeling that support this use case sort of\nencourages binding to function that blindly trust some html.  For now,\nI'm fixing the issue while I think about the use cases some more.\n\nIn the case of a function that performs any non-trivial work before\nwrapping the value (e.g. the showdown filter in issue #3980, or the\nbinding to a simply wrapper function in issue #3932 if it did anything\nmeaty), this fix makes it \"work\" - but performance is going to suck -\nyou should bind to some other thing on scope that watches the actual\nsource and adjusts itself when that changes (e.g. the showdown filter.)\nFor the case of the wrapper in #3932, if one isn't performing\nsanitization or some such thing - then you the developer has insight\ninto why that value is safe in that particular context - and it should\nbe available simply by name and not as a result of a function taking any\narbitrary input to make auditing of security a little saner.\n\nCloses #3932, #3980\n", "A_clean_body": ["ref", "http", "github", "com", "angular", "angular", "js", "pull", "4045", "have", "thi", "sink", "feel", "that", "support", "thi", "use", "case", "sort", "encourag", "bind", "function", "that", "blindli", "trust", "some", "html", "now", "'m", "fix", "issu", "while", "think", "about", "use", "case", "some", "more", "case", "function", "that", "perform", "ani", "non", "trivial", "work", "befor", "wrap", "valu", "showdown", "filter", "issu", "3980", "or", "bind", "simpli", "wrapper", "function", "issu", "3932", "it", "did", "anyth", "meati", "thi", "fix", "make", "it", "work", "but", "perform", "go", "suck", "you", "bind", "some", "other", "thing", "scope", "that", "watch", "actual", "sourc", "adjust", "itself", "when", "that", "chang", "showdown", "filter", "case", "wrapper", "3932", "one", "n't", "perform", "sanit", "or", "some", "such", "thing", "then", "you", "develop", "ha", "insight", "into", "whi", "that", "valu", "safe", "that", "particular", "context", "it", "avail", "simpli", "by", "name", "not", "as", "result", "function", "take", "ani", "arbitrari", "input", "make", "audit", "secur", "littl", "saner", "close", "3932", "3980"], "B_body": "When you have a test failure in the angular.js project, which also causes a memory leak, such as a failure to dealocate an element or a scope, you often get a false-negative failure for every subsequent test. This change ensures that after such an error, the cache is reset so that subsequent tests can run normally.\n", "B_clean_body": ["when", "you", "have", "test", "failur", "angular", "js", "project", "which", "also", "caus", "memori", "leak", "such", "as", "failur", "dealoc", "element", "or", "scope", "you", "often", "get", "fals", "neg", "failur", "everi", "subsequ", "test", "thi", "chang", "ensur", "that", "after", "such", "error", "cach", "reset", "so", "that", "subsequ", "test", "run", "normal"], "title_sim": [0.04422061612055159], "body_sim": [0.5133200866629839], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 745}, {"A_title": "fix($animate): allow enabled children to animate on disabled parents", "A_clean_title": ["fix", "anim", "allow", "enabl", "children", "anim", "disabl", "parent"], "B_title": "fix($location): re-assign location after BFCache back", "B_clean_title": ["fix", "locat", "re", "assign", "locat", "after", "bfcach", "bf", "cach", "back"], "A_body": "Prior to this fix if a parent container disabled animations for\nitself then no children could be enabled explicity via\n`$animate.enabled`. This patch allows for that to work.\n\nCloses #13179\nCloses #13695\n", "A_clean_body": ["prior", "thi", "fix", "parent", "contain", "disabl", "anim", "itself", "then", "no", "children", "could", "enabl", "explic", "via", "anim", "enabl", "thi", "patch", "allow", "that", "work", "close", "13179", "close", "13695"], "B_body": "In the Android browser, the BFCache maintains\nthe state of JavaScript applications even when\nnavigating to another app, so that going\nforward and back, to and from an application\nis very fast.\n\nUnfortunately, this can have undesired side\neffects. In this instance, the location\nvariable was holding a reference to a stale\nwindow.location, and was throwing errors\nwhen going back to an Angular app after\nbrowsing to another site.\n\nThis fix makes sure that location.url()\nincludes a check to make sure that location\nis referencing the current window.location.\n\nCloses #4044\n", "B_clean_body": ["android", "browser", "bfcach", "bf", "cach", "maintain", "state", "javascript", "java", "script", "applic", "even", "when", "navig", "anoth", "app", "so", "that", "go", "forward", "back", "applic", "veri", "fast", "unfortun", "thi", "have", "undesir", "side", "effect", "thi", "instanc", "locat", "variabl", "wa", "hold", "refer", "stale", "window", "locat", "wa", "throw", "error", "when", "go", "back", "angular", "app", "after", "brows", "anoth", "site", "thi", "fix", "make", "sure", "that", "locat", "url", "includ", "check", "make", "sure", "that", "locat", "referenc", "current", "window", "locat", "close", "4044"], "title_sim": [0.0354235499342881], "body_sim": [0.1649839106658831], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 830}, {"A_title": "docs(ngOpen): add note about browser compatibility", "A_clean_title": ["doc", "ngopen", "ng", "open", "add", "note", "about", "browser", "compat"], "B_title": "fix(testabilityPatch): reset cache after memory leak detection", "B_clean_title": ["fix", "testabilitypatch", "testabl", "patch", "reset", "cach", "after", "memori", "leak", "detect"], "A_body": "- Add note about browser compatibility and recommend ng-show/ng-hide\n\nThis should address #7337.\n", "A_clean_body": ["add", "note", "about", "browser", "compat", "recommend", "ng", "hide", "show", "ng", "thi", "address", "7337"], "B_body": "When you have a test failure in the angular.js project, which also causes a memory leak, such as a failure to dealocate an element or a scope, you often get a false-negative failure for every subsequent test. This change ensures that after such an error, the cache is reset so that subsequent tests can run normally.\n", "B_clean_body": ["when", "you", "have", "test", "failur", "angular", "js", "project", "which", "also", "caus", "memori", "leak", "such", "as", "failur", "dealoc", "element", "or", "scope", "you", "often", "get", "fals", "neg", "failur", "everi", "subsequ", "test", "thi", "chang", "ensur", "that", "after", "such", "error", "cach", "reset", "so", "that", "subsequ", "test", "run", "normal"], "title_sim": [0.06351252869601717], "body_sim": [0.1116273925124866], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 250}, {"A_title": "fix(booleanAttrs): convert to boolean", "A_clean_title": ["fix", "booleanattr", "boolean", "attr", "convert", "boolean"], "B_title": "fix($animate): allow enabled children to animate on disabled parents", "B_clean_title": ["fix", "anim", "allow", "enabl", "children", "anim", "disabl", "parent"], "A_body": "jQuery's attr() does not handle 0 as false, when it comes to boolean attrs.\n\nAnother solution might be to not set attr() for boolean attrs at all...\n", "A_clean_body": ["jqueri", "queri", "'s", "attr", "not", "handl", "as", "fals", "when", "it", "come", "boolean", "attr", "anoth", "solut", "might", "not", "set", "attr", "boolean", "attr", "at", "all"], "B_body": "Prior to this fix if a parent container disabled animations for\nitself then no children could be enabled explicity via\n`$animate.enabled`. This patch allows for that to work.\n\nCloses #13179\nCloses #13695\n", "B_clean_body": ["prior", "thi", "fix", "parent", "contain", "disabl", "anim", "itself", "then", "no", "children", "could", "enabl", "explic", "via", "anim", "enabl", "thi", "patch", "allow", "that", "work", "close", "13179", "close", "13695"], "title_sim": [0.17591150018956195], "body_sim": [0.1279091875746268], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.31909634902348316, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1375}, {"A_title": "docs(*): clarify module API and dependency injection rules", "A_clean_title": ["doc", "clarifi", "modul", "api", "depend", "inject", "rule"], "B_title": "docs(angular.mock.inject): minor formatting change", "B_clean_title": ["doc", "angular", "mock", "inject", "minor", "format", "chang"], "A_body": "Closes #16363\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["close", "16363", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Without backticks, underscores are rendered as italics.\n", "B_clean_body": ["without", "backtick", "underscor", "are", "render", "as", "ital"], "title_sim": [0.29627417552539254], "body_sim": [0.05202161060704713], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 469}, {"A_title": "perf(ngStyleDirective): use $watchCollection", "A_clean_title": ["perf", "ngstyledirect", "ng", "style", "direct", "use", "watchcollect", "watch", "collect"], "B_title": "feat:$xhr: provide access to $xhr header defaults", "B_clean_title": ["feat", "xhr", "provid", "access", "xhr", "header", "default"], "A_body": "This re-commits https://github.com/angular/angular.js/commit/4c8d8ad5083d9dd17c0b8480339d5f95943f1b71 which was [reverted](https://github.com/angular/angular.js/commit/36fd167e1d6668ab497970f491a6d95344e97e41) (with [tests added](https://github.com/angular/angular.js/commit/da75d138b144d196fc2b397c7a86a74528c151a5)).  This is possible now because of 189461f9bf6fda18ddbd16c42f2e959cf939c3da, although note that change is currently causing #15905 so maybe we should hold off on merging this one for now?\r\n\r\nFYI @gdi2290", "A_clean_body": ["thi", "re", "commit", "http", "github", "com", "angular", "angular", "js", "commit", "4c8d8ad5083d9dd17c0b8480339d5f95943f1b71", "which", "wa", "revert", "http", "github", "com", "angular", "angular", "js", "commit", "36fd167e1d6668ab497970f491a6d95344e97e41", "test", "ad", "http", "github", "com", "angular", "angular", "js", "commit", "da75d138b144d196fc2b397c7a86a74528c151a5", "thi", "possibl", "now", "becaus", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "although", "note", "that", "chang", "current", "caus", "15905", "so", "mayb", "we", "hold", "off", "merg", "thi", "one", "now", "fyi", "gdi2290"], "B_body": "$xhr header defaults are now exposed as $xhr.defaults.headers.common and\n$xhr.default.headers.<httpmethod>. This allows applications to configure\ntheir defaults as needed.\n\nThis commit doesn't allow headers to be set per request, only per\napplication. Per request change would require api change, which I tried\nto avoid _for now_.\n", "B_clean_body": ["xhr", "header", "default", "are", "now", "expos", "as", "xhr", "default", "header", "common", "xhr", "default", "header", "httpmethod", "thi", "allow", "applic", "configur", "their", "default", "as", "need", "thi", "commit", "n't", "allow", "header", "set", "per", "request", "onli", "per", "applic", "per", "request", "chang", "would", "requir", "api", "chang", "which", "tri", "avoid", "now"], "title_sim": [-0.002643148928849104], "body_sim": [0.11845976000848293], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.004488845660931057, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2129}, {"A_title": "fix($compile): don't run unnecessary update to one-way bindings", "A_clean_title": ["fix", "compil", "n't", "run", "unnecessari", "updat", "one", "way", "bind"], "B_title": "feat(security): explicitly whitelist URL schemes for bootstrap.", "B_clean_title": ["feat", "secur", "explicitli", "whitelist", "url", "scheme", "bootstrap"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nBug Fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe watch handler was triggering on its first invocation, even though\nits change had already been dealt with when setting up the binding.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe handler does not trigger an update on its first invocation\n\n**Does this PR introduce a breaking change?**\n\nNope - I don't think so. Although I had to modify a bunch of tests to ensure that a digest occurred between compilation and the first checks.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n  ~~\\- [ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nCloses #14546\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "watch", "handler", "wa", "trigger", "it", "first", "invoc", "even", "though", "it", "chang", "had", "alreadi", "been", "dealt", "when", "set", "up", "bind", "**what", "new", "behavior", "thi", "featur", "chang", "handler", "not", "trigger", "updat", "it", "first", "invoc", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "n't", "think", "so", "although", "had", "modifi", "bunch", "test", "ensur", "that", "digest", "occur", "between", "compil", "first", "check", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "close", "14546"], "B_body": "Many browsers have some extension URL scheme. It is unclear how many of\r\nthose have the security issue of allowing parser-inserted loads of\r\nextension URLs.\r\n\r\nTo be conservative, this code whitelists the URL schemes that are known\r\nto be subject to CSP, i.e. the ones that are expected and safe.\r\n\r\nNote: there is no change in tests as behavior does not change for any known URL.", "B_clean_body": ["mani", "browser", "have", "some", "extens", "url", "scheme", "it", "unclear", "how", "mani", "those", "have", "secur", "issu", "allow", "parser", "insert", "load", "extens", "url", "ur", "ls", "conserv", "thi", "code", "whitelist", "url", "scheme", "that", "are", "known", "subject", "csp", "one", "that", "are", "expect", "safe", "note", "there", "no", "chang", "test", "as", "behavior", "not", "chang", "ani", "known", "url"], "title_sim": [-0.016066838792840165], "body_sim": [0.2644182729635506], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0005207231126418205, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 198}, {"A_title": "docs($sceProvider): XSS when turning of SCE", "A_clean_title": ["doc", "sceprovid", "sce", "provid", "xss", "when", "turn", "sce"], "B_title": "feat(input): add support for input[type=range]", "B_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "A_body": "Document that turning off SCE is very, very dangerous and should normally not be used by applications.\n", "A_clean_body": ["document", "that", "turn", "off", "sce", "veri", "veri", "danger", "normal", "not", "use", "by", "applic"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "title_sim": [0.04273658000917235], "body_sim": [0.039767684112448694], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0068666998241648045, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 285}, {"A_title": "refactor(jqLite): stop patching individual jQuery methods", "A_clean_title": ["refactor", "jqlite", "jq", "lite", "stop", "patch", "individu", "jqueri", "queri", "method"], "B_title": "fix($$urlUtils): remove dependency on $window", "B_clean_title": ["fix", "urlutil", "url", "util", "remov", "depend", "window"], "A_body": "Currently Angular monkey-patches a few jQuery methods that remove elements\nfrom the DOM. Since methods like .remove() have multiple signatures\nthat can change what's actually removed, Angular needs to carefully\nrepeat them in its patching or it can break apps using jQuery correctly.\nSuch a strategy is also not future-safe.\n\nInstead of patching individual methods on the prototype, it's better to\nhook into jQuery.cleanData and trigger custom events there. This should be\nsafe as e.g. jQuery UI needs it and uses it. It'll also be future-safe.\n\nThe only drawback is that $destroy is no longer triggered when using $detach\nbut:\n1. Angular doesn't use this method, jqLite doesn't implement it.\n2. Detached elements can be re-attached keeping all their events & data\n    so it makes sense that $destroy is not triggered on them.\n3. The approach from this commit is so much safer that any issues with\n    .detach() working differently are outweighed by the robustness of the code.\n\nBREAKING CHANGE: the $destroy event is no longer triggered when using the\njQuery detach() method. If you want to destroy Angular data attached to the\nelement, use remove().\n\ncc @caitp\n", "A_clean_body": ["current", "angular", "monkey", "patch", "few", "jqueri", "queri", "method", "that", "remov", "element", "dom", "sinc", "method", "like", "remov", "have", "multipl", "signatur", "that", "chang", "what", "'s", "actual", "remov", "angular", "need", "care", "repeat", "them", "it", "patch", "or", "it", "break", "app", "jqueri", "queri", "correctli", "such", "strategi", "also", "not", "futur", "safe", "instead", "patch", "individu", "method", "prototyp", "it", "'s", "better", "hook", "into", "jqueri", "cleandata", "queri", "clean", "data", "trigger", "custom", "event", "there", "thi", "safe", "as", "jqueri", "queri", "ui", "need", "it", "use", "it", "it", "'ll", "also", "futur", "safe", "onli", "drawback", "that", "destroy", "no", "longer", "trigger", "when", "detach", "but", "angular", "n't", "use", "thi", "method", "jqlite", "jq", "lite", "n't", "implement", "it", "detach", "element", "re", "attach", "keep", "all", "their", "event", "data", "so", "it", "make", "sens", "that", "destroy", "not", "trigger", "them", "approach", "thi", "commit", "so", "much", "safer", "that", "ani", "issu", "detach", "work", "differ", "are", "outweigh", "by", "robust", "code", "break", "chang", "destroy", "event", "no", "longer", "trigger", "when", "jqueri", "queri", "detach", "method", "you", "want", "destroy", "angular", "data", "attach", "element", "use", "remov", "cc", "caitp"], "B_body": "$window may be mocked out in tests causing those tests to fail.  So\ndon't use $window.\n", "B_clean_body": ["window", "may", "mock", "out", "test", "caus", "those", "test", "fail", "so", "n't", "use", "window"], "title_sim": [-0.00966574717487177], "body_sim": [0.1103606537020929], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.008520841496000735, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 279}, {"A_title": "chore(doc-gen): render @example tag for ngdoc @method", "A_clean_title": ["chore", "doc", "gen", "render", "exampl", "tag", "ngdoc", "method"], "B_title": "fix($parse): do not pass scope/locals to interceptors of one-time bindings", "B_clean_title": ["fix", "pars", "not", "pass", "scope", "local", "interceptor", "one", "time", "bind"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat / fix to the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`@example` in  `@method` is not rendered\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "fix", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "method", "not", "render", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "2ee5033967d5f87a516bad137686b0592e25d26b should not have added these args (see 529550d0da3d88514ce9efb038fb935fbf90f971 which dropped them elsewhere)", "B_clean_body": ["2ee5033967d5f87a516bad137686b0592e25d26b", "not", "have", "ad", "these", "arg", "see", "529550d0da3d88514ce9efb038fb935fbf90f971", "which", "drop", "them", "elsewher"], "title_sim": [0.0868803636127876], "body_sim": [0.29592982121172595], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 233}, {"A_title": "fix($parse): do not pass scope/locals to interceptors of one-time bindings", "A_clean_title": ["fix", "pars", "not", "pass", "scope", "local", "interceptor", "one", "time", "bind"], "B_title": "[[TRAVIS POKE]] fix($location): allow numeric location setter arguments", "B_clean_title": ["travi", "poke", "fix", "locat", "allow", "numer", "locat", "setter", "argument"], "A_body": "2ee5033967d5f87a516bad137686b0592e25d26b should not have added these args (see 529550d0da3d88514ce9efb038fb935fbf90f971 which dropped them elsewhere)", "A_clean_body": ["2ee5033967d5f87a516bad137686b0592e25d26b", "not", "have", "ad", "these", "arg", "see", "529550d0da3d88514ce9efb038fb935fbf90f971", "which", "drop", "them", "elsewher"], "B_body": "Dupe of #7161, with some amendments\n", "B_clean_body": ["dupe", "7161", "some", "amend"], "title_sim": [0.17015120567471476], "body_sim": [0.025499557325077863], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.009241925809823122, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1049}, {"A_title": "chore(ci): remove repeated tests running from Travis build", "A_clean_title": ["chore", "ci", "remov", "repeat", "test", "run", "travi", "build"], "B_title": "chore(Rakefile): force 32bit JVM mode only when java supports it", "B_clean_title": ["chore", "rakefil", "forc", "32bit", "jvm", "mode", "onli", "when", "java", "support", "it"], "A_body": "In b2902446eb41591f5d868846d3c5bad3a888bcba the doce2e tests were moved\ninto the 'unit' test job on Travis, but only half of this change ever made\nit into v1.2.x. This change fixes up the other half, so that the doce2e\ntests are run only once.\n", "A_clean_body": ["b2902446eb41591f5d868846d3c5bad3a888bcba", "doce2", "test", "were", "move", "into", "'unit", "test", "job", "travi", "but", "onli", "half", "thi", "chang", "ever", "made", "it", "into", "v1", "thi", "chang", "fix", "up", "other", "half", "so", "that", "doce2", "test", "are", "run", "onli", "onc"], "B_body": "Some Java installs don't have '-d32' flag (e.g. OpenJDK which is standard\nfor some Linux systems), and the closure_compile fails because of forcing\nthat flag. Test, and only run in faster 32bit mode if supported, or\nelse just run with no flag (default mode).\n", "B_clean_body": ["some", "java", "instal", "n't", "have", "d32", "flag", "openjdk", "open", "jdk", "which", "standard", "some", "linux", "system", "closur", "compil", "fail", "becaus", "forc", "that", "flag", "test", "onli", "run", "faster", "32bit", "mode", "support", "or", "just", "run", "no", "flag", "default", "mode"], "title_sim": [0.2712470914262413], "body_sim": [0.44162847305634306], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 620}, {"A_title": "fix($rootScope): provide correct value of one-time bindings in watchGroup", "A_clean_title": ["fix", "rootscop", "root", "scope", "provid", "correct", "valu", "one", "time", "bind", "watchgroup", "watch", "group"], "B_title": "docs(guide/Components): snake -> kebab", "B_clean_title": ["doc", "guid", "compon", "snake", "kebab"], "A_body": "I don't recall how or why I came across this issue, and it's confusing me, but I found this stashed and the tests do make sense...?", "A_clean_body": ["n't", "recal", "how", "or", "whi", "came", "across", "thi", "issu", "it", "'s", "confus", "me", "but", "found", "thi", "stash", "test", "make", "sens"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDoc correction.\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nDocs mention `snake_case`.\n\n**What is the new behavior (if this is a feature change)?**\n\nExample given is actually `kebab-case`.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example given is not in snake_case, it is in kebab-case.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "correct", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "mention", "snake", "case", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "given", "actual", "kebab", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "given", "not", "snake", "case", "it", "kebab", "case"], "title_sim": [0.0036980157489262698], "body_sim": [0.26166003874805177], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 337}, {"A_title": "docs(*): don't hide results for middle-clicks", "A_clean_title": ["doc", "n't", "hide", "result", "middl", "click"], "B_title": "Chore travis split unit", "B_clean_title": ["chore", "travi", "split", "unit"], "A_body": "Middle-clicking opens a link in a new tab; it shouldn't close the results list\r\nas the user may want to open more of those links.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nMiddle-clicking on a link in the results list (which opens a link in a new tab) closes the list.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nList is kept open in such a case.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["middl", "click", "open", "link", "new", "tab", "it", "n't", "close", "result", "list", "as", "user", "may", "want", "open", "more", "those", "link", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "middl", "click", "link", "result", "list", "which", "open", "link", "new", "tab", "close", "list", "**what", "new", "behavior", "thi", "featur", "chang", "list", "kept", "open", "such", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.02965679093358939], "body_sim": [0.9140669542398028], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.017628269210589142, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 31}, {"A_title": "fix(ngTransclude): remove terminal: true", "A_clean_title": ["fix", "ngtransclud", "ng", "transclud", "remov", "termin", "true"], "B_title": "fix(Angular.js): not serializing null values", "B_clean_title": ["fix", "angular", "js", "not", "serial", "null", "valu"], "A_body": "This was introduced in commit 2adaff083f309bd324c466edd781f3edbf0aff89,\r\nbut made obsolete in 41f3269bfbd90a8d48e62639bb43f3020617bc57.\r\n\r\nFixes #16411\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "wa", "introduc", "commit", "2adaff083f309bd324c466edd781f3edbf0aff89", "but", "made", "obsolet", "41f3269bfbd90a8d48e62639bb43f3020617bc57", "fix", "16411", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "toKeyValue should not serialize a value if that value is set as null. \n", "B_clean_body": ["tokeyvalu", "key", "valu", "not", "serial", "valu", "that", "valu", "set", "as", "null"], "title_sim": [-0.011332563946601435], "body_sim": [0.03694318295808437], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01726883659939057, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1383}, {"A_title": "refactor($parse): move duplicate $parse interpreter/compiler logic into common location", "A_clean_title": ["refactor", "pars", "move", "duplic", "pars", "interpret", "compil", "logic", "into", "common", "locat"], "B_title": "feat($resource): add support for `request` and `requestError` interceptors", "B_clean_title": ["feat", "resourc", "add", "support", "request", "requesterror", "request", "error", "interceptor"], "A_body": "... and deleted a couple other unused things.", "A_clean_body": ["delet", "coupl", "other", "unus", "thing"], "B_body": "Just a rebased version of #13273.", "B_clean_body": ["just", "rebas", "version", "13273"], "title_sim": [0.0038096996788289914], "body_sim": [0.07304259005259628], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 46}, {"A_title": "fix($parse): always re-evaluate filters within literals when an input is an object", "A_clean_title": ["fix", "pars", "alway", "re", "evalu", "filter", "within", "liter", "when", "input", "object"], "B_title": "feat(ngMessages): add support for default message", "B_clean_title": ["feat", "ngmessag", "ng", "messag", "add", "support", "default", "messag"], "A_body": "Fixes #15964 \r\n\r\nThis changes the [compareObjectIdentity](https://github.com/angular/angular.js/blob/v1.6.4/src/ng/parse.js#L1785) flag from being per-expression to per-input.  This allows inputs to filters to not compare object entity, but other inputs such as `- x` or `{x: x}` to only compare object entity.  This also expands this `compareObjectIdentity = true` beyond just object literals.", "A_clean_body": ["fix", "15964", "thi", "chang", "compareobjectident", "compar", "object", "ident", "http", "js", "github", "com", "angular", "angular", "js", "blob", "v1", "src", "ng", "pars", "l1785", "flag", "be", "per", "express", "per", "input", "thi", "allow", "input", "filter", "not", "compar", "object", "entiti", "but", "other", "input", "such", "as", "or", "onli", "compar", "object", "entiti", "thi", "also", "expand", "thi", "compareobjectident", "compar", "object", "ident", "true", "beyond", "just", "object", "liter"], "B_body": "Added support for showing default message when no values are mapped with ng-message.\r\n\r\nCloses #12008\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["ad", "support", "show", "default", "messag", "when", "no", "valu", "are", "map", "ng", "messag", "close", "12008", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.027957964932454362], "body_sim": [0.2759968371582115], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07350792021448145, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 382}, {"A_title": "docs(ngNonBindable): Document effect on attributes", "A_clean_title": ["doc", "ngnonbind", "ng", "non", "bindabl", "document", "effect", "attribut"], "B_title": "fix($parse): do not pass scope/locals to interceptors of one-time bindings", "B_clean_title": ["fix", "pars", "not", "pass", "scope", "local", "interceptor", "one", "time", "bind"], "A_body": "The phrase \"contents of the current DOM element\" may be interpreted either as\r\ninclusive of the DOM element's attributes or as exclusive of the attributes.\r\nThis situation concerns markup such as:\r\n\r\n    <div ng-non-bindable ng-controller=\"MyController\"></div>\r\n\r\nIn practice, AngularJS does not compile or bind attribute values for elements\r\nwhich specify the `ng-non-bindable` directive. Extend the documentation to\r\ndefinitely describe this behavior.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["phrase", "content", "current", "dom", "element", "may", "interpret", "either", "as", "inclus", "dom", "element", "'s", "attribut", "or", "as", "exclus", "attribut", "thi", "situat", "concern", "markup", "such", "as", "div", "ng", "non", "bindabl", "ng", "controller=", "mycontrol", "my", "control", "div", "practic", "angularj", "angular", "js", "not", "compil", "or", "bind", "attribut", "valu", "element", "which", "specifi", "ng", "non", "bindabl", "direct", "extend", "document", "definit", "describ", "thi", "behavior", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "2ee5033967d5f87a516bad137686b0592e25d26b should not have added these args (see 529550d0da3d88514ce9efb038fb935fbf90f971 which dropped them elsewhere)", "B_clean_body": ["2ee5033967d5f87a516bad137686b0592e25d26b", "not", "have", "ad", "these", "arg", "see", "529550d0da3d88514ce9efb038fb935fbf90f971", "which", "drop", "them", "elsewher"], "title_sim": [0.0878871294641282], "body_sim": [0.34548470446349855], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 124}, {"A_title": "chore($resource): remove obsolete API", "A_clean_title": ["chore", "resourc", "remov", "obsolet", "api"], "B_title": "fix($location): decode non-component special chars in Hashbang URLS", "B_clean_title": ["fix", "locat", "decod", "non", "compon", "special", "char", "hashbang", "url"], "A_body": "This code has been in the $resource service since 2010, but was\r\nnever documented and can therefore be removed. It'll save precious bytes!\r\n\r\nShout-out to @gkalpak for finding this.\r\n\r\nTechnically, we don't have to remove it, but it doesn't make sense to keep it in the repository either. It leads to devs fixing bugs in undocumented APIs: https://github.com/angular/angular.js/commit/6eb4ffc085cc0fde19cbac2c3da227ff47d71e4e ;)\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nobsolete code removal\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo \ud83d\ude1b \r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been removed\r\n- ~ [ ] Docs have been added / updated (for bug fixes / features) ~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "code", "ha", "been", "resourc", "servic", "sinc", "2010", "but", "wa", "never", "document", "therefor", "remov", "it", "'ll", "save", "preciou", "byte", "shout", "out", "gkalpak", "find", "thi", "technic", "we", "n't", "have", "remov", "it", "but", "it", "n't", "make", "sens", "keep", "it", "repositori", "either", "it", "lead", "dev", "fix", "bug", "undocu", "api", "ap", "http", "github", "com", "angular", "angular", "js", "commit", "6eb4ffc085cc0fde19cbac2c3da227ff47d71e4", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "obsolet", "code", "remov", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "remov", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Fixes https://github.com/angular/angular.js/pull/16316#issuecomment-347527097\r\n", "B_clean_body": ["fix", "http", "github", "com", "angular", "angular", "js", "pull", "16316", "issuecom", "347527097"], "title_sim": [0.020929882257935517], "body_sim": [0.43688082469838774], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 49}, {"A_title": "fix(date filter): default to fullDate format", "A_clean_title": ["fix", "date", "filter", "default", "fulldat", "full", "date", "format"], "B_title": "fix($http): correct xhrStatus of different `timeout` values", "B_clean_title": ["fix", "http", "correct", "xhrstatu", "xhr", "statu", "differ", "timeout", "valu"], "A_body": "The browser's behave inconsistently, so we should just stick to one format\nwhen the format is not specified by the developer\n\nCloses #605\n", "A_clean_body": ["browser", "'s", "behav", "inconsist", "so", "we", "just", "stick", "one", "format", "when", "format", "not", "specifi", "by", "develop", "close", "605"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nIncorrect xhrStatus\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCorrect xhrStatus\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n@gkalpak @frederikprijck this is something I'd like your review / opinion on\r\n\r\nWhile trying to find out if https://github.com/angular/angular.js/pull/14021 was (partially) fixed by https://github.com/angular/angular.js/commit/5e2bc5bbf347a9dfadc08b1514b8be06fd550913, I noticed there's a problem with the http tests and the actual behavior:\r\n\r\nIn https://github.com/angular/angular.js/blob/e5c6174839e96113c93913dd8b3c4cca760dfc41/test/ng/httpSpec.js#L1910\r\n\r\nwe expect that the xhrStatus is 'timeout', however it actually is 'abort' in real $http usage. This is not caught by our tests because the tests run against the mocked $httpBackend which must manually be kept in sync with the real $http implementation.\r\n\r\nWhat's more, our implementation of abort / timeout doesn't follow the way normal xhr abort / timeout works:\r\n\r\nIf you use xhr.abort() then the onabort handler is called.\r\nIf you set xhr.timeout and the timeout is exceeded then the ontimeout handler is callded.\r\n\r\n(In the browser, both events are marked as \"canceled\" in the devtools, at least in Chrome).\r\n\r\nIn $http, in both cases you would get xhrStatus 'abort', because we abort the xhrRequest, but\r\ndon't distinguish between these cases. \r\n\r\nIn the current implementation, the \"timeout\" handler would only be called in the case of a real\r\nnetwork timeout (presumably, because I couldn't find a way to test this).\r\n\r\nWhat's more, if you pass a $timeout as the timeout parameter, it will currently set xhrStatus \"abort\" if the time runs out (promise resolved). This case can only be fixed by reading the internal $$timeoutId property on the promise returned by $timeout.\r\n\r\nThis PR fixes the code in both the mock httpBackend and the regular http to follow the same logic as xhr does:\r\n\r\n| xhr | http option | xhr result | current http xhrStatus| new http xhrStatus| \r\n------- | ------- | -------------- | -------------- | ------------ |\r\n| xhr.abort() | resolving promise | onabort callback is called | abort | abort\r\n| xhr.timeout | numerical value |  ontimeout callback | abort | timeout\r\n| ---- | $timeout |  ----------- | abort | timeout\r\n\r\nHere's a plunker that shows the difference, with a patched angular.js file (to swit\r\n\r\nhttp://plnkr.co/edit/nsviFV7YyF4TiXCyISMN?p=preview\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "incorrect", "xhrstatu", "xhr", "statu", "**what", "new", "behavior", "thi", "featur", "chang", "correct", "xhrstatu", "xhr", "statu", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "gkalpak", "frederikprijck", "thi", "someth", "'d", "like", "your", "review", "opinion", "while", "tri", "find", "out", "http", "github", "com", "angular", "angular", "js", "pull", "14021", "wa", "partial", "fix", "by", "http", "github", "com", "angular", "angular", "js", "commit", "5e2bc5bbf347a9dfadc08b1514b8be06fd550913", "notic", "there", "'s", "problem", "http", "test", "actual", "behavior", "http", "js", "github", "com", "angular", "angular", "js", "blob", "e5c6174839e96113c93913dd8b3c4cca760dfc41", "test", "ng", "httpspec", "http", "spec", "l1910", "we", "expect", "that", "xhrstatu", "xhr", "statu", "'timeout", "howev", "it", "actual", "'abort", "real", "http", "usag", "thi", "not", "caught", "by", "our", "test", "becaus", "test", "run", "against", "mock", "httpbackend", "http", "backend", "which", "must", "manual", "kept", "sync", "real", "http", "implement", "what", "'s", "more", "our", "implement", "abort", "timeout", "n't", "follow", "way", "normal", "xhr", "abort", "timeout", "work", "you", "use", "xhr", "abort", "then", "onabort", "handler", "call", "you", "set", "xhr", "timeout", "timeout", "exceed", "then", "ontimeout", "handler", "calld", "browser", "both", "event", "are", "mark", "as", "cancel", "devtool", "at", "least", "chrome", "http", "both", "case", "you", "would", "get", "xhrstatu", "xhr", "statu", "'abort", "becaus", "we", "abort", "xhrrequest", "xhr", "request", "but", "n't", "distinguish", "between", "these", "case", "current", "implement", "timeout", "handler", "would", "onli", "call", "case", "real", "network", "timeout", "presum", "becaus", "could", "n't", "find", "way", "test", "thi", "what", "'s", "more", "you", "pass", "timeout", "as", "timeout", "paramet", "it", "will", "current", "set", "xhrstatu", "xhr", "statu", "abort", "time", "run", "out", "promis", "resolv", "thi", "case", "onli", "fix", "by", "read", "intern", "timeoutid", "timeout", "id", "properti", "promis", "return", "by", "timeout", "thi", "pr", "fix", "code", "both", "mock", "httpbackend", "http", "backend", "regular", "http", "follow", "same", "logic", "as", "xhr", "xhr", "http", "option", "xhr", "result", "current", "http", "xhrstatus|", "xhr", "status|", "new", "http", "xhrstatus|", "xhr", "status|", "xhr", "abort", "resolv", "promis", "onabort", "callback", "call", "abort", "abort", "xhr", "timeout", "numer", "valu", "ontimeout", "callback", "abort", "timeout", "timeout", "abort", "timeout", "here", "'s", "plunker", "that", "show", "differ", "patch", "angular", "js", "file", "swit", "http", "plnkr", "co", "edit", "nsvifv7yyf4tixcyismn", "nsvi", "fv7yy", "f4ti", "cy", "ismn", "p=preview"], "title_sim": [0.10698773715695448], "body_sim": [0.3360870851441582], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01443874397907163, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2183}, {"A_title": "fix($httpBackend): use ActiveX XHR when making PATCH requests on IE8", "A_clean_title": ["fix", "httpbackend", "http", "backend", "use", "activex", "activ", "xhr", "when", "make", "patch", "request", "ie8"], "B_title": "test($http): ignore date-toJSON test if running in IE8", "B_clean_title": ["test", "http", "ignor", "date", "tojson", "json", "test", "run", "ie8"], "A_body": "IE8's native XHR doesn't support PATCH requests, but the ActiveX one does.\n\nCloses #2518\nCloses #5043\n", "A_clean_body": ["ie8", "'s", "nativ", "xhr", "n't", "support", "patch", "request", "but", "activex", "activ", "one", "close", "2518", "close", "5043"], "B_body": "IE8 does not implement Date.prototype.toISOString(), which is necessary for\nthis feature. The feature still works if this method is polyfilled, but these\ntests are not run with polyfills.\n\n/CC @IgorMinar (Please review, shouldn't take long!)\n", "B_clean_body": ["ie8", "not", "implement", "date", "prototyp", "toisostr", "iso", "string", "which", "necessari", "thi", "featur", "featur", "still", "work", "thi", "method", "polyfil", "but", "these", "test", "are", "not", "run", "polyfil", "cc", "igorminar", "igor", "minar", "pleas", "review", "n't", "take", "long"], "title_sim": [0.07553549320349451], "body_sim": [0.23967752703312903], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.12783076546305785, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 216}, {"A_title": "feat($resource): add support for `request` and `requestError` interceptors", "A_clean_title": ["feat", "resourc", "add", "support", "request", "requesterror", "request", "error", "interceptor"], "B_title": "docs(ngMockE2E): add docs for $httpBackend.matchLatestDefinitionEnabl\u2026", "B_clean_title": ["doc", "ngmocke2", "ng", "mock", "e2e", "add", "doc", "httpbackend", "matchlatestdefinitionenabl\u2026", "http", "backend", "match", "latest", "definit", "enabl\u2026"], "A_body": "Just a rebased version of #13273.", "A_clean_body": ["just", "rebas", "version", "13273"], "B_body": "\u2026ed()\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["\u2026ed", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.11345171045476345], "body_sim": [0.07472071298856882], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.21385295721191722, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 475}, {"A_title": "fix(Angular.js): not serializing null values", "A_clean_title": ["fix", "angular", "js", "not", "serial", "null", "valu"], "B_title": "docs(guide/Expressions): Redirection to MDN", "B_clean_title": ["doc", "guid", "express", "redirect", "mdn"], "A_body": "toKeyValue should not serialize a value if that value is set as null. \n", "A_clean_body": ["tokeyvalu", "key", "valu", "not", "serial", "valu", "that", "valu", "set", "as", "null"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nIt is better to link to the English version of MDN rather than German version\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "it", "better", "link", "english", "version", "mdn", "rather", "than", "german", "version"], "title_sim": [0.015735231958302624], "body_sim": [0.028961162300671136], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 824}, {"A_title": "refactor($parse): move duplicate $parse interpreter/compiler logic into common location", "A_clean_title": ["refactor", "pars", "move", "duplic", "pars", "interpret", "compil", "logic", "into", "common", "locat"], "B_title": "fix($compile): create new (isolate) scopes for directives on root elements", "B_clean_title": ["fix", "compil", "creat", "new", "isol", "scope", "direct", "root", "element"], "A_body": "... and deleted a couple other unused things.", "A_clean_body": ["delet", "coupl", "other", "unus", "thing"], "B_body": "previously we would not create them and it's causing all kinds of issues and accidental leaks\n\nCloses #817\n", "B_clean_body": ["previous", "we", "would", "not", "creat", "them", "it", "'s", "caus", "all", "kind", "issu", "accident", "leak", "close", "817"], "title_sim": [0.1967679911728212], "body_sim": [-0.006698222245785671], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1824}, {"A_title": "feat($timeout): add $timeout service that superceeds $deferred", "A_clean_title": ["feat", "timeout", "add", "timeout", "servic", "that", "superce", "defer"], "B_title": "perf(orderBy): copy array with slice instead of for loop", "B_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "A_body": "$timeout has a better name ($defer got often confused with something related to $q) and\nis actually promise based with cancelation support.\n\nWith this commit the $defer service is deprecated and will be removed before 1.0.\n\nCloses #704, #532\n", "A_clean_body": ["timeout", "ha", "better", "name", "defer", "got", "often", "confus", "someth", "relat", "actual", "promis", "base", "cancel", "support", "thi", "commit", "defer", "servic", "deprec", "will", "remov", "befor", "close", "704", "532"], "B_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "B_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "title_sim": [-0.03048381095065438], "body_sim": [0.14419164969906448], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.020876552143084547, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 906}, {"A_title": "chore(ci): disable unit testing on Firefox", "A_clean_title": ["chore", "ci", "disabl", "unit", "test", "firefox"], "B_title": "feat($compile): support directive virtual groups", "B_clean_title": ["feat", "compil", "support", "direct", "virtual", "group"], "A_body": "Related to https://github.com/angular/angular.js/issues/15987\r\n\r\n", "A_clean_body": ["relat", "http", "github", "com", "angular", "angular", "js", "issu", "15987"], "B_body": "By appending  X-start and X-end to a directive it is now possible\nto have the directive act on a group of elements.\n\nIt is now possible to iterate over multiple elements like so:\n\n```\n<table>\n  <tr ng-repeat-start=\"item in list\">I get repeated</tr>\n  <tr ng-repeat-end>I also get repeated</tr>\n</table>\n```\n", "B_clean_body": ["by", "append", "start", "end", "direct", "it", "now", "possibl", "have", "direct", "act", "group", "element", "it", "now", "possibl", "iter", "over", "multipl", "element", "like", "so", "tabl", "tr", "ng", "repeat", "start=", "item", "list", "get", "repeat", "tr", "tr", "ng", "repeat", "end", "also", "get", "repeat", "tr", "tabl"], "title_sim": [-0.0035965273320591887], "body_sim": [0.046550769998909065], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1451}, {"A_title": "docs(guide/Unit Testing): Typo in 'focused'", "A_clean_title": ["doc", "guid", "unit", "test", "typo", "'focus"], "B_title": "revert: \"fix($compile): do not write @-bound properties if attribute \u2026", "B_clean_title": ["revert", "fix", "compil", "not", "write", "bound", "properti", "attribut"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nN/A\n\n**What is the new behavior (if this is a feature change)?**\n\nNone\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "none", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "\u2026is not present\"\n\nThis reverts commit 8a1eb1625c080445ce1e519762e1f2d4fd842b72.\n\nThis commit broke the tabs component on the material project,\nwhich caused internal breakages. Will open a separate issue to\nlook into the issue.\n", "B_clean_body": ["\u2026i", "not", "present", "thi", "revert", "commit", "8a1eb1625c080445ce1e519762e1f2d4fd842b72", "thi", "commit", "broke", "tab", "compon", "materi", "project", "which", "caus", "intern", "breakag", "will", "open", "separ", "issu", "look", "into", "issu"], "title_sim": [0.02727028110771869], "body_sim": [0.3558732537646858], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 297}, {"A_title": "fix($animate): allow enabled children to animate on disabled parents", "A_clean_title": ["fix", "anim", "allow", "enabl", "children", "anim", "disabl", "parent"], "B_title": "docs(guide/Migrating from Previous Versions): fix typo \"indentifiers\"", "B_clean_title": ["doc", "guid", "migrat", "previou", "version", "fix", "typo", "indentifi"], "A_body": "Prior to this fix if a parent container disabled animations for\nitself then no children could be enabled explicity via\n`$animate.enabled`. This patch allows for that to work.\n\nCloses #13179\nCloses #13695\n", "A_clean_body": ["prior", "thi", "fix", "parent", "contain", "disabl", "anim", "itself", "then", "no", "children", "could", "enabl", "explic", "via", "anim", "enabl", "thi", "patch", "allow", "that", "work", "close", "13179", "close", "13695"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe word \"identifiers\" is misspelled as \"indentifiers\".\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "word", "identifi", "misspel", "as", "indentifi", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.0559555188646856], "body_sim": [0.11346094931547501], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 445}, {"A_title": "chore(*): stop testing on Edge 15 due to its instability", "A_clean_title": ["chore", "stop", "test", "edg", "15", "due", "it", "instabl"], "B_title": "wip: feat(ngModel): run formatters / setModelValue", "B_clean_title": ["wip", "feat", "ngmodel", "ng", "model", "run", "formatt", "setmodelvalu", "set", "model", "valu"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nChore.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nEdge 15 & 16 are tested.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nOnly Edge 16 is tested.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nEdge 15 disconnects from Karma frequently causing extreme build instability.\r\nWe are testing on Edge 16 & Edge 17 should be released soon anyway.", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "edg", "15", "16", "are", "test", "**what", "new", "behavior", "thi", "featur", "chang", "onli", "edg", "16", "test", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "edg", "15", "disconnect", "karma", "frequent", "caus", "extrem", "build", "instabl", "we", "are", "test", "edg", "16", "edg", "17", "releas", "soon", "anyway"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's currently no way to manually run the model -> view pipeline / formatters\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAn API to run the whole pipeline / the formatters is introduced.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nThe PR includes both a `$format` and a `$setModelValue` function. I think only one is needed, we just need to decide which one.\r\n\r\n$format:\r\n\r\n- PRO: does the most needed thing, very straightforward: run the formatters and updates the viewValue\r\n- CON: developer must run $render manually\r\n- CON: empty classes are set even though the DOM is not updated. Could be moved to $render()\r\n- CON: no equivalent on the view -> model side (inconsistent API)\r\n\r\n$setModelValue\r\n- PRO: equivalent to $setViewValue, runs the whole pipeline\r\n- CON: unintuitive that the function argument should / must be set to the current $modelValue, so the control does not get out of sync with the scope (same behavior as $setViewValue though)\r\n- CON: only runs $render if the viewValue has actually changed.\r\n- CON: always runs the validation, even though it might not be necessary\r\n\r\nBoth methods can handle the basic case, where an app developer wants to run the formatters the view -> model pipeline has been run, see https://github.com/angular/angular.js/issues/3407 or https://github.com/angular/angular.js/pull/5221\r\n\r\nI personally tend to introduce `$format` as it has the smaller surface area and introduces fewer side effects. The full model -> view pipeline is not really needed for most cases.\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "current", "no", "way", "manual", "run", "model", "view", "pipelin", "formatt", "**what", "new", "behavior", "thi", "featur", "chang", "api", "run", "whole", "pipelin", "formatt", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "pr", "includ", "both", "format", "setmodelvalu", "set", "model", "valu", "function", "think", "onli", "one", "need", "we", "just", "need", "decid", "which", "one", "format", "pro", "most", "need", "thing", "veri", "straightforward", "run", "formatt", "updat", "viewvalu", "view", "valu", "con", "develop", "must", "run", "render", "manual", "con", "empti", "class", "are", "set", "even", "though", "dom", "not", "updat", "could", "move", "render", "con", "no", "equival", "view", "model", "side", "inconsist", "api", "setmodelvalu", "set", "model", "valu", "pro", "equival", "setviewvalu", "set", "view", "valu", "run", "whole", "pipelin", "con", "unintuit", "that", "function", "argument", "must", "set", "current", "modelvalu", "model", "valu", "so", "control", "not", "get", "out", "sync", "scope", "same", "behavior", "as", "setviewvalu", "set", "view", "valu", "though", "con", "onli", "run", "render", "viewvalu", "view", "valu", "ha", "actual", "chang", "con", "alway", "run", "valid", "even", "though", "it", "might", "not", "necessari", "both", "method", "handl", "basic", "case", "where", "app", "develop", "want", "run", "formatt", "view", "model", "pipelin", "ha", "been", "run", "see", "http", "github", "com", "angular", "angular", "js", "issu", "3407", "or", "http", "github", "com", "angular", "angular", "js", "pull", "5221", "person", "tend", "introduc", "format", "as", "it", "ha", "smaller", "surfac", "area", "introduc", "fewer", "side", "effect", "full", "model", "view", "pipelin", "not", "realli", "need", "most", "case"], "title_sim": [-0.006120356635151551], "body_sim": [0.5958676114478066], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.014068462595988008, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 187}, {"A_title": "Chore travis split unit", "A_clean_title": ["chore", "travi", "split", "unit"], "B_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "B_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "B_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "title_sim": [-0.022081935864870887], "body_sim": [0.025183338676354826], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1339}, {"A_title": "fix($location): decode non-component special chars in Hashbang URLS", "A_clean_title": ["fix", "locat", "decod", "non", "compon", "special", "char", "hashbang", "url"], "B_title": "refactor($parse): add lgalfaso's refactors and suggestions", "B_clean_title": ["refactor", "pars", "add", "lgalfaso", "'s", "refactor", "suggest"], "A_body": "Fixes https://github.com/angular/angular.js/pull/16316#issuecomment-347527097\r\n", "A_clean_body": ["fix", "http", "github", "com", "angular", "angular", "js", "pull", "16316", "issuecom", "347527097"], "B_body": "@lgalfaso's PR #7543 had two aspects of it that I didn't include in my last changes to $parse (#7552, #7555)\n- Lexer should only take care of `constant`, and the Parser should deduce that a _primary_ `constant` is also a `literal`\n- Simplify the logic of Parser.filter \n", "B_clean_body": ["lgalfaso", "'s", "pr", "7543", "had", "two", "aspect", "it", "that", "did", "n't", "includ", "my", "last", "chang", "pars", "7552", "7555", "lexer", "onli", "take", "care", "constant", "parser", "deduc", "that", "primari", "constant", "also", "liter", "simplifi", "logic", "parser", "filter"], "title_sim": [0.1744258732509345], "body_sim": [0.09206290399142653], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1284}, {"A_title": "test($parse): add one-time/interceptor tests", "A_clean_title": ["test", "pars", "add", "one", "time", "interceptor", "test"], "B_title": "fix($httpBackend): Ignore multiple calls to onreadystatechange with read...", "B_clean_title": ["fix", "httpbackend", "http", "backend", "ignor", "multipl", "call", "onreadystatechang", "read"], "A_body": "I realized that https://github.com/angular/angular.js/commit/189461f9bf6fda18ddbd16c42f2e959cf939c3da changed this a little - previously the second test failed for two reasons\r\n1. one-time literals [did not use .inputs](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) unlike the normal [one-time delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1856), so the `identity` interceptor would throw an infdig because the literal recreated each digest was being watched\r\n2. one-time literals with interceptors [only check `isDefined`](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1933) to determine when the one time is \"done\" which is unlike [the one-time watch delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) that checks all the values in the literal, so the interceptor thought the \"one-time\" was done right away for literals\r\n\r\nI think both of these changes are correct and want to make sure we don't revert them. This should probably only go into 1.7 since this change will [probably be reverted](https://github.com/angular/angular.js/pull/15958) in 1.6.", "A_clean_body": ["realiz", "that", "http", "github", "com", "angular", "angular", "js", "commit", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "chang", "thi", "littl", "previous", "second", "test", "fail", "two", "reason", "one", "time", "liter", "did", "not", "use", "input", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "unlik", "normal", "one", "time", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1856", "so", "ident", "interceptor", "would", "throw", "infdig", "becaus", "liter", "recreat", "each", "digest", "wa", "be", "watch", "one", "time", "liter", "interceptor", "onli", "check", "isdefin", "defin", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1933", "determin", "when", "one", "time", "done", "which", "unlik", "one", "time", "watch", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "that", "check", "all", "valu", "liter", "so", "interceptor", "thought", "one", "time", "wa", "done", "right", "away", "liter", "think", "both", "these", "chang", "are", "correct", "want", "make", "sure", "we", "n't", "revert", "them", "thi", "probabl", "onli", "go", "into", "sinc", "thi", "chang", "will", "probabl", "revert", "http", "github", "com", "angular", "angular", "js", "pull", "15958"], "B_body": "...yState=4\n\nOn mobile webkit `onreadystatechange` might by called multiple times\nwith `readyState===4`  caused by xhrs that are resolved while the app is\nin the background.\n\n Fixes #5426.\n", "B_clean_body": ["ystate=4", "state=4", "mobil", "webkit", "onreadystatechang", "might", "by", "call", "multipl", "time", "readystate===4", "readi", "state===4", "caus", "by", "xhr", "that", "are", "resolv", "while", "app", "background", "fix", "5426"], "title_sim": [0.09799458409416106], "body_sim": [0.28257511808097363], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.030145138036942073, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1253}, {"A_title": "fix(ngOptions): ignore comment nodes when removing 'selected' attribute", "A_clean_title": ["fix", "ngoption", "ng", "option", "ignor", "comment", "node", "when", "remov", "'select", "attribut"], "B_title": "fix($http): throw error if success and error methods do not receive a fu...", "B_clean_title": ["fix", "http", "throw", "error", "success", "error", "method", "not", "receiv", "fu"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the \"selected\" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n~The logic is different in master, and the bug should not be happening there.~ The same bug exists on master\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "regress", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "empti", "option", "ha", "ngif", "ng", "it", "ngoption", "ng", "option", "select", "ngif", "ng", "express", "fals", "then", "error", "thrown", "becaus", "we", "tri", "remov", "select", "attribut", "ngif", "ng", "comment", "node", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "~the", "logic", "differ", "master", "bug", "not", "happen", "there", "same", "bug", "exist", "master"], "B_body": "...nction\n\nCloses #11330\n", "B_clean_body": ["nction", "close", "11330"], "title_sim": [0.006472886695856114], "body_sim": [0.011060614111958947], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.010480389226837241, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 625}, {"A_title": "fix(input): correctly handle invalid model values for `input[date/time/\u2026...", "A_clean_title": ["fix", "input", "correctli", "handl", "invalid", "model", "valu", "input", "date", "time"], "B_title": "refactor($compile): remove workaround for chrome bug fixed in v50", "B_clean_title": ["refactor", "compil", "remov", "workaround", "chrome", "bug", "fix", "v50"], "A_body": "...]`\n\nSimilar to `input[number]` Angular will throw if the model value\nfor a `input[date]` is not a `Date` object.\nFor `Invalid Date`s (dates who\u2019s `getTime()` is `NaN`) `input[date]` \nwill render an empty string.\n\nCloses #8949\n", "A_clean_body": ["similar", "input", "number", "angular", "will", "throw", "model", "valu", "input", "date", "not", "date", "object", "invalid", "date", "date", "who", "gettim", "get", "time", "nan", "na", "input", "date", "will", "render", "empti", "string", "close", "8949"], "B_body": "Based on the comments this shouldn't be needed anymore?", "B_clean_body": ["base", "comment", "thi", "n't", "need", "anymor"], "title_sim": [0.003509908921471976], "body_sim": [0.09548190238226516], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1311}, {"A_title": "chore(node): update karma-sauce-launcher", "A_clean_title": ["chore", "node", "updat", "karma", "sauc", "launcher"], "B_title": "fix(input): use lowercase method to account for undefined type", "B_clean_title": ["fix", "input", "use", "lowercas", "method", "account", "undefin", "type"], "A_body": "Related to #14961\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["relat", "14961", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This was causing some internal breakages. I verify that this fixes the problem, but I haven't yet pinned down exactly how this case/path occurred.\n", "B_clean_body": ["thi", "wa", "caus", "some", "intern", "breakag", "verifi", "that", "thi", "fix", "problem", "but", "have", "n't", "yet", "pin", "down", "exactli", "how", "thi", "case", "path", "occur"], "title_sim": [0.12026730631865236], "body_sim": [0.23834223786076297], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1151}, {"A_title": "fix(orderBy): ensure correct ordering with arrays of objects and no predicate", "A_clean_title": ["fix", "orderbi", "order", "by", "ensur", "correct", "order", "array", "object", "no", "predic"], "B_title": "doc:$route: Fix $route example and couple of typos in docs", "B_clean_title": ["doc", "rout", "fix", "rout", "exampl", "coupl", "typo", "doc"], "A_body": "This fix also considerably refactors how the `orderBy` filter works in internally.\n\nThe new algorithm precomputes the predicate values for the array being ordered. This makes the algorith easier to follow but also ensures that this computation is done a maximum of n times, whereas in the previous algorithm it could be greater. The downside is that we must temporarily store this intermediate array.\n\nThere could be performance implications, but they are as likely to be beneficial as detrimental. It could probably do with benchmarking.\n\nCloses #11866\n", "A_clean_body": ["thi", "fix", "also", "consider", "refactor", "how", "orderbi", "order", "by", "filter", "work", "intern", "new", "algorithm", "precomput", "predic", "valu", "array", "be", "order", "thi", "make", "algorith", "easier", "follow", "but", "also", "ensur", "that", "thi", "comput", "done", "maximum", "time", "wherea", "previou", "algorithm", "it", "could", "greater", "downsid", "that", "we", "must", "temporarili", "store", "thi", "intermedi", "array", "there", "could", "perform", "implic", "but", "they", "are", "as", "like", "benefici", "as", "detriment", "it", "could", "probabl", "benchmark", "close", "11866"], "B_body": "Rewrite $route example a bit, as it required $location and $route services\nto be eager published in the root scope.\n\nAdd missing partials (move them to docs/examples directory)\n\nFix small typos in formatter and ng:options docs.\n", "B_clean_body": ["rewrit", "rout", "exampl", "bit", "as", "it", "requir", "locat", "rout", "servic", "eager", "publish", "root", "scope", "add", "miss", "partial", "move", "them", "doc", "exampl", "directori", "fix", "small", "typo", "formatt", "ng", "option", "doc"], "title_sim": [0.023644857007536088], "body_sim": [0.18336048785479955], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.20489439537290843, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1439}, {"A_title": "chore(doc-gen): render @example tag for ngdoc @method", "A_clean_title": ["chore", "doc", "gen", "render", "exampl", "tag", "ngdoc", "method"], "B_title": "fix($location): url rewriting if element was removed", "B_clean_title": ["fix", "locat", "url", "rewrit", "element", "wa", "remov"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat / fix to the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`@example` in  `@method` is not rendered\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "fix", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "method", "not", "render", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "When user clicks a link, $location needs to intercept this event.  The <a> doesn't have to be target element of the DOM event, so it needs to traverse the DOM, to find first <a> parent.\n\nIf the target element was removed from DOM, during the same event, it would throw an exception. This fixes the issue.\n\nCloses #1058\n", "B_clean_body": ["when", "user", "click", "link", "locat", "need", "intercept", "thi", "event", "n't", "have", "target", "element", "dom", "event", "so", "it", "need", "travers", "dom", "find", "first", "parent", "target", "element", "wa", "remov", "dom", "dure", "same", "event", "it", "would", "throw", "except", "thi", "fix", "issu", "close", "1058"], "title_sim": [-0.004920120896636477], "body_sim": [0.10495013949851734], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1627}, {"A_title": "chore: update jasmine-core to 2.5.2", "A_clean_title": ["chore", "updat", "jasmin", "core"], "B_title": "feat($compile): support directive virtual groups", "B_clean_title": ["feat", "compil", "support", "direct", "virtual", "group"], "A_body": "This might resolve a Firefox test issue.\r\nLatest jasmine (2.6.2) has problems with some browsers, see here:\r\nhttps://github.com/jasmine/jasmine/issues/1327\r\n", "A_clean_body": ["thi", "might", "resolv", "firefox", "test", "issu", "latest", "jasmin", "ha", "problem", "some", "browser", "see", "here", "http", "github", "com", "jasmin", "jasmin", "issu", "1327"], "B_body": "By appending  X-start and X-end to a directive it is now possible\nto have the directive act on a group of elements.\n\nIt is now possible to iterate over multiple elements like so:\n\n```\n<table>\n  <tr ng-repeat-start=\"item in list\">I get repeated</tr>\n  <tr ng-repeat-end>I also get repeated</tr>\n</table>\n```\n", "B_clean_body": ["by", "append", "start", "end", "direct", "it", "now", "possibl", "have", "direct", "act", "group", "element", "it", "now", "possibl", "iter", "over", "multipl", "element", "like", "so", "tabl", "tr", "ng", "repeat", "start=", "item", "list", "get", "repeat", "tr", "tr", "ng", "repeat", "end", "also", "get", "repeat", "tr", "tabl"], "title_sim": [-0.01853185998047899], "body_sim": [0.07723308050313522], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1446}, {"A_title": "feat(ngModel): provide ng-empty and ng-not-empty CSS classes", "A_clean_title": ["feat", "ngmodel", "ng", "model", "provid", "ng", "empti", "ng", "not", "empti", "css", "class"], "B_title": "docs(ngRepeat): I added the phrase \"and by age\" on line 236", "B_clean_title": ["doc", "ngrepeat", "ng", "repeat", "ad", "phrase", "by", "age", "line", "236"], "A_body": "I believe that this feature should be enough to fix #10050\n", "A_clean_body": ["believ", "that", "thi", "featur", "enough", "fix", "10050"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo change in behavior introduced \n\n**What is the new behavior (if this is a feature change)?**\n\nNo change in behavior introduced\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example seems to also be filtering by age. It threw me off a bit because I was getting results when I entered numbers in the input field.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "chang", "behavior", "introduc", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "behavior", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "seem", "also", "filter", "by", "age", "it", "threw", "me", "off", "bit", "becaus", "wa", "get", "result", "when", "enter", "number", "input", "field"], "title_sim": [0.19831529533930803], "body_sim": [0.651869818199127], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.033672897652363774, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 339}, {"A_title": "fix(ngModel, input): improve handling of built-in named parsers", "A_clean_title": ["fix", "ngmodel", "ng", "model", "input", "improv", "handl", "built", "name", "parser"], "B_title": "docs(app): adds border", "B_clean_title": ["doc", "app", "add", "border"], "A_body": "This commit changes how input elements use the private $$parserName\r\nproperty on the ngModelController to name parse errors. Until now,\r\nthe input types (number, date etc.) would set $$parserName when\r\nthe inputs were initialized, which meant that any other parsers on\r\nthe ngModelController would also be named after that type. The\r\neffect of that was that the `$error` property and the `ng-invalid-...`\r\nclass would always be that of the built-in parser, even if the custom\r\nparser had nothing to do with it.\r\n\r\nThe new behavior is that the $$parserName is only set if the actual\r\nparser is invalid, i.e. returns `undefined`.\r\n\r\nAlso, $$parserName has been removed from input[email] and input[url],\r\nas these types do not have a built-in parser anymore.\r\n\r\nBREAKING CHANGE:\r\n\r\nCustom parsers that fail to parse on input types email, url, date, month, time,\r\ndatetime-local, week, do no longer set $error[inputType], and no longer set the class\r\n`ng-invalid-[inputType]`. Instead, they set $error.parse and `ng-invalid-parse`.\r\n\r\nCloses #14292 \r\nCloses #10076\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nThis is a general fix to https://github.com/angular/angular.js/issues/10076 and also incorporates the changes in https://github.com/angular/angular.js/pull/14292.\r\nWhile it's not a very common problem, I always found this section of the API very strange, especially since it uses an undocumented API (so if you stumble on it, it's even more difficult to find out what causes it).\r\nSince https://github.com/angular/angular.js/pull/14292 is already a very small BC I thought a general solution to this issue would be welcome.\r\nNote that I will include tests for the other input types if this implementation is approved.\r\n\r\n", "A_clean_body": ["thi", "commit", "chang", "how", "input", "element", "use", "privat", "parsernam", "parser", "name", "properti", "ngmodelcontrol", "ng", "model", "control", "name", "pars", "error", "until", "now", "input", "type", "number", "date", "etc", "would", "set", "parsernam", "parser", "name", "when", "input", "were", "initi", "which", "meant", "that", "ani", "other", "parser", "ngmodelcontrol", "ng", "model", "control", "would", "also", "name", "after", "that", "type", "effect", "that", "wa", "that", "error", "properti", "ng", "invalid", "class", "would", "alway", "that", "built", "parser", "even", "custom", "parser", "had", "noth", "it", "new", "behavior", "that", "parsernam", "parser", "name", "onli", "set", "actual", "parser", "invalid", "return", "undefin", "also", "parsernam", "parser", "name", "ha", "been", "remov", "input", "email", "input", "url", "as", "these", "type", "not", "have", "built", "parser", "anymor", "break", "chang", "custom", "parser", "that", "fail", "pars", "input", "type", "email", "url", "date", "month", "time", "datetim", "local", "week", "no", "longer", "set", "error", "inputtyp", "input", "type", "no", "longer", "set", "class", "ng", "invalid", "inputtyp", "input", "type", "instead", "they", "set", "error", "pars", "ng", "invalid", "pars", "close", "14292", "close", "10076", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "gener", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "10076", "also", "incorpor", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "while", "it", "'s", "not", "veri", "common", "problem", "alway", "found", "thi", "section", "api", "veri", "strang", "especi", "sinc", "it", "use", "undocu", "api", "so", "you", "stumbl", "it", "it", "'s", "even", "more", "difficult", "find", "out", "what", "caus", "it", "sinc", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "alreadi", "veri", "small", "bc", "thought", "gener", "solut", "thi", "issu", "would", "welcom", "note", "that", "will", "includ", "test", "other", "input", "type", "thi", "implement", "approv"], "B_body": "Adds a border to the top of the h2 like the current docs app.\n", "B_clean_body": ["add", "border", "top", "h2", "like", "current", "doc", "app"], "title_sim": [0.13862430603521808], "body_sim": [0.17992108483815114], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1068}, {"A_title": "docs(app): increments year", "A_clean_title": ["doc", "app", "increment", "year"], "B_title": "feat(form.FormController): add $getControls()", "B_clean_title": ["feat", "form", "formcontrol", "form", "control", "add", "getcontrol", "get", "control"], "A_body": "Increments the year from 2014 to 2015.\n", "A_clean_body": ["increment", "year", "2014", "2015"], "B_body": "Fixes #14749\r\nCloses #14517\r\nCloses #13202\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nthere's no straight forward way to get all controls of a form\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nyou can get a shallow copy of the form controls\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nI decided against a synchronized copy (https://github.com/angular/angular.js/issues/14749#issuecomment-230451318) because I don't see the clear benefit over a simple shallow copy + is slightly more involved to implmenent.\r\n", "B_clean_body": ["fix", "14749", "close", "14517", "close", "13202", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "no", "straight", "forward", "way", "get", "all", "control", "form", "**what", "new", "behavior", "thi", "featur", "chang", "you", "get", "shallow", "copi", "form", "control", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "decid", "against", "synchron", "copi", "http", "github", "com", "angular", "angular", "js", "issu", "14749", "issuecom", "230451318", "becaus", "n't", "see", "clear", "benefit", "over", "simpl", "shallow", "copi", "slightli", "more", "involv", "implmen"], "title_sim": [-0.020504744519159377], "body_sim": [0.015353004430084591], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1252}, {"A_title": "chore(github): update the issue template", "A_clean_title": ["chore", "github", "updat", "issu", "templat"], "B_title": "feat(Grunt): add source maps to all min files", "B_clean_title": ["feat", "grunt", "add", "sourc", "map", "all", "min", "file"], "A_body": "Updates the issue template.\r\n- make it more like the Angular one\r\n- include extra information into comments, so the actual output is cleaner and you can find the relevant info faster when triaging\r\n- make it easier to differentiate between bugs and features\r\n- remove section that are only relevant for features ... this is often filled out with redundant info\r\n- make sections shorter and hopefully clearer", "A_clean_body": ["updat", "issu", "templat", "make", "it", "more", "like", "angular", "one", "includ", "extra", "inform", "into", "comment", "so", "actual", "output", "cleaner", "you", "find", "relev", "info", "faster", "when", "triag", "make", "it", "easier", "differenti", "between", "bug", "featur", "remov", "section", "that", "are", "onli", "relev", "featur", "thi", "often", "fill", "out", "redund", "info", "make", "section", "shorter", "hope", "clearer"], "B_body": "Generate source map files when build step is ran and adds source map\nheaders to all min files.\n\nSource map url must be appended to the min file otherwise the line\noffsets will be off.\n\nInspired by Ryan Seddon (PR #2858)\n\nCloses #1714\n", "B_clean_body": ["gener", "sourc", "map", "file", "when", "build", "step", "ran", "add", "sourc", "map", "header", "all", "min", "file", "sourc", "map", "url", "must", "append", "min", "file", "otherwis", "line", "offset", "will", "off", "inspir", "by", "ryan", "seddon", "pr", "2858", "close", "1714"], "title_sim": [0.03426491715791638], "body_sim": [0.11588402807079554], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.011174206398292134, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1377}, {"A_title": "chore(doc-gen, docs-app): create plnkr examples with correct Angular \u2026", "A_clean_title": ["chore", "doc", "gen", "doc", "app", "creat", "plnkr", "exampl", "correct", "angular"], "B_title": "fix($compile): update cloned elements if the template arrives after the ...", "B_clean_title": ["fix", "compil", "updat", "clone", "element", "templat", "arriv", "after"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs-gen / app fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe plnkr examples include the latest stable Angular version instead of the snapshot version when opened from snapshot docs.\n\n**What is the new behavior (if this is a feature change)?**\nFixes the plnkr examples generated from snapshot docs\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\n\u2026version\n\nWhen the docs are based on the snapshot, the plnkr examples must use the snapshot files\nfrom code.angularjs.org\n\nFixes https://github.com/angular/angular.js/issues/15267\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "gen", "app", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "plnkr", "exampl", "includ", "latest", "stabl", "angular", "version", "instead", "snapshot", "version", "when", "open", "snapshot", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "plnkr", "exampl", "gener", "snapshot", "doc", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026version", "when", "doc", "are", "base", "snapshot", "plnkr", "exampl", "must", "use", "snapshot", "file", "code", "angularj", "org", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "15267"], "B_body": "...cloning\n\nIf an element has a directive whose content is loaded using `templateUrl`,\nand the element is cloned using a linking function before the template arrives,\nthe clone needs to be updated as well.\n\nThis also updates `ngIf` and `ngRepeat` to keep the connection to the clone\nof a tranclude function, so that they know about the changes a directive with\n`templateUrl` does to the element in the future.\n\nFixes to #4930.\n", "B_clean_body": ["clone", "element", "ha", "direct", "whose", "content", "load", "templateurl", "templat", "url", "element", "clone", "link", "function", "befor", "templat", "arriv", "clone", "need", "updat", "as", "well", "thi", "also", "updat", "ngif", "ng", "ngrepeat", "ng", "repeat", "keep", "connect", "clone", "tranclud", "function", "so", "that", "they", "know", "about", "chang", "direct", "templateurl", "templat", "url", "element", "futur", "fix", "4930"], "title_sim": [0.0757576643332448], "body_sim": [0.14666710333114646], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02744670699137175, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1052}, {"A_title": "feat(input): added drop event support", "A_clean_title": ["feat", "input", "ad", "drop", "event", "support"], "B_title": "feat(form.FormController): add $getControls()", "B_clean_title": ["feat", "form", "formcontrol", "form", "control", "add", "getcontrol", "get", "control"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\ndrop event not support\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nadded drop event support \r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "drop", "event", "not", "support", "**what", "new", "behavior", "thi", "featur", "chang", "ad", "drop", "event", "support", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Fixes #14749\r\nCloses #14517\r\nCloses #13202\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nthere's no straight forward way to get all controls of a form\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nyou can get a shallow copy of the form controls\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nI decided against a synchronized copy (https://github.com/angular/angular.js/issues/14749#issuecomment-230451318) because I don't see the clear benefit over a simple shallow copy + is slightly more involved to implmenent.\r\n", "B_clean_body": ["fix", "14749", "close", "14517", "close", "13202", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "no", "straight", "forward", "way", "get", "all", "control", "form", "**what", "new", "behavior", "thi", "featur", "chang", "you", "get", "shallow", "copi", "form", "control", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "decid", "against", "synchron", "copi", "http", "github", "com", "angular", "angular", "js", "issu", "14749", "issuecom", "230451318", "becaus", "n't", "see", "clear", "benefit", "over", "simpl", "shallow", "copi", "slightli", "more", "involv", "implmen"], "title_sim": [0.0972797703628252], "body_sim": [0.9152942006352511], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.08378551765358482, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 141}, {"A_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "A_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "B_title": "fix: call $animate.on() listeners when document is hidden", "B_clean_title": ["fix", "call", "anim", "listen", "when", "document", "hidden"], "A_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "A_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRegression fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14120\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nThe first commit fixes a very rare case of callbacks being called in the wrong order, and has nothing to do with the regression (but it was found while fixing it)\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "regress", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14120", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "first", "commit", "fix", "veri", "rare", "case", "callback", "be", "call", "wrong", "order", "ha", "noth", "regress", "but", "it", "wa", "found", "while", "fix", "it"], "title_sim": [-0.04449111562468867], "body_sim": [0.07204452429941861], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 771}, {"A_title": "[[DUPE of 9726 for Travis]] fix(select): assign result of track exp to element value", "A_clean_title": ["dupe", "9726", "travi", "fix", "select", "assign", "result", "track", "exp", "element", "valu"], "B_title": "feat(ngMessages): add support for default message", "B_clean_title": ["feat", "ngmessag", "ng", "messag", "add", "support", "default", "messag"], "A_body": "Fixes a regression where the option/select values would always be set to\nthe key or index of a value within the corresponding collection. Prior to\nsome 1.3.0 refactoring, the result of the track expression would be bound\nto the value, but this behavior was not documented or explicitly tested. A\ncache was added in order to improve performance getting the associated\nvalue for a given track expression.\n\nThis commit adds one explicit test for this behavior, and changes several\nother trackBy tests to reflect the desired behavior as well.\n\nCloses #9718\nFixes #9592\n", "A_clean_body": ["fix", "regress", "where", "option", "select", "valu", "would", "alway", "set", "key", "or", "index", "valu", "within", "correspond", "collect", "prior", "some", "refactor", "result", "track", "express", "would", "bound", "valu", "but", "thi", "behavior", "wa", "not", "document", "or", "explicitli", "test", "cach", "wa", "ad", "order", "improv", "perform", "get", "associ", "valu", "given", "track", "express", "thi", "commit", "add", "one", "explicit", "test", "thi", "behavior", "chang", "sever", "other", "trackbi", "track", "by", "test", "reflect", "desir", "behavior", "as", "well", "close", "9718", "fix", "9592"], "B_body": "Added support for showing default message when no values are mapped with ng-message.\r\n\r\nCloses #12008\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["ad", "support", "show", "default", "messag", "when", "no", "valu", "are", "map", "ng", "messag", "close", "12008", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.027607501636523066], "body_sim": [0.25943597534299445], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.038517600282226824, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1311}, {"A_title": "chore(IE8) Remove more special code for IE8", "A_clean_title": ["chore", "ie8", "remov", "more", "special", "code", "ie8"], "B_title": "refactor($rootScope): simplify $emit stopPropagation handling", "B_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "B_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "title_sim": [0.019633006816883562], "body_sim": [0.30394984583757695], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 592}, {"A_title": "Feat: ng-[event]-prepare class for structural animations (ngIf etc)", "A_clean_title": ["feat", "ng", "event", "prepar", "class", "structur", "anim", "ngif", "ng", "etc"], "B_title": "Ngoptions documentation change", "B_clean_title": ["ngoption", "document", "chang"], "A_body": "A fix / workaround for #12969\n\nWe currently don't have any place in the docs that documents the classes ngAnimate adds. At least I can't find it .:o I think it got lost during 1.4. We should add it back so people can find this feature easier.\n\nIdea by @matsko \n", "A_clean_body": ["fix", "workaround", "12969", "we", "current", "n't", "have", "ani", "place", "doc", "that", "document", "class", "nganim", "ng", "anim", "add", "at", "least", "ca", "n't", "find", "it", "think", "it", "got", "lost", "dure", "we", "add", "it", "back", "so", "peopl", "find", "thi", "featur", "easier", "idea", "by", "matsko"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nredundant link to ngOptions, no link to ngRepeat\n\n**What is the new behavior (if this is a feature change)?**\n\nlink to ngRepeat, no redundant link to ngOptions\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "redund", "link", "ngoption", "ng", "option", "no", "link", "ngrepeat", "ng", "repeat", "**what", "new", "behavior", "thi", "featur", "chang", "link", "ngrepeat", "ng", "repeat", "no", "redund", "link", "ngoption", "ng", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [0.039991217229122314], "body_sim": [0.26944659681956173], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 286}, {"A_title": "[[TRAVIS POKE]] fix($location): allow numeric location setter arguments", "A_clean_title": ["travi", "poke", "fix", "locat", "allow", "numer", "locat", "setter", "argument"], "B_title": "doc:$route: Fix $route example and couple of typos in docs", "B_clean_title": ["doc", "rout", "fix", "rout", "exampl", "coupl", "typo", "doc"], "A_body": "Dupe of #7161, with some amendments\n", "A_clean_body": ["dupe", "7161", "some", "amend"], "B_body": "Rewrite $route example a bit, as it required $location and $route services\nto be eager published in the root scope.\n\nAdd missing partials (move them to docs/examples directory)\n\nFix small typos in formatter and ng:options docs.\n", "B_clean_body": ["rewrit", "rout", "exampl", "bit", "as", "it", "requir", "locat", "rout", "servic", "eager", "publish", "root", "scope", "add", "miss", "partial", "move", "them", "doc", "exampl", "directori", "fix", "small", "typo", "formatt", "ng", "option", "doc"], "title_sim": [0.025132738501667966], "body_sim": [-0.007567042664661454], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.058798148237331635, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1160}, {"A_title": "fix($$urlUtils): remove dependency on $window", "A_clean_title": ["fix", "urlutil", "url", "util", "remov", "depend", "window"], "B_title": "fix($sniffer): report history false on Android < 4", "B_clean_title": ["fix", "sniffer", "report", "histori", "fals", "android"], "A_body": "$window may be mocked out in tests causing those tests to fail.  So\ndon't use $window.\n", "A_clean_body": ["window", "may", "mock", "out", "test", "caus", "those", "test", "fail", "so", "n't", "use", "window"], "B_body": "Android has history.pushState, but it does not update the location correctly:\nhttp://code.google.com/p/android/issues/detail?id=17471\n\nCloses #904\n", "B_clean_body": ["android", "ha", "histori", "pushstat", "push", "state", "but", "it", "not", "updat", "locat", "correctli", "http", "googl", "code", "com", "android", "issu", "detail", "id=17471", "close", "904"], "title_sim": [0.19954745191498363], "body_sim": [0.07296561080163788], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.040128692359968174, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 434}, {"A_title": "fixed opera date.toISOString issue", "A_clean_title": ["fix", "opera", "date", "toisostr", "iso", "string", "issu"], "B_title": "Increase performance when checking if element is animatable", "B_clean_title": ["increas", "perform", "when", "check", "element", "animat"], "A_body": "opera did not implement date.toISOString correctly according to Javascript guideline. \nSo we have to change the toString method of angularDate at line 766 of src/apis.js. \n", "A_clean_body": ["opera", "did", "not", "implement", "date", "toisostr", "iso", "string", "correctli", "accord", "javascript", "guidelin", "so", "we", "have", "chang", "tostr", "string", "method", "angulard", "angular", "date", "at", "line", "766", "js", "src", "api"], "B_body": "Built upon PR #13783 \n", "B_clean_body": ["built", "upon", "pr", "13783"], "title_sim": [0.0837305646833578], "body_sim": [0.13348770794243547], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0016247057322641995, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1690}, {"A_title": "docs(guide/Providers): Remove redundant apology", "A_clean_title": ["doc", "guid", "provid", "remov", "redund", "apolog"], "B_title": "Scenario runner element", "B_clean_title": ["scenario", "runner", "element"], "A_body": "There is no longer a service called \"service\", so this is confusing.", "A_clean_body": ["there", "no", "longer", "servic", "call", "servic", "so", "thi", "confus"], "B_body": "Adds all the missing jQuery methods to element() DSL\n", "B_clean_body": ["add", "all", "miss", "jqueri", "queri", "method", "element", "dsl"], "title_sim": [0.082319760577001], "body_sim": [-0.012906315846694414], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2315}, {"A_title": "docs(jqlite): add known issue", "A_clean_title": ["doc", "jqlite", "add", "known", "issu"], "B_title": "fix($templateRequest): always return the template that is stored in the cache", "B_clean_title": ["fix", "templaterequest", "templat", "request", "alway", "return", "templat", "that", "store", "cach"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nCurrently, `$templateRequest`does not return the cached version returned by `$templateCache`. Instead, it returns the response retrieved from `$http`. This makes it impossible to decorate `$templateCache.put` as described in #16225 .\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit ensures the cached value is returned instead of the `$http` response, allowing for proper decorating.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n#16225\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "current", "templaterequest", "templat", "request", "not", "return", "cach", "version", "return", "by", "templatecach", "templat", "cach", "instead", "it", "return", "respons", "retriev", "http", "thi", "make", "it", "imposs", "decor", "templatecach", "put", "templat", "cach", "as", "describ", "16225", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "ensur", "cach", "valu", "return", "instead", "http", "respons", "allow", "proper", "decor", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "16225"], "title_sim": [0.0035311943249806102], "body_sim": [0.8349961244505238], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0437552232006773, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 670}, {"A_title": "feat(Grunt): add source maps to all min files", "A_clean_title": ["feat", "grunt", "add", "sourc", "map", "all", "min", "file"], "B_title": "docs(ChangeLog): fix typo", "B_clean_title": ["doc", "changelog", "chang", "log", "fix", "typo"], "A_body": "Generate source map files when build step is ran and adds source map\nheaders to all min files.\n\nSource map url must be appended to the min file otherwise the line\noffsets will be off.\n\nInspired by Ryan Seddon (PR #2858)\n\nCloses #1714\n", "A_clean_body": ["gener", "sourc", "map", "file", "when", "build", "step", "ran", "add", "sourc", "map", "header", "all", "min", "file", "sourc", "map", "url", "must", "append", "min", "file", "otherwis", "line", "offset", "will", "off", "inspir", "by", "ryan", "seddon", "pr", "2858", "close", "1714"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs only.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "onli", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.02709876026948019], "body_sim": [0.034946297600642266], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1571}, {"A_title": "fix(Angular.js): not serializing null values", "A_clean_title": ["fix", "angular", "js", "not", "serial", "null", "valu"], "B_title": "docs(guide/Component Router): fix npm typo", "B_clean_title": ["doc", "guid", "compon", "router", "fix", "npm", "typo"], "A_body": "toKeyValue should not serialize a value if that value is set as null. \n", "A_clean_body": ["tokeyvalu", "key", "valu", "not", "serial", "valu", "that", "valu", "set", "as", "null"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFix a npm install typo in the component router guide https://docs.angularjs.org/guide/component-router\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere is a typo for installing angular via npm in the component router guide\n\n**What is the new behavior (if this is a feature change)?**\n\nThe typo is fixed\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nFix a typo in npm install instructions\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "npm", "instal", "typo", "compon", "router", "guid", "http", "router", "angularj", "doc", "org", "guid", "compon", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "instal", "angular", "via", "npm", "compon", "router", "guid", "**what", "new", "behavior", "thi", "featur", "chang", "typo", "fix", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "typo", "npm", "instal", "instruct"], "title_sim": [0.07784367016623643], "body_sim": [0.01613537432262245], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 746}, {"A_title": "fix(select): keep original selection when using shift to add options \u2026", "A_clean_title": ["fix", "select", "keep", "origin", "select", "when", "shift", "add", "option"], "B_title": "refactor($compile): reuse shared simpleCompare method", "B_clean_title": ["refactor", "compil", "reus", "share", "simplecompar", "simpl", "compar", "method"], "A_body": "\u2026in IE/Edge\r\n\r\nIn IE9-11 + Edge, the selected options were previously incorrect under the following\r\ncircumstances:\r\n- at least two options are selected\r\n- shift+click or shift+down/up is used to add to the selection (any number of options)\r\n\r\nIn these cases, only the last of the previously selected options and the newly selected\r\noptions would be selected.\r\n\r\nThe problems seems to be that the render engine gets confused when an option that\r\nalready has selected = true gets selected = true set again.\r\n\r\nNote that this is not testable via unit test because it's not possible to simulate\r\nclick / keyboard events on option elements (the events are delegated to the select element\r\nchange event).\r\n\r\nFixes #15675\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #15675\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~[ ] Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["\u2026in", "ie", "edg", "ie9", "11", "edg", "select", "option", "were", "previous", "incorrect", "under", "follow", "circumst", "at", "least", "two", "option", "are", "select", "shift+click", "or", "shift+down", "up", "use", "add", "select", "ani", "number", "option", "these", "case", "onli", "last", "previous", "select", "option", "newli", "select", "option", "would", "select", "problem", "seem", "that", "render", "engin", "get", "confus", "when", "option", "that", "alreadi", "ha", "select", "true", "get", "select", "true", "set", "again", "note", "that", "thi", "not", "testabl", "via", "unit", "test", "becaus", "it", "'s", "not", "possibl", "simul", "click", "keyboard", "event", "option", "element", "event", "are", "deleg", "select", "element", "chang", "event", "fix", "15675", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "15675", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "I think this could be used in some other places as well once it's available...", "B_clean_body": ["think", "thi", "could", "use", "some", "other", "place", "as", "well", "onc", "it", "'s", "avail"], "title_sim": [0.06317300208721033], "body_sim": [0.15669891020539103], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 47}, {"A_title": "Revert: ngAnimate changes for listening on visibilitychange", "A_clean_title": ["revert", "nganim", "ng", "anim", "chang", "listen", "visibilitychang"], "B_title": "refactor($sniffer): make $sniffer service private", "B_clean_title": ["refactor", "sniffer", "make", "sniffer", "servic", "privat"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRevert\n\n**What is the current behavior? (You can also link to an open issue here)**\nA backported changed failed tests because the test behavior is different in 1.5.xh\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nReverts d3e123b, bf1acf7 and aa28e48.\nBackporting the changes is complicated because we don't destroy the rootScope\nafter each test in 1.4.x\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "revert", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "backport", "chang", "fail", "test", "becaus", "test", "behavior", "differ", "xh", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "revert", "d3e123b", "bf1acf7", "aa28e48", "backport", "chang", "complic", "becaus", "we", "n't", "destroy", "rootscop", "root", "scope", "after", "each", "test"], "B_body": "This service has been accidentaly documented in the past, it should not be considered\nto be public api.\n\nI'm also removing fallback to Modernizr since we don't need it.\n\nBreaks any app that depends on this service and its fallback to Modernizr, please\nmigrate to custom \"Modernizr\" service:\n\n```\nmodule.value('Modernizr', function() { return Modernizr; });\n```\n", "B_clean_body": ["thi", "servic", "ha", "been", "accidentali", "document", "past", "it", "not", "consid", "public", "api", "'m", "also", "remov", "fallback", "modernizr", "sinc", "we", "n't", "need", "it", "break", "ani", "app", "that", "depend", "thi", "servic", "it", "fallback", "modernizr", "pleas", "migrat", "custom", "modernizr", "servic", "modul", "valu", "'modernizr", "function", "return", "modernizr"], "title_sim": [0.02518709610921512], "body_sim": [0.18567520326538486], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1504}, {"A_title": "docs(guide/Internet Explorer Compatibility): Include warnings for usage of 'disabled' attribute", "A_clean_title": ["doc", "guid", "internet", "explor", "compat", "includ", "warn", "usag", "'disabl", "attribut"], "B_title": "fix(jqLite): make removeData() not remove event handlers", "B_clean_title": ["fix", "jqlite", "jq", "lite", "make", "removedata", "remov", "data", "not", "remov", "event", "handler"], "A_body": "Setting the 'disabled' attribute on an element that has descendant elements has unexpected behavior in Internet Explorer 11.\r\n\r\n* Input elements that are descendants have the text content of the 'placeholder' attribute inserted as the value (and it is not removed when typing in the field). Changes to the field are not reflected in the model value.\r\n* Select elements that are descendants are disabled.\r\n\r\nTo avoid this issue, it is important to not set `disabled` or `ng-disabled` on an element that has descendant form elements. Normally these should only be used on actual form controls so the issue would not manifest.\r\n\r\nThe issue can also appear if a directive/component is named 'disabled' or takes an attribute named 'disabled' as an input/output attribute, so avoid these.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs do not mention IE11 bug regarding the disabled attribute on elements with descendants (though it shouldn't be used on non-form controls, this issue can prop up when making custom elements/attributes).\r\n\r\nA previous issue noticed the incorrect behavior regarding the 'placeholder' attribute on input elements but incorrectly thought the behavior to be a bug with AngularJS:\r\nhttps://github.com/angular/angular.js/issues/15700\r\n\r\nI am able to reproduce the issue in the Plunkr created by @Narretz on the aforementioned issue:\r\nhttp://plnkr.co/edit/jDJv5NtwwDSsp9hRT2rf?p=preview\r\n\r\nAlso, here's an updated version of the Plunkr showing model value is not updating due to the 'disabled' attribute:\r\nhttp://plnkr.co/edit/AHix3x3dOzySygDOcfJA?p=preview\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocs mention the bug and suggest preventative measures.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n", "A_clean_body": ["set", "'disabl", "attribut", "element", "that", "ha", "descend", "element", "ha", "unexpect", "behavior", "internet", "explor", "11", "input", "element", "that", "are", "descend", "have", "text", "content", "'placehold", "attribut", "insert", "as", "valu", "it", "not", "remov", "when", "type", "field", "chang", "field", "are", "not", "reflect", "model", "valu", "select", "element", "that", "are", "descend", "are", "disabl", "avoid", "thi", "issu", "it", "import", "not", "set", "disabl", "or", "ng", "disabl", "element", "that", "ha", "descend", "form", "element", "normal", "these", "onli", "use", "actual", "form", "control", "so", "issu", "would", "not", "manifest", "issu", "also", "appear", "direct", "compon", "name", "'disabl", "or", "take", "attribut", "name", "'disabl", "as", "input", "output", "attribut", "so", "avoid", "these", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "not", "mention", "ie11", "bug", "regard", "disabl", "attribut", "element", "descend", "though", "it", "n't", "use", "non", "form", "control", "thi", "issu", "prop", "up", "when", "make", "custom", "element", "attribut", "previou", "issu", "notic", "incorrect", "behavior", "regard", "'placehold", "attribut", "input", "element", "but", "incorrectli", "thought", "behavior", "bug", "angularj", "angular", "js", "http", "github", "com", "angular", "angular", "js", "issu", "15700", "am", "abl", "reproduc", "issu", "plunkr", "creat", "by", "narretz", "aforement", "issu", "http", "plnkr", "co", "edit", "jdjv5ntwwdssp9hrt2rf", "jv5ntww", "ssp9h", "rt2rf", "p=preview", "also", "here", "'s", "updat", "version", "plunkr", "show", "model", "valu", "not", "updat", "due", "'disabl", "attribut", "http", "plnkr", "co", "edit", "ahix3x3dozysygdocfja", "hix3x3d", "ozi", "syg", "ocf", "ja", "p=preview", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "mention", "bug", "suggest", "prevent", "measur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix but a breaking change as well.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`removeData()` invoked on an element removes its event handlers as well.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n`removeData()` removes just user-set `data`, not internal data storage used for event handling. This aligns jqLite with jQuery.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~ (the current behavior is not documented)\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nFixes #15869", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "but", "break", "chang", "as", "well", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "removedata", "remov", "data", "invok", "element", "remov", "it", "event", "handler", "as", "well", "**what", "new", "behavior", "thi", "featur", "chang", "removedata", "remov", "data", "remov", "just", "user", "set", "data", "not", "intern", "data", "storag", "use", "event", "handl", "thi", "align", "jqlite", "jq", "lite", "jqueri", "queri", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "current", "behavior", "not", "document", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "fix", "15869"], "title_sim": [-0.05193814927366023], "body_sim": [0.7737718095611169], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 13}, {"A_title": "fix($http): correct xhrStatus of different `timeout` values", "A_clean_title": ["fix", "http", "correct", "xhrstatu", "xhr", "statu", "differ", "timeout", "valu"], "B_title": "refactor($animate): use CSS3 transition/animation events instead of $timeouts to track ongoing animations", "B_clean_title": ["refactor", "anim", "use", "css3", "transit", "anim", "event", "instead", "timeout", "track", "ongo", "anim"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nIncorrect xhrStatus\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCorrect xhrStatus\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n@gkalpak @frederikprijck this is something I'd like your review / opinion on\r\n\r\nWhile trying to find out if https://github.com/angular/angular.js/pull/14021 was (partially) fixed by https://github.com/angular/angular.js/commit/5e2bc5bbf347a9dfadc08b1514b8be06fd550913, I noticed there's a problem with the http tests and the actual behavior:\r\n\r\nIn https://github.com/angular/angular.js/blob/e5c6174839e96113c93913dd8b3c4cca760dfc41/test/ng/httpSpec.js#L1910\r\n\r\nwe expect that the xhrStatus is 'timeout', however it actually is 'abort' in real $http usage. This is not caught by our tests because the tests run against the mocked $httpBackend which must manually be kept in sync with the real $http implementation.\r\n\r\nWhat's more, our implementation of abort / timeout doesn't follow the way normal xhr abort / timeout works:\r\n\r\nIf you use xhr.abort() then the onabort handler is called.\r\nIf you set xhr.timeout and the timeout is exceeded then the ontimeout handler is callded.\r\n\r\n(In the browser, both events are marked as \"canceled\" in the devtools, at least in Chrome).\r\n\r\nIn $http, in both cases you would get xhrStatus 'abort', because we abort the xhrRequest, but\r\ndon't distinguish between these cases. \r\n\r\nIn the current implementation, the \"timeout\" handler would only be called in the case of a real\r\nnetwork timeout (presumably, because I couldn't find a way to test this).\r\n\r\nWhat's more, if you pass a $timeout as the timeout parameter, it will currently set xhrStatus \"abort\" if the time runs out (promise resolved). This case can only be fixed by reading the internal $$timeoutId property on the promise returned by $timeout.\r\n\r\nThis PR fixes the code in both the mock httpBackend and the regular http to follow the same logic as xhr does:\r\n\r\n| xhr | http option | xhr result | current http xhrStatus| new http xhrStatus| \r\n------- | ------- | -------------- | -------------- | ------------ |\r\n| xhr.abort() | resolving promise | onabort callback is called | abort | abort\r\n| xhr.timeout | numerical value |  ontimeout callback | abort | timeout\r\n| ---- | $timeout |  ----------- | abort | timeout\r\n\r\nHere's a plunker that shows the difference, with a patched angular.js file (to swit\r\n\r\nhttp://plnkr.co/edit/nsviFV7YyF4TiXCyISMN?p=preview\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "incorrect", "xhrstatu", "xhr", "statu", "**what", "new", "behavior", "thi", "featur", "chang", "correct", "xhrstatu", "xhr", "statu", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "gkalpak", "frederikprijck", "thi", "someth", "'d", "like", "your", "review", "opinion", "while", "tri", "find", "out", "http", "github", "com", "angular", "angular", "js", "pull", "14021", "wa", "partial", "fix", "by", "http", "github", "com", "angular", "angular", "js", "commit", "5e2bc5bbf347a9dfadc08b1514b8be06fd550913", "notic", "there", "'s", "problem", "http", "test", "actual", "behavior", "http", "js", "github", "com", "angular", "angular", "js", "blob", "e5c6174839e96113c93913dd8b3c4cca760dfc41", "test", "ng", "httpspec", "http", "spec", "l1910", "we", "expect", "that", "xhrstatu", "xhr", "statu", "'timeout", "howev", "it", "actual", "'abort", "real", "http", "usag", "thi", "not", "caught", "by", "our", "test", "becaus", "test", "run", "against", "mock", "httpbackend", "http", "backend", "which", "must", "manual", "kept", "sync", "real", "http", "implement", "what", "'s", "more", "our", "implement", "abort", "timeout", "n't", "follow", "way", "normal", "xhr", "abort", "timeout", "work", "you", "use", "xhr", "abort", "then", "onabort", "handler", "call", "you", "set", "xhr", "timeout", "timeout", "exceed", "then", "ontimeout", "handler", "calld", "browser", "both", "event", "are", "mark", "as", "cancel", "devtool", "at", "least", "chrome", "http", "both", "case", "you", "would", "get", "xhrstatu", "xhr", "statu", "'abort", "becaus", "we", "abort", "xhrrequest", "xhr", "request", "but", "n't", "distinguish", "between", "these", "case", "current", "implement", "timeout", "handler", "would", "onli", "call", "case", "real", "network", "timeout", "presum", "becaus", "could", "n't", "find", "way", "test", "thi", "what", "'s", "more", "you", "pass", "timeout", "as", "timeout", "paramet", "it", "will", "current", "set", "xhrstatu", "xhr", "statu", "abort", "time", "run", "out", "promis", "resolv", "thi", "case", "onli", "fix", "by", "read", "intern", "timeoutid", "timeout", "id", "properti", "promis", "return", "by", "timeout", "thi", "pr", "fix", "code", "both", "mock", "httpbackend", "http", "backend", "regular", "http", "follow", "same", "logic", "as", "xhr", "xhr", "http", "option", "xhr", "result", "current", "http", "xhrstatus|", "xhr", "status|", "new", "http", "xhrstatus|", "xhr", "status|", "xhr", "abort", "resolv", "promis", "onabort", "callback", "call", "abort", "abort", "xhr", "timeout", "numer", "valu", "ontimeout", "callback", "abort", "timeout", "timeout", "abort", "timeout", "here", "'s", "plunker", "that", "show", "differ", "patch", "angular", "js", "file", "swit", "http", "plnkr", "co", "edit", "nsvifv7yyf4tixcyismn", "nsvi", "fv7yy", "f4ti", "cy", "ismn", "p=preview"], "B_body": "Closes #3629\nCloses #3874\n", "B_clean_body": ["close", "3629", "close", "3874"], "title_sim": [0.04621575827706463], "body_sim": [0.06679654089579676], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.009940485425408336, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1495}, {"A_title": "benchmarks - remove no longer applicable, add $watchCollection", "A_clean_title": ["benchmark", "remov", "no", "longer", "applic", "add", "watchcollect", "watch", "collect"], "B_title": "feat(security): explicitly whitelist URL schemes for bootstrap.", "B_clean_title": ["feat", "secur", "explicitli", "whitelist", "url", "scheme", "bootstrap"], "A_body": "Removing\r\n* cases accessing `constructor` that previously had extra \"security\" applied\r\n* the `bmPeWatchLiteral` directive that was making literals `$watch`-able, now they can be watched normally\r\n\r\nAdding\r\n* some `$watchCollection` tests", "A_clean_body": ["remov", "case", "access", "constructor", "that", "previous", "had", "extra", "secur", "appli", "bmpewatchliter", "bm", "pe", "watch", "liter", "direct", "that", "wa", "make", "liter", "watch", "abl", "now", "they", "watch", "normal", "ad", "some", "watchcollect", "watch", "collect", "test"], "B_body": "Many browsers have some extension URL scheme. It is unclear how many of\r\nthose have the security issue of allowing parser-inserted loads of\r\nextension URLs.\r\n\r\nTo be conservative, this code whitelists the URL schemes that are known\r\nto be subject to CSP, i.e. the ones that are expected and safe.\r\n\r\nNote: there is no change in tests as behavior does not change for any known URL.", "B_clean_body": ["mani", "browser", "have", "some", "extens", "url", "scheme", "it", "unclear", "how", "mani", "those", "have", "secur", "issu", "allow", "parser", "insert", "load", "extens", "url", "ur", "ls", "conserv", "thi", "code", "whitelist", "url", "scheme", "that", "are", "known", "subject", "csp", "one", "that", "are", "expect", "safe", "note", "there", "no", "chang", "test", "as", "behavior", "not", "chang", "ani", "known", "url"], "title_sim": [0.04887679013096088], "body_sim": [0.05968022778942949], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 208}, {"A_title": "docs(guide/External Resources): describe your change...", "A_clean_title": ["doc", "guid", "extern", "resourc", "describ", "your", "chang"], "B_title": "fix($location): url rewriting if element was removed", "B_clean_title": ["fix", "locat", "url", "rewrit", "element", "wa", "remov"], "A_body": "Deprecating content @ deleted URL\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRemoving URL \r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ X] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["deprec", "content", "delet", "url", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "remov", "url", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "When user clicks a link, $location needs to intercept this event.  The <a> doesn't have to be target element of the DOM event, so it needs to traverse the DOM, to find first <a> parent.\n\nIf the target element was removed from DOM, during the same event, it would throw an exception. This fixes the issue.\n\nCloses #1058\n", "B_clean_body": ["when", "user", "click", "link", "locat", "need", "intercept", "thi", "event", "n't", "have", "target", "element", "dom", "event", "so", "it", "need", "travers", "dom", "find", "first", "parent", "target", "element", "wa", "remov", "dom", "dure", "same", "event", "it", "would", "throw", "except", "thi", "fix", "issu", "close", "1058"], "title_sim": [0.05460515559938839], "body_sim": [0.10138099042610316], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2033}, {"A_title": "docs: load angular from can only on production", "A_clean_title": ["doc", "load", "angular", "onli", "product"], "B_title": "fix(css): ng:form should always be a block element", "B_clean_title": ["fix", "css", "ng", "form", "alway", "block", "element"], "A_body": "So that when running the docs locally, eg. during e2e testing, we use the latest build version of angular, rather than the stable one from CDN.\n", "A_clean_body": ["so", "that", "when", "run", "doc", "local", "eg", "dure", "e2e", "test", "we", "use", "latest", "build", "version", "angular", "rather", "than", "stabl", "one", "cdn"], "B_body": "fix for: http://jsfiddle.net/agamennon12345/twcvt/\n", "B_clean_body": ["fix", "http", "jsfiddl", "net", "agamennon12345", "twcvt"], "title_sim": [0.0433147267762376], "body_sim": [0.07333796125376074], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 324}, {"A_title": "feat(security): explicitly whitelist URL schemes for bootstrap.", "A_clean_title": ["feat", "secur", "explicitli", "whitelist", "url", "scheme", "bootstrap"], "B_title": "Scenario runner element", "B_clean_title": ["scenario", "runner", "element"], "A_body": "Many browsers have some extension URL scheme. It is unclear how many of\r\nthose have the security issue of allowing parser-inserted loads of\r\nextension URLs.\r\n\r\nTo be conservative, this code whitelists the URL schemes that are known\r\nto be subject to CSP, i.e. the ones that are expected and safe.\r\n\r\nNote: there is no change in tests as behavior does not change for any known URL.", "A_clean_body": ["mani", "browser", "have", "some", "extens", "url", "scheme", "it", "unclear", "how", "mani", "those", "have", "secur", "issu", "allow", "parser", "insert", "load", "extens", "url", "ur", "ls", "conserv", "thi", "code", "whitelist", "url", "scheme", "that", "are", "known", "subject", "csp", "one", "that", "are", "expect", "safe", "note", "there", "no", "chang", "test", "as", "behavior", "not", "chang", "ani", "known", "url"], "B_body": "Adds all the missing jQuery methods to element() DSL\n", "B_clean_body": ["add", "all", "miss", "jqueri", "queri", "method", "element", "dsl"], "title_sim": [-0.028003852341028968], "body_sim": [0.012356002528352067], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2217}, {"A_title": "feat: angularFilter.date: date filter can show day/mon string", "A_clean_title": ["feat", "angularfilt", "date", "angular", "filter", "date", "filter", "show", "day", "mon", "string"], "B_title": "perf($animate): listen for document visibility changes", "B_clean_title": ["perf", "anim", "listen", "document", "visibl", "chang"], "A_body": "  Support new date format, specifically day of week/Month of year in string\n  e.g. {{ someDate | data:\"EEE, MMM d, yyyy\" }} -> \"Wed, Jul 10, 2011\"\nCloses #396\n", "A_clean_body": ["support", "new", "date", "format", "specif", "day", "week", "month", "year", "string", "somed", "some", "date", "data", "eee", "mmm", "yyyi", "wed", "jul", "10", "2011", "close", "396"], "B_body": "Accessing the document for the hidden state is costly for\nplatforms like Electron.\n\nCloses #14066\n", "B_clean_body": ["access", "document", "hidden", "state", "costli", "platform", "like", "electron", "close", "14066"], "title_sim": [0.014619750177087595], "body_sim": [0.18956184287421668], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.00399078434314782, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1701}, {"A_title": "docs(developers.md): update node version as specified in package.json", "A_clean_title": ["doc", "develop", "md", "updat", "node", "version", "as", "specifi", "packag", "json"], "B_title": "docs($location): describe your change...", "B_clean_title": ["doc", "locat", "describ", "your", "chang"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`DEVELOPERS.MD` contains different node version from package.json. `Yarn install` works with 8.9.1+ only and doesn't work with 6.x as specified in docs.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nDocs are updated in accordance with package.json.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNot.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nSorry, this might be a very small and not significant fix, but I guess still requires some attention.\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "develop", "md", "contain", "differ", "node", "version", "packag", "json", "yarn", "instal", "work", "1+", "onli", "n't", "work", "as", "specifi", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "are", "updat", "accord", "packag", "json", "**doe", "thi", "pr", "introduc", "break", "chang", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "sorri", "thi", "might", "veri", "small", "not", "signific", "fix", "but", "guess", "still", "requir", "some", "attent"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\ninaccurate docs\n\n**What is the new behavior (if this is a feature change)?**\ncorrect docs\n\n**Does this PR introduce a breaking change?**\nno\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\ndocs for return of path() inaccurately describe the function\u2019s return when a value is passed in.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "inaccur", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "correct", "doc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "doc", "return", "path", "inaccur", "describ", "function", "return", "when", "valu", "pass"], "title_sim": [0.10060728188246565], "body_sim": [0.8711164541212045], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 605}, {"A_title": "Align jqLite's attr method with jQuery", "A_clean_title": ["align", "jqlite", "jq", "lite", "'s", "attr", "method", "jqueri", "queri"], "B_title": "feat(input) add ng:minlength and ng:maxlength validation support", "B_clean_title": ["feat", "input", "add", "ng", "minlength", "ng", "maxlength", "valid", "support"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRefactors & breaking API changes.\n\n**What is the current behavior? (You can also link to an open issue here)**\nBoolean attribute getters take properties into account and setters modify them. All falsy values for boolean attribute setters remove the attribute and set the property to false. The `null` value in a setter (for all attributes, not only boolean ones) sets the attribute value to the string `\"null\"` instead of removing it.\n\n**What is the new behavior (if this is a feature change)?**\nBoolean attribute getters/setters don't touch properties. The `null` value in a setter (for all attributes, not only boolean ones) removes the attribute. The `false` value removes it only for boolean attributes. Other defined values for boolean attributes set the value to the lowercased attribute name.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~ - only in a form of commit messages with their `BREAKING CHANGES` sections; is anything else needed?\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "break", "api", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "boolean", "attribut", "getter", "take", "properti", "into", "account", "setter", "modifi", "them", "all", "falsi", "valu", "boolean", "attribut", "setter", "remov", "attribut", "set", "properti", "fals", "null", "valu", "setter", "all", "attribut", "not", "onli", "boolean", "one", "set", "attribut", "valu", "string", "null", "instead", "remov", "it", "**what", "new", "behavior", "thi", "featur", "chang", "boolean", "attribut", "getter", "setter", "n't", "touch", "properti", "null", "valu", "setter", "all", "attribut", "not", "onli", "boolean", "one", "remov", "attribut", "fals", "valu", "remov", "it", "onli", "boolean", "attribut", "other", "defin", "valu", "boolean", "attribut", "set", "valu", "lowercas", "attribut", "name", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "onli", "form", "commit", "messag", "their", "break", "chang", "section", "anyth", "need", "**other", "information**"], "B_body": "notes(igor): I also e2e tests and refactorred the e2e test example to be\nmore clear about what is a variable and what is an html/framework api.\n", "B_clean_body": ["note", "igor", "also", "e2e", "test", "refactor", "e2e", "test", "exampl", "more", "clear", "about", "what", "variabl", "what", "html", "framework", "api"], "title_sim": [0.01471855989089003], "body_sim": [0.1522569473489853], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02820504736410613, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1800}, {"A_title": "feat(input) add ng:minlength and ng:maxlength validation support", "A_clean_title": ["feat", "input", "add", "ng", "minlength", "ng", "maxlength", "valid", "support"], "B_title": "fix(ng-bind-html): watch string value instead of wrapper", "B_clean_title": ["fix", "ng", "bind", "html", "watch", "string", "valu", "instead", "wrapper"], "A_body": "notes(igor): I also e2e tests and refactorred the e2e test example to be\nmore clear about what is a variable and what is an html/framework api.\n", "A_clean_body": ["note", "igor", "also", "e2e", "test", "refactor", "e2e", "test", "exampl", "more", "clear", "about", "what", "variabl", "what", "html", "framework", "api"], "B_body": "Ref: https://github.com/angular/angular.js/pull/4045\n\nI have this sinking feeling that support this use case sort of\nencourages binding to function that blindly trust some html.  For now,\nI'm fixing the issue while I think about the use cases some more.\n\nIn the case of a function that performs any non-trivial work before\nwrapping the value (e.g. the showdown filter in issue #3980, or the\nbinding to a simply wrapper function in issue #3932 if it did anything\nmeaty), this fix makes it \"work\" - but performance is going to suck -\nyou should bind to some other thing on scope that watches the actual\nsource and adjusts itself when that changes (e.g. the showdown filter.)\nFor the case of the wrapper in #3932, if one isn't performing\nsanitization or some such thing - then you the developer has insight\ninto why that value is safe in that particular context - and it should\nbe available simply by name and not as a result of a function taking any\narbitrary input to make auditing of security a little saner.\n\nCloses #3932, #3980\n", "B_clean_body": ["ref", "http", "github", "com", "angular", "angular", "js", "pull", "4045", "have", "thi", "sink", "feel", "that", "support", "thi", "use", "case", "sort", "encourag", "bind", "function", "that", "blindli", "trust", "some", "html", "now", "'m", "fix", "issu", "while", "think", "about", "use", "case", "some", "more", "case", "function", "that", "perform", "ani", "non", "trivial", "work", "befor", "wrap", "valu", "showdown", "filter", "issu", "3980", "or", "bind", "simpli", "wrapper", "function", "issu", "3932", "it", "did", "anyth", "meati", "thi", "fix", "make", "it", "work", "but", "perform", "go", "suck", "you", "bind", "some", "other", "thing", "scope", "that", "watch", "actual", "sourc", "adjust", "itself", "when", "that", "chang", "showdown", "filter", "case", "wrapper", "3932", "one", "n't", "perform", "sanit", "or", "some", "such", "thing", "then", "you", "develop", "ha", "insight", "into", "whi", "that", "valu", "safe", "that", "particular", "context", "it", "avail", "simpli", "by", "name", "not", "as", "result", "function", "take", "ani", "arbitrari", "input", "make", "audit", "secur", "littl", "saner", "close", "3932", "3980"], "title_sim": [0.10209211138695849], "body_sim": [0.12664938195111083], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.09612068204306494, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 703}, {"A_title": "docs(guide/Components): add link to documentation for component method", "A_clean_title": ["doc", "guid", "compon", "add", "link", "document", "compon", "method"], "B_title": "chore(travis): split out the docs e2e tests into their own travis job", "B_clean_title": ["chore", "travi", "split", "out", "doc", "e2e", "test", "into", "their", "own", "travi", "job"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDoes not link to API of method which shows all syntaxes\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nLinks to API of method\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "not", "link", "api", "method", "which", "show", "all", "syntax", "**what", "new", "behavior", "thi", "featur", "chang", "link", "api", "method", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Previously, they were in the 'unit' job to save travis VMs, but this\nwas confusing and made it more difficult to track down errors easily.\n", "B_clean_body": ["previous", "they", "were", "'unit", "job", "save", "travi", "vm", "ms", "but", "thi", "wa", "confus", "made", "it", "more", "difficult", "track", "down", "error", "easili"], "title_sim": [0.07940650163117809], "body_sim": [0.07874753657570648], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1209}, {"A_title": "perf(orderBy): copy array with slice instead of for loop", "A_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "B_title": "chore(*): remove manualLowercase & manualUppercase functions", "B_clean_title": ["chore", "remov", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function"], "A_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "A_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "B_body": "The `manualLowercase` & `manualUppercase` functions were inspired by Google Caja\r\ncode. Caja is written in Java, though, where problems with `toLowerCase`\r\nworking differently in Turkish locale are well known[1]. In JavaScript\r\n`String#toLowerCase` is defined in the ECMAScript spec and all implementations\r\nare required to lowercase I in the same way, regardless of the current locale.\r\nDifferences may (and do) happen only in `String#toLocaleLowerCase`.\r\n\r\nOther libraries doing string normalization, like jQuery or DOMPurify don't\r\napply special lowercasing logic in a Turkish environment.\r\n\r\nTherefore, the `manualLowercase` & `manualUppercase` logic is dead code in\r\nAngularJS and can be removed.\r\n\r\nAlso, the `manualLowercase` & `manualUppercase` functions are incomplete; they\r\nonly lowercase ASCII characters which is different to native\r\n`String#toLowerCase`. Since those functions are used in many places in the\r\nlibrary, they would break a lot of code. For example, the lowercase filter would\r\nnot lowercase \u03a9 to \u03c9 but leave it as \u03a9.\r\n\r\n[1] https://garygregory.wordpress.com/2015/11/03/java-lowercase-conversion-turkey/\r\n\r\nRef #11387\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDead code removal.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe `manualLowercase` & `manualUppercase` functions are defined & used if `'I'.toLowerCase() !== 'i'`.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n`String#toLowerCase` is used everywhere.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function", "were", "inspir", "by", "googl", "caja", "code", "caja", "written", "java", "though", "where", "problem", "tolowercas", "lower", "case", "work", "differ", "turkish", "local", "are", "well", "known", "javascript", "java", "script", "string", "tolowercas", "lower", "case", "defin", "ecmascript", "ecma", "script", "spec", "all", "implement", "are", "requir", "lowercas", "same", "way", "regardless", "current", "local", "differ", "may", "happen", "onli", "string", "tolocalelowercas", "local", "lower", "case", "other", "librari", "do", "string", "normal", "like", "jqueri", "queri", "or", "dompurifi", "dom", "purifi", "don't", "appli", "special", "lowercas", "logic", "turkish", "environ", "therefor", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "logic", "dead", "code", "angularj", "angular", "js", "remov", "also", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function", "are", "incomplet", "they", "onli", "lowercas", "ascii", "charact", "which", "differ", "nativ", "string", "tolowercas", "lower", "case", "sinc", "those", "function", "are", "use", "mani", "place", "librari", "they", "would", "break", "lot", "code", "exampl", "lowercas", "filter", "would", "not", "lowercas", "but", "leav", "it", "as", "http", "lowercas", "convers", "wordpress", "turkey", "garygregori", "com", "2015", "11", "03", "java", "ref", "11387", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "dead", "code", "remov", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function", "are", "defin", "use", "i'", "tolowercas", "lower", "case", "**what", "new", "behavior", "thi", "featur", "chang", "string", "tolowercas", "lower", "case", "use", "everywher", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.06879463122007554], "body_sim": [0.24132161673664826], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.022462200552656, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 873}, {"A_title": "fix($resource): don't use $parse for @dotted.member", "A_clean_title": ["fix", "resourc", "n't", "use", "pars", "dot", "member"], "B_title": "fix(formatNumber): better corner case handling", "B_clean_title": ["fix", "formatnumb", "format", "number", "better", "corner", "case", "handl"], "A_body": "params and paramDefaults support looking up the parameter value from the\ndata object.  The syntax for that is `@nested.property.name`.\nCurrently, $resource uses $parse to do this.  This is too liberal\n(you can use values like `@a=b` or `@a | filter` and have it work -\nwhich doesn't really make sense).  It also puts up a dependency on\n$parse which is has restrictions to secure expressions used in\ntemplates.  The value here, though a string, is specified in Javascript\ncode and shouldn't have those restrictions.\n", "A_clean_body": ["param", "paramdefault", "param", "default", "support", "look", "up", "paramet", "valu", "data", "object", "syntax", "that", "nest", "properti", "name", "current", "resourc", "use", "pars", "thi", "thi", "too", "liber", "you", "use", "valu", "like", "a=b", "or", "filter", "have", "it", "work", "which", "n't", "realli", "make", "sens", "it", "also", "put", "up", "depend", "pars", "which", "ha", "restrict", "secur", "express", "use", "templat", "valu", "here", "though", "string", "specifi", "javascript", "code", "n't", "have", "those", "restrict"], "B_body": "The idea here is that we actually parse the input number ourselves and then do the rounding ourselves manually. This allows us more control and reliability on the output for corner case numbers.\n\nCloses #8674\nCloses #12709 \nCloses #8705 \nCloses #12707 \nCloses #10246\nCloses #10252\n", "B_clean_body": ["idea", "here", "that", "we", "actual", "pars", "input", "number", "ourselv", "then", "round", "ourselv", "manual", "thi", "allow", "us", "more", "control", "reliabl", "output", "corner", "case", "number", "close", "8674", "close", "12709", "close", "8705", "close", "12707", "close", "10246", "close", "10252"], "title_sim": [0.22532449693903014], "body_sim": [0.22980363638745957], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.012915777285344399, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 749}, {"A_title": "docs app style updates", "A_clean_title": ["doc", "app", "style", "updat"], "B_title": "docs(guide/decorators): add decorator guide", "B_clean_title": ["doc", "guid", "decor", "add", "decor", "guid"], "A_body": "This updates the docs app to the new header style found on angularjs.org.\r\n\r\nI've also taken the liberty to update the menu entries on the doc site - pending approval I'll update the org site, too (would fix https://github.com/angular/angular.js/issues/14351)\r\n\r\nAnd fixes https://github.com/angular/angular.js/issues/14963\r\n\r\nNotable differences between org / docs:\r\n- search icon\r\n- font family / weight (should we update?)\r\n- no drop shadow on navbar because there's a secondary bar on docs\r\n\r\nNotable differences between docs old / new:\r\n- mobile: the top header + search are fixed, sub header is relative (previously all relative)\r\n- mobile search close icon has moved over the search bar, because I had some problems giving it it's previous position while keeping the search results scrollable (oh my)\r\n\r\nImplementation notes:\r\n- angular-topnav.css is included as is from org site\r\n- several overrides necessary because org uses bootstrap 2 / docs uses bs 3 (oh my)\r\n- org site uses one breakpoint at 800px, docs uses one at 768 and one at 992. I tested it and it doesn't affect the common screen sizes\r\n\r\nFuture work:\r\n- clean up the css and maybe implement sass for the docs app\r\n\r\nScreens:\r\n\r\n![fireshot screen capture 014 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop dropdown open](https://cloud.githubusercontent.com/assets/1153097/22548685/f47fb29c-e947-11e6-8f41-a6ab683a4037.png)\r\n![fireshot screen capture 015 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop search](https://cloud.githubusercontent.com/assets/1153097/22548686/f481f354-e947-11e6-8ea6-735012fe9c9c.png)\r\n![fireshot screen capture 016 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone dropdown](https://cloud.githubusercontent.com/assets/1153097/22548683/f47f66ac-e947-11e6-87b3-8317404394a1.png)\r\n![fireshot screen capture 017 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone search](https://cloud.githubusercontent.com/assets/1153097/22548684/f47fad88-e947-11e6-80c6-9beb87f70c53.png)\r\n", "A_clean_body": ["thi", "updat", "doc", "app", "new", "header", "style", "found", "angularj", "org", "'ve", "also", "taken", "liberti", "updat", "menu", "entri", "doc", "site", "pend", "approv", "'ll", "updat", "org", "site", "too", "would", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14351", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14963", "notabl", "differ", "between", "org", "doc", "search", "icon", "font", "famili", "weight", "we", "updat", "no", "drop", "shadow", "navbar", "becaus", "there", "'s", "secondari", "bar", "doc", "notabl", "differ", "between", "doc", "old", "new", "mobil", "top", "header", "search", "are", "fix", "sub", "header", "rel", "previous", "all", "rel", "mobil", "search", "close", "icon", "ha", "move", "over", "search", "bar", "becaus", "had", "some", "problem", "give", "it", "it", "'s", "previou", "posit", "while", "keep", "search", "result", "scrollabl", "oh", "my", "implement", "note", "angular", "topnav", "css", "includ", "as", "org", "site", "sever", "overrid", "necessari", "becaus", "org", "use", "bootstrap", "doc", "use", "bs", "oh", "my", "org", "site", "use", "one", "breakpoint", "at", "800px", "doc", "use", "one", "at", "768", "one", "at", "992", "test", "it", "it", "n't", "affect", "common", "screen", "size", "futur", "work", "clean", "up", "css", "mayb", "implement", "sass", "doc", "app", "screen", "fireshot", "screen", "captur", "014", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "dropdown", "open", "http", "e947", "11e6", "8f41", "githubusercont", "a6ab683a4037", "png", "cloud", "com", "asset", "1153097", "22548685", "f47fb29c", "fireshot", "screen", "captur", "015", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "search", "http", "e947", "11e6", "8ea6", "githubusercont", "735012fe9c9c", "png", "cloud", "com", "asset", "1153097", "22548686", "f481f354", "fireshot", "screen", "captur", "016", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "dropdown", "http", "e947", "11e6", "87b3", "githubusercont", "8317404394a1", "png", "cloud", "com", "asset", "1153097", "22548683", "f47f66ac", "fireshot", "screen", "captur", "017", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "search", "http", "e947", "11e6", "80c6", "githubusercont", "9beb87f70c53", "png", "cloud", "com", "asset", "1153097", "22548684", "f47fad88"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update.\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere currently is no guide for decorators.\n\n**What is the new behavior (if this is a feature change)?**\n\nAdd a guide document for decorators\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n- explain decorators and how they are implemented in angular\n- explain how different types of services can be selected\n- explain `$delegate` objects and how they differ between services\n- warn of the risks/caveats of `$delegate` modification\n- note the exposure of `decorator` through the module api\n- show an example of decorating a core service\n- show an example of decorating a core directive\n- show an example of decorating a core filter\n\ncloses #12163\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "current", "no", "guid", "decor", "**what", "new", "behavior", "thi", "featur", "chang", "add", "guid", "document", "decor", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "explain", "decor", "how", "they", "are", "implement", "angular", "explain", "how", "differ", "type", "servic", "select", "explain", "deleg", "object", "how", "they", "differ", "between", "servic", "warn", "risk", "caveat", "deleg", "modif", "note", "exposur", "decor", "through", "modul", "api", "show", "exampl", "decor", "core", "servic", "show", "exampl", "decor", "core", "direct", "show", "exampl", "decor", "core", "filter", "close", "12163"], "title_sim": [0.17551864433398073], "body_sim": [0.35379310031129185], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 303}, {"A_title": "fix($timeout/$interval): do not trigger a digest when cancelling a $timeout/$interval", "A_clean_title": ["fix", "timeout", "interv", "not", "trigger", "digest", "when", "cancel", "timeout", "interv"], "B_title": "docs($rootScope.Scope): clarify $watchGroup \"oldValues\" argument", "B_clean_title": ["doc", "rootscop", "scope", "root", "scope", "clarifi", "watchgroup", "watch", "group", "oldvalu", "old", "valu", "argument"], "A_body": "Previously `.catch(noop)` was used on the rejected timeout/interval to prevent an unhandled rejection error. However this would schedule a deferred task to run the `noop`. If the cancelling was outside a digest this could cause a new digest such as with the ng-model `debounce` option.\r\n\r\nFixes #16057", "A_clean_body": ["previous", "catch", "noop", "wa", "use", "reject", "timeout", "interv", "prevent", "unhandl", "reject", "error", "howev", "thi", "would", "schedul", "defer", "task", "run", "noop", "cancel", "wa", "outsid", "digest", "thi", "could", "caus", "new", "digest", "such", "as", "ng", "model", "debounc", "option", "fix", "16057"], "B_body": "This should help to prevent issues such as #8671, #12452, #16004.\r\n\r\nCloses #12643\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nunclear docs\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nhopefully clearer docs :)\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "help", "prevent", "issu", "such", "as", "8671", "12452", "16004", "close", "12643", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "unclear", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "hope", "clearer", "doc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.05933775764868215], "body_sim": [0.05911371988057132], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.19689348661178158, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 29}, {"A_title": "refactor($injector): remove the Chrome stringification hack", "A_clean_title": ["refactor", "injector", "remov", "chrome", "stringif", "hack"], "B_title": "docs(changelog): Change for labels and style consistency", "B_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "A_body": "The Chrome stringification hack added in afcedff34c8a44dda0d558d9d6337962f5f03d7b\r\nis no longer needed. I verified that both of the commented out tests pass\r\non Chrome 56.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's a workaround in place for Chrome 50-51. Current stable version is 56.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["chrome", "stringif", "hack", "ad", "afcedff34c8a44dda0d558d9d6337962f5f03d7b", "no", "longer", "need", "verifi", "that", "both", "comment", "out", "test", "pass", "chrome", "56", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "workaround", "place", "chrome", "50", "51", "current", "stabl", "version", "56", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "B_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "title_sim": [0.012308785676597515], "body_sim": [0.47747379154466074], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 286}, {"A_title": "feat(ngMessages): add support for default message", "A_clean_title": ["feat", "ngmessag", "ng", "messag", "add", "support", "default", "messag"], "B_title": "docs(app): increments year", "B_clean_title": ["doc", "app", "increment", "year"], "A_body": "Added support for showing default message when no values are mapped with ng-message.\r\n\r\nCloses #12008\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["ad", "support", "show", "default", "messag", "when", "no", "valu", "are", "map", "ng", "messag", "close", "12008", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Increments the year from 2014 to 2015.\n", "B_clean_body": ["increment", "year", "2014", "2015"], "title_sim": [0.014875211442000841], "body_sim": [-0.0036939818871935264], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1237}, {"A_title": "docs(ngRepeat): I added the phrase \"and by age\" on line 236", "A_clean_title": ["doc", "ngrepeat", "ng", "repeat", "ad", "phrase", "by", "age", "line", "236"], "B_title": "fix($timeout/$interval): do not trigger a digest when cancelling a $timeout/$interval", "B_clean_title": ["fix", "timeout", "interv", "not", "trigger", "digest", "when", "cancel", "timeout", "interv"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo change in behavior introduced \n\n**What is the new behavior (if this is a feature change)?**\n\nNo change in behavior introduced\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example seems to also be filtering by age. It threw me off a bit because I was getting results when I entered numbers in the input field.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "chang", "behavior", "introduc", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "behavior", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "seem", "also", "filter", "by", "age", "it", "threw", "me", "off", "bit", "becaus", "wa", "get", "result", "when", "enter", "number", "input", "field"], "B_body": "Previously `.catch(noop)` was used on the rejected timeout/interval to prevent an unhandled rejection error. However this would schedule a deferred task to run the `noop`. If the cancelling was outside a digest this could cause a new digest such as with the ng-model `debounce` option.\r\n\r\nFixes #16057", "B_clean_body": ["previous", "catch", "noop", "wa", "use", "reject", "timeout", "interv", "prevent", "unhandl", "reject", "error", "howev", "thi", "would", "schedul", "defer", "task", "run", "noop", "cancel", "wa", "outsid", "digest", "thi", "could", "caus", "new", "digest", "such", "as", "ng", "model", "debounc", "option", "fix", "16057"], "title_sim": [0.13298593642865583], "body_sim": [0.06486661998596747], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 308}, {"A_title": "fix($location): prevent infinite digest with IDN urls in Edge", "A_clean_title": ["fix", "locat", "prevent", "infinit", "digest", "idn", "url", "edg"], "B_title": "perf($rootScope): do not mark $watchCollectionInterceptor as $stateful", "B_clean_title": ["perf", "rootscop", "root", "scope", "not", "mark", "watchcollectioninterceptor", "watch", "collect", "interceptor", "as", "state"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFix\n\n**What is the current behavior? (You can also link to an open issue here)**\nInternationalized Domain Name Urls (IDN), e.g. with an Umlaut, in Edge lead to an infinite digest on page load.\n\n**What is the new behavior (if this is a feature change)?**\nNo Infdig\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\nFixes #15217\n\nNote:\nWe don't test on Edge yet, but I've tested this locally with the https://github.com/nickmccurdy/karma-edge-launcher \n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "internation", "domain", "name", "url", "idn", "umlaut", "edg", "lead", "infinit", "digest", "page", "load", "**what", "new", "behavior", "thi", "featur", "chang", "no", "infdig", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "fix", "15217", "note", "we", "n't", "test", "edg", "yet", "but", "'ve", "test", "thi", "local", "http", "edg", "launcher", "github", "com", "nickmccurdi", "karma"], "B_body": "I think this was a mistake [from the start](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa?diff=unified#diff-44d3307b66bf51b52e110307fa57e196R518).  This interceptor doesn't actually store any state, it just reads the inner/complex state of its input. EDIT: actually it had a purpose originally, although may no longer be as significant, see https://github.com/angular/angular.js/pull/16009#issuecomment-311543600\r\n\r\nRemoving the `$stateful` flag will allow some expressions (those with `inputs` such as array/object literals) to avoid invoking `$watchCollectionInterceptor` and avoid creating the literals etc. on each digest.", "B_clean_body": ["think", "thi", "wa", "mistak", "start", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff=unifi", "diff", "44d3307b66bf51b52e110307fa57e196r518", "thi", "interceptor", "n't", "actual", "store", "ani", "state", "it", "just", "read", "inner", "complex", "state", "it", "input", "edit", "actual", "it", "had", "purpos", "origin", "although", "may", "no", "longer", "as", "signific", "see", "http", "github", "com", "angular", "angular", "js", "pull", "16009", "issuecom", "311543600", "remov", "state", "flag", "will", "allow", "some", "express", "those", "input", "such", "as", "array", "object", "liter", "avoid", "invok", "watchcollectioninterceptor", "watch", "collect", "interceptor", "avoid", "creat", "liter", "etc", "each", "digest"], "title_sim": [-0.013992289737987504], "body_sim": [0.31830087171181465], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.05186268514554988, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 228}, {"A_title": "feat($location): allow automatic rewriting of links to be disabled", "A_clean_title": ["feat", "locat", "allow", "automat", "rewrit", "link", "disabl"], "B_title": "docs(ngRepeat): Correct typo", "B_clean_title": ["doc", "ngrepeat", "ng", "repeat", "correct", "typo"], "A_body": "Currently, when the location provider is set to html5 mode, all links\non the page are hijacked and automatically rewritten. While this may be\ndesirable behavior in some cases (such as using ngRoute), not all cases\nwhere html5 mode are enabled imply the desire for this behavior.\n\nOne example would be an application using the\n[ui-router](https://github.com/angular-ui/ui-router) library, with some\npages that exist outside of angular. Links that are meant to go through\nthe router use the `ui-sref` directive, so the rewrite behavior is\nunnecessary.\n\nCloses #5487\n", "A_clean_body": ["current", "when", "locat", "provid", "set", "html5", "mode", "all", "link", "page", "are", "hijack", "automat", "rewritten", "while", "thi", "may", "desir", "behavior", "some", "case", "such", "as", "ngrout", "ng", "rout", "not", "all", "case", "where", "html5", "mode", "are", "enabl", "impli", "desir", "thi", "behavior", "one", "exampl", "would", "applic", "ui", "router", "http", "router", "ui", "ui", "github", "com", "angular", "librari", "some", "page", "that", "exist", "outsid", "angular", "link", "that", "are", "meant", "go", "through", "router", "use", "ui", "sref", "direct", "so", "rewrit", "behavior", "unnecessari", "close", "5487"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nN/A\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nN/A", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.08936654424818903], "body_sim": [0.2331887206626991], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1003}, {"A_title": "docs: Clarify documentation of input[week]", "A_clean_title": ["doc", "clarifi", "document", "input", "week"], "B_title": "fix(ngOptions): remove selected attribute from unselected options", "B_clean_title": ["fix", "ngoption", "ng", "option", "remov", "select", "attribut", "unselect", "option"], "A_body": "Add a note to documentation of input[week] to explicitly state that the\r\nresulting Date object's value is set to Thursday at midnight of the\r\nspecified week\r\n\r\nResolves #15883\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nhttps://github.com/angular/angular.js/issues/15883\r\nThe docs do not specify the day and time of a Date created by input[week]\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThe docs now explicitly state that the resulting Date object's value is set to Thursday at midnight of the\r\nspecified week\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nThought this looked like a nice opportunity for baby's first pull request! Hope I did everything right...\r\n", "A_clean_body": ["add", "note", "document", "input", "week", "explicitli", "state", "that", "result", "date", "object", "'s", "valu", "set", "thursday", "at", "midnight", "specifi", "week", "resolv", "15883", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "http", "github", "com", "angular", "angular", "js", "issu", "15883", "doc", "not", "specifi", "day", "time", "date", "creat", "by", "input", "week", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "now", "explicitli", "state", "that", "result", "date", "object", "'s", "valu", "set", "thursday", "at", "midnight", "specifi", "week", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thought", "thi", "look", "like", "nice", "opportun", "babi", "'s", "first", "pull", "request", "hope", "did", "everyth", "right"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14892 nad #14419\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nWhen the select model changes, we add the \"selected\" attribute to the selected option, so that\nscreen readers know which option is selected.\n\nPreviously, we failed to remove the attribute when the model changed to match a different option, or\nthe unknown / empty option.\n\nWhen using \"track by\", the behavior would also show when a user selected an option, and then the\nmodel was changed, because track by watches the tracked expression, and calls the $render function\non change.\n\nThis fix reads the current select value, finds the matching option and removes the \"selected\"\nattribute.\n\nFixes #14892\nFixes #14419\nRelated #12731\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14892", "nad", "14419", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "when", "select", "model", "chang", "we", "add", "select", "attribut", "select", "option", "so", "that", "screen", "reader", "know", "which", "option", "select", "previous", "we", "fail", "remov", "attribut", "when", "model", "chang", "match", "differ", "option", "or", "unknown", "empti", "option", "when", "track", "by", "behavior", "would", "also", "show", "when", "user", "select", "option", "then", "model", "wa", "chang", "becaus", "track", "by", "watch", "track", "express", "call", "render", "function", "chang", "thi", "fix", "read", "current", "select", "valu", "find", "match", "option", "remov", "select", "attribut", "fix", "14892", "fix", "14419", "relat", "12731"], "title_sim": [0.08514269003178437], "body_sim": [0.6680098840731915], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01806684657296012, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 366}, {"A_title": "docs($resourceProvider): Correct JS syntax error", "A_clean_title": ["doc", "resourceprovid", "resourc", "provid", "correct", "js", "syntax", "error"], "B_title": "fix(ngMock/$httpBackend): fail if a url is provided but is `undefined`", "B_clean_title": ["fix", "ngmock", "ng", "mock", "httpbackend", "http", "backend", "fail", "url", "provid", "but", "undefin"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nExample code has a syntax error\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nExample code no longer has a syntax error\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "code", "ha", "syntax", "error", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "code", "no", "longer", "ha", "syntax", "error", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "While the `url` parameter is optional for `$httpBackend.when`,\n`$httpBackend.expect` and related shortcut methods, it should not have the\nvalue of `undefined` if it has been provided.\n\nThis change ensures that an error is thrown in those cases.\n\nCloses #8442\nCloses #8462\nCloses #10934\n\nBREAKING CHANGE\n\nIt is no longer valid to explicitly pass `undefined` as the `url` argument\nto any of the `$httpBackend.when...()` and `$httpBackend.expect...()`\nmethods.\n\nWhile this argument is optional, it must have a defined value if it is\nprovided.\n\nPreviously passing an explicit `undefined` value was ignored but this\nlead to invalid tests passing unexpectedly.\n", "B_clean_body": ["while", "url", "paramet", "option", "httpbackend", "when", "http", "backend", "httpbackend", "expect", "http", "backend", "relat", "shortcut", "method", "it", "not", "have", "valu", "undefin", "it", "ha", "been", "provid", "thi", "chang", "ensur", "that", "error", "thrown", "those", "case", "close", "8442", "close", "8462", "close", "10934", "break", "chang", "it", "no", "longer", "valid", "explicitli", "pass", "undefin", "as", "url", "argument", "ani", "httpbackend", "when", "http", "backend", "httpbackend", "expect", "http", "backend", "method", "while", "thi", "argument", "option", "it", "must", "have", "defin", "valu", "it", "provid", "previous", "pass", "explicit", "undefin", "valu", "wa", "ignor", "but", "thi", "lead", "invalid", "test", "pass", "unexpectedli"], "title_sim": [0.07606570162346538], "body_sim": [0.25687504687121804], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 423}, {"A_title": "chore(node): update semver", "A_clean_title": ["chore", "node", "updat", "semver"], "B_title": "chore(yarn): rely on Travis built-in Yarn support, update Yarn in Jenkins", "B_clean_title": ["chore", "yarn", "reli", "travi", "built", "yarn", "support", "updat", "yarn", "jenkin"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe install an old Yarn verison manually.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nOn Travis we rely on built-in Yarn support and we only cache the Yarn cache, not `node_modules`. We install a new Yarn verison manually on Jenkins; the location of the install script changed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "instal", "old", "yarn", "verison", "manual", "**what", "new", "behavior", "thi", "featur", "chang", "travi", "we", "reli", "built", "yarn", "support", "we", "onli", "cach", "yarn", "cach", "not", "node", "modul", "we", "instal", "new", "yarn", "verison", "manual", "jenkin", "locat", "instal", "script", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.5925885478803185], "body_sim": [0.8846879800854792], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 292}, {"A_title": "fix(ngModelController): allow $overrideModelOptions to set updateOn", "A_clean_title": ["fix", "ngmodelcontrol", "ng", "model", "control", "allow", "overridemodelopt", "overrid", "model", "option", "set", "updateon", "updat"], "B_title": "fix($templateRequest): always return the template that is stored in the cache", "B_clean_title": ["fix", "templaterequest", "templat", "request", "alway", "return", "templat", "that", "store", "cach"], "A_body": "Also adds more docs about \"default\" events and how to override\r\nModelOptions.\r\n\r\nCloses #16351\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["also", "add", "more", "doc", "about", "default", "event", "how", "overrid", "modelopt", "model", "option", "close", "16351", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nCurrently, `$templateRequest`does not return the cached version returned by `$templateCache`. Instead, it returns the response retrieved from `$http`. This makes it impossible to decorate `$templateCache.put` as described in #16225 .\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit ensures the cached value is returned instead of the `$http` response, allowing for proper decorating.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n#16225\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "current", "templaterequest", "templat", "request", "not", "return", "cach", "version", "return", "by", "templatecach", "templat", "cach", "instead", "it", "return", "respons", "retriev", "http", "thi", "make", "it", "imposs", "decor", "templatecach", "put", "templat", "cach", "as", "describ", "16225", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "ensur", "cach", "valu", "return", "instead", "http", "respons", "allow", "proper", "decor", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "16225"], "title_sim": [0.040028106240063734], "body_sim": [0.858940780646496], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0368810317518116, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 67}, {"A_title": "[Docs] Add links to Atom and Vim packages for angularjs development", "A_clean_title": ["doc", "add", "link", "atom", "vim", "packag", "angularj", "develop"], "B_title": "chore(code.angular): correctly remove old zip files from snapshot", "B_clean_title": ["chore", "code", "angular", "correctli", "remov", "old", "zip", "file", "snapshot"], "A_body": "**Docs update**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere was only links to packages for editors Webstorm, Sublime Text and Visual Studio\n\n**What is the new behavior (if this is a feature change)?**\n\nAdditionally there are links to Atom and Vim packages\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nAdd links to packages for Atom and Vim editors under editor support\nsubsection under tools section\n", "A_clean_body": ["**doc", "update**", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "onli", "link", "packag", "editor", "webstorm", "sublim", "text", "visual", "studio", "**what", "new", "behavior", "thi", "featur", "chang", "addit", "there", "are", "link", "atom", "vim", "packag", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "link", "packag", "atom", "vim", "editor", "under", "editor", "support", "subsect", "under", "tool", "section"], "B_body": "Previously, the event would be triggered on the deletion of the previous zip files,\r\nwhich would delete the current zip file as well\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["previous", "event", "would", "trigger", "delet", "previou", "zip", "file", "which", "would", "delet", "current", "zip", "file", "as", "well", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.03171251692626192], "body_sim": [0.9300890906996133], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 370}, {"A_title": "chore(*): normalize Vojta's email in .mailmap correctly", "A_clean_title": ["chore", "normal", "vojta", "'s", "email", "mailmap", "correctli"], "B_title": "fix(ngOptions): remove selected attribute from unselected options", "B_clean_title": ["fix", "ngoption", "ng", "option", "remov", "select", "attribut", "unselect", "option"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nVojta's mails are not normalized.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThey are normalized.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "vojta", "'s", "mail", "are", "not", "normal", "**what", "new", "behavior", "thi", "featur", "chang", "they", "are", "normal", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14892 nad #14419\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nWhen the select model changes, we add the \"selected\" attribute to the selected option, so that\nscreen readers know which option is selected.\n\nPreviously, we failed to remove the attribute when the model changed to match a different option, or\nthe unknown / empty option.\n\nWhen using \"track by\", the behavior would also show when a user selected an option, and then the\nmodel was changed, because track by watches the tracked expression, and calls the $render function\non change.\n\nThis fix reads the current select value, finds the matching option and removes the \"selected\"\nattribute.\n\nFixes #14892\nFixes #14419\nRelated #12731\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14892", "nad", "14419", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "when", "select", "model", "chang", "we", "add", "select", "attribut", "select", "option", "so", "that", "screen", "reader", "know", "which", "option", "select", "previous", "we", "fail", "remov", "attribut", "when", "model", "chang", "match", "differ", "option", "or", "unknown", "empti", "option", "when", "track", "by", "behavior", "would", "also", "show", "when", "user", "select", "option", "then", "model", "wa", "chang", "becaus", "track", "by", "watch", "track", "express", "call", "render", "function", "chang", "thi", "fix", "read", "current", "select", "valu", "find", "match", "option", "remov", "select", "attribut", "fix", "14892", "fix", "14419", "relat", "12731"], "title_sim": [0.15946827034551708], "body_sim": [0.6696280116023258], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 498}, {"A_title": "fix($compile): sanitize special chars in directive name", "A_clean_title": ["fix", "compil", "sanit", "special", "char", "direct", "name"], "B_title": "fix($parse): standardize one-time literal vs non-literal and interceptors", "B_clean_title": ["fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix for \r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nIn HTML markup only directive name's `x-` and `data-` prefixes are being sanitized. (#16278)\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAlso special chars are being sanitized, e.g. `<div _t></div>` will match `t` directive once again\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nShould not\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n@petebacondarwin suggested to update the regex, and I hope that I did it in a way he was thinking about it.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "html", "markup", "onli", "direct", "name", "'s", "data", "prefix", "are", "be", "sanit", "16278", "**what", "new", "behavior", "thi", "featur", "chang", "also", "special", "char", "are", "be", "sanit", "div", "div", "will", "match", "direct", "onc", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "petebacondarwin", "suggest", "updat", "regex", "hope", "that", "did", "it", "way", "he", "wa", "think", "about", "it"], "B_body": "Previously literal one-time bindings did not use the expression `inputs`, causing infinite digest issues with literal values. This often forces the use of deepEquals when watching one-time literals.\r\n\r\n`ng-class` is one example of deepEquals which is no longer required (and had to be updated to keep all tests passing).\r\n\r\nThis one-time/literal behavior is now also consistently propagated through interceptors (and had to be updated to keep all tests passing).\r\n\r\n----\r\n\r\nThe ngClass/interceptor part was not originally planned but had to be changed to keep tests passing. Maybe this can be split into smaller commits? But it's mainly just deleting...!", "B_clean_body": ["previous", "liter", "one", "time", "bind", "did", "not", "use", "express", "input", "caus", "infinit", "digest", "issu", "liter", "valu", "thi", "often", "forc", "use", "deepequ", "deep", "equal", "when", "watch", "one", "time", "liter", "ng", "class", "one", "exampl", "deepequ", "deep", "equal", "which", "no", "longer", "requir", "had", "updat", "keep", "all", "test", "pass", "thi", "one", "time", "liter", "behavior", "now", "also", "consist", "propag", "through", "interceptor", "had", "updat", "keep", "all", "test", "pass", "ngclass", "interceptor", "ng", "class", "part", "wa", "not", "origin", "plan", "but", "had", "chang", "keep", "test", "pass", "mayb", "thi", "split", "into", "smaller", "commit", "but", "it", "'s", "mainli", "just", "delet"], "title_sim": [0.037132353035025586], "body_sim": [0.23373911722130933], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.014990401044322905, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 222}, {"A_title": "docs(jqlite): add known issue", "A_clean_title": ["doc", "jqlite", "add", "known", "issu"], "B_title": "refactor($parse): move duplicate $parse interpreter/compiler logic into common location", "B_clean_title": ["refactor", "pars", "move", "duplic", "pars", "interpret", "compil", "logic", "into", "common", "locat"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "... and deleted a couple other unused things.", "B_clean_body": ["delet", "coupl", "other", "unus", "thing"], "title_sim": [0.0544787465978946], "body_sim": [0.012700871451487997], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 351}, {"A_title": "docs(guide): add note about value attribute", "A_clean_title": ["doc", "guid", "add", "note", "about", "valu", "attribut"], "B_title": "fix(docs): change plnkr form to open in same window", "B_clean_title": ["fix", "doc", "chang", "plnkr", "form", "open", "same", "window"], "A_body": "- Add note about value attribute for the progress tag with IE\n\nThis should address #7218.\n", "A_clean_body": ["add", "note", "about", "valu", "attribut", "progress", "tag", "ie", "thi", "address", "7218"], "B_body": "Form previously posted to target=\"_blank\", but pop-up blockers were causing this to not work.\nIf a user chose to bypass pop-up blocker one time and click the link, they would arrive at\na new default plnkr, not a plnkr with the desired template.\n\nThis fix removes the _blank target, causing the plnkr to open in the current window/tab.\n", "B_clean_body": ["form", "previous", "post", "target=", "blank", "but", "pop", "up", "blocker", "were", "caus", "thi", "not", "work", "user", "chose", "bypass", "pop", "up", "blocker", "one", "time", "click", "link", "they", "would", "arriv", "at", "new", "default", "plnkr", "not", "plnkr", "desir", "templat", "thi", "fix", "remov", "blank", "target", "caus", "plnkr", "open", "current", "window", "tab"], "title_sim": [0.1453580193332026], "body_sim": [0.09125166853158438], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 687}, {"A_title": "build(*): update Node from 6 to 8, update Yarn", "A_clean_title": ["build", "updat", "node", "updat", "yarn"], "B_title": "doc:$route: Fix $route example and couple of typos in docs", "B_clean_title": ["doc", "rout", "fix", "rout", "exampl", "coupl", "typo", "doc"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBuild-related.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nWe use Node 6 & an old Yarn version.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nWe use Node 8 & a new Yarn version.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\nAngular (2+) switched to Node 8 and so should we.\r\n\r\nRef angular/angular#20807\r\nRef angular/angular#20832\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "build", "relat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "use", "node", "old", "yarn", "version", "**what", "new", "behavior", "thi", "featur", "chang", "we", "use", "node", "new", "yarn", "version", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**", "angular", "2+", "switch", "node", "so", "we", "ref", "angular", "angular", "20807", "ref", "angular", "angular", "20832"], "B_body": "Rewrite $route example a bit, as it required $location and $route services\nto be eager published in the root scope.\n\nAdd missing partials (move them to docs/examples directory)\n\nFix small typos in formatter and ng:options docs.\n", "B_clean_body": ["rewrit", "rout", "exampl", "bit", "as", "it", "requir", "locat", "rout", "servic", "eager", "publish", "root", "scope", "add", "miss", "partial", "move", "them", "doc", "exampl", "directori", "fix", "small", "typo", "formatt", "ng", "option", "doc"], "title_sim": [0.049467589698886094], "body_sim": [0.05055811338900244], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2349}, {"A_title": "fix($parse): standardize one-time literal vs non-literal and interceptors", "A_clean_title": ["fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "B_title": "docs(app): fixes material build", "B_clean_title": ["doc", "app", "fix", "materi", "build"], "A_body": "Previously literal one-time bindings did not use the expression `inputs`, causing infinite digest issues with literal values. This often forces the use of deepEquals when watching one-time literals.\r\n\r\n`ng-class` is one example of deepEquals which is no longer required (and had to be updated to keep all tests passing).\r\n\r\nThis one-time/literal behavior is now also consistently propagated through interceptors (and had to be updated to keep all tests passing).\r\n\r\n----\r\n\r\nThe ngClass/interceptor part was not originally planned but had to be changed to keep tests passing. Maybe this can be split into smaller commits? But it's mainly just deleting...!", "A_clean_body": ["previous", "liter", "one", "time", "bind", "did", "not", "use", "express", "input", "caus", "infinit", "digest", "issu", "liter", "valu", "thi", "often", "forc", "use", "deepequ", "deep", "equal", "when", "watch", "one", "time", "liter", "ng", "class", "one", "exampl", "deepequ", "deep", "equal", "which", "no", "longer", "requir", "had", "updat", "keep", "all", "test", "pass", "thi", "one", "time", "liter", "behavior", "now", "also", "consist", "propag", "through", "interceptor", "had", "updat", "keep", "all", "test", "pass", "ngclass", "interceptor", "ng", "class", "part", "wa", "not", "origin", "plan", "but", "had", "chang", "keep", "test", "pass", "mayb", "thi", "split", "into", "smaller", "commit", "but", "it", "'s", "mainli", "just", "delet"], "B_body": "The theme css files were reorganized at some point in Angular Material 0.7.x and the build is now failing because the files are missing. The styles on the site do not work correctly now with 0.7.x because the css is missing. This change will keep us on 0.6.x until we can update the theme issue.\n", "B_clean_body": ["theme", "css", "file", "were", "reorgan", "at", "some", "point", "angular", "materi", "build", "now", "fail", "becaus", "file", "are", "miss", "style", "site", "not", "work", "correctli", "now", "becaus", "css", "miss", "thi", "chang", "will", "keep", "us", "until", "we", "updat", "theme", "issu"], "title_sim": [0.35820586440434626], "body_sim": [0.2959541057574235], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 797}, {"A_title": "docs($location): fix examples", "A_clean_title": ["doc", "locat", "fix", "exampl"], "B_title": "fix($animateCss): remove animation end event listeners on close", "B_clean_title": ["fix", "animatecss", "anim", "css", "remov", "anim", "end", "event", "listen", "close"], "A_body": "The examples contained tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixed a HTML5 browser scenarion with a non-HTML5\r\none.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe examples contains tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixes a HTML5 browser scenario with a non-HTML5\r\none.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenarion", "non", "html5", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenario", "non", "html5", "one", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Previously the transition/animation end events were not removed when the\nanimation was closed. This normally didn't matter, because\nthe close function knows the animation are closed and won't do work\ntwice.\nHowever, the listeners themselves do computation that could fail when\nthe event was missing some data, for example when the event was\ntriggered instead of natural.\n\nCloses #10387\n", "B_clean_body": ["previous", "transit", "anim", "end", "event", "were", "not", "remov", "when", "anim", "wa", "close", "thi", "normal", "did", "n't", "matter", "becaus", "close", "function", "know", "anim", "are", "close", "wo", "n't", "work", "twice", "howev", "listen", "themselv", "comput", "that", "could", "fail", "when", "event", "wa", "miss", "some", "data", "exampl", "when", "event", "wa", "trigger", "instead", "natur", "close", "10387"], "title_sim": [0.001439520018401752], "body_sim": [0.1283804535543632], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 421}, {"A_title": "refactor($interpolate): remove unnecessary else", "A_clean_title": ["refactor", "interpol", "remov", "unnecessari"], "B_title": "fix($rootScope): provide correct value of one-time bindings in watchGroup", "B_clean_title": ["fix", "rootscop", "root", "scope", "provid", "correct", "valu", "one", "time", "bind", "watchgroup", "watch", "group"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nCleaner code.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "cleaner", "code", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "I don't recall how or why I came across this issue, and it's confusing me, but I found this stashed and the tests do make sense...?", "B_clean_body": ["n't", "recal", "how", "or", "whi", "came", "across", "thi", "issu", "it", "'s", "confus", "me", "but", "found", "thi", "stash", "test", "make", "sens"], "title_sim": [0.0532041850666885], "body_sim": [0.23168991127293942], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 78}, {"A_title": "refactor($rootScope): simplify $emit stopPropagation handling", "A_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "B_title": "chore(doc-gen): add production deployment environment", "B_clean_title": ["chore", "doc", "gen", "add", "product", "deploy", "environ"], "A_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "A_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "B_body": "This is a part of a fix for https://github.com/angular/dgeni/issues/56\n", "B_clean_body": ["thi", "part", "fix", "http", "github", "com", "angular", "dgeni", "issu", "56"], "title_sim": [0.043192424014150306], "body_sim": [0.849908546336527], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1373}, {"A_title": "fix(jqLite): use getElementsByTagName for dealoc-ing elements, cz of SVG on IE", "A_clean_title": ["fix", "jqlite", "jq", "lite", "use", "getelementsbytagnam", "get", "element", "by", "tag", "name", "dealoc", "ing", "element", "cz", "svg", "ie"], "B_title": "(cherry-pick) fix($browser): prevent infinite digests when clearing the hash of a url", "B_clean_title": ["cherri", "pick", "fix", "browser", "prevent", "infinit", "digest", "when", "clear", "hash", "url"], "A_body": "See comments in #8075\n", "A_clean_body": ["see", "comment", "8075"], "B_body": "By using `location.hash` to update the current browser location when only\nthe hash has changed, we prevent the browser from attempting to reload.\n\nCloses #9629\nCloses #9635\nCloses #10228\nCloses #10308\n", "B_clean_body": ["by", "locat", "hash", "updat", "current", "browser", "locat", "when", "onli", "hash", "ha", "chang", "we", "prevent", "browser", "attempt", "reload", "close", "9629", "close", "9635", "close", "10228", "close", "10308"], "title_sim": [-0.006682792619565793], "body_sim": [0.00237131829944675], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.03345620527552859, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 160}, {"A_title": "fix($browser/$location): single quote in url causes infinite digest in F...", "A_clean_title": ["fix", "browser", "locat", "singl", "quot", "url", "caus", "infinit", "digest"], "B_title": "test(support): verify support tests results in all tested browsers", "B_clean_title": ["test", "support", "verifi", "support", "test", "result", "all", "test", "browser"], "A_body": "...F\n\nThe real issue is in FF, see https://bugzilla.mozilla.org/show_bug.cgi?id=407172.\n\nFF overly encodes stuff which breaks our expectations and then we fail .url() != currentUrl.absUrl()\ncomparison unexpectidly, which leads to infinite digest.\n\nThe workaround is to correct for this inconsistency in $browser and decode any single quotes in urls.\n\nCloses #920\n", "A_clean_body": ["real", "issu", "ff", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=407172", "ff", "overli", "encod", "stuff", "which", "break", "our", "expect", "then", "we", "fail", "url", "currenturl", "absurl", "current", "url", "ab", "url", "comparison", "unexpectidli", "which", "lead", "infinit", "digest", "workaround", "correct", "thi", "inconsist", "browser", "decod", "ani", "singl", "quot", "url", "close", "920"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nNew tests.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nIt's not tested whether browsers pass or fail specific support tests used to skip particular test blocks.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll browsers have verified support tests results.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "new", "test", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "it", "'s", "not", "test", "whether", "browser", "pass", "or", "fail", "specif", "support", "test", "use", "skip", "particular", "test", "block", "**what", "new", "behavior", "thi", "featur", "chang", "all", "browser", "have", "verifi", "support", "test", "result", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.2858270797371463], "body_sim": [0.2525616274043794], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.012982587863868245, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1837}, {"A_title": "docs($resourceProvider): Correct JS syntax error", "A_clean_title": ["doc", "resourceprovid", "resourc", "provid", "correct", "js", "syntax", "error"], "B_title": "docs(*): remove usage of global grunt-cli", "B_clean_title": ["doc", "remov", "usag", "global", "grunt", "cli"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nExample code has a syntax error\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nExample code no longer has a syntax error\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "code", "ha", "syntax", "error", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "code", "no", "longer", "ha", "syntax", "error", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nCurrently, the contributing docs tell people to globally install grunt and build angularjs using the `grunt` cli command.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit ensures grunt is not required globally by updating all the commands to use `yarn grunt` instead of `grunt`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "current", "contribut", "doc", "tell", "peopl", "global", "instal", "grunt", "build", "angularj", "grunt", "cli", "command", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "ensur", "grunt", "not", "requir", "global", "by", "updat", "all", "command", "use", "yarn", "grunt", "instead", "grunt", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.005418360640695862], "body_sim": [0.8751014517965529], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 345}, {"A_title": "docs($animate): detail options object", "A_clean_title": ["doc", "anim", "detail", "option", "object"], "B_title": "Fix animation event regression", "B_clean_title": ["fix", "anim", "event", "regress"], "A_body": "- Document options object used in various $animate methods\n\nThis should address #12645.\n", "A_clean_body": ["document", "option", "object", "use", "variou", "anim", "method", "thi", "address", "12645"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nregression fix for #14321\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n@matsko Do you think you could take a look at this?\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "regress", "fix", "14321", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "matsko", "you", "think", "you", "could", "take", "look", "at", "thi"], "title_sim": [0.4445261430169098], "body_sim": [0.07602028619942174], "file_list_sim": 0.3333333333333333, "overlap_files_len": 1, "code_sim": [0.21431977040317546, 0.13934668721973203], "location_sim": [0.0, 0.0], "pattern": -1, "time": 63}, {"A_title": "fix($rootScope): fix potential memory leak when removing scope listeners (v2)", "A_clean_title": ["fix", "rootscop", "root", "scope", "fix", "potenti", "memori", "leak", "when", "remov", "scope", "listen", "v2"], "B_title": "test(modules): fix module tests which got disabled by ngMobile", "B_clean_title": ["test", "modul", "fix", "modul", "test", "which", "got", "disabl", "by", "ngmobil", "ng", "mobil"], "A_body": "This is the alternative to #16161 that we discussed.\r\n\r\nThis simplifies the listener cleanup and avoids creating sparse listener arrays (unlike #16161) but introduces a new restriction that disallows recursive event $broadcast/$emit-ing.  We could remove this restriction but it would complicate everything event related by requiring a stack for the index.", "A_clean_body": ["thi", "altern", "16161", "that", "we", "discuss", "thi", "simplifi", "listen", "cleanup", "avoid", "creat", "spars", "listen", "array", "unlik", "16161", "but", "introduc", "new", "restrict", "that", "disallow", "recurs", "event", "broadcast", "emit", "ing", "we", "could", "remov", "thi", "restrict", "but", "it", "would", "complic", "everyth", "event", "relat", "by", "requir", "stack", "index"], "B_body": "When ngMobile was merged in, we accidentaly included angular-scenario.js\nin the test file set for modules. Loading this file overrode jasmine's\n`it` and `describe` global functions which essentially disabled all of\n~200 unit tests for wrapped modules.\n\nThis change refactors the code to run the wrapped module tests.\n\nI had to extract browserTrigger from scenario runner in order to achieve\nthis without code duplication.\n", "B_clean_body": ["when", "ngmobil", "ng", "mobil", "wa", "merg", "we", "accidentali", "includ", "angular", "scenario", "js", "test", "file", "set", "modul", "load", "thi", "file", "overrod", "jasmine'", "it", "describ", "global", "function", "which", "essenti", "disabl", "all", "~200", "unit", "test", "wrap", "modul", "thi", "chang", "refactor", "code", "run", "wrap", "modul", "test", "had", "extract", "browsertrigg", "browser", "trigger", "scenario", "runner", "order", "achiev", "thi", "without", "code", "duplic"], "title_sim": [-0.01364173088034655], "body_sim": [0.17423229632529727], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.014749248493437395, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1647}, {"A_title": "test(ngMock): remove a broken jqLite cache clearing", "A_clean_title": ["test", "ngmock", "ng", "mock", "remov", "broken", "jqlite", "jq", "lite", "cach", "clear"], "B_title": "wip: feat(ngModel): run formatters / setModelValue", "B_clean_title": ["wip", "feat", "ngmodel", "ng", "model", "run", "formatt", "setmodelvalu", "set", "model", "valu"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA test change.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`angular.element.cache` is reset to an empty object in one spec.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt's no longer reset at all.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nThis is blocking PR #16512.", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "angular", "element", "cach", "reset", "empti", "object", "one", "spec", "**what", "new", "behavior", "thi", "featur", "chang", "it", "'s", "no", "longer", "reset", "at", "all", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "thi", "block", "pr", "16512"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's currently no way to manually run the model -> view pipeline / formatters\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAn API to run the whole pipeline / the formatters is introduced.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nThe PR includes both a `$format` and a `$setModelValue` function. I think only one is needed, we just need to decide which one.\r\n\r\n$format:\r\n\r\n- PRO: does the most needed thing, very straightforward: run the formatters and updates the viewValue\r\n- CON: developer must run $render manually\r\n- CON: empty classes are set even though the DOM is not updated. Could be moved to $render()\r\n- CON: no equivalent on the view -> model side (inconsistent API)\r\n\r\n$setModelValue\r\n- PRO: equivalent to $setViewValue, runs the whole pipeline\r\n- CON: unintuitive that the function argument should / must be set to the current $modelValue, so the control does not get out of sync with the scope (same behavior as $setViewValue though)\r\n- CON: only runs $render if the viewValue has actually changed.\r\n- CON: always runs the validation, even though it might not be necessary\r\n\r\nBoth methods can handle the basic case, where an app developer wants to run the formatters the view -> model pipeline has been run, see https://github.com/angular/angular.js/issues/3407 or https://github.com/angular/angular.js/pull/5221\r\n\r\nI personally tend to introduce `$format` as it has the smaller surface area and introduces fewer side effects. The full model -> view pipeline is not really needed for most cases.\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "current", "no", "way", "manual", "run", "model", "view", "pipelin", "formatt", "**what", "new", "behavior", "thi", "featur", "chang", "api", "run", "whole", "pipelin", "formatt", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "pr", "includ", "both", "format", "setmodelvalu", "set", "model", "valu", "function", "think", "onli", "one", "need", "we", "just", "need", "decid", "which", "one", "format", "pro", "most", "need", "thing", "veri", "straightforward", "run", "formatt", "updat", "viewvalu", "view", "valu", "con", "develop", "must", "run", "render", "manual", "con", "empti", "class", "are", "set", "even", "though", "dom", "not", "updat", "could", "move", "render", "con", "no", "equival", "view", "model", "side", "inconsist", "api", "setmodelvalu", "set", "model", "valu", "pro", "equival", "setviewvalu", "set", "view", "valu", "run", "whole", "pipelin", "con", "unintuit", "that", "function", "argument", "must", "set", "current", "modelvalu", "model", "valu", "so", "control", "not", "get", "out", "sync", "scope", "same", "behavior", "as", "setviewvalu", "set", "view", "valu", "though", "con", "onli", "run", "render", "viewvalu", "view", "valu", "ha", "actual", "chang", "con", "alway", "run", "valid", "even", "though", "it", "might", "not", "necessari", "both", "method", "handl", "basic", "case", "where", "app", "develop", "want", "run", "formatt", "view", "model", "pipelin", "ha", "been", "run", "see", "http", "github", "com", "angular", "angular", "js", "issu", "3407", "or", "http", "github", "com", "angular", "angular", "js", "pull", "5221", "person", "tend", "introduc", "format", "as", "it", "ha", "smaller", "surfac", "area", "introduc", "fewer", "side", "effect", "full", "model", "view", "pipelin", "not", "realli", "need", "most", "case"], "title_sim": [0.03163604544787971], "body_sim": [0.6078502530392881], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 187}, {"A_title": "refactor($compile): remove unused `return` statement", "A_clean_title": ["refactor", "compil", "remov", "unus", "return", "statement"], "B_title": "fix(ngAnimate): allow removal of class that is scheduled to be added \u2026", "B_clean_title": ["fix", "nganim", "ng", "anim", "allow", "remov", "class", "that", "schedul", "ad"], "A_body": "As discussed in https://github.com/angular/angular.js/commit/89447b3f2b4c6db62c24473a81fedc3b04242b85#commitcomment-10280666.\n", "A_clean_body": ["as", "discuss", "http", "github", "com", "angular", "angular", "js", "commit", "89447b3f2b4c6db62c24473a81fedc3b04242b85", "commitcom", "10280666"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14582\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [-] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n\u2026with requestAnimationFrame\n\nThe following case can happen when ngClass updates an element's classes in very quick order in the following way:\n- First animation adds class \"a\"\n- A digest passes, but \"a\" is not yet added to the element\n- Second animation adds class \"b\"\n- No digest passes, and \"a\" is still not added to the element,\n  because requestAnimationFrame hasn't been flushed yet\n- Third animation removes class \"a\"\n- the third animation gets merged into the second animation\n\nBefore this change:\n- Because the element doesn't have class \"a\" yet, ngAnimate\n  resolves that it cannot remove class \"a\". However,\n  the first animation is still running, and finally adds \"a\"\n\nAfter this change:\n- ngAnimate reacts to the temporary class \"add-a\", which indicates\n  that \"a\" is about to be added and decides that \"a\" can be removed\n  after all.\n\nThis is a very rare case where setting the element's class\nis not fast enough, and subsequent animations operate on incorrect assumptions.\n\n\"In the wild\", this is caused by rapidly updating ngClass,\nwhich uses inidvidual addClass and removeClass calls when both operations happen in a single digest.\n\nFixes #14582\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14582", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026with", "requestanimationfram", "request", "anim", "frame", "follow", "case", "happen", "when", "ngclass", "ng", "class", "updat", "element", "'s", "class", "veri", "quick", "order", "follow", "way", "first", "anim", "add", "class", "digest", "pass", "but", "not", "yet", "ad", "element", "second", "anim", "add", "class", "no", "digest", "pass", "still", "not", "ad", "element", "becaus", "requestanimationfram", "request", "anim", "frame", "ha", "n't", "been", "flush", "yet", "third", "anim", "remov", "class", "third", "anim", "get", "merg", "into", "second", "anim", "befor", "thi", "chang", "becaus", "element", "n't", "have", "class", "yet", "nganim", "ng", "anim", "resolv", "that", "it", "not", "remov", "class", "howev", "first", "anim", "still", "run", "final", "add", "after", "thi", "chang", "nganim", "ng", "anim", "react", "temporari", "class", "add", "which", "indic", "that", "about", "ad", "decid", "that", "remov", "after", "all", "thi", "veri", "rare", "case", "where", "set", "element", "'s", "class", "not", "fast", "enough", "subsequ", "anim", "oper", "incorrect", "assumpt", "wild", "thi", "caus", "by", "rapidli", "updat", "ngclass", "ng", "class", "which", "use", "inidvidu", "addclass", "add", "class", "removeclass", "remov", "class", "call", "when", "both", "oper", "happen", "singl", "digest", "fix", "14582"], "title_sim": [0.21882199031670976], "body_sim": [0.18874127288315504], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 445}, {"A_title": "Symlinking to bash in test.sh", "A_clean_title": ["symlink", "bash", "test", "sh"], "B_title": "Fix: set $submitted on child forms when form is submitted", "B_clean_title": ["fix", "set", "submit", "child", "form", "when", "form", "submit"], "A_body": "As discussed in \n\nhttp://groups.google.com/group/angular/browse_thread/thread/235d69ffc609e1a9#\n\nThanks in advance.\n", "A_clean_body": ["as", "discuss", "http", "googl", "group", "com", "group", "angular", "brows", "thread", "thread", "235d69ffc609e1a9", "thank", "advanc"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen submitting a form, $submitted is not set on child forms\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI don't think so.\r\nNo one in #10071 said that his might be breaking.\r\nAngularJS doesn't have nested form isolation, and ngForm is only for grouping sub-forms. I think that it's expected that a submission event will affect all sub-forms.\r\nProbably: https://github.com/angular/angular.js/pull/11023#issuecomment-143162373\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\nFollow up to https://github.com/angular/angular.js/pull/11023", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "submit", "form", "submit", "not", "set", "child", "form", "**doe", "thi", "pr", "introduc", "break", "chang", "n't", "think", "so", "no", "one", "10071", "said", "that", "hi", "might", "break", "angularj", "angular", "js", "n't", "have", "nest", "form", "isol", "ngform", "ng", "form", "onli", "group", "sub", "form", "think", "that", "it", "'s", "expect", "that", "submiss", "event", "will", "affect", "all", "sub", "form", "probabl", "http", "github", "com", "angular", "angular", "js", "pull", "11023", "issuecom", "143162373", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "follow", "up", "http", "github", "com", "angular", "angular", "js", "pull", "11023"], "title_sim": [0.048518610565499304], "body_sim": [0.25810865292482016], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2198}, {"A_title": "docs(*): document the breaking change introduced in e1da4be", "A_clean_title": ["doc", "document", "break", "chang", "introduc", "e1da4b"], "B_title": "Overload \"component\" method to accept object map of components", "B_clean_title": ["overload", "compon", "method", "accept", "object", "map", "compon"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nAlthough e1da4be introduced a breaking change, it wasn't documented as such.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe breaking change is documented.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n<sub>(In a way. \"Let me introduce you this breaking change. It has been around for 2 releases, but I don't think you've met.)\"</sub>\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "although", "e1da4b", "introduc", "break", "chang", "it", "wa", "n't", "document", "as", "such", "**what", "new", "behavior", "thi", "featur", "chang", "break", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "sub", "way", "let", "me", "introduc", "you", "thi", "break", "chang", "it", "ha", "been", "around", "releas", "but", "n't", "think", "you", "'ve", "met", "sub", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\"component\" method does not allow multiple components registration\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\"component\" method accepts object as a parameter where the keys are component names and the values are the component definition objects\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compon", "method", "not", "allow", "multipl", "compon", "registr", "**what", "new", "behavior", "thi", "featur", "chang", "compon", "method", "accept", "object", "as", "paramet", "where", "key", "are", "compon", "name", "valu", "are", "compon", "definit", "object", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.0631204308956165], "body_sim": [0.9262736123385377], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.012279930596255696, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 207}, {"A_title": "fix(ngTransclude): remove terminal: true", "A_clean_title": ["fix", "ngtransclud", "ng", "transclud", "remov", "termin", "true"], "B_title": "Update fixed docs content (guide)", "B_clean_title": ["updat", "fix", "doc", "content", "guid"], "A_body": "This was introduced in commit 2adaff083f309bd324c466edd781f3edbf0aff89,\r\nbut made obsolete in 41f3269bfbd90a8d48e62639bb43f3020617bc57.\r\n\r\nFixes #16411\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "wa", "introduc", "commit", "2adaff083f309bd324c466edd781f3edbf0aff89", "but", "made", "obsolet", "41f3269bfbd90a8d48e62639bb43f3020617bc57", "fix", "16411", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Couple of typos fixed:\n- indentation\n- batchLogbatchLog -> batchLog\n- start periodic checking\n- missing brace\n", "B_clean_body": ["coupl", "typo", "fix", "indent", "batchlogbatchlog", "batch", "logbatch", "log", "batchlog", "batch", "log", "start", "period", "check", "miss", "brace"], "title_sim": [0.08200873116279395], "body_sim": [0.04420352458751692], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2400}, {"A_title": "fix($rootScope): fix potential memory leak when removing scope listeners (v2)", "A_clean_title": ["fix", "rootscop", "root", "scope", "fix", "potenti", "memori", "leak", "when", "remov", "scope", "listen", "v2"], "B_title": "fix($compile): throw error in $onChanges immediately", "B_clean_title": ["fix", "compil", "throw", "error", "onchang", "chang", "immedi"], "A_body": "This is the alternative to #16161 that we discussed.\r\n\r\nThis simplifies the listener cleanup and avoids creating sparse listener arrays (unlike #16161) but introduces a new restriction that disallows recursive event $broadcast/$emit-ing.  We could remove this restriction but it would complicate everything event related by requiring a stack for the index.", "A_clean_body": ["thi", "altern", "16161", "that", "we", "discuss", "thi", "simplifi", "listen", "cleanup", "avoid", "creat", "spars", "listen", "array", "unlik", "16161", "but", "introduc", "new", "restrict", "that", "disallow", "recurs", "event", "broadcast", "emit", "ing", "we", "could", "remov", "thi", "restrict", "but", "it", "would", "complic", "everyth", "event", "relat", "by", "requir", "stack", "index"], "B_body": "This brings it in line with how we throw errors in a digest cycle.\r\n\r\nCloses https://github.com/angular/angular.js/issues/15578\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "bring", "it", "line", "how", "we", "throw", "error", "digest", "cycl", "close", "http", "github", "com", "angular", "angular", "js", "issu", "15578", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.12392081158409766], "body_sim": [0.15154346591464604], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.023338396364918985, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 146}, {"A_title": "feat(ngModel): provide ng-empty and ng-not-empty CSS classes", "A_clean_title": ["feat", "ngmodel", "ng", "model", "provid", "ng", "empti", "ng", "not", "empti", "css", "class"], "B_title": "chore: upgrade grunt packages to match master", "B_clean_title": ["chore", "upgrad", "grunt", "packag", "match", "master"], "A_body": "I believe that this feature should be enough to fix #10050\n", "A_clean_body": ["believ", "that", "thi", "featur", "enough", "fix", "10050"], "B_body": "Seems to fix Jenkins build.\n\nBroken: http://ci.angularjs.org/job/angular.js-angular-v1.0.x/lastBuild/console\n\nFixed: http://ci.angularjs.org/job/angular.js-brian/34/console\n", "B_clean_body": ["seem", "fix", "jenkin", "build", "broken", "http", "angular", "angularj", "js", "v1", "ci", "org", "job", "angular", "lastbuild", "consol", "last", "build", "fix", "http", "angularj", "js", "brian", "34", "consol", "ci", "org", "job", "angular"], "title_sim": [0.03675211282568553], "body_sim": [0.17597504232878824], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 746}, {"A_title": "test($parse): add one-time/interceptor tests", "A_clean_title": ["test", "pars", "add", "one", "time", "interceptor", "test"], "B_title": "WIP: Scroll to anchor", "B_clean_title": ["wip", "scroll", "anchor"], "A_body": "I realized that https://github.com/angular/angular.js/commit/189461f9bf6fda18ddbd16c42f2e959cf939c3da changed this a little - previously the second test failed for two reasons\r\n1. one-time literals [did not use .inputs](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) unlike the normal [one-time delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1856), so the `identity` interceptor would throw an infdig because the literal recreated each digest was being watched\r\n2. one-time literals with interceptors [only check `isDefined`](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1933) to determine when the one time is \"done\" which is unlike [the one-time watch delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) that checks all the values in the literal, so the interceptor thought the \"one-time\" was done right away for literals\r\n\r\nI think both of these changes are correct and want to make sure we don't revert them. This should probably only go into 1.7 since this change will [probably be reverted](https://github.com/angular/angular.js/pull/15958) in 1.6.", "A_clean_body": ["realiz", "that", "http", "github", "com", "angular", "angular", "js", "commit", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "chang", "thi", "littl", "previous", "second", "test", "fail", "two", "reason", "one", "time", "liter", "did", "not", "use", "input", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "unlik", "normal", "one", "time", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1856", "so", "ident", "interceptor", "would", "throw", "infdig", "becaus", "liter", "recreat", "each", "digest", "wa", "be", "watch", "one", "time", "liter", "interceptor", "onli", "check", "isdefin", "defin", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1933", "determin", "when", "one", "time", "done", "which", "unlik", "one", "time", "watch", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "that", "check", "all", "valu", "liter", "so", "interceptor", "thought", "one", "time", "wa", "done", "right", "away", "liter", "think", "both", "these", "chang", "are", "correct", "want", "make", "sure", "we", "n't", "revert", "them", "thi", "probabl", "onli", "go", "into", "sinc", "thi", "chang", "will", "probabl", "revert", "http", "github", "com", "angular", "angular", "js", "pull", "15958"], "B_body": "We need to find a name for this service...\n\nIt's actually only the last commit, I put it on the top of Misko's branch...\n", "B_clean_body": ["we", "need", "find", "name", "thi", "servic", "it", "'s", "actual", "onli", "last", "commit", "put", "it", "top", "misko", "'s", "branch"], "title_sim": [0.0886056179953216], "body_sim": [0.2755108187521824], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.061314105492125605, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2033}, {"A_title": "chore(anchorScroll): remove a Jasmine toHaveBeenCalled workaround", "A_clean_title": ["chore", "anchorscrol", "anchor", "scroll", "remov", "jasmin", "tohavebeencal", "have", "been", "call", "workaround"], "B_title": "docs(guide/Internet Explorer Compatibility): Include warnings for usage of 'disabled' attribute", "B_clean_title": ["doc", "guid", "internet", "explor", "compat", "includ", "warn", "usag", "'disabl", "attribut"], "A_body": "The Jasmine fix landed long time ago and we've updated Jasmine since that\r\nhappened.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nTests update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nA Jasmine workaround is applied.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nIt's removed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["jasmin", "fix", "land", "long", "time", "ago", "we", "'ve", "updat", "jasmin", "sinc", "that", "happen", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "jasmin", "workaround", "appli", "**what", "new", "behavior", "thi", "featur", "chang", "it", "'s", "remov", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Setting the 'disabled' attribute on an element that has descendant elements has unexpected behavior in Internet Explorer 11.\r\n\r\n* Input elements that are descendants have the text content of the 'placeholder' attribute inserted as the value (and it is not removed when typing in the field). Changes to the field are not reflected in the model value.\r\n* Select elements that are descendants are disabled.\r\n\r\nTo avoid this issue, it is important to not set `disabled` or `ng-disabled` on an element that has descendant form elements. Normally these should only be used on actual form controls so the issue would not manifest.\r\n\r\nThe issue can also appear if a directive/component is named 'disabled' or takes an attribute named 'disabled' as an input/output attribute, so avoid these.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs do not mention IE11 bug regarding the disabled attribute on elements with descendants (though it shouldn't be used on non-form controls, this issue can prop up when making custom elements/attributes).\r\n\r\nA previous issue noticed the incorrect behavior regarding the 'placeholder' attribute on input elements but incorrectly thought the behavior to be a bug with AngularJS:\r\nhttps://github.com/angular/angular.js/issues/15700\r\n\r\nI am able to reproduce the issue in the Plunkr created by @Narretz on the aforementioned issue:\r\nhttp://plnkr.co/edit/jDJv5NtwwDSsp9hRT2rf?p=preview\r\n\r\nAlso, here's an updated version of the Plunkr showing model value is not updating due to the 'disabled' attribute:\r\nhttp://plnkr.co/edit/AHix3x3dOzySygDOcfJA?p=preview\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocs mention the bug and suggest preventative measures.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n", "B_clean_body": ["set", "'disabl", "attribut", "element", "that", "ha", "descend", "element", "ha", "unexpect", "behavior", "internet", "explor", "11", "input", "element", "that", "are", "descend", "have", "text", "content", "'placehold", "attribut", "insert", "as", "valu", "it", "not", "remov", "when", "type", "field", "chang", "field", "are", "not", "reflect", "model", "valu", "select", "element", "that", "are", "descend", "are", "disabl", "avoid", "thi", "issu", "it", "import", "not", "set", "disabl", "or", "ng", "disabl", "element", "that", "ha", "descend", "form", "element", "normal", "these", "onli", "use", "actual", "form", "control", "so", "issu", "would", "not", "manifest", "issu", "also", "appear", "direct", "compon", "name", "'disabl", "or", "take", "attribut", "name", "'disabl", "as", "input", "output", "attribut", "so", "avoid", "these", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "not", "mention", "ie11", "bug", "regard", "disabl", "attribut", "element", "descend", "though", "it", "n't", "use", "non", "form", "control", "thi", "issu", "prop", "up", "when", "make", "custom", "element", "attribut", "previou", "issu", "notic", "incorrect", "behavior", "regard", "'placehold", "attribut", "input", "element", "but", "incorrectli", "thought", "behavior", "bug", "angularj", "angular", "js", "http", "github", "com", "angular", "angular", "js", "issu", "15700", "am", "abl", "reproduc", "issu", "plunkr", "creat", "by", "narretz", "aforement", "issu", "http", "plnkr", "co", "edit", "jdjv5ntwwdssp9hrt2rf", "jv5ntww", "ssp9h", "rt2rf", "p=preview", "also", "here", "'s", "updat", "version", "plunkr", "show", "model", "valu", "not", "updat", "due", "'disabl", "attribut", "http", "plnkr", "co", "edit", "ahix3x3dozysygdocfja", "hix3x3d", "ozi", "syg", "ocf", "ja", "p=preview", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "mention", "bug", "suggest", "prevent", "measur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.009251447814745949], "body_sim": [0.7135653560696276], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 407}, {"A_title": "fix(Angular.js): not serializing null values", "A_clean_title": ["fix", "angular", "js", "not", "serial", "null", "valu"], "B_title": "feat(input): add support for input[type=range]", "B_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "A_body": "toKeyValue should not serialize a value if that value is set as null. \n", "A_clean_body": ["tokeyvalu", "key", "valu", "not", "serial", "valu", "that", "valu", "set", "as", "null"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "title_sim": [0.060487470735841944], "body_sim": [0.0693784974265512], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.05192391494179824, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 825}, {"A_title": "feat: angularFilter.date: date filter can show day/mon string", "A_clean_title": ["feat", "angularfilt", "date", "angular", "filter", "date", "filter", "show", "day", "mon", "string"], "B_title": " \tdocs(ngRepeat): mention limitations of object iteration", "B_clean_title": ["doc", "ngrepeat", "ng", "repeat", "mention", "limit", "object", "iter"], "A_body": "  Support new date format, specifically day of week/Month of year in string\n  e.g. {{ someDate | data:\"EEE, MMM d, yyyy\" }} -> \"Wed, Jul 10, 2011\"\nCloses #396\n", "A_clean_body": ["support", "new", "date", "format", "specif", "day", "week", "month", "year", "string", "somed", "some", "date", "data", "eee", "mmm", "yyyi", "wed", "jul", "10", "2011", "close", "396"], "B_body": "Issue is tracked in issue Related #6266\n", "B_clean_body": ["issu", "track", "issu", "relat", "6266"], "title_sim": [0.024468455157878932], "body_sim": [-0.05550443232201428], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.05901093125436898, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1692}, {"A_title": "fix(scenario): make browser().location() working if ng-app on other than...", "A_clean_title": ["fix", "scenario", "make", "browser", "locat", "work", "ng", "app", "other", "than"], "B_title": "test(input): fix date type tests with max + timezone", "B_clean_title": ["test", "input", "fix", "date", "type", "test", "max", "timezon"], "A_body": "Make browser().location().\\* methods to work even if ng-app defined on other element than html.\n- pass $injector into action\n", "A_clean_body": ["make", "browser", "locat", "method", "work", "even", "ng", "app", "defin", "other", "element", "than", "html", "pass", "injector", "into", "action"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ntest update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.05553525992031722], "body_sim": [0.04618983585166389], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2187}, {"A_title": "docs(*): clarify module API and dependency injection rules", "A_clean_title": ["doc", "clarifi", "modul", "api", "depend", "inject", "rule"], "B_title": "docs(app): adds border", "B_clean_title": ["doc", "app", "add", "border"], "A_body": "Closes #16363\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["close", "16363", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Adds a border to the top of the h2 like the current docs app.\n", "B_clean_body": ["add", "border", "top", "h2", "like", "current", "doc", "app"], "title_sim": [0.20049169966859665], "body_sim": [0.16566484754757074], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1110}, {"A_title": "docs(jqlite): add known issue", "A_clean_title": ["doc", "jqlite", "add", "known", "issu"], "B_title": "test(modules): fix module tests which got disabled by ngMobile", "B_clean_title": ["test", "modul", "fix", "modul", "test", "which", "got", "disabl", "by", "ngmobil", "ng", "mobil"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "When ngMobile was merged in, we accidentaly included angular-scenario.js\nin the test file set for modules. Loading this file overrode jasmine's\n`it` and `describe` global functions which essentially disabled all of\n~200 unit tests for wrapped modules.\n\nThis change refactors the code to run the wrapped module tests.\n\nI had to extract browserTrigger from scenario runner in order to achieve\nthis without code duplication.\n", "B_clean_body": ["when", "ngmobil", "ng", "mobil", "wa", "merg", "we", "accidentali", "includ", "angular", "scenario", "js", "test", "file", "set", "modul", "load", "thi", "file", "overrod", "jasmine'", "it", "describ", "global", "function", "which", "essenti", "disabl", "all", "~200", "unit", "test", "wrap", "modul", "thi", "chang", "refactor", "code", "run", "wrap", "modul", "test", "had", "extract", "browsertrigg", "browser", "trigger", "scenario", "runner", "order", "achiev", "thi", "without", "code", "duplic"], "title_sim": [0.05929033138952522], "body_sim": [0.14892569693345353], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.1477444107311291, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1083}, {"A_title": "docs(app): fixes material build", "A_clean_title": ["doc", "app", "fix", "materi", "build"], "B_title": "feat(ngTouch): add optional `ngSwipeDisableMouse` attribute to `ngSwipe`...", "B_clean_title": ["feat", "ngtouch", "ng", "touch", "add", "option", "ngswipedisablemous", "ng", "swipe", "disabl", "mous", "attribut", "ngswipe", "ng", "swipe"], "A_body": "The theme css files were reorganized at some point in Angular Material 0.7.x and the build is now failing because the files are missing. The styles on the site do not work correctly now with 0.7.x because the css is missing. This change will keep us on 0.6.x until we can update the theme issue.\n", "A_clean_body": ["theme", "css", "file", "were", "reorgan", "at", "some", "point", "angular", "materi", "build", "now", "fail", "becaus", "file", "are", "miss", "style", "site", "not", "work", "correctli", "now", "becaus", "css", "miss", "thi", "chang", "will", "keep", "us", "until", "we", "updat", "theme", "issu"], "B_body": "... directives to ignore mouse events.\n\nThis attribute is useful for text that should still be selectable\nby the mouse and not trigger the swipe action.\n\nThis also adds an optional third argument to `$swipe.bind` to define\nthe pointer types that should be listened to.\n\nAdapted version of #6627.\n\nCloses #6627\nFixes #6626\n", "B_clean_body": ["direct", "ignor", "mous", "event", "thi", "attribut", "use", "text", "that", "still", "select", "by", "mous", "not", "trigger", "swipe", "action", "thi", "also", "add", "option", "third", "argument", "swipe", "bind", "defin", "pointer", "type", "that", "listen", "adapt", "version", "6627", "close", "6627", "fix", "6626"], "title_sim": [0.006071303255463087], "body_sim": [0.1720439901427109], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 247}, {"A_title": "docs(*): don't hide results for middle-clicks", "A_clean_title": ["doc", "n't", "hide", "result", "middl", "click"], "B_title": "refactor($compile): remove unused `return` statement", "B_clean_title": ["refactor", "compil", "remov", "unus", "return", "statement"], "A_body": "Middle-clicking opens a link in a new tab; it shouldn't close the results list\r\nas the user may want to open more of those links.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nMiddle-clicking on a link in the results list (which opens a link in a new tab) closes the list.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nList is kept open in such a case.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["middl", "click", "open", "link", "new", "tab", "it", "n't", "close", "result", "list", "as", "user", "may", "want", "open", "more", "those", "link", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "middl", "click", "link", "result", "list", "which", "open", "link", "new", "tab", "close", "list", "**what", "new", "behavior", "thi", "featur", "chang", "list", "kept", "open", "such", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "As discussed in https://github.com/angular/angular.js/commit/89447b3f2b4c6db62c24473a81fedc3b04242b85#commitcomment-10280666.\n", "B_clean_body": ["as", "discuss", "http", "github", "com", "angular", "angular", "js", "commit", "89447b3f2b4c6db62c24473a81fedc3b04242b85", "commitcom", "10280666"], "title_sim": [-0.03130311462357419], "body_sim": [0.30467781850967635], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 908}, {"A_title": "[[TRAVIS POKE]] fix($location): allow numeric location setter arguments", "A_clean_title": ["travi", "poke", "fix", "locat", "allow", "numer", "locat", "setter", "argument"], "B_title": "refactor($parse): remove unnecessary .constant if when collecting inputs", "B_clean_title": ["refactor", "pars", "remov", "unnecessari", "constant", "when", "collect", "input"], "A_body": "Dupe of #7161, with some amendments\n", "A_clean_body": ["dupe", "7161", "some", "amend"], "B_body": "The `if`s are unnecessary because the calculation of `ast.toWatch` should have taken constants into account already.", "B_clean_body": ["are", "unnecessari", "becaus", "calcul", "ast", "towatch", "watch", "have", "taken", "constant", "into", "account", "alreadi"], "title_sim": [0.0534658921339238], "body_sim": [-0.01823362913804302], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1047}, {"A_title": "chore(travis): speed up the build", "A_clean_title": ["chore", "travi", "speed", "up", "build"], "B_title": "docs(ngShow/ngHide): add note about flicker when toggling elements", "B_clean_title": ["doc", "ngshow", "nghide", "ng", "show", "ng", "hide", "add", "note", "about", "flicker", "when", "toggl", "element"], "A_body": "Just wanna see the travis build...\n- parallelize the tasks\n- cache requests (e2e tests)\n\nThis reduces the time from ~18min to ~12min.\n\nIt makes the output little messy. We could buffer output of each task and display it once it's fully finished, nicely. I think giving instant feedback is better.\n\nConflicts:\n    Gruntfile.js\n    package.json\n", "A_clean_body": ["just", "wan", "na", "see", "travi", "build", "parallel", "task", "cach", "request", "e2e", "test", "thi", "reduc", "time", "~18min", "~12min", "it", "make", "output", "littl", "messi", "we", "could", "buffer", "output", "each", "task", "display", "it", "onc", "it", "'s", "fulli", "finish", "nice", "think", "give", "instant", "feedback", "better", "conflict", "gruntfil", "js", "packag", "json"], "B_body": "Related to https://github.com/angular/angular.js/issues/14015\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["relat", "http", "github", "com", "angular", "angular", "js", "issu", "14015", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.03621378935799325], "body_sim": [0.11771274823159987], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.003114930774194498, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1715}, {"A_title": "[Docs] Add links to Atom and Vim packages for angularjs development", "A_clean_title": ["doc", "add", "link", "atom", "vim", "packag", "angularj", "develop"], "B_title": "docs(guide/Internet Explorer Compatibility): Include warnings for usage of 'disabled' attribute", "B_clean_title": ["doc", "guid", "internet", "explor", "compat", "includ", "warn", "usag", "'disabl", "attribut"], "A_body": "**Docs update**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere was only links to packages for editors Webstorm, Sublime Text and Visual Studio\n\n**What is the new behavior (if this is a feature change)?**\n\nAdditionally there are links to Atom and Vim packages\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nAdd links to packages for Atom and Vim editors under editor support\nsubsection under tools section\n", "A_clean_body": ["**doc", "update**", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "onli", "link", "packag", "editor", "webstorm", "sublim", "text", "visual", "studio", "**what", "new", "behavior", "thi", "featur", "chang", "addit", "there", "are", "link", "atom", "vim", "packag", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "link", "packag", "atom", "vim", "editor", "under", "editor", "support", "subsect", "under", "tool", "section"], "B_body": "Setting the 'disabled' attribute on an element that has descendant elements has unexpected behavior in Internet Explorer 11.\r\n\r\n* Input elements that are descendants have the text content of the 'placeholder' attribute inserted as the value (and it is not removed when typing in the field). Changes to the field are not reflected in the model value.\r\n* Select elements that are descendants are disabled.\r\n\r\nTo avoid this issue, it is important to not set `disabled` or `ng-disabled` on an element that has descendant form elements. Normally these should only be used on actual form controls so the issue would not manifest.\r\n\r\nThe issue can also appear if a directive/component is named 'disabled' or takes an attribute named 'disabled' as an input/output attribute, so avoid these.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs do not mention IE11 bug regarding the disabled attribute on elements with descendants (though it shouldn't be used on non-form controls, this issue can prop up when making custom elements/attributes).\r\n\r\nA previous issue noticed the incorrect behavior regarding the 'placeholder' attribute on input elements but incorrectly thought the behavior to be a bug with AngularJS:\r\nhttps://github.com/angular/angular.js/issues/15700\r\n\r\nI am able to reproduce the issue in the Plunkr created by @Narretz on the aforementioned issue:\r\nhttp://plnkr.co/edit/jDJv5NtwwDSsp9hRT2rf?p=preview\r\n\r\nAlso, here's an updated version of the Plunkr showing model value is not updating due to the 'disabled' attribute:\r\nhttp://plnkr.co/edit/AHix3x3dOzySygDOcfJA?p=preview\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocs mention the bug and suggest preventative measures.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n", "B_clean_body": ["set", "'disabl", "attribut", "element", "that", "ha", "descend", "element", "ha", "unexpect", "behavior", "internet", "explor", "11", "input", "element", "that", "are", "descend", "have", "text", "content", "'placehold", "attribut", "insert", "as", "valu", "it", "not", "remov", "when", "type", "field", "chang", "field", "are", "not", "reflect", "model", "valu", "select", "element", "that", "are", "descend", "are", "disabl", "avoid", "thi", "issu", "it", "import", "not", "set", "disabl", "or", "ng", "disabl", "element", "that", "ha", "descend", "form", "element", "normal", "these", "onli", "use", "actual", "form", "control", "so", "issu", "would", "not", "manifest", "issu", "also", "appear", "direct", "compon", "name", "'disabl", "or", "take", "attribut", "name", "'disabl", "as", "input", "output", "attribut", "so", "avoid", "these", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "not", "mention", "ie11", "bug", "regard", "disabl", "attribut", "element", "descend", "though", "it", "n't", "use", "non", "form", "control", "thi", "issu", "prop", "up", "when", "make", "custom", "element", "attribut", "previou", "issu", "notic", "incorrect", "behavior", "regard", "'placehold", "attribut", "input", "element", "but", "incorrectli", "thought", "behavior", "bug", "angularj", "angular", "js", "http", "github", "com", "angular", "angular", "js", "issu", "15700", "am", "abl", "reproduc", "issu", "plunkr", "creat", "by", "narretz", "aforement", "issu", "http", "plnkr", "co", "edit", "jdjv5ntwwdssp9hrt2rf", "jv5ntww", "ssp9h", "rt2rf", "p=preview", "also", "here", "'s", "updat", "version", "plunkr", "show", "model", "valu", "not", "updat", "due", "'disabl", "attribut", "http", "plnkr", "co", "edit", "ahix3x3dozysygdocfja", "hix3x3d", "ozi", "syg", "ocf", "ja", "p=preview", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "mention", "bug", "suggest", "prevent", "measur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.06570325416139394], "body_sim": [0.7082782456248866], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 585}, {"A_title": "fix($compile): correctly handle `null`/`undefined` href `attrs.$set()`", "A_clean_title": ["fix", "compil", "correctli", "handl", "null", "undefin", "href", "attr", "set"], "B_title": "fix($sniffer): report history false on Android < 4", "B_clean_title": ["fix", "sniffer", "report", "histori", "fals", "android"], "A_body": "Accidentally broken while backporting #14890.\r\n\r\nSince #14890, `$$sanitizeUri()` can no longer handle `null`/`undefined` values.\r\nIn 1.7.x, there are no such calls.\r\nIn 1.6.x, there is still one such calls inside `Attributes.$set()`, so it needs to be adjusted accordingly.", "A_clean_body": ["accident", "broken", "while", "backport", "14890", "sinc", "14890", "sanitizeuri", "sanit", "uri", "no", "longer", "handl", "null", "undefin", "valu", "there", "are", "no", "such", "call", "there", "still", "one", "such", "call", "insid", "attribut", "set", "so", "it", "need", "adjust", "accordingli"], "B_body": "Android has history.pushState, but it does not update the location correctly:\nhttp://code.google.com/p/android/issues/detail?id=17471\n\nCloses #904\n", "B_clean_body": ["android", "ha", "histori", "pushstat", "push", "state", "but", "it", "not", "updat", "locat", "correctli", "http", "googl", "code", "com", "android", "issu", "detail", "id=17471", "close", "904"], "title_sim": [-0.024554315464522237], "body_sim": [0.09028648363253784], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2151}, {"A_title": "docs(linky): mark \"target\" param as optional in linky filter", "A_clean_title": ["doc", "linki", "mark", "target", "param", "as", "option", "linki", "filter"], "B_title": "docs($compile): add more info about optional bindings", "B_clean_title": ["doc", "compil", "add", "more", "info", "about", "option", "bind"], "A_body": "This argument is optional in practice, and it is not provided in many of the examples in the documentation.\r\nIts optional presence is handled here:\r\nhttps://github.com/angular/angular.js/blob/master/src/ngSanitize/filter/linky.js#L185.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe second argument to ngSanitize's \"linky\" filter is marked as non-optional, it is handled as optional and usage shows it as being optional.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nngSanitize's \"linky\" filter has it's second parameter marked as optional.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "argument", "option", "practic", "it", "not", "provid", "mani", "exampl", "document", "it", "option", "presenc", "handl", "here", "http", "js", "github", "com", "angular", "angular", "js", "blob", "master", "src", "ngsanit", "filter", "linki", "ng", "sanit", "l185", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "second", "argument", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "mark", "as", "non", "option", "it", "handl", "as", "option", "usag", "show", "it", "as", "be", "option", "**what", "new", "behavior", "thi", "featur", "chang", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "ha", "it", "'s", "second", "paramet", "mark", "as", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This also deletes the incorrect info that a missing attribute\r\nin a non-optional binding will throw.\r\n\r\nCloses #15989\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nmissing / incorrect info\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\ninfo!\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n101% not\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "also", "delet", "incorrect", "info", "that", "miss", "attribut", "non", "option", "bind", "will", "throw", "close", "15989", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "miss", "incorrect", "info", "**what", "new", "behavior", "thi", "featur", "chang", "info", "**doe", "thi", "pr", "introduc", "break", "chang", "101", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.21114242313537152], "body_sim": [0.7759641664920155], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 167}, {"A_title": "[Style] Docs gulpfile.js - Spacing Consistency", "A_clean_title": ["style", "doc", "gulpfil", "js", "space", "consist"], "B_title": "Update directive.ngdoc", "B_clean_title": ["updat", "direct", "ngdoc"], "A_body": "Updated gulpfile.js in Docs so that spacing is consistency.\n", "A_clean_body": ["updat", "gulpfil", "js", "doc", "so", "that", "space", "consist"], "B_body": "ngRoute is not a part of ng core anymore.\n", "B_clean_body": ["ngrout", "ng", "rout", "not", "part", "ng", "core", "anymor"], "title_sim": [0.09047814703767632], "body_sim": [0.004698436181285849], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 357}, {"A_title": "docs(misc/FAQ): Correcting Misspell", "A_clean_title": ["doc", "misc", "faq", "correct", "misspel"], "B_title": "Fix $browser.xhr (JSONP)", "B_clean_title": ["fix", "browser", "xhr", "jsonp"], "A_body": "The HTML brackets are still just 'Angular' :-)\r\n\r\nFixing over-correction made in [this PR](https://github.com/angular/angular.js/commit/03043839d5a540b02208001fe12e812dfde00a8e)", "A_clean_body": ["html", "bracket", "are", "still", "just", "'angular", "fix", "over", "correct", "made", "thi", "pr", "http", "github", "com", "angular", "angular", "js", "commit", "03043839d5a540b02208001fe12e812dfde00a8"], "B_body": "Creating &lt;script&gt; tags would require a lot of extra work if we want all browsers\nto load and execute these scripts. We decided to not implement that in jqLite.\n\nSee #369 for more information.\n\nCloses #369\n", "B_clean_body": ["creat", "lt", "script", "gt", "tag", "would", "requir", "lot", "extra", "work", "we", "want", "all", "browser", "load", "execut", "these", "script", "we", "decid", "not", "implement", "that", "jqlite", "jq", "lite", "see", "369", "more", "inform", "close", "369"], "title_sim": [0.05913199008242753], "body_sim": [0.2002895025661257], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2190}, {"A_title": "Align jqLite's attr method with jQuery", "A_clean_title": ["align", "jqlite", "jq", "lite", "'s", "attr", "method", "jqueri", "queri"], "B_title": "docs(guide/External Resources): Remove stale resources", "B_clean_title": ["doc", "guid", "extern", "resourc", "remov", "stale", "resourc"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRefactors & breaking API changes.\n\n**What is the current behavior? (You can also link to an open issue here)**\nBoolean attribute getters take properties into account and setters modify them. All falsy values for boolean attribute setters remove the attribute and set the property to false. The `null` value in a setter (for all attributes, not only boolean ones) sets the attribute value to the string `\"null\"` instead of removing it.\n\n**What is the new behavior (if this is a feature change)?**\nBoolean attribute getters/setters don't touch properties. The `null` value in a setter (for all attributes, not only boolean ones) removes the attribute. The `false` value removes it only for boolean attributes. Other defined values for boolean attributes set the value to the lowercased attribute name.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~ - only in a form of commit messages with their `BREAKING CHANGES` sections; is anything else needed?\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "break", "api", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "boolean", "attribut", "getter", "take", "properti", "into", "account", "setter", "modifi", "them", "all", "falsi", "valu", "boolean", "attribut", "setter", "remov", "attribut", "set", "properti", "fals", "null", "valu", "setter", "all", "attribut", "not", "onli", "boolean", "one", "set", "attribut", "valu", "string", "null", "instead", "remov", "it", "**what", "new", "behavior", "thi", "featur", "chang", "boolean", "attribut", "getter", "setter", "n't", "touch", "properti", "null", "valu", "setter", "all", "attribut", "not", "onli", "boolean", "one", "remov", "attribut", "fals", "valu", "remov", "it", "onli", "boolean", "attribut", "other", "defin", "valu", "boolean", "attribut", "set", "valu", "lowercas", "attribut", "name", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "onli", "form", "commit", "messag", "their", "break", "chang", "section", "anyth", "need", "**other", "information**"], "B_body": "Small docs fix:\n\nThis commit removes two resources (Firebase Foundations and Angular Course) that I authored but no longer maintain.\n", "B_clean_body": ["small", "doc", "fix", "thi", "commit", "remov", "two", "resourc", "firebas", "foundat", "angular", "cours", "that", "author", "but", "no", "longer", "maintain"], "title_sim": [-0.013236150053642363], "body_sim": [0.34665002930004346], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 53}, {"A_title": "revert: \"fix($compile): do not write @-bound properties if attribute \u2026", "A_clean_title": ["revert", "fix", "compil", "not", "write", "bound", "properti", "attribut"], "B_title": "fix(): fix scoping for transclusion directives inside replace directive", "B_clean_title": ["fix", "fix", "scope", "transclus", "direct", "insid", "replac", "direct"], "A_body": "\u2026is not present\"\n\nThis reverts commit 8a1eb1625c080445ce1e519762e1f2d4fd842b72.\n\nThis commit broke the tabs component on the material project,\nwhich caused internal breakages. Will open a separate issue to\nlook into the issue.\n", "A_clean_body": ["\u2026i", "not", "present", "thi", "revert", "commit", "8a1eb1625c080445ce1e519762e1f2d4fd842b72", "thi", "commit", "broke", "tab", "compon", "materi", "project", "which", "caus", "intern", "breakag", "will", "open", "separ", "issu", "look", "into", "issu"], "B_body": "Tweaks to the implementation of #12975\n\nCloses #12975\nCloses #12936 \n", "B_clean_body": ["tweak", "implement", "12975", "close", "12975", "close", "12936"], "title_sim": [0.28420502846362006], "body_sim": [-0.01786618564177656], "file_list_sim": 1.0, "overlap_files_len": 2, "code_sim": [0.04375793108472951, 0.04375793108472951], "location_sim": [0.5581818181818182, 0.5581818181818182], "pattern": 0, "time": 125}, {"A_title": "chore(*): add a Git .mailmap with my new name", "A_clean_title": ["chore", "add", "git", "mailmap", "my", "new", "name"], "B_title": "docs($resourceProvider): Correct JS syntax error", "B_clean_title": ["doc", "resourceprovid", "resourc", "provid", "correct", "js", "syntax", "error"], "A_body": "In this way my past contributions are mapped correctly.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nGit thinks I'm 2 people.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nI'm one person again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\nOutput of `git shortlog -nse | head -25` after this PR (I see we could use more `.mailmap` entries, there are lots of duplicates):\r\n```\r\n   931\tIgor Minar <igor@angularjs.org>\r\n   692\tMisko Hevery <misko@hevery.com>\r\n   677\tPeter Bacon Darwin <pete@bacondarwin.com>\r\n   503\tIgor Minar <iiminar@gmail.com>\r\n   364\tVojta Jina <vojta.jina@gmail.com>\r\n   364\tMatias Niemel\u00e4 <matias@yearofmoo.com>\r\n   259\tMartin Staffa <mjstaffa@googlemail.com>\r\n   196\tCaitlin Potter <caitpotter88@gmail.com>\r\n   192\tBrian Ford <btford@umich.edu>\r\n   169\tGeorgios Kalpakas <g.kalpakas@hotmail.com>\r\n   140\tGeorgios Kalpakas <kalpakas.g@gmail.com>\r\n   127\tPete Bacon Darwin <pete@bacondarwin.com>\r\n   108\tJason Bedard <jason+github@jbedard.ca>\r\n   108\tMartin Staffa <mjstaffa@gmail.com>\r\n    99\tTobias Bosch <tbosch1009@gmail.com>\r\n    94\tMicha\u0142 Go\u0142e\u0328biowski <m.goleb@gmail.com>\r\n    71\tLucas Galfaso <lgalfaso@gmail.com>\r\n    70\tShahar Talmi <shahar.talmi@gmail.com>\r\n    65\tJeff Cross <middlefloor@gmail.com>\r\n    52\tChirayu Krishnappa <chirayu@chirayuk.com>\r\n    50\trodyhaddad <rody@rodyhaddad.com>\r\n    47\tPawel Kozlowski <pkozlowski.opensource@gmail.com>\r\n    45\tDi Peng <pengdi@google.com>\r\n    43\tVojta Jina <vojta@gemin-i.org>\r\n    41\tLucas Mirelmann <lgalfaso@gmail.com>\r\n```", "A_clean_body": ["thi", "way", "my", "past", "contribut", "are", "map", "correctli", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "git", "think", "'m", "peopl", "**what", "new", "behavior", "thi", "featur", "chang", "'m", "one", "person", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "output", "git", "shortlog", "nse", "head", "25", "after", "thi", "pr", "see", "we", "could", "use", "more", "mailmap", "entri", "there", "are", "lot", "duplic", "931", "igor", "minar", "igor", "angularj", "org", "692", "misko", "heveri", "misko", "heveri", "com", "677", "peter", "bacon", "darwin", "pete", "bacondarwin", "com", "503", "igor", "minar", "iiminar", "gmail", "com", "364", "vojta", "jina", "vojta", "jina", "gmail", "com", "364", "matia", "niemel\u00e4", "matia", "yearofmoo", "com", "259", "martin", "staffa", "mjstaffa", "googlemail", "com", "196", "caitlin", "potter", "caitpotter88", "gmail", "com", "192", "brian", "ford", "btford", "umich", "edu", "169", "georgio", "kalpaka", "kalpaka", "hotmail", "com", "140", "georgio", "kalpaka", "kalpaka", "gmail", "com", "127", "pete", "bacon", "darwin", "pete", "bacondarwin", "com", "108", "jason", "bedard", "jason+github", "jbedard", "ca", "108", "martin", "staffa", "mjstaffa", "gmail", "com", "99", "tobia", "bosch", "tbosch1009", "gmail", "com", "94", "micha\u0142", "go\u0142e\u0328biowski", "goleb", "gmail", "com", "71", "luca", "galfaso", "lgalfaso", "gmail", "com", "70", "shahar", "talmi", "shahar", "talmi", "gmail", "com", "65", "jeff", "cross", "middlefloor", "gmail", "com", "52", "chirayu", "krishnappa", "chirayu", "chirayuk", "com", "50", "rodyhaddad", "rodi", "rodyhaddad", "com", "47", "pawel", "kozlowski", "pkozlowski", "opensourc", "gmail", "com", "45", "di", "peng", "pengdi", "googl", "com", "43", "vojta", "jina", "vojta", "gemin", "org", "41", "luca", "mirelmann", "lgalfaso", "gmail", "com"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nExample code has a syntax error\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nExample code no longer has a syntax error\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "code", "ha", "syntax", "error", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "code", "no", "longer", "ha", "syntax", "error", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.041586961051672096], "body_sim": [0.8569615582865525], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 334}, {"A_title": "chore(travis): move docse2e tests into the unit tests vm", "A_clean_title": ["chore", "travi", "move", "docse2", "test", "into", "unit", "test", "vm"], "B_title": "docs($sanitizeProvider): fix param comment for enableSvg", "B_clean_title": ["doc", "sanitizeprovid", "sanit", "provid", "fix", "param", "comment", "enablesvg", "enabl", "svg"], "A_body": "we spend more time making getting the build ready than running the docs e2e tests.\n\nby piggy-backing on unit tests we'll finish the build faster\n", "A_clean_body": ["we", "spend", "more", "time", "make", "get", "build", "readi", "than", "run", "doc", "e2e", "test", "by", "piggi", "back", "unit", "test", "we", "'ll", "finish", "build", "faster"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe param is listed as type boolean, but has an erroneous comment describing it as a regex. (Maybe from a much earlier version of Angular?)\n\n**What is the new behavior (if this is a feature change)?**\n\nNo behavior change. Fixes the doc comment.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nI submitted a pull request for this previously, but the commit had the wrong email address so it didn't catch my CLA, so I'm resubmitting now.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "param", "list", "as", "type", "boolean", "but", "ha", "erron", "comment", "describ", "it", "as", "regex", "mayb", "much", "earlier", "version", "angular", "**what", "new", "behavior", "thi", "featur", "chang", "no", "behavior", "chang", "fix", "doc", "comment", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "submit", "pull", "request", "thi", "previous", "but", "commit", "had", "wrong", "email", "address", "so", "it", "did", "n't", "catch", "my", "cla", "so", "'m", "resubmit", "now"], "title_sim": [0.06576519244199833], "body_sim": [0.1597085938341665], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 609}, {"A_title": "docs(guide/Forms): add labels to forms", "A_clean_title": ["doc", "guid", "form", "add", "label", "form"], "B_title": "fix(orderBy): ensure correct ordering with arrays of objects and no predicate", "B_clean_title": ["fix", "orderbi", "order", "by", "ensur", "correct", "order", "array", "object", "no", "predic"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nno label tags in the inputs\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nnot a feature\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nI can add label tags to the other input fields in the docs.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "label", "tag", "input", "**what", "new", "behavior", "thi", "featur", "chang", "not", "featur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "label", "tag", "other", "input", "field", "doc"], "B_body": "This fix also considerably refactors how the `orderBy` filter works in internally.\n\nThe new algorithm precomputes the predicate values for the array being ordered. This makes the algorith easier to follow but also ensures that this computation is done a maximum of n times, whereas in the previous algorithm it could be greater. The downside is that we must temporarily store this intermediate array.\n\nThere could be performance implications, but they are as likely to be beneficial as detrimental. It could probably do with benchmarking.\n\nCloses #11866\n", "B_clean_body": ["thi", "fix", "also", "consider", "refactor", "how", "orderbi", "order", "by", "filter", "work", "intern", "new", "algorithm", "precomput", "predic", "valu", "array", "be", "order", "thi", "make", "algorith", "easier", "follow", "but", "also", "ensur", "that", "thi", "comput", "done", "maximum", "time", "wherea", "previou", "algorithm", "it", "could", "greater", "downsid", "that", "we", "must", "temporarili", "store", "thi", "intermedi", "array", "there", "could", "perform", "implic", "but", "they", "are", "as", "like", "benefici", "as", "detriment", "it", "could", "probabl", "benchmark", "close", "11866"], "title_sim": [-0.005693586447369879], "body_sim": [0.17798400031839476], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 525}, {"A_title": "docs($location): fix examples", "A_clean_title": ["doc", "locat", "fix", "exampl"], "B_title": "fix(ngMessage): make ngMessage work with ngBind", "B_clean_title": ["fix", "ngmessag", "ng", "messag", "make", "ngmessag", "ng", "messag", "work", "ngbind", "ng", "bind"], "A_body": "The examples contained tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixed a HTML5 browser scenarion with a non-HTML5\r\none.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe examples contains tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixes a HTML5 browser scenario with a non-HTML5\r\none.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenarion", "non", "html5", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenario", "non", "html5", "one", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Fixes #8089 \n\n(I'm not actually sure why this works tbh)\n", "B_clean_body": ["fix", "8089", "'m", "not", "actual", "sure", "whi", "thi", "work", "tbh"], "title_sim": [0.2061173850133854], "body_sim": [0.13059272586293383], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 477}, {"A_title": "feat(ngModel): bind to getters/setters", "A_clean_title": ["feat", "ngmodel", "ng", "model", "bind", "getter", "setter"], "B_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "B_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "A_body": "Currently, you might do this if you want to bind to getters/setters:\n\n> controller\n\n``` javascript\n// ...\n$scope.watch(function () {\n  return myModel.getterSetter();\n}, function (newValue) {\n  $scope.someProp = newValue;\n});\n\n$scope.watch('someProp', function (newValue) {\n  myModel.getterSetter(newValue);\n});\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"someProp\">\n```\n\nThe implementation in this PR changes the semantics of `ngModel` in the following ways:\n\nIf the expression bound to `ngModel` resolves to a function, the function is invoked to get the current value to be expressed in the DOM. When the binding changes, if the expression bound to `ngModel` resolves to a function (at that time) the function is invoked with the new value.\n\nThis means instead, you could do this:\n\n> controller\n\n``` javascript\n// ...\n$scope.myModel = myModel;\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"myModel.getterSetter\">\n```\n\nI like that to end developers, this feels like \"uniform access\" for common cases. I don't like that this means there's a difference in semantics between `ngModel` and expressions elsewhere in Angular.\n\nThis would be a breaking change, but I don't think that this would affect any legitimate use cases. The only case I can think of is if hypothetically, you bind to some property that's originally a function, overwriting it with a string. I can't think of any good reason to write controller code like that.\n\n@IgorMinar suggested a different syntax so that the difference in semantics is obvious. Something like:\n\n``` html\n<input ng-model=\"myModel.getterSetter()\">\n```\n\nI like that this makes the semantics obvious. I don't like that this still violates the \"uniform access principle.\"\n\nCloses #768\n", "A_clean_body": ["current", "you", "might", "thi", "you", "want", "bind", "getter", "setter", "control", "javascript", "scope", "watch", "function", "return", "mymodel", "gettersett", "my", "model", "getter", "setter", "function", "newvalu", "new", "valu", "scope", "someprop", "some", "prop", "newvalu", "new", "valu", "scope", "watch", "'someprop", "'some", "prop", "function", "newvalu", "new", "valu", "mymodel", "gettersett", "my", "model", "getter", "setter", "newvalu", "new", "valu", "templat", "html", "input", "ng", "model=", "someprop", "some", "prop", "implement", "thi", "pr", "chang", "semant", "ngmodel", "ng", "model", "follow", "way", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "function", "invok", "get", "current", "valu", "express", "dom", "when", "bind", "chang", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "at", "that", "time", "function", "invok", "new", "valu", "thi", "mean", "instead", "you", "could", "thi", "control", "javascript", "scope", "mymodel", "my", "model", "mymodel", "my", "model", "templat", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "end", "develop", "thi", "feel", "like", "uniform", "access", "common", "case", "n't", "like", "that", "thi", "mean", "there", "'s", "differ", "semant", "between", "ngmodel", "ng", "model", "express", "elsewher", "angular", "thi", "would", "break", "chang", "but", "n't", "think", "that", "thi", "would", "affect", "ani", "legitim", "use", "case", "onli", "case", "think", "hypothet", "you", "bind", "some", "properti", "that", "'s", "origin", "function", "overwrit", "it", "string", "ca", "n't", "think", "ani", "good", "reason", "write", "control", "code", "like", "that", "igorminar", "igor", "minar", "suggest", "differ", "syntax", "so", "that", "differ", "semant", "obviou", "someth", "like", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "thi", "make", "semant", "obviou", "n't", "like", "that", "thi", "still", "violat", "uniform", "access", "principl", "close", "768"], "B_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "B_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "title_sim": [0.09933642531668696], "body_sim": [0.24434824239316297], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 127}, {"A_title": "docs(*): clarify module API and dependency injection rules", "A_clean_title": ["doc", "clarifi", "modul", "api", "depend", "inject", "rule"], "B_title": "chore(*): normalize Vojta's email in .mailmap correctly", "B_clean_title": ["chore", "normal", "vojta", "'s", "email", "mailmap", "correctli"], "A_body": "Closes #16363\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["close", "16363", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nVojta's mails are not normalized.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThey are normalized.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "vojta", "'s", "mail", "are", "not", "normal", "**what", "new", "behavior", "thi", "featur", "chang", "they", "are", "normal", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**"], "title_sim": [0.02760586320759557], "body_sim": [0.9206945296588059], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 47}, {"A_title": "build(*): update Node from 6 to 8, update Yarn", "A_clean_title": ["build", "updat", "node", "updat", "yarn"], "B_title": "refactor($interpolate): remove unnecessary else", "B_clean_title": ["refactor", "interpol", "remov", "unnecessari"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBuild-related.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nWe use Node 6 & an old Yarn version.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nWe use Node 8 & a new Yarn version.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\nAngular (2+) switched to Node 8 and so should we.\r\n\r\nRef angular/angular#20807\r\nRef angular/angular#20832\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "build", "relat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "use", "node", "old", "yarn", "version", "**what", "new", "behavior", "thi", "featur", "chang", "we", "use", "node", "new", "yarn", "version", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**", "angular", "2+", "switch", "node", "so", "we", "ref", "angular", "angular", "20807", "ref", "angular", "angular", "20832"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nCleaner code.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "cleaner", "code", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.038262997998180344], "body_sim": [0.8299537574417046], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 336}, {"A_title": "docs/chore(version stuff): fix how versions are handled in builds and docs", "A_clean_title": ["doc", "chore", "version", "stuff", "fix", "how", "version", "are", "handl", "build", "doc"], "B_title": "fix($parse): always re-evaluate filters within literals when an input is an object", "B_clean_title": ["fix", "pars", "alway", "re", "evalu", "filter", "within", "liter", "when", "input", "object"], "A_body": "There are three somewhat independent commits.\n- The first is a simple bug fix in the docs\n- The second updates how the versions are managed in the docs\n- The third does the same for the build\n", "A_clean_body": ["there", "are", "three", "somewhat", "independ", "commit", "first", "simpl", "bug", "fix", "doc", "second", "updat", "how", "version", "are", "manag", "doc", "third", "same", "build"], "B_body": "Fixes #15964 \r\n\r\nThis changes the [compareObjectIdentity](https://github.com/angular/angular.js/blob/v1.6.4/src/ng/parse.js#L1785) flag from being per-expression to per-input.  This allows inputs to filters to not compare object entity, but other inputs such as `- x` or `{x: x}` to only compare object entity.  This also expands this `compareObjectIdentity = true` beyond just object literals.", "B_clean_body": ["fix", "15964", "thi", "chang", "compareobjectident", "compar", "object", "ident", "http", "js", "github", "com", "angular", "angular", "js", "blob", "v1", "src", "ng", "pars", "l1785", "flag", "be", "per", "express", "per", "input", "thi", "allow", "input", "filter", "not", "compar", "object", "entiti", "but", "other", "input", "such", "as", "or", "onli", "compar", "object", "entiti", "thi", "also", "expand", "thi", "compareobjectident", "compar", "object", "ident", "true", "beyond", "just", "object", "liter"], "title_sim": [0.08252225055587976], "body_sim": [0.17939880742473965], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.036715342213075076, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1162}, {"A_title": "only use window.jQuery if it supports required jQuery.fn.on", "A_clean_title": ["onli", "use", "window", "jqueri", "queri", "it", "support", "requir", "jqueri", "fn", "queri"], "B_title": "docs(guide/Internet Explorer Compatibility): Include warnings for usage of 'disabled' attribute", "B_clean_title": ["doc", "guid", "internet", "explor", "compat", "includ", "warn", "usag", "'disabl", "attribut"], "A_body": "This is a safe and simple fix to the legacy jQuery situation referenced in #2163 until the API in issue #608 is refined and implemented.\n", "A_clean_body": ["thi", "safe", "simpl", "fix", "legaci", "jqueri", "queri", "situat", "referenc", "2163", "until", "api", "issu", "608", "refin", "implement"], "B_body": "Setting the 'disabled' attribute on an element that has descendant elements has unexpected behavior in Internet Explorer 11.\r\n\r\n* Input elements that are descendants have the text content of the 'placeholder' attribute inserted as the value (and it is not removed when typing in the field). Changes to the field are not reflected in the model value.\r\n* Select elements that are descendants are disabled.\r\n\r\nTo avoid this issue, it is important to not set `disabled` or `ng-disabled` on an element that has descendant form elements. Normally these should only be used on actual form controls so the issue would not manifest.\r\n\r\nThe issue can also appear if a directive/component is named 'disabled' or takes an attribute named 'disabled' as an input/output attribute, so avoid these.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs do not mention IE11 bug regarding the disabled attribute on elements with descendants (though it shouldn't be used on non-form controls, this issue can prop up when making custom elements/attributes).\r\n\r\nA previous issue noticed the incorrect behavior regarding the 'placeholder' attribute on input elements but incorrectly thought the behavior to be a bug with AngularJS:\r\nhttps://github.com/angular/angular.js/issues/15700\r\n\r\nI am able to reproduce the issue in the Plunkr created by @Narretz on the aforementioned issue:\r\nhttp://plnkr.co/edit/jDJv5NtwwDSsp9hRT2rf?p=preview\r\n\r\nAlso, here's an updated version of the Plunkr showing model value is not updating due to the 'disabled' attribute:\r\nhttp://plnkr.co/edit/AHix3x3dOzySygDOcfJA?p=preview\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocs mention the bug and suggest preventative measures.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n", "B_clean_body": ["set", "'disabl", "attribut", "element", "that", "ha", "descend", "element", "ha", "unexpect", "behavior", "internet", "explor", "11", "input", "element", "that", "are", "descend", "have", "text", "content", "'placehold", "attribut", "insert", "as", "valu", "it", "not", "remov", "when", "type", "field", "chang", "field", "are", "not", "reflect", "model", "valu", "select", "element", "that", "are", "descend", "are", "disabl", "avoid", "thi", "issu", "it", "import", "not", "set", "disabl", "or", "ng", "disabl", "element", "that", "ha", "descend", "form", "element", "normal", "these", "onli", "use", "actual", "form", "control", "so", "issu", "would", "not", "manifest", "issu", "also", "appear", "direct", "compon", "name", "'disabl", "or", "take", "attribut", "name", "'disabl", "as", "input", "output", "attribut", "so", "avoid", "these", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "not", "mention", "ie11", "bug", "regard", "disabl", "attribut", "element", "descend", "though", "it", "n't", "use", "non", "form", "control", "thi", "issu", "prop", "up", "when", "make", "custom", "element", "attribut", "previou", "issu", "notic", "incorrect", "behavior", "regard", "'placehold", "attribut", "input", "element", "but", "incorrectli", "thought", "behavior", "bug", "angularj", "angular", "js", "http", "github", "com", "angular", "angular", "js", "issu", "15700", "am", "abl", "reproduc", "issu", "plunkr", "creat", "by", "narretz", "aforement", "issu", "http", "plnkr", "co", "edit", "jdjv5ntwwdssp9hrt2rf", "jv5ntww", "ssp9h", "rt2rf", "p=preview", "also", "here", "'s", "updat", "version", "plunkr", "show", "model", "valu", "not", "updat", "due", "'disabl", "attribut", "http", "plnkr", "co", "edit", "ahix3x3dozysygdocfja", "hix3x3d", "ozi", "syg", "ocf", "ja", "p=preview", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "mention", "bug", "suggest", "prevent", "measur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.0495859381324747], "body_sim": [0.12319333863922426], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1483}, {"A_title": "fix(formatNumber): better corner case handling", "A_clean_title": ["fix", "formatnumb", "format", "number", "better", "corner", "case", "handl"], "B_title": "refactor($parse): move duplicate $parse interpreter/compiler logic into common location", "B_clean_title": ["refactor", "pars", "move", "duplic", "pars", "interpret", "compil", "logic", "into", "common", "locat"], "A_body": "The idea here is that we actually parse the input number ourselves and then do the rounding ourselves manually. This allows us more control and reliability on the output for corner case numbers.\n\nCloses #8674\nCloses #12709 \nCloses #8705 \nCloses #12707 \nCloses #10246\nCloses #10252\n", "A_clean_body": ["idea", "here", "that", "we", "actual", "pars", "input", "number", "ourselv", "then", "round", "ourselv", "manual", "thi", "allow", "us", "more", "control", "reliabl", "output", "corner", "case", "number", "close", "8674", "close", "12709", "close", "8705", "close", "12707", "close", "10246", "close", "10252"], "B_body": "... and deleted a couple other unused things.", "B_clean_body": ["delet", "coupl", "other", "unus", "thing"], "title_sim": [0.1837760675433455], "body_sim": [0.008539274750218876], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 481}, {"A_title": "docs(ngNonBindable): Document effect on attributes", "A_clean_title": ["doc", "ngnonbind", "ng", "non", "bindabl", "document", "effect", "attribut"], "B_title": "feat(ngMessages): add support for default message", "B_clean_title": ["feat", "ngmessag", "ng", "messag", "add", "support", "default", "messag"], "A_body": "The phrase \"contents of the current DOM element\" may be interpreted either as\r\ninclusive of the DOM element's attributes or as exclusive of the attributes.\r\nThis situation concerns markup such as:\r\n\r\n    <div ng-non-bindable ng-controller=\"MyController\"></div>\r\n\r\nIn practice, AngularJS does not compile or bind attribute values for elements\r\nwhich specify the `ng-non-bindable` directive. Extend the documentation to\r\ndefinitely describe this behavior.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["phrase", "content", "current", "dom", "element", "may", "interpret", "either", "as", "inclus", "dom", "element", "'s", "attribut", "or", "as", "exclus", "attribut", "thi", "situat", "concern", "markup", "such", "as", "div", "ng", "non", "bindabl", "ng", "controller=", "mycontrol", "my", "control", "div", "practic", "angularj", "angular", "js", "not", "compil", "or", "bind", "attribut", "valu", "element", "which", "specifi", "ng", "non", "bindabl", "direct", "extend", "document", "definit", "describ", "thi", "behavior", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Added support for showing default message when no values are mapped with ng-message.\r\n\r\nCloses #12008\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["ad", "support", "show", "default", "messag", "when", "no", "valu", "are", "map", "ng", "messag", "close", "12008", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.13067976754286167], "body_sim": [0.8714852173157714], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.12150873537814261, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 192}, {"A_title": "Improve readability of logging on Travis", "A_clean_title": ["improv", "readabl", "log", "travi"], "B_title": "fix(ngMessageFormat): ensure bindings are valid for Protractor", "B_clean_title": ["fix", "ngmessageformat", "ng", "messag", "format", "ensur", "bind", "are", "valid", "protractor"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore: \r\n- it hides the dots for unit tests on Travis, which makes it easier to find the separate test tasks and results.\r\n- avoids building package for unit tests (makes the unit test job slightly faster)\r\n- re-arranges the grunt task list to make it easier to read\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "it", "hide", "dot", "unit", "test", "travi", "which", "make", "it", "easier", "find", "separ", "test", "task", "result", "avoid", "build", "packag", "unit", "test", "make", "unit", "test", "job", "slightli", "faster", "re", "arrang", "grunt", "task", "list", "make", "it", "easier", "read"], "B_body": "Refer original PR #11644 \n", "B_clean_body": ["refer", "origin", "pr", "11644"], "title_sim": [0.044804390193684], "body_sim": [0.361616086785819], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.009509762580906422, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 783}, {"A_title": "chore($sniffer): Remove $sniffer.hashchange", "A_clean_title": ["chore", "sniffer", "remov", "sniffer", "hashchang"], "B_title": "fix($controller): remove the option to instantiate controllers from c\u2026", "B_clean_title": ["fix", "control", "remov", "option", "instanti", "control", "c\u2026"], "A_body": "The hashchange event is not supported only in ancient browsers like Android<2.2\nand IE<8. Angular never really supported IE7 and in 1.3 where support for IE8\nis dropped it makes even less sense to check for hashchange support.\n", "A_clean_body": ["hashchang", "event", "not", "support", "onli", "ancient", "browser", "like", "android", "ie", "angular", "never", "realli", "support", "ie7", "where", "support", "ie8", "drop", "it", "make", "even", "less", "sens", "check", "hashchang", "support"], "B_body": "\u2026onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n", "B_clean_body": ["\u2026onstructor", "window", "thi", "also", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "close", "15349", "break", "chang", "option", "instanti", "control", "constructor", "global", "window", "object", "ha", "been", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "that", "could", "enabl", "thi", "behavior", "ha", "been", "remov", "thi", "behavior", "had", "been", "deprec", "sinc", "angularj", "angular", "js", "v1", "becaus", "pollut", "global", "scope", "bad", "migrat", "remov", "call", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "config", "regist", "your", "control", "via", "modul", "api", "or", "controllerprovid", "control", "provid", "angular", "modul", "'mymodul", "'mi", "modul", "control", "'mycontrol", "'mi", "control", "function", "angular", "modul", "'mymodul", "'mi", "modul", "config", "function", "controllerprovid", "control", "provid", "controllerprovid", "regist", "control", "provid", "'mycontrol", "'mi", "control", "function"], "title_sim": [0.24546855960851718], "body_sim": [0.08363873417296656], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 875}, {"A_title": "Revert \"fix($parse): standardize one-time literal vs non-literal and interceptors\"", "A_clean_title": ["revert", "fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "B_title": "docs(angular.mock.inject): minor formatting change", "B_clean_title": ["doc", "angular", "mock", "inject", "minor", "format", "chang"], "A_body": "Reverts 60394a9d91dad8932fa900af7c8529837f1d4557 to fix #15905 in 1.6. Currently plan is to NOT revert in 1.7.\r\n\r\nFixes #15905 ", "A_clean_body": ["revert", "60394a9d91dad8932fa900af7c8529837f1d4557", "fix", "15905", "current", "plan", "not", "revert", "fix", "15905"], "B_body": "Without backticks, underscores are rendered as italics.\n", "B_clean_body": ["without", "backtick", "underscor", "are", "render", "as", "ital"], "title_sim": [0.12792270224006935], "body_sim": [-0.012558122585054496], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 219}, {"A_title": "fix(input): Take timezone into account when validating minimum and ma\u2026", "A_clean_title": ["fix", "input", "take", "timezon", "into", "account", "when", "valid", "minimum", "ma\u2026"], "B_title": "docs(PULL_REQUEST_TEMPLATE.md): fix broken links in PR template", "B_clean_title": ["doc", "md", "pull", "request", "templat", "fix", "broken", "link", "pr", "templat"], "A_body": "\u2026ximum date spans.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix \r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nAll details in issue for Issue https://github.com/angular/angular.js/issues/16342\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll details in issue for Issue https://github.com/angular/angular.js/issues/16342\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["\u2026ximum", "date", "span", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "all", "detail", "issu", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16342", "**what", "new", "behavior", "thi", "featur", "chang", "all", "detail", "issu", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16342", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "fix broken links in PR template", "B_clean_body": ["fix", "broken", "link", "pr", "templat"], "title_sim": [0.12347477062602119], "body_sim": [0.5112467362355737], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 16}, {"A_title": "feat($controller): throw error when requested controller is not regis\u2026", "A_clean_title": ["feat", "control", "throw", "error", "when", "request", "control", "not", "regis\u2026"], "B_title": "fix($parse): properly handle dots at the end of identifiers", "B_clean_title": ["fix", "pars", "properli", "handl", "dot", "at", "end", "identifi"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nwhen a requested controller is not found (not registered), then a pretty non-descriptive ng:areq error is thrown\n\n**What is the new behavior (if this is a feature change)?**\na new error is thrown\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n\u2026tered\n\nPreviously, it would throw the ng:areq error, which is less\nspecific and just informs that the requested controller did\nnot yield a function. Given how commonly controllers are used\nin Angular, it makes sense to have a specific error.\n\nThe ng:areq error is still thrown when the registered controller\nis not a function.\n\nCloses #14980\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "request", "control", "not", "found", "not", "regist", "then", "pretti", "non", "descript", "ng", "areq", "error", "thrown", "**what", "new", "behavior", "thi", "featur", "chang", "new", "error", "thrown", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026tere", "previous", "it", "would", "throw", "ng", "areq", "error", "which", "less", "specif", "just", "inform", "that", "request", "control", "did", "not", "yield", "function", "given", "how", "commonli", "control", "are", "use", "angular", "it", "make", "sens", "have", "specif", "error", "ng", "areq", "error", "still", "thrown", "when", "regist", "control", "not", "function", "close", "14980"], "B_body": "Fixes #4613\nFixes #4912\n", "B_clean_body": ["fix", "4613", "fix", "4912"], "title_sim": [0.014976850053412918], "body_sim": [0.1897978213792178], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07672542987838209, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 732}, {"A_title": "Chore docs site improvements", "A_clean_title": ["chore", "doc", "site", "improv"], "B_title": "feat(ngCookies): support sameSite option", "B_clean_title": ["feat", "ngcooki", "ng", "cooki", "support", "samesit", "same", "site", "option"], "A_body": "Collection of improvements for the docs app, mostly related to crawling the website.", "A_clean_body": ["collect", "improv", "doc", "app", "mostli", "relat", "crawl", "websit"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature for issue https://github.com/angular/angular.js/issues/16543\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nsupport sameSite option for ngCookie\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16543", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "support", "samesit", "same", "site", "option", "ngcooki", "ng", "cooki", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.00941903982610063], "body_sim": [0.1726211880345288], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.09640601632607244, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 67}, {"A_title": "chore(docs): don't use bower for docs dependencies", "A_clean_title": ["chore", "doc", "n't", "use", "bower", "doc", "depend"], "B_title": "test(input): fix date type tests with max + timezone", "B_clean_title": ["test", "input", "fix", "date", "type", "test", "max", "timezon"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nchore\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDocs app uses bower\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nNo use of bower in the docs application\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "app", "use", "bower", "**what", "new", "behavior", "thi", "featur", "chang", "no", "use", "bower", "doc", "applic", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ntest update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.061585785716728694], "body_sim": [0.8875650674928082], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 496}, {"A_title": "feat($rootScope): allow suspending and resuming watchers on scope", "A_clean_title": ["feat", "rootscop", "root", "scope", "allow", "suspend", "resum", "watcher", "scope"], "B_title": "fix($controller): remove the option to instantiate controllers from c\u2026", "B_clean_title": ["fix", "control", "remov", "option", "instanti", "control", "c\u2026"], "A_body": "This is a rebase of @shahata's original PR at #10658.\r\nWe need to think about @lgalfaso's concerns (https://github.com/angular/angular.js/pull/10658#issuecomment-75211793 and https://github.com/angular/angular.js/pull/10658#issuecomment-78611215) before merging...", "A_clean_body": ["thi", "rebas", "shahata", "'s", "origin", "pr", "at", "10658", "we", "need", "think", "about", "lgalfaso", "'s", "concern", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "75211793", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "78611215", "befor", "merg"], "B_body": "\u2026onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n", "B_clean_body": ["\u2026onstructor", "window", "thi", "also", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "close", "15349", "break", "chang", "option", "instanti", "control", "constructor", "global", "window", "object", "ha", "been", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "that", "could", "enabl", "thi", "behavior", "ha", "been", "remov", "thi", "behavior", "had", "been", "deprec", "sinc", "angularj", "angular", "js", "v1", "becaus", "pollut", "global", "scope", "bad", "migrat", "remov", "call", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "config", "regist", "your", "control", "via", "modul", "api", "or", "controllerprovid", "control", "provid", "angular", "modul", "'mymodul", "'mi", "modul", "control", "'mycontrol", "'mi", "control", "function", "angular", "modul", "'mymodul", "'mi", "modul", "config", "function", "controllerprovid", "control", "provid", "controllerprovid", "regist", "control", "provid", "'mycontrol", "'mi", "control", "function"], "title_sim": [-0.02754569211719629], "body_sim": [0.17216195351399152], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 244}, {"A_title": "chore(yarn): rely on Travis built-in Yarn support, update Yarn in Jenkins", "A_clean_title": ["chore", "yarn", "reli", "travi", "built", "yarn", "support", "updat", "yarn", "jenkin"], "B_title": "refactor($browser): remove workaround for old ff bug", "B_clean_title": ["refactor", "browser", "remov", "workaround", "old", "ff", "bug"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe install an old Yarn verison manually.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nOn Travis we rely on built-in Yarn support and we only cache the Yarn cache, not `node_modules`. We install a new Yarn verison manually on Jenkins; the location of the install script changed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "instal", "old", "yarn", "verison", "manual", "**what", "new", "behavior", "thi", "featur", "chang", "travi", "we", "reli", "built", "yarn", "support", "we", "onli", "cach", "yarn", "cach", "not", "node", "modul", "we", "instal", "new", "yarn", "verison", "manual", "jenkin", "locat", "instal", "script", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "- https://bugzilla.mozilla.org/show_bug.cgi?id=407172 was fixed in ff 40\r\n\r\nFF 40 is probably old enough we can remove this?", "B_clean_body": ["http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=407172", "wa", "fix", "ff", "40", "ff", "40", "probabl", "old", "enough", "we", "remov", "thi"], "title_sim": [0.014493268889624393], "body_sim": [0.3338959981010837], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 91}, {"A_title": "fix(booleanAttrs): convert to boolean", "A_clean_title": ["fix", "booleanattr", "boolean", "attr", "convert", "boolean"], "B_title": "docs(component): clarify component usage", "B_clean_title": ["doc", "compon", "clarifi", "compon", "usag"], "A_body": "jQuery's attr() does not handle 0 as false, when it comes to boolean attrs.\n\nAnother solution might be to not set attr() for boolean attrs at all...\n", "A_clean_body": ["jqueri", "queri", "'s", "attr", "not", "handl", "as", "fals", "when", "it", "come", "boolean", "attr", "anoth", "solut", "might", "not", "set", "attr", "boolean", "attr", "at", "all"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update for issue #15042 \n\n**What is the current behavior? (You can also link to an open issue here)**\n\noutdated documentation\n\n**What is the new behavior (if this is a feature change)?**\n\nN/A\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "issu", "15042", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "outdat", "document", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [-0.025458328132054855], "body_sim": [0.022623791247424287], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1617}, {"A_title": "test($rootScope): add $watch/$watchCollection tests", "A_clean_title": ["test", "rootscop", "root", "scope", "add", "watch", "watchcollect", "watch", "collect", "test"], "B_title": "fix($browser/$location): single quote in url causes infinite digest in F...", "B_clean_title": ["fix", "browser", "locat", "singl", "quot", "url", "caus", "infinit", "digest"], "A_body": "These are various cases that I felt were missing tests, mainly around constant/literal/one-time $watch/$watchCollection.", "A_clean_body": ["these", "are", "variou", "case", "that", "felt", "were", "miss", "test", "mainli", "around", "time", "constant", "liter", "one", "watch", "watchcollect", "watch", "collect"], "B_body": "...F\n\nThe real issue is in FF, see https://bugzilla.mozilla.org/show_bug.cgi?id=407172.\n\nFF overly encodes stuff which breaks our expectations and then we fail .url() != currentUrl.absUrl()\ncomparison unexpectidly, which leads to infinite digest.\n\nThe workaround is to correct for this inconsistency in $browser and decode any single quotes in urls.\n\nCloses #920\n", "B_clean_body": ["real", "issu", "ff", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=407172", "ff", "overli", "encod", "stuff", "which", "break", "our", "expect", "then", "we", "fail", "url", "currenturl", "absurl", "current", "url", "ab", "url", "comparison", "unexpectidli", "which", "lead", "infinit", "digest", "workaround", "correct", "thi", "inconsist", "browser", "decod", "ani", "singl", "quot", "url", "close", "920"], "title_sim": [0.01552308566042684], "body_sim": [0.010862230347163349], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0023550477093441016, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1811}, {"A_title": "test(ng-non-bindable): test sibling bindings", "A_clean_title": ["test", "ng", "non", "bindabl", "test", "sibl", "bind"], "B_title": "feat(input): add support for input[type=range]", "B_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "A_body": "Ref: https://github.com/angular/angular.dart/blob/master/test/directives/ng_non_bindable_spec.dart\n", "A_clean_body": ["ref", "http", "dart", "github", "com", "angular", "angular", "non", "bindabl", "spec", "dart", "blob", "master", "test", "direct", "ng"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "title_sim": [-0.007817877262039603], "body_sim": [0.33682077034252556], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01826269103325297, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1019}, {"A_title": "docs(guide/Internet Explorer Compatibility): Include warnings for usage of 'disabled' attribute", "A_clean_title": ["doc", "guid", "internet", "explor", "compat", "includ", "warn", "usag", "'disabl", "attribut"], "B_title": "refactor($parse): do not pass scope,locals to interceptor fns", "B_clean_title": ["refactor", "pars", "not", "pass", "scope", "local", "interceptor", "fn"], "A_body": "Setting the 'disabled' attribute on an element that has descendant elements has unexpected behavior in Internet Explorer 11.\r\n\r\n* Input elements that are descendants have the text content of the 'placeholder' attribute inserted as the value (and it is not removed when typing in the field). Changes to the field are not reflected in the model value.\r\n* Select elements that are descendants are disabled.\r\n\r\nTo avoid this issue, it is important to not set `disabled` or `ng-disabled` on an element that has descendant form elements. Normally these should only be used on actual form controls so the issue would not manifest.\r\n\r\nThe issue can also appear if a directive/component is named 'disabled' or takes an attribute named 'disabled' as an input/output attribute, so avoid these.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs do not mention IE11 bug regarding the disabled attribute on elements with descendants (though it shouldn't be used on non-form controls, this issue can prop up when making custom elements/attributes).\r\n\r\nA previous issue noticed the incorrect behavior regarding the 'placeholder' attribute on input elements but incorrectly thought the behavior to be a bug with AngularJS:\r\nhttps://github.com/angular/angular.js/issues/15700\r\n\r\nI am able to reproduce the issue in the Plunkr created by @Narretz on the aforementioned issue:\r\nhttp://plnkr.co/edit/jDJv5NtwwDSsp9hRT2rf?p=preview\r\n\r\nAlso, here's an updated version of the Plunkr showing model value is not updating due to the 'disabled' attribute:\r\nhttp://plnkr.co/edit/AHix3x3dOzySygDOcfJA?p=preview\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocs mention the bug and suggest preventative measures.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n", "A_clean_body": ["set", "'disabl", "attribut", "element", "that", "ha", "descend", "element", "ha", "unexpect", "behavior", "internet", "explor", "11", "input", "element", "that", "are", "descend", "have", "text", "content", "'placehold", "attribut", "insert", "as", "valu", "it", "not", "remov", "when", "type", "field", "chang", "field", "are", "not", "reflect", "model", "valu", "select", "element", "that", "are", "descend", "are", "disabl", "avoid", "thi", "issu", "it", "import", "not", "set", "disabl", "or", "ng", "disabl", "element", "that", "ha", "descend", "form", "element", "normal", "these", "onli", "use", "actual", "form", "control", "so", "issu", "would", "not", "manifest", "issu", "also", "appear", "direct", "compon", "name", "'disabl", "or", "take", "attribut", "name", "'disabl", "as", "input", "output", "attribut", "so", "avoid", "these", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "not", "mention", "ie11", "bug", "regard", "disabl", "attribut", "element", "descend", "though", "it", "n't", "use", "non", "form", "control", "thi", "issu", "prop", "up", "when", "make", "custom", "element", "attribut", "previou", "issu", "notic", "incorrect", "behavior", "regard", "'placehold", "attribut", "input", "element", "but", "incorrectli", "thought", "behavior", "bug", "angularj", "angular", "js", "http", "github", "com", "angular", "angular", "js", "issu", "15700", "am", "abl", "reproduc", "issu", "plunkr", "creat", "by", "narretz", "aforement", "issu", "http", "plnkr", "co", "edit", "jdjv5ntwwdssp9hrt2rf", "jv5ntww", "ssp9h", "rt2rf", "p=preview", "also", "here", "'s", "updat", "version", "plunkr", "show", "model", "valu", "not", "updat", "due", "'disabl", "attribut", "http", "plnkr", "co", "edit", "ahix3x3dozysygdocfja", "hix3x3d", "ozi", "syg", "ocf", "ja", "p=preview", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "mention", "bug", "suggest", "prevent", "measur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "After @lgalfaso's [comment](https://github.com/angular/angular.js/pull/16015/files#r126528737) I thought it would be a good idea to remove these params from interceptors. All the internal uses of interceptors are for doing things like data conversion/normalizing, never reading state out of the scope/locals. I think this is the intended use, and makes them like filters (which receive the input value + args).\r\n\r\nNote that scope/locals still get passed through to the expression being wrapped/intercepted, it's just the interceptor-fn itself that now only receives the value.", "B_clean_body": ["after", "lgalfaso", "'s", "comment", "http", "github", "com", "angular", "angular", "js", "pull", "16015", "file", "r126528737", "thought", "it", "would", "good", "idea", "remov", "these", "param", "interceptor", "all", "intern", "use", "interceptor", "are", "do", "thing", "like", "data", "convers", "normal", "never", "read", "state", "out", "scope", "local", "think", "thi", "intend", "use", "make", "them", "like", "filter", "which", "receiv", "input", "valu", "arg", "note", "that", "scope", "local", "still", "get", "pass", "through", "express", "be", "wrap", "intercept", "it", "'s", "just", "interceptor", "fn", "itself", "that", "now", "onli", "receiv", "valu"], "title_sim": [0.0788681376416684], "body_sim": [0.4205669366772775], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 246}, {"A_title": "chore(gitignore): exclude .log and .stackdump files", "A_clean_title": ["chore", "gitignor", "exclud", "log", "stackdump", "file"], "B_title": "fix($sanitize): use appropriate inert document strategy for Firefox and Safari", "B_clean_title": ["fix", "sanit", "use", "appropri", "inert", "document", "strategi", "firefox", "safari"], "A_body": "Ignore those pesky .log files that are often generated by node and .stackdump, which is created by ConEmu.\n", "A_clean_body": ["ignor", "those", "peski", "log", "file", "that", "are", "often", "gener", "by", "node", "stackdump", "which", "creat", "by", "conemu", "con", "emu"], "B_body": "Both Firefox and Safari are vulnerable to XSS if we use an inert document\r\ncreated via `document.implementation.createHTMLDocument()`.\r\n\r\nNow we check for those vulnerabilities and then use a DOMParser or XHR\r\nstrategy if needed.\r\n\r\nThanks to @cure53 for the heads up on this issue.\r\n", "B_clean_body": ["both", "firefox", "safari", "are", "vulner", "xss", "we", "use", "inert", "document", "creat", "via", "document", "implement", "createhtmldocu", "creat", "html", "document", "now", "we", "check", "those", "vulner", "then", "use", "dompars", "dom", "parser", "or", "xhr", "strategi", "need", "thank", "cure53", "head", "up", "thi", "issu"], "title_sim": [-0.03960857626228525], "body_sim": [0.27279933050394156], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 405}, {"A_title": "Fix animation event regression", "A_clean_title": ["fix", "anim", "event", "regress"], "B_title": "fix(date filter): default to fullDate format", "B_clean_title": ["fix", "date", "filter", "default", "fulldat", "full", "date", "format"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nregression fix for #14321\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n@matsko Do you think you could take a look at this?\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "regress", "fix", "14321", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "matsko", "you", "think", "you", "could", "take", "look", "at", "thi"], "B_body": "The browser's behave inconsistently, so we should just stick to one format\nwhen the format is not specified by the developer\n\nCloses #605\n", "B_clean_body": ["browser", "'s", "behav", "inconsist", "so", "we", "just", "stick", "one", "format", "when", "format", "not", "specifi", "by", "develop", "close", "605"], "title_sim": [0.053303638198681585], "body_sim": [0.18098318201821148], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0015720263440389033, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1623}, {"A_title": "feat(jqLite): make injector() and scope() work with the document object", "A_clean_title": ["feat", "jqlite", "jq", "lite", "make", "injector", "scope", "work", "document", "object"], "B_title": "chore($resource): remove obsolete API", "B_clean_title": ["chore", "resourc", "remov", "obsolet", "api"], "A_body": "For typical app that has ng-app directive on the html element, we now can do:\n\nangular.element(document).injector() or .injector()\nangular.element(document).scope() or .scope()\n\ninstead of:\n\nangular.element(document.getElementsByTagName('html')[0]).injector()\n...\n", "A_clean_body": ["typic", "app", "that", "ha", "ng", "app", "direct", "html", "element", "we", "now", "angular", "element", "document", "injector", "or", "injector", "angular", "element", "document", "scope", "or", "scope", "instead", "angular", "element", "document", "getelementsbytagnam", "get", "element", "by", "tag", "name", "'html", "injector"], "B_body": "This code has been in the $resource service since 2010, but was\r\nnever documented and can therefore be removed. It'll save precious bytes!\r\n\r\nShout-out to @gkalpak for finding this.\r\n\r\nTechnically, we don't have to remove it, but it doesn't make sense to keep it in the repository either. It leads to devs fixing bugs in undocumented APIs: https://github.com/angular/angular.js/commit/6eb4ffc085cc0fde19cbac2c3da227ff47d71e4e ;)\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nobsolete code removal\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo \ud83d\ude1b \r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been removed\r\n- ~ [ ] Docs have been added / updated (for bug fixes / features) ~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "code", "ha", "been", "resourc", "servic", "sinc", "2010", "but", "wa", "never", "document", "therefor", "remov", "it", "'ll", "save", "preciou", "byte", "shout", "out", "gkalpak", "find", "thi", "technic", "we", "n't", "have", "remov", "it", "but", "it", "n't", "make", "sens", "keep", "it", "repositori", "either", "it", "lead", "dev", "fix", "bug", "undocu", "api", "ap", "http", "github", "com", "angular", "angular", "js", "commit", "6eb4ffc085cc0fde19cbac2c3da227ff47d71e4", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "obsolet", "code", "remov", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "remov", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.07451639596329608], "body_sim": [0.3473993233926241], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2030}, {"A_title": "test($log): fix up to work with Safari 9", "A_clean_title": ["test", "log", "fix", "up", "work", "safari"], "B_title": "docs(app): matches anchor tags to current docs theme", "B_clean_title": ["doc", "app", "match", "anchor", "tag", "current", "doc", "theme"], "A_body": "On Safari 9.0.2, you are not allowed to write to `sourceUrl` or `line`\non a native Error object.\n\nThis commit uses a custom error instead.\n", "A_clean_body": ["safari", "you", "are", "not", "allow", "write", "sourceurl", "sourc", "url", "or", "line", "nativ", "error", "object", "thi", "commit", "use", "custom", "error", "instead"], "B_body": "Updates the styles for the anchor tags to match the current docs theme.\n", "B_clean_body": ["updat", "style", "anchor", "tag", "match", "current", "doc", "theme"], "title_sim": [0.04863625250167763], "body_sim": [-0.01180375364342572], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 400}, {"A_title": "Google logo in AngularJS.exports to vector format.", "A_clean_title": ["googl", "logo", "angularj", "export", "angular", "js", "vector", "format"], "B_title": "docs ($compile): add error documentation for noslot error in $compile", "B_clean_title": ["doc", "compil", "add", "error", "document", "noslot", "error", "compil"], "A_body": "Browser: Other\nComponent: docs\nRegression: no\n", "A_clean_body": ["browser", "other", "compon", "doc", "regress", "no"], "B_body": "there was no error page for the $compile:noslot error\r\n\r\nthis resolves #15790\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["there", "wa", "no", "error", "page", "compil", "noslot", "error", "thi", "resolv", "15790", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.03729490579599901], "body_sim": [0.1814363053478297], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1128}, {"A_title": "fix(form): preperly clean up when invalid widget is removed", "A_clean_title": ["fix", "form", "preperli", "clean", "up", "when", "invalid", "widget", "remov"], "B_title": "chore(ci): disable unit testing on Firefox", "B_clean_title": ["chore", "ci", "disabl", "unit", "test", "firefox"], "A_body": "Removing invalid widget sometimes resulted in improper cleanup of the form state.\n", "A_clean_body": ["remov", "invalid", "widget", "sometim", "result", "improp", "cleanup", "form", "state"], "B_body": "Related to https://github.com/angular/angular.js/issues/15987\r\n\r\n", "B_clean_body": ["relat", "http", "github", "com", "angular", "angular", "js", "issu", "15987"], "title_sim": [-0.04607513179996526], "body_sim": [-0.01141395995582091], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1868}, {"A_title": "docs($resourceProvider): Correct JS syntax error", "A_clean_title": ["doc", "resourceprovid", "resourc", "provid", "correct", "js", "syntax", "error"], "B_title": "docs(directive): show arguments as a subsection of the usage section", "B_clean_title": ["doc", "direct", "show", "argument", "as", "subsect", "usag", "section"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nExample code has a syntax error\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nExample code no longer has a syntax error\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "code", "ha", "syntax", "error", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "code", "no", "longer", "ha", "syntax", "error", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreviously, on the docs of directives which include the `animation` section, `arguments` are shown as an `h3` element below the `animation` `h2` element, making it look like it's a subsection of `animations`.\r\n\r\n#15645\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit ensures that the \u00e0rgument` `h3`element is rendered correctly after the `usage` `h2` element by moving the \u00e0nimation`section to the end of the template file.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "previous", "doc", "direct", "which", "includ", "anim", "section", "argument", "are", "shown", "as", "h3", "element", "below", "anim", "h2", "element", "make", "it", "look", "like", "it", "'s", "subsect", "anim", "15645", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "ensur", "that", "\u00e0rgument", "h3", "element", "render", "correctli", "after", "usag", "h2", "element", "by", "move", "\u00e0nimat", "section", "end", "templat", "file", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.12839011609510073], "body_sim": [0.8883384873328403], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 86}, {"A_title": "fix(ng-bind-html): watch string value instead of wrapper", "A_clean_title": ["fix", "ng", "bind", "html", "watch", "string", "valu", "instead", "wrapper"], "B_title": "docs($compile): remove a mention of preassigning bindings in controllers", "B_clean_title": ["doc", "compil", "remov", "mention", "preassign", "bind", "control"], "A_body": "Ref: https://github.com/angular/angular.js/pull/4045\n\nI have this sinking feeling that support this use case sort of\nencourages binding to function that blindly trust some html.  For now,\nI'm fixing the issue while I think about the use cases some more.\n\nIn the case of a function that performs any non-trivial work before\nwrapping the value (e.g. the showdown filter in issue #3980, or the\nbinding to a simply wrapper function in issue #3932 if it did anything\nmeaty), this fix makes it \"work\" - but performance is going to suck -\nyou should bind to some other thing on scope that watches the actual\nsource and adjusts itself when that changes (e.g. the showdown filter.)\nFor the case of the wrapper in #3932, if one isn't performing\nsanitization or some such thing - then you the developer has insight\ninto why that value is safe in that particular context - and it should\nbe available simply by name and not as a result of a function taking any\narbitrary input to make auditing of security a little saner.\n\nCloses #3932, #3980\n", "A_clean_body": ["ref", "http", "github", "com", "angular", "angular", "js", "pull", "4045", "have", "thi", "sink", "feel", "that", "support", "thi", "use", "case", "sort", "encourag", "bind", "function", "that", "blindli", "trust", "some", "html", "now", "'m", "fix", "issu", "while", "think", "about", "use", "case", "some", "more", "case", "function", "that", "perform", "ani", "non", "trivial", "work", "befor", "wrap", "valu", "showdown", "filter", "issu", "3980", "or", "bind", "simpli", "wrapper", "function", "issu", "3932", "it", "did", "anyth", "meati", "thi", "fix", "make", "it", "work", "but", "perform", "go", "suck", "you", "bind", "some", "other", "thing", "scope", "that", "watch", "actual", "sourc", "adjust", "itself", "when", "that", "chang", "showdown", "filter", "case", "wrapper", "3932", "one", "n't", "perform", "sanit", "or", "some", "such", "thing", "then", "you", "develop", "ha", "insight", "into", "whi", "that", "valu", "safe", "that", "particular", "context", "it", "avail", "simpli", "by", "name", "not", "as", "result", "function", "take", "ani", "arbitrari", "input", "make", "audit", "secur", "littl", "saner", "close", "3932", "3980"], "B_body": "The deprecation warning is no longer needed as the feature has been removed\r\nin 1.7.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreassigning bindings to controllers is described as deprecated but still working. This feature has been removed so the warning is no longer needed.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["deprec", "warn", "no", "longer", "need", "as", "featur", "ha", "been", "remov", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "preassign", "bind", "control", "describ", "as", "deprec", "but", "still", "work", "thi", "featur", "ha", "been", "remov", "so", "warn", "no", "longer", "need", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.11390382177613097], "body_sim": [0.2760512862776314], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1286}, {"A_title": "docs ($compile): add error documentation for noslot error in $compile", "A_clean_title": ["doc", "compil", "add", "error", "document", "noslot", "error", "compil"], "B_title": "fix:SiteMap(docs) in SiteMap.js: SiteMap.xml was wrongly generated", "B_clean_title": ["fix", "sitemap", "site", "map", "doc", "sitemap", "js", "site", "map", "sitemap", "xml", "site", "map", "wa", "wrongli", "gener"], "A_body": "there was no error page for the $compile:noslot error\r\n\r\nthis resolves #15790\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["there", "wa", "no", "error", "page", "compil", "noslot", "error", "thi", "resolv", "15790", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "doc.id should be used instead of doc.name, otherwise links are wrongly\ngenerated\n", "B_clean_body": ["doc", "id", "use", "instead", "doc", "name", "otherwis", "link", "are", "wrongli", "gener"], "title_sim": [0.012030964866059098], "body_sim": [0.18695644559855049], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2092}, {"A_title": "test(jQuery): test not firing $destroy on jQuery.cleanData with jQuery UI", "A_clean_title": ["test", "jqueri", "queri", "test", "not", "fire", "destroy", "jqueri", "cleandata", "queri", "clean", "data", "jqueri", "queri", "ui"], "B_title": "fix($resource): don't use $parse for @dotted.member", "B_clean_title": ["fix", "resourc", "n't", "use", "pars", "dot", "member"], "A_body": "So far it wasn't tested that Angular's logic for skipping it triggering\nthe $destroy event on jQuery.cleanData in the replaceWith internal function\nworks correctly when Angular is not the last one to patch the cleanData method\n(e.g. if jQuery UI does the patching later). This commits adds the relevant\ntest.\n\nRef #8486\n\ncc @IgorMinar\n", "A_clean_body": ["so", "far", "it", "wa", "n't", "test", "that", "angular", "'s", "logic", "skip", "it", "trigger", "destroy", "event", "jqueri", "cleandata", "queri", "clean", "data", "replacewith", "replac", "intern", "function", "work", "correctli", "when", "angular", "not", "last", "one", "patch", "cleandata", "clean", "data", "method", "jqueri", "queri", "ui", "patch", "later", "thi", "commit", "add", "relev", "test", "ref", "8486", "cc", "igorminar", "igor", "minar"], "B_body": "params and paramDefaults support looking up the parameter value from the\ndata object.  The syntax for that is `@nested.property.name`.\nCurrently, $resource uses $parse to do this.  This is too liberal\n(you can use values like `@a=b` or `@a | filter` and have it work -\nwhich doesn't really make sense).  It also puts up a dependency on\n$parse which is has restrictions to secure expressions used in\ntemplates.  The value here, though a string, is specified in Javascript\ncode and shouldn't have those restrictions.\n", "B_clean_body": ["param", "paramdefault", "param", "default", "support", "look", "up", "paramet", "valu", "data", "object", "syntax", "that", "nest", "properti", "name", "current", "resourc", "use", "pars", "thi", "thi", "too", "liber", "you", "use", "valu", "like", "a=b", "or", "filter", "have", "it", "work", "which", "n't", "realli", "make", "sens", "it", "also", "put", "up", "depend", "pars", "which", "ha", "restrict", "secur", "express", "use", "templat", "valu", "here", "though", "string", "specifi", "javascript", "code", "n't", "have", "those", "restrict"], "title_sim": [0.02057217974376661], "body_sim": [0.20810021194528505], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0726033804145685, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 284}, {"A_title": "fix($resource): properly call error callback when resource is called with", "A_clean_title": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call"], "B_title": "Update badjsonp.ngdoc", "B_clean_title": ["updat", "badjsonp", "ngdoc"], "A_body": "fix($resource): properly call error callback when resource is called with two arguments\n", "A_clean_body": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call", "two", "argument"], "B_body": "\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nThis is docs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere is a typo in badjsonp.ngdoc\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocumentation is now correct.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "thi", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "badjsonp", "ngdoc", "**what", "new", "behavior", "thi", "featur", "chang", "document", "now", "correct", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.035998849406613416], "body_sim": [0.027092784582627084], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2092}, {"A_title": "docs(uppercase): Added an example", "A_clean_title": ["doc", "uppercas", "ad", "exampl"], "B_title": "docs(app): matches anchor tags to current docs theme", "B_clean_title": ["doc", "app", "match", "anchor", "tag", "current", "doc", "theme"], "A_body": "I saw that the uppercase filter had no example so I decided to add a minimal example to explain how the uppercase filter works.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere is currently no example for the `uppercase` filter, so I added one.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/a\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["saw", "that", "uppercas", "filter", "had", "no", "exampl", "so", "decid", "add", "minim", "exampl", "explain", "how", "uppercas", "filter", "work", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "current", "no", "exampl", "uppercas", "filter", "so", "ad", "one", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Updates the styles for the anchor tags to match the current docs theme.\n", "B_clean_body": ["updat", "style", "anchor", "tag", "match", "current", "doc", "theme"], "title_sim": [0.3515471473650238], "body_sim": [0.27128796414955025], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 845}, {"A_title": "docs(ngRepeat): I added the phrase \"and by age\" on line 236", "A_clean_title": ["doc", "ngrepeat", "ng", "repeat", "ad", "phrase", "by", "age", "line", "236"], "B_title": "fix(jqLite): children() should only return elements", "B_clean_title": ["fix", "jqlite", "jq", "lite", "children", "onli", "return", "element"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo change in behavior introduced \n\n**What is the new behavior (if this is a feature change)?**\n\nNo change in behavior introduced\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example seems to also be filtering by age. It threw me off a bit because I was getting results when I entered numbers in the input field.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "chang", "behavior", "introduc", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "behavior", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "seem", "also", "filter", "by", "age", "it", "threw", "me", "off", "bit", "becaus", "wa", "get", "result", "when", "enter", "number", "input", "field"], "B_body": "The jQuery implementation of children only returns child nodes of the given element that are elements themselves. The previous jqLite implementation was returning all nodes except those that are text nodes. Use jQLite.contents() to get all the child nodes.\n\nThe jQuery implementation of contents returns [] if the object has no child nodes.  The previous jqLite implementation was returning undefined, causing a stack overflow in test/testabilityPatch.js when it tried to `cleanup()` a window object.\n\nThe testabilityPatch was incorrectly using children() rather than contents() inside cleanup() to iterate down through all the child nodes of the element to clean up.\n", "B_clean_body": ["jqueri", "queri", "implement", "children", "onli", "return", "child", "node", "given", "element", "that", "are", "element", "themselv", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "all", "node", "except", "those", "that", "are", "text", "node", "use", "jqlite", "content", "lite", "get", "all", "child", "node", "jqueri", "queri", "implement", "content", "return", "object", "ha", "no", "child", "node", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "undefin", "caus", "stack", "overflow", "js", "test", "testabilitypatch", "testabl", "patch", "when", "it", "tri", "cleanup", "window", "object", "testabilitypatch", "testabl", "patch", "wa", "incorrectli", "children", "rather", "than", "content", "insid", "cleanup", "iter", "down", "through", "all", "child", "node", "element", "clean", "up"], "title_sim": [0.017921677309980327], "body_sim": [0.08796042508074435], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1335}, {"A_title": "docs($log): describe your change...", "A_clean_title": ["doc", "log", "describ", "your", "chang"], "B_title": "chore(build): fix bower install", "B_clean_title": ["chore", "build", "fix", "bower", "instal"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocument update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe documentation for $log doesn't mention blackboxing, by which a developer can see the originating line of calls to $log.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nA brief, browser-agnostic mention of blackboxing was added to the page.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "document", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "document", "log", "n't", "mention", "blackbox", "by", "which", "develop", "see", "origin", "line", "call", "log", "**what", "new", "behavior", "thi", "featur", "chang", "brief", "browser", "agnost", "mention", "blackbox", "wa", "ad", "page", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.006997588141741548], "body_sim": [0.9656533024146591], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01218808458002811, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 184}, {"A_title": "fix:bootstrap: Fix bootstrap on IE<8", "A_clean_title": ["fix", "bootstrap", "fix", "bootstrap", "ie"], "B_title": "docs(ngNonBindable): Document effect on attributes", "B_clean_title": ["doc", "ngnonbind", "ng", "non", "bindabl", "document", "effect", "attribut"], "A_body": "No reason for including ie-compat in bootstrap, it's included during angularInit.\n\nFix including ie-compat even for production.\n", "A_clean_body": ["no", "reason", "includ", "ie", "compat", "bootstrap", "it", "'s", "includ", "dure", "angularinit", "angular", "init", "fix", "includ", "ie", "compat", "even", "product"], "B_body": "The phrase \"contents of the current DOM element\" may be interpreted either as\r\ninclusive of the DOM element's attributes or as exclusive of the attributes.\r\nThis situation concerns markup such as:\r\n\r\n    <div ng-non-bindable ng-controller=\"MyController\"></div>\r\n\r\nIn practice, AngularJS does not compile or bind attribute values for elements\r\nwhich specify the `ng-non-bindable` directive. Extend the documentation to\r\ndefinitely describe this behavior.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["phrase", "content", "current", "dom", "element", "may", "interpret", "either", "as", "inclus", "dom", "element", "'s", "attribut", "or", "as", "exclus", "attribut", "thi", "situat", "concern", "markup", "such", "as", "div", "ng", "non", "bindabl", "ng", "controller=", "mycontrol", "my", "control", "div", "practic", "angularj", "angular", "js", "not", "compil", "or", "bind", "attribut", "valu", "element", "which", "specifi", "ng", "non", "bindabl", "direct", "extend", "document", "definit", "describ", "thi", "behavior", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.044190170392488556], "body_sim": [0.155336328525797], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2329}, {"A_title": "docs(*): don't hide results for middle-clicks", "A_clean_title": ["doc", "n't", "hide", "result", "middl", "click"], "B_title": "fix(input): listen on \"change\" for radio and checkbox", "B_clean_title": ["fix", "input", "listen", "chang", "radio", "checkbox"], "A_body": "Middle-clicking opens a link in a new tab; it shouldn't close the results list\r\nas the user may want to open more of those links.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nMiddle-clicking on a link in the results list (which opens a link in a new tab) closes the list.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nList is kept open in such a case.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["middl", "click", "open", "link", "new", "tab", "it", "n't", "close", "result", "list", "as", "user", "may", "want", "open", "more", "those", "link", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "middl", "click", "link", "result", "list", "which", "open", "link", "new", "tab", "close", "list", "**what", "new", "behavior", "thi", "featur", "chang", "list", "kept", "open", "such", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nradio and checkbox listen on \"click\" which can cause unforeseen behavior\n\n**What is the new behavior (if this is a feature change)?**\nradio and checkbox listen on \"change\"\n\n**Does this PR introduce a breaking change?**\nYes, for certain unit-test behaviors\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\ninput[radio] and inout[checkbox] now listen on the change event instead\nof the click event. This fixes issue with 3rd party libraries that trigger\na change event on inputs, e.g. Bootstrap 3 custom checkbox / radio button\ntoggles.\nIt also makes it easier to prevent specific events that can cause a checkbox / radio\nto change, e.g. click events. Previously, this was difficult because the custom click\nhandler had to be registered before the input directive's click handler.\n\nIt is possible that radio and checkbox listened to click because IE8 has\nbroken support for listening on change, see http://www.quirksmode.org/dom/events/change.html\n\nCloses #4516\nCloses #14667\n\nBREAKING CHANGE:\n\ninput[radio] and input[checkbox] now need to be attached to the document to propagate events\ncorrectly. This should only be of concern in unit-tests that compile input elements and\ntrigger click events on them. This is because we now listen to the change event which\ngets automatically triggered by browsers when a checkbox or radio is clicked. However,\nthis may fail in some browsers when the elements are not attached to the document.\n\nBefore:\n\n``` js\n    it('should update the model', inject(function($compile, $rootScope) {\n      var inputElm = $compile('<input type=\"checkbox\" ng-model=\"checkbox\" />')($rootScope);\n\n      browserTrigger(inputElm[0], 'click');\n      expect($rootScope.checkbox).toBe(true);\n    });\n```\n\nWith this patch, `$rootScope.checkbox` might not be true, because the click event\nhasn't triggered the change event. To make the test, work append the inputElm to the app's\n$rootElement, and the $rootElement to the $document:\n\nAfter:\n\n``` js\n    it('should update the model', inject(function($compile, $rootScope, $rootElement, $document) {\n      var inputElm = $compile('<input type=\"checkbox\" ng-model=\"checkbox\" />')($rootScope);\n\n      $rootElement.append(inputElm);\n      $document.append($rootElement);\n\n      browserTrigger(inputElm[0], 'click');\n      expect($rootScope.checkbox).toBe(true);\n    });\n```\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "radio", "checkbox", "listen", "click", "which", "caus", "unforeseen", "behavior", "**what", "new", "behavior", "thi", "featur", "chang", "radio", "checkbox", "listen", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "certain", "unit", "test", "behavior", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "radio", "inout", "checkbox", "now", "listen", "chang", "event", "instead", "click", "event", "thi", "fix", "issu", "3rd", "parti", "librari", "that", "trigger", "chang", "event", "input", "bootstrap", "custom", "checkbox", "radio", "button", "toggl", "it", "also", "make", "it", "easier", "prevent", "specif", "event", "that", "caus", "checkbox", "radio", "chang", "click", "event", "previous", "thi", "wa", "difficult", "becaus", "custom", "click", "handler", "had", "regist", "befor", "input", "direct", "'s", "click", "handler", "it", "possibl", "that", "radio", "checkbox", "listen", "click", "becaus", "ie8", "ha", "broken", "support", "listen", "chang", "see", "http", "quirksmod", "html", "www", "org", "dom", "event", "chang", "close", "4516", "close", "14667", "break", "chang", "input", "radio", "input", "checkbox", "now", "need", "attach", "document", "propag", "event", "correctli", "thi", "onli", "concern", "unit", "test", "that", "compil", "input", "element", "trigger", "click", "event", "them", "thi", "becaus", "we", "now", "listen", "chang", "event", "which", "get", "automat", "trigger", "by", "browser", "when", "checkbox", "or", "radio", "click", "howev", "thi", "may", "fail", "some", "browser", "when", "element", "are", "not", "attach", "document", "befor", "js", "it", "'should", "updat", "model", "inject", "function", "compil", "rootscop", "root", "scope", "var", "inputelm", "input", "elm", "compil", "input", "type=", "checkbox", "ng", "model=", "checkbox", "rootscop", "root", "scope", "browsertrigg", "browser", "trigger", "inputelm", "input", "elm", "'click", "expect", "rootscop", "checkbox", "root", "scope", "tobe", "true", "thi", "patch", "rootscop", "checkbox", "root", "scope", "might", "not", "true", "becaus", "click", "event", "ha", "n't", "trigger", "chang", "event", "make", "test", "work", "append", "inputelm", "input", "elm", "app'", "rootel", "root", "element", "rootel", "root", "element", "document", "after", "js", "it", "'should", "updat", "model", "inject", "function", "compil", "rootscop", "root", "scope", "rootel", "root", "element", "document", "var", "inputelm", "input", "elm", "compil", "input", "type=", "checkbox", "ng", "model=", "checkbox", "rootscop", "root", "scope", "rootel", "append", "root", "element", "inputelm", "input", "elm", "document", "append", "rootel", "root", "element", "browsertrigg", "browser", "trigger", "inputelm", "input", "elm", "'click", "expect", "rootscop", "checkbox", "root", "scope", "tobe", "true"], "title_sim": [-0.013791939340365926], "body_sim": [0.47167316883364413], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.1750899961042731, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 481}, {"A_title": "feat(Grunt): add source maps to all min files", "A_clean_title": ["feat", "grunt", "add", "sourc", "map", "all", "min", "file"], "B_title": "Fixes to select and ngOptions - \"required\" validation and behavior with empty / unknown option", "B_clean_title": ["fix", "select", "ngoption", "ng", "option", "requir", "valid", "behavior", "empti", "unknown", "option"], "A_body": "Generate source map files when build step is ran and adds source map\nheaders to all min files.\n\nSource map url must be appended to the min file otherwise the line\noffsets will be off.\n\nInspired by Ryan Seddon (PR #2858)\n\nCloses #1714\n", "A_clean_body": ["gener", "sourc", "map", "file", "when", "build", "step", "ran", "add", "sourc", "map", "header", "all", "min", "file", "sourc", "map", "url", "must", "append", "min", "file", "otherwis", "line", "offset", "will", "off", "inspir", "by", "ryan", "seddon", "pr", "2858", "close", "1714"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfixes\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n- (a) when the unknown option is selected and the select is \"required\", the required error is not set\r\n- (b) ngOptions: when the model is unmatched and an empty option exists, the empty option is always selected, even if the model is not null / undefined.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n- (a) the error is set\r\n- (b) the unknown option is selected if the model is not null / undefined\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nPossibly? For (a), the following situation is possible: The model is programatically set to a value that is no longer in select options, and the select is required. With this patch, the user cannot keep the unmatched value, because of the required error, which considers this value invalid (just realized this, so it's not in the commit message).\r\n\r\nFor (b), it's unlikely that anyone relied on the fact that the empty option is selected instead of the unmatched option - the fixd behavior was also present in regular select since the beginning.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "unknown", "option", "select", "select", "requir", "requir", "error", "not", "set", "ngoption", "ng", "option", "when", "model", "unmatch", "empti", "option", "exist", "empti", "option", "alway", "select", "even", "model", "not", "null", "undefin", "**what", "new", "behavior", "thi", "featur", "chang", "error", "set", "unknown", "option", "select", "model", "not", "null", "undefin", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "follow", "situat", "possibl", "model", "programat", "set", "valu", "that", "no", "longer", "select", "option", "select", "requir", "thi", "patch", "user", "not", "keep", "unmatch", "valu", "becaus", "requir", "error", "which", "consid", "thi", "valu", "invalid", "just", "realiz", "thi", "so", "it", "'s", "not", "commit", "messag", "it", "'s", "unlik", "that", "anyon", "reli", "fact", "that", "empti", "option", "select", "instead", "unmatch", "option", "fixd", "behavior", "wa", "also", "present", "regular", "select", "sinc", "begin", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.003407512551349615], "body_sim": [0.06629199009023228], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0020646214378385293, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1411}, {"A_title": "docs($sanitizeProvider): fix param comment for enableSvg", "A_clean_title": ["doc", "sanitizeprovid", "sanit", "provid", "fix", "param", "comment", "enablesvg", "enabl", "svg"], "B_title": "Merge parse changes into v1.6.x", "B_clean_title": ["merg", "pars", "chang", "into", "v1"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe param is listed as type boolean, but has an erroneous comment describing it as a regex. (Maybe from a much earlier version of Angular?)\n\n**What is the new behavior (if this is a feature change)?**\n\nNo behavior change. Fixes the doc comment.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nI submitted a pull request for this previously, but the commit had the wrong email address so it didn't catch my CLA, so I'm resubmitting now.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "param", "list", "as", "type", "boolean", "but", "ha", "erron", "comment", "describ", "it", "as", "regex", "mayb", "much", "earlier", "version", "angular", "**what", "new", "behavior", "thi", "featur", "chang", "no", "behavior", "chang", "fix", "doc", "comment", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "submit", "pull", "request", "thi", "previous", "but", "commit", "had", "wrong", "email", "address", "so", "it", "did", "n't", "catch", "my", "cla", "so", "'m", "resubmit", "now"], "B_body": "Just to run travis...", "B_clean_body": ["just", "run", "travi"], "title_sim": [-0.024073392479927368], "body_sim": [0.03598627196908248], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 445}, {"A_title": "refactor($rootScope): simplify $emit stopPropagation handling", "A_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "B_title": "chore(code.angular): correctly remove old zip files from snapshot", "B_clean_title": ["chore", "code", "angular", "correctli", "remov", "old", "zip", "file", "snapshot"], "A_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "A_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "B_body": "Previously, the event would be triggered on the deletion of the previous zip files,\r\nwhich would delete the current zip file as well\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["previous", "event", "would", "trigger", "delet", "previou", "zip", "file", "which", "would", "delet", "current", "zip", "file", "as", "well", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.008218099948414583], "body_sim": [0.3086435902222658], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 102}, {"A_title": "refactor(jqLite): stop patching individual jQuery methods", "A_clean_title": ["refactor", "jqlite", "jq", "lite", "stop", "patch", "individu", "jqueri", "queri", "method"], "B_title": "refactor($parse): remove unused expression arguments", "B_clean_title": ["refactor", "pars", "remov", "unus", "express", "argument"], "A_body": "Currently Angular monkey-patches a few jQuery methods that remove elements\nfrom the DOM. Since methods like .remove() have multiple signatures\nthat can change what's actually removed, Angular needs to carefully\nrepeat them in its patching or it can break apps using jQuery correctly.\nSuch a strategy is also not future-safe.\n\nInstead of patching individual methods on the prototype, it's better to\nhook into jQuery.cleanData and trigger custom events there. This should be\nsafe as e.g. jQuery UI needs it and uses it. It'll also be future-safe.\n\nThe only drawback is that $destroy is no longer triggered when using $detach\nbut:\n1. Angular doesn't use this method, jqLite doesn't implement it.\n2. Detached elements can be re-attached keeping all their events & data\n    so it makes sense that $destroy is not triggered on them.\n3. The approach from this commit is so much safer that any issues with\n    .detach() working differently are outweighed by the robustness of the code.\n\nBREAKING CHANGE: the $destroy event is no longer triggered when using the\njQuery detach() method. If you want to destroy Angular data attached to the\nelement, use remove().\n\ncc @caitp\n", "A_clean_body": ["current", "angular", "monkey", "patch", "few", "jqueri", "queri", "method", "that", "remov", "element", "dom", "sinc", "method", "like", "remov", "have", "multipl", "signatur", "that", "chang", "what", "'s", "actual", "remov", "angular", "need", "care", "repeat", "them", "it", "patch", "or", "it", "break", "app", "jqueri", "queri", "correctli", "such", "strategi", "also", "not", "futur", "safe", "instead", "patch", "individu", "method", "prototyp", "it", "'s", "better", "hook", "into", "jqueri", "cleandata", "queri", "clean", "data", "trigger", "custom", "event", "there", "thi", "safe", "as", "jqueri", "queri", "ui", "need", "it", "use", "it", "it", "'ll", "also", "futur", "safe", "onli", "drawback", "that", "destroy", "no", "longer", "trigger", "when", "detach", "but", "angular", "n't", "use", "thi", "method", "jqlite", "jq", "lite", "n't", "implement", "it", "detach", "element", "re", "attach", "keep", "all", "their", "event", "data", "so", "it", "make", "sens", "that", "destroy", "not", "trigger", "them", "approach", "thi", "commit", "so", "much", "safer", "that", "ani", "issu", "detach", "work", "differ", "are", "outweigh", "by", "robust", "code", "break", "chang", "destroy", "event", "no", "longer", "trigger", "when", "jqueri", "queri", "detach", "method", "you", "want", "destroy", "angular", "data", "attach", "element", "use", "remov", "cc", "caitp"], "B_body": "Not sure if I'm missing some...?\n", "B_clean_body": ["not", "sure", "'m", "miss", "some"], "title_sim": [0.2702104877904938], "body_sim": [0.13239302835676545], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 903}, {"A_title": "chore(travis): turn on caching for node_modules and bower_components directories", "A_clean_title": ["chore", "travi", "turn", "cach", "node", "modul", "bower", "compon", "directori"], "B_title": "revert: fix($compile): do not add <span> elements to root text nodes", "B_clean_title": ["revert", "fix", "compil", "not", "add", "span", "element", "root", "text", "node"], "A_body": "The cache behavior is documented at http://docs.travis-ci.com/user/caching/\n\nThis commit also disabled our custom caching via npm-bundler-deps.sh\n", "A_clean_body": ["cach", "behavior", "document", "at", "http", "travi", "ci", "doc", "com", "user", "cach", "thi", "commit", "also", "disabl", "our", "custom", "cach", "via", "npm", "bundler", "dep", "sh"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis commit reverts 7617c08da69a0d447507dadd0ef41d2415462ca7 which was accidentally\nmerged into 1.5.x (by @petebacondarwin in a moment of rebase madness) despite\nit containing a breaking change.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "commit", "revert", "7617c08da69a0d447507dadd0ef41d2415462ca7", "which", "wa", "accident", "merg", "into", "by", "petebacondarwin", "moment", "rebas", "mad", "despit", "it", "contain", "break", "chang"], "title_sim": [0.20118136475003925], "body_sim": [0.32705815499986496], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 392}, {"A_title": "fix(jqLite): Chrome specific issue for `<select required>`", "A_clean_title": ["fix", "jqlite", "jq", "lite", "chrome", "specif", "issu", "select", "requir"], "B_title": "Improve module template, add custom installation notes for ngMock", "B_clean_title": ["improv", "modul", "templat", "add", "custom", "instal", "note", "ngmock", "ng", "mock"], "A_body": "Request Type: bug, regression\n\nHow to reproduce: Look at #6828\n\nComponent(s): jqLite\n\nImpact: medium\n\nComplexity: small\n\nThis issue is related to: regression\n\nDetailed Description:\n\nWhen using Chrome and adding a `<option selected=\"selected\">` to a `<select required>` then the new added option is not selected\n\nOther Comments:\n", "A_clean_body": ["request", "type", "bug", "regress", "how", "reproduc", "look", "at", "6828", "compon", "jqlite", "jq", "lite", "impact", "medium", "complex", "small", "thi", "issu", "relat", "regress", "detail", "descript", "when", "chrome", "ad", "option", "selected=", "select", "select", "requir", "then", "new", "ad", "option", "not", "select", "other", "comment"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n- module install page doesn't mention npm\n- ngMock install page is misleading, as angular-mocks shouldn't be included in application code\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Docs have been added / updated (for bug fixes / features)\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "modul", "instal", "page", "n't", "mention", "npm", "ngmock", "ng", "mock", "instal", "page", "mislead", "as", "angular", "mock", "n't", "includ", "applic", "code", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.02227966094409561], "body_sim": [0.11880316123587083], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.19822512947521537, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 733}, {"A_title": "fix(ngSanitize): call attribute setter in linky for all links", "A_clean_title": ["fix", "ngsanit", "ng", "sanit", "call", "attribut", "setter", "linki", "all", "link"], "B_title": "fix(jqLite): children() should only return elements", "B_clean_title": ["fix", "jqlite", "jq", "lite", "children", "onli", "return", "element"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nFixes #14707\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\nFixes #14707\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "fix", "14707", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "fix", "14707"], "B_body": "The jQuery implementation of children only returns child nodes of the given element that are elements themselves. The previous jqLite implementation was returning all nodes except those that are text nodes. Use jQLite.contents() to get all the child nodes.\n\nThe jQuery implementation of contents returns [] if the object has no child nodes.  The previous jqLite implementation was returning undefined, causing a stack overflow in test/testabilityPatch.js when it tried to `cleanup()` a window object.\n\nThe testabilityPatch was incorrectly using children() rather than contents() inside cleanup() to iterate down through all the child nodes of the element to clean up.\n", "B_clean_body": ["jqueri", "queri", "implement", "children", "onli", "return", "child", "node", "given", "element", "that", "are", "element", "themselv", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "all", "node", "except", "those", "that", "are", "text", "node", "use", "jqlite", "content", "lite", "get", "all", "child", "node", "jqueri", "queri", "implement", "content", "return", "object", "ha", "no", "child", "node", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "undefin", "caus", "stack", "overflow", "js", "test", "testabilitypatch", "testabl", "patch", "when", "it", "tri", "cleanup", "window", "object", "testabilitypatch", "testabl", "patch", "wa", "incorrectli", "children", "rather", "than", "content", "insid", "cleanup", "iter", "down", "through", "all", "child", "node", "element", "clean", "up"], "title_sim": [0.037191263890199486], "body_sim": [0.026976746674091903], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.004534868271144679, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1260}, {"A_title": "docs ($compile): add error documentation for noslot error in $compile", "A_clean_title": ["doc", "compil", "add", "error", "document", "noslot", "error", "compil"], "B_title": "fix($location): rewrite links with nested elements", "B_clean_title": ["fix", "locat", "rewrit", "link", "nest", "element"], "A_body": "there was no error page for the $compile:noslot error\r\n\r\nthis resolves #15790\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["there", "wa", "no", "error", "page", "compil", "noslot", "error", "thi", "resolv", "15790", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "So docs is fixed now, inner links do not reload the page:\nhttp://ci.angularjs.org/job/angular.js-vojta/41/artifact/build/pkg/0.10.4-849c5365/docs-0.10.4-849c5365/index.html\n\nFor example:\n\n``` html\n<a href=\"some/link\">inner <span>text</span></a>\n```\n\nIf you click on \"text\", then the span element is event.target, so we need to traverse the DOM.\n", "B_clean_body": ["so", "doc", "fix", "now", "inner", "link", "not", "reload", "page", "http", "angularj", "js", "10", "849c5365", "doc", "10", "html", "ci", "org", "job", "angular", "vojta", "41", "artifact", "build", "pkg", "849c5365", "index", "exampl", "html", "href=", "some", "link", "inner", "span", "text", "span", "you", "click", "text", "then", "span", "element", "event", "target", "so", "we", "need", "travers", "dom"], "title_sim": [0.05580900000225744], "body_sim": [0.22100944308868267], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1974}, {"A_title": "build(*): update Node from 6 to 8, update Yarn", "A_clean_title": ["build", "updat", "node", "updat", "yarn"], "B_title": "fix(guide) broken title overflow in navlist", "B_clean_title": ["fix", "guid", "broken", "titl", "overflow", "navlist"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBuild-related.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nWe use Node 6 & an old Yarn version.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nWe use Node 8 & a new Yarn version.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\nAngular (2+) switched to Node 8 and so should we.\r\n\r\nRef angular/angular#20807\r\nRef angular/angular#20832\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "build", "relat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "use", "node", "old", "yarn", "version", "**what", "new", "behavior", "thi", "featur", "chang", "we", "use", "node", "new", "yarn", "version", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**", "angular", "2+", "switch", "node", "so", "we", "ref", "angular", "angular", "20807", "ref", "angular", "angular", "20832"], "B_body": "## Before\n\n![screen shot 2013-08-30 at 1 25 41 pm](https://f.cloud.github.com/assets/1016365/1060537/8829f31a-11b3-11e3-8620-9751954915f4.png)\n## After\n\n![screen shot 2013-08-30 at 1 25 31 pm](https://f.cloud.github.com/assets/1016365/1060540/8b6e9efe-11b3-11e3-8777-fa52f5236a74.png)\n", "B_clean_body": ["befor", "screen", "shot", "2013", "08", "30", "at", "25", "41", "pm", "http", "11b3", "11e3", "8620", "cloud", "github", "9751954915f4", "png", "com", "asset", "1016365", "1060537", "8829f31a", "after", "screen", "shot", "2013", "08", "30", "at", "25", "31", "pm", "http", "11b3", "11e3", "8777", "cloud", "github", "fa52f5236a74", "png", "com", "asset", "1016365", "1060540", "8b6e9ef"], "title_sim": [0.11457608593123043], "body_sim": [0.23227066325885962], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1558}, {"A_title": "refactor($rootScope): consistently use noop as the default $watch listener", "A_clean_title": ["refactor", "rootscop", "root", "scope", "consist", "use", "noop", "as", "default", "watch", "listen"], "B_title": "fix($httpBackend): Ignore multiple calls to onreadystatechange with read...", "B_clean_title": ["fix", "httpbackend", "http", "backend", "ignor", "multipl", "call", "onreadystatechang", "read"], "A_body": "By doing the `isFunction(listener)` check before delegating to `$$watchDelegate` it removes that check from some `$$watchDelegate` methods.", "A_clean_body": ["by", "do", "isfunct", "function", "listen", "check", "befor", "deleg", "watchdeleg", "watch", "deleg", "it", "remov", "that", "check", "some", "watchdeleg", "watch", "deleg", "method"], "B_body": "...yState=4\n\nOn mobile webkit `onreadystatechange` might by called multiple times\nwith `readyState===4`  caused by xhrs that are resolved while the app is\nin the background.\n\n Fixes #5426.\n", "B_clean_body": ["ystate=4", "state=4", "mobil", "webkit", "onreadystatechang", "might", "by", "call", "multipl", "time", "readystate===4", "readi", "state===4", "caus", "by", "xhr", "that", "are", "resolv", "while", "app", "background", "fix", "5426"], "title_sim": [-0.015600560925013876], "body_sim": [0.1159740446295415], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1421}, {"A_title": "docs($animation): fix weird spaces around colons", "A_clean_title": ["doc", "anim", "fix", "weird", "space", "around", "colon"], "B_title": "feat($timeout): add $timeout service that superceeds $deferred", "B_clean_title": ["feat", "timeout", "add", "timeout", "servic", "that", "superce", "defer"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSpacing around colons is weird.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "space", "around", "colon", "weird", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "$timeout has a better name ($defer got often confused with something related to $q) and\nis actually promise based with cancelation support.\n\nWith this commit the $defer service is deprecated and will be removed before 1.0.\n\nCloses #704, #532\n", "B_clean_body": ["timeout", "ha", "better", "name", "defer", "got", "often", "confus", "someth", "relat", "actual", "promis", "base", "cancel", "support", "thi", "commit", "defer", "servic", "deprec", "will", "remov", "befor", "close", "704", "532"], "title_sim": [0.011448299151359375], "body_sim": [0.11237432508630707], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1715}, {"A_title": "perf(orderBy): copy array with slice instead of for loop", "A_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "B_title": "fix(input[text]): composing function dosen't works properly in IE", "B_clean_title": ["fix", "input", "text", "compos", "function", "dose", "n't", "work", "properli", "ie"], "A_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "A_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nComposing function dosen't works properly in IE. Please refer to https://github.com/angular/angular.js/issues/6656 and \"Other information\" below.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt works properly in IE.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nI have investigated on #6656 issue and I found composing function works differently in only IE.\r\nI confirmed this by the scenario below.\r\n - Code changes to investigate this problem(just added console.log)\r\n    ![2017-10-12 17_53_02-engineering-system - c__users_jileeon_documents_git_engineering-system - _p](https://user-images.githubusercontent.com/5166067/31534128-7aac2cba-b030-11e7-8fb6-5a4754dcb0ed.png)\r\n - Scenario\r\n  1. Just type '\uc774\uc7ac\uc775' and focusout.(in IE and Chrome)\r\n - Result(attached images show differences)\r\n   console.log in Chrome\r\n    ![2017-10-12 18_57_52-developer tools - http___127 0 0 1_8888_system_requests_2279](https://user-images.githubusercontent.com/5166067/31534418-ccd3e2d4-b031-11e7-980e-009b635d0bba.png)\r\n   console.log in IE\r\n    ![2017-10-12 18_58_43-f12](https://user-images.githubusercontent.com/5166067/31534528-39585bba-b032-11e7-9486-34f9f479b6e9.png)\r\n   It shows that last values of $viewValue are different. '\uc774\uc7ac\uc774'(IE) != '\uc774\uc7ac\uc775'(Chrome)\r\n   Because 'compositionend' event is not occurred in IE. So $viewValue is not updated with last value in the textbox. It means that IE triggers composition events('compositionstart', 'compositionupdate', 'compositionend') wrong.\r\n   So I added additional condition(ev.originalEvent.data !== undefined) on 'if (composing) return;' statement.\r\n   As you saw these console logs(IE and Chrome) above, this additional condition makes composing function works properly in IE.(by checking ev.originalEvent.data value. if its value is undefined, $viewValue going to be updated with last value in the textbox in IE. So it works like 'compositionend').\r\n   In addition, When IE fixes this wrong event triggering, It works fine without any problems. ", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compos", "function", "dose", "n't", "work", "properli", "ie", "pleas", "refer", "http", "github", "com", "angular", "angular", "js", "issu", "6656", "other", "inform", "below", "**what", "new", "behavior", "thi", "featur", "chang", "it", "work", "properli", "ie", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "have", "investig", "6656", "issu", "found", "compos", "function", "work", "differ", "onli", "ie", "confirm", "thi", "by", "scenario", "below", "code", "chang", "investig", "thi", "problem", "just", "ad", "consol", "log", "2017", "10", "12", "engin", "system", "17", "53", "02", "system", "user", "jileeon", "document", "git", "engin", "http", "7aac2cba", "b030", "11e7", "8fb6", "user", "imag", "githubusercont", "5a4754dcb0", "png", "com", "5166067", "31534128", "scenario", "just", "type", "focusout", "ie", "chrome", "result", "attach", "imag", "show", "differ", "consol", "log", "chrome", "2017", "10", "12", "develop", "18", "57", "52", "tool", "http", "127", "8888", "system", "request", "2279", "http", "ccd3e2d4", "b031", "11e7", "980e", "user", "imag", "githubusercont", "009b635d0bba", "png", "com", "5166067", "31534418", "consol", "log", "ie", "2017", "10", "12", "f12", "18", "58", "43", "http", "39585bba", "b032", "11e7", "9486", "user", "imag", "githubusercont", "34f9f479b6e9", "png", "com", "5166067", "31534528", "it", "show", "that", "last", "valu", "viewvalu", "view", "valu", "are", "differ", "ie", "chrome", "becaus", "'compositionend", "event", "not", "occur", "ie", "so", "viewvalu", "view", "valu", "not", "updat", "last", "valu", "textbox", "it", "mean", "that", "ie", "trigger", "composit", "event", "'compositionstart", "'compositionupd", "'compositionend", "wrong", "so", "ad", "addit", "condit", "ev", "originalev", "data", "origin", "event", "undefin", "'if", "compos", "return", "statement", "as", "you", "saw", "these", "consol", "log", "ie", "chrome", "abov", "thi", "addit", "condit", "make", "compos", "function", "work", "properli", "ie", "by", "check", "ev", "originalev", "data", "origin", "event", "valu", "it", "valu", "undefin", "viewvalu", "view", "valu", "go", "updat", "last", "valu", "textbox", "ie", "so", "it", "work", "like", "'compositionend", "addit", "when", "ie", "fix", "thi", "wrong", "event", "trigger", "it", "work", "fine", "without", "ani", "problem"], "title_sim": [-0.001847911070484444], "body_sim": [0.19631811014971626], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.11929049405569295, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1064}, {"A_title": "Increase performance when checking if element is animatable", "A_clean_title": ["increas", "perform", "when", "check", "element", "animat"], "B_title": "fix(css): ng:form should always be a block element", "B_clean_title": ["fix", "css", "ng", "form", "alway", "block", "element"], "A_body": "Built upon PR #13783 \n", "A_clean_body": ["built", "upon", "pr", "13783"], "B_body": "fix for: http://jsfiddle.net/agamennon12345/twcvt/\n", "B_clean_body": ["fix", "http", "jsfiddl", "net", "agamennon12345", "twcvt"], "title_sim": [0.30032269035949505], "body_sim": [0.05507250685316017], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1541}, {"A_title": "chore(*): stop testing on Edge 15 due to its instability", "A_clean_title": ["chore", "stop", "test", "edg", "15", "due", "it", "instabl"], "B_title": "perf(ngOptions): prevent initial options repainting", "B_clean_title": ["perf", "ngoption", "ng", "option", "prevent", "initi", "option", "repaint"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nChore.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nEdge 15 & 16 are tested.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nOnly Edge 16 is tested.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nEdge 15 disconnects from Karma frequently causing extreme build instability.\r\nWe are testing on Edge 16 & Edge 17 should be released soon anyway.", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "edg", "15", "16", "are", "test", "**what", "new", "behavior", "thi", "featur", "chang", "onli", "edg", "16", "test", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "edg", "15", "disconnect", "karma", "frequent", "caus", "extrem", "build", "instabl", "we", "are", "test", "edg", "16", "edg", "17", "releas", "soon", "anyway"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nSee #15812\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "see", "15812", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.02343817342681275], "body_sim": [0.8755068101476575], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.004552596584592878, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 273}, {"A_title": "[Docs] Add links to Atom and Vim packages for angularjs development", "A_clean_title": ["doc", "add", "link", "atom", "vim", "packag", "angularj", "develop"], "B_title": "Chore travis split unit", "B_clean_title": ["chore", "travi", "split", "unit"], "A_body": "**Docs update**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere was only links to packages for editors Webstorm, Sublime Text and Visual Studio\n\n**What is the new behavior (if this is a feature change)?**\n\nAdditionally there are links to Atom and Vim packages\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nAdd links to packages for Atom and Vim editors under editor support\nsubsection under tools section\n", "A_clean_body": ["**doc", "update**", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "onli", "link", "packag", "editor", "webstorm", "sublim", "text", "visual", "studio", "**what", "new", "behavior", "thi", "featur", "chang", "addit", "there", "are", "link", "atom", "vim", "packag", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "link", "packag", "atom", "vim", "editor", "under", "editor", "support", "subsect", "under", "tool", "section"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.05013303689967341], "body_sim": [0.9602934093210652], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 440}, {"A_title": "fix(orderBy): ensure correct ordering with arrays of objects and no predicate", "A_clean_title": ["fix", "orderbi", "order", "by", "ensur", "correct", "order", "array", "object", "no", "predic"], "B_title": "chore(build): fix bower install", "B_clean_title": ["chore", "build", "fix", "bower", "instal"], "A_body": "This fix also considerably refactors how the `orderBy` filter works in internally.\n\nThe new algorithm precomputes the predicate values for the array being ordered. This makes the algorith easier to follow but also ensures that this computation is done a maximum of n times, whereas in the previous algorithm it could be greater. The downside is that we must temporarily store this intermediate array.\n\nThere could be performance implications, but they are as likely to be beneficial as detrimental. It could probably do with benchmarking.\n\nCloses #11866\n", "A_clean_body": ["thi", "fix", "also", "consider", "refactor", "how", "orderbi", "order", "by", "filter", "work", "intern", "new", "algorithm", "precomput", "predic", "valu", "array", "be", "order", "thi", "make", "algorith", "easier", "follow", "but", "also", "ensur", "that", "thi", "comput", "done", "maximum", "time", "wherea", "previou", "algorithm", "it", "could", "greater", "downsid", "that", "we", "must", "temporarili", "store", "thi", "intermedi", "array", "there", "could", "perform", "implic", "but", "they", "are", "as", "like", "benefici", "as", "detriment", "it", "could", "probabl", "benchmark", "close", "11866"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.045323295331521365], "body_sim": [0.17101943673375128], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.012939672500414025, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 764}, {"A_title": "fix(AngularPublic): expose missing angular public methods", "A_clean_title": ["fix", "angularpubl", "angular", "public", "expos", "miss", "angular", "public", "method"], "B_title": "fix($compile): update cloned elements if the template arrives after the ...", "B_clean_title": ["fix", "compil", "updat", "clone", "element", "templat", "arriv", "after"], "A_body": "- expose lowercase, uppercase and isDate to angular public api\n- remove unnecessary extention of jqLite at an early stage\n", "A_clean_body": ["expos", "lowercas", "uppercas", "isdat", "date", "angular", "public", "api", "remov", "unnecessari", "extent", "jqlite", "jq", "lite", "at", "earli", "stage"], "B_body": "...cloning\n\nIf an element has a directive whose content is loaded using `templateUrl`,\nand the element is cloned using a linking function before the template arrives,\nthe clone needs to be updated as well.\n\nThis also updates `ngIf` and `ngRepeat` to keep the connection to the clone\nof a tranclude function, so that they know about the changes a directive with\n`templateUrl` does to the element in the future.\n\nFixes to #4930.\n", "B_clean_body": ["clone", "element", "ha", "direct", "whose", "content", "load", "templateurl", "templat", "url", "element", "clone", "link", "function", "befor", "templat", "arriv", "clone", "need", "updat", "as", "well", "thi", "also", "updat", "ngif", "ng", "ngrepeat", "ng", "repeat", "keep", "connect", "clone", "tranclud", "function", "so", "that", "they", "know", "about", "chang", "direct", "templateurl", "templat", "url", "element", "futur", "fix", "4930"], "title_sim": [0.010630022296229384], "body_sim": [-0.0365629427696164], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 826}, {"A_title": "test($parse): add tests for watching one-time array/object literals", "A_clean_title": ["test", "pars", "add", "test", "watch", "one", "time", "array", "object", "liter"], "B_title": "fix(ngAria): do not set aria attributes on input[type=\"hidden\"]", "B_clean_title": ["fix", "ngaria", "ng", "aria", "not", "set", "aria", "attribut", "input", "type=", "hidden"], "A_body": "These are some examples of cases which 189461f9bf6fda18ddbd16c42f2e959cf939c3da enabled. All the one-time tests failed before that commit.\r\n\r\nIt's possible that these overlap with [these tests](https://github.com/angular/angular.js/blob/189461f9bf6fda18ddbd16c42f2e959cf939c3da/test/ng/parseSpec.js#L2692) a bit (the non-deep ones), but I think at least the `should ignore changes within nested objects` tests are a good addition.", "A_clean_body": ["these", "are", "some", "exampl", "case", "which", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "enabl", "all", "one", "time", "test", "fail", "befor", "that", "commit", "it", "'s", "possibl", "that", "these", "overlap", "these", "test", "http", "js", "github", "com", "angular", "angular", "js", "blob", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "test", "ng", "parsespec", "pars", "spec", "l2692", "bit", "non", "deep", "one", "but", "think", "at", "least", "ignor", "chang", "within", "nest", "object", "test", "are", "good", "addit"], "B_body": "This fixes a error found by @edclements  using the Google Accessibility Developer Tools audit.\r\nInput fields of type hidden shouldn't have aria attributes.\r\nhttps://www.w3.org/TR/html-aria/#allowed-aria-roles-states-and-properties-1\r\n\r\nCloses #15113\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\naria attributes added to input type hidden\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nNot anymore.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI would say not actually, because the previous behavior didnt follow the spec and I can'T see why anyone would rely on this behavior. It was marked as breaking change in https://github.com/angular/angular.js/pull/15113, though\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nRebased and updated version of https://github.com/angular/angular.js/pull/15113\r\n", "B_clean_body": ["thi", "fix", "error", "found", "by", "edclement", "googl", "access", "develop", "tool", "audit", "input", "field", "type", "hidden", "n't", "have", "aria", "attribut", "http", "w3", "aria", "www", "org", "tr", "html", "allow", "aria", "role", "state", "properti", "close", "15113", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "aria", "attribut", "ad", "input", "type", "hidden", "**what", "new", "behavior", "thi", "featur", "chang", "not", "anymor", "**doe", "thi", "pr", "introduc", "break", "chang", "would", "say", "not", "actual", "becaus", "previou", "behavior", "didnt", "follow", "spec", "can't", "see", "whi", "anyon", "would", "reli", "thi", "behavior", "it", "wa", "mark", "as", "break", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "15113", "though", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "rebas", "updat", "version", "http", "github", "com", "angular", "angular", "js", "pull", "15113"], "title_sim": [-0.00416232321952255], "body_sim": [0.4857301233376913], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.08408253376694397, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 87}, {"A_title": "fix($controller): remove the option to instantiate controllers from c\u2026", "A_clean_title": ["fix", "control", "remov", "option", "instanti", "control", "c\u2026"], "B_title": "refactor($parse): make use of local variable instead of refetching property", "B_clean_title": ["refactor", "pars", "make", "use", "local", "variabl", "instead", "refetch", "properti"], "A_body": "\u2026onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n", "A_clean_body": ["\u2026onstructor", "window", "thi", "also", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "close", "15349", "break", "chang", "option", "instanti", "control", "constructor", "global", "window", "object", "ha", "been", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "that", "could", "enabl", "thi", "behavior", "ha", "been", "remov", "thi", "behavior", "had", "been", "deprec", "sinc", "angularj", "angular", "js", "v1", "becaus", "pollut", "global", "scope", "bad", "migrat", "remov", "call", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "config", "regist", "your", "control", "via", "modul", "api", "or", "controllerprovid", "control", "provid", "angular", "modul", "'mymodul", "'mi", "modul", "control", "'mycontrol", "'mi", "control", "function", "angular", "modul", "'mymodul", "'mi", "modul", "config", "function", "controllerprovid", "control", "provid", "controllerprovid", "regist", "control", "provid", "'mycontrol", "'mi", "control", "function"], "B_body": "I swear that variable [wasn't there originally](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa#diff-780de070ede30180f6aedb6c5f7d57caR1218)!", "B_clean_body": ["swear", "that", "variabl", "wa", "n't", "there", "origin", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff", "780de070ede30180f6aedb6c5f7d57car1218", "780de070ede30180f6aedb6c5f7d57ca", "r1218"], "title_sim": [0.028658928187825616], "body_sim": [0.12329483736706114], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 22}, {"A_title": "chore(gruntfile): check the node version before starting", "A_clean_title": ["chore", "gruntfil", "check", "node", "version", "befor", "start"], "B_title": "chore(version-info.js): ignore curl file write errors", "B_clean_title": ["chore", "version", "info", "js", "ignor", "curl", "file", "write", "error"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe specify the node version that is required to run the build in the `.nvmrc`\nfile. So let's check that the current node version satisfies this and report\na helpful message if it is not.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "we", "specifi", "node", "version", "that", "requir", "run", "build", "nvmrc", "file", "so", "let", "'s", "check", "that", "current", "node", "version", "satisfi", "thi", "report", "help", "messag", "it", "not"], "B_body": "On Windows, curl can obviously not write to `dev/null`, and throws code 23, which prevents us from checking that the CDN server responded. However, we don't need the file anyway, we just need the status code, so we can ignore the file write error.\n\nThis needs to be tested on Linux / Mac however!\n", "B_clean_body": ["window", "curl", "obvious", "not", "write", "dev", "null", "throw", "code", "23", "which", "prevent", "us", "check", "that", "cdn", "server", "respond", "howev", "we", "n't", "need", "file", "anyway", "we", "just", "need", "statu", "code", "so", "we", "ignor", "file", "write", "error", "thi", "need", "test", "linux", "mac", "howev"], "title_sim": [0.32572138224241104], "body_sim": [0.18142891414296292], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.4596054335480397, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 127}, {"A_title": "Feat: ng-[event]-prepare class for structural animations (ngIf etc)", "A_clean_title": ["feat", "ng", "event", "prepar", "class", "structur", "anim", "ngif", "ng", "etc"], "B_title": "fix(Angular): do not autobootstrap if the `src` exists but is empty", "B_clean_title": ["fix", "angular", "not", "autobootstrap", "src", "exist", "but", "empti"], "A_body": "A fix / workaround for #12969\n\nWe currently don't have any place in the docs that documents the classes ngAnimate adds. At least I can't find it .:o I think it got lost during 1.4. We should add it back so people can find this feature easier.\n\nIdea by @matsko \n", "A_clean_body": ["fix", "workaround", "12969", "we", "current", "n't", "have", "ani", "place", "doc", "that", "document", "class", "nganim", "ng", "anim", "add", "at", "least", "ca", "n't", "find", "it", "think", "it", "got", "lost", "dure", "we", "add", "it", "back", "so", "peopl", "find", "thi", "featur", "easier", "idea", "by", "matsko"], "B_body": "In Chrome an empty `src` attribute will be ignored, but in Firefox it seems\r\nhappy to prepend the `base[href]` and try to load whatever that is.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["chrome", "empti", "src", "attribut", "will", "ignor", "but", "firefox", "it", "seem", "happi", "prepend", "base", "href", "tri", "load", "whatev", "that", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.002557416367520383], "body_sim": [0.2525316071632304], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01213000715636052, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 456}, {"A_title": "docs($location): describe your change...", "A_clean_title": ["doc", "locat", "describ", "your", "chang"], "B_title": "docs(app): adds border", "B_clean_title": ["doc", "app", "add", "border"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\ninaccurate docs\n\n**What is the new behavior (if this is a feature change)?**\ncorrect docs\n\n**Does this PR introduce a breaking change?**\nno\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\ndocs for return of path() inaccurately describe the function\u2019s return when a value is passed in.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "inaccur", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "correct", "doc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "doc", "return", "path", "inaccur", "describ", "function", "return", "when", "valu", "pass"], "B_body": "Adds a border to the top of the h2 like the current docs app.\n", "B_clean_body": ["add", "border", "top", "h2", "like", "current", "doc", "app"], "title_sim": [0.23228299112050388], "body_sim": [0.26103563179766015], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 491}, {"A_title": "fix(AngularPublic): expose missing angular public methods", "A_clean_title": ["fix", "angularpubl", "angular", "public", "expos", "miss", "angular", "public", "method"], "B_title": "fix(ngOptions): override select option registration", "B_clean_title": ["fix", "ngoption", "ng", "option", "overrid", "select", "option", "registr"], "A_body": "- expose lowercase, uppercase and isDate to angular public api\n- remove unnecessary extention of jqLite at an early stage\n", "A_clean_body": ["expos", "lowercas", "uppercas", "isdat", "date", "angular", "public", "api", "remov", "unnecessari", "extent", "jqlite", "jq", "lite", "at", "earli", "stage"], "B_body": "When ngOptions is present on a select, the option directive should not be able to\nregister options on the selectCtrl since this may cause errors during the\nngOptions lifecycle.\n\nThis can happen in the following cases:\n- there is a blank option below the select element, an ngModel\n  directive, an ngOptions directive and some other directive on the select\n  element, which compiles the children of the select\n  (i.e. the option elements) before ngOptions is has finished linking.\n- there is a blank option below the select element, an ngModel\n  directive, an ngOptions directive and another directive, which uses\n  templateUrl and replace:true.\n\nWhat happens is:\n- the option directive is compiled and adds an element `$destroy` listener\n  that will call `ngModel.$render` when the option element is removed.\n- when `ngOptions` processes the option, it removes the element, and\n  triggers the `$destroy` listener on the option.\n- the registered `$destroy` listener calls `$render` on `ngModel`.\n- $render calls `selectCtrl.writeValue()`, which accesses the `options`\n  object in the `ngOptions` directive.\n- Since `ngOptions` has not yet completed linking the `options` has not\n  yet been defined and we get an error.\n\nThis fix moves the registration code for the `option` directive into the\n`SelectController`, which can then be easily overridden by the `ngOptions`\ndirective as a `noop`.\n\nFixes #11685\nCloses #12972\nCloses #12968\n", "B_clean_body": ["when", "ngoption", "ng", "option", "present", "select", "option", "direct", "not", "abl", "regist", "option", "selectctrl", "select", "ctrl", "sinc", "thi", "may", "caus", "error", "dure", "ngoption", "ng", "option", "lifecycl", "thi", "happen", "follow", "case", "there", "blank", "option", "below", "select", "element", "ngmodel", "ng", "model", "direct", "ngoption", "ng", "option", "direct", "some", "other", "direct", "select", "element", "which", "compil", "children", "select", "option", "element", "befor", "ngoption", "ng", "option", "ha", "finish", "link", "there", "blank", "option", "below", "select", "element", "ngmodel", "ng", "model", "direct", "ngoption", "ng", "option", "direct", "anoth", "direct", "which", "use", "templateurl", "templat", "url", "replac", "true", "what", "happen", "option", "direct", "compil", "add", "element", "destroy", "listen", "that", "will", "call", "ngmodel", "ng", "model", "render", "when", "option", "element", "remov", "when", "ngoption", "ng", "option", "process", "option", "it", "remov", "element", "trigger", "destroy", "listen", "option", "regist", "destroy", "listen", "call", "render", "ngmodel", "ng", "model", "render", "call", "selectctrl", "writevalu", "select", "ctrl", "write", "valu", "which", "access", "option", "object", "ngoption", "ng", "option", "direct", "sinc", "ngoption", "ng", "option", "ha", "not", "yet", "complet", "link", "option", "ha", "not", "yet", "been", "defin", "we", "get", "error", "thi", "fix", "move", "registr", "code", "option", "direct", "into", "selectcontrol", "select", "control", "which", "then", "easili", "overridden", "by", "ngoption", "ng", "option", "direct", "as", "noop", "fix", "11685", "close", "12972", "close", "12968"], "title_sim": [0.008811159346714649], "body_sim": [0.027596800153864613], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1503}, {"A_title": "fix(sanitizeUri): sanitize URIs that contain IDEOGRAPHIC SPACE chars", "A_clean_title": ["fix", "sanitizeuri", "sanit", "uri", "sanit", "uri", "ur", "that", "contain", "ideograph", "space", "char"], "B_title": "docs: load angular from can only on production", "B_clean_title": ["doc", "load", "angular", "onli", "product"], "A_body": "Chrome 62 was not sanitizing dangerous URLs containing\r\nJavaScript, if they started with these \"whitespace\" characters.\r\n\r\nCloses #16288\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#16288\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nURIs are sanitized correctly on Chrome 62\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["chrome", "62", "wa", "not", "sanit", "danger", "url", "ur", "ls", "contain", "javascript", "java", "script", "they", "start", "these", "whitespac", "charact", "close", "16288", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "16288", "**what", "new", "behavior", "thi", "featur", "chang", "uri", "ur", "are", "sanit", "correctli", "chrome", "62", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "So that when running the docs locally, eg. during e2e testing, we use the latest build version of angular, rather than the stable one from CDN.\n", "B_clean_body": ["so", "that", "when", "run", "doc", "local", "eg", "dure", "e2e", "test", "we", "use", "latest", "build", "version", "angular", "rather", "than", "stabl", "one", "cdn"], "title_sim": [0.016544455486885188], "body_sim": [0.14848529073451636], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1869}, {"A_title": "Fixed spelling error for word 'standalone'", "A_clean_title": ["fix", "spell", "error", "word", "'standalon"], "B_title": "chore(code.angular): correctly remove old zip files from snapshot", "B_clean_title": ["chore", "code", "angular", "correctli", "remov", "old", "zip", "file", "snapshot"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Previously, the event would be triggered on the deletion of the previous zip files,\r\nwhich would delete the current zip file as well\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["previous", "event", "would", "trigger", "delet", "previou", "zip", "file", "which", "would", "delet", "current", "zip", "file", "as", "well", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.004725729498660796], "body_sim": [0.9616011522399887], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 320}, {"A_title": "docs(linky): mark \"target\" param as optional in linky filter", "A_clean_title": ["doc", "linki", "mark", "target", "param", "as", "option", "linki", "filter"], "B_title": "chore(travis: fix deployment condition to include tagged commits", "B_clean_title": ["chore", "travi", "fix", "deploy", "condit", "includ", "tag", "commit"], "A_body": "This argument is optional in practice, and it is not provided in many of the examples in the documentation.\r\nIts optional presence is handled here:\r\nhttps://github.com/angular/angular.js/blob/master/src/ngSanitize/filter/linky.js#L185.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe second argument to ngSanitize's \"linky\" filter is marked as non-optional, it is handled as optional and usage shows it as being optional.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nngSanitize's \"linky\" filter has it's second parameter marked as optional.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "argument", "option", "practic", "it", "not", "provid", "mani", "exampl", "document", "it", "option", "presenc", "handl", "here", "http", "js", "github", "com", "angular", "angular", "js", "blob", "master", "src", "ngsanit", "filter", "linki", "ng", "sanit", "l185", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "second", "argument", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "mark", "as", "non", "option", "it", "handl", "as", "option", "usag", "show", "it", "as", "be", "option", "**what", "new", "behavior", "thi", "featur", "chang", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "ha", "it", "'s", "second", "paramet", "mark", "as", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.036934530903303446], "body_sim": [0.8151402928499869], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 12}, {"A_title": "fix(select): don't register options when select has no ngModel", "A_clean_title": ["fix", "select", "n't", "regist", "option", "when", "select", "ha", "no", "ngmodel", "ng", "model"], "B_title": "refactor($compile): remove unused `return` statement", "B_clean_title": ["refactor", "compil", "remov", "unus", "return", "statement"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nOptions are added even if select has no ngModel. ngValue replaces the value attribute of the element with a hashed value, and this might break tests (it does in angular material)\n\n**What is the new behavior (if this is a feature change)?**\nOptions are not added to select\n\n**Does this PR introduce a breaking change?**\n?\nI can't think of a valid use case where you'd want registerning options without ngModel integration. If you don't have model binding, then you don't need to store the options internally. You can actually use ngOptions without ngModel to render a list of options - but you don't need to register the options for that.\n\nThe registerOption function is also not documented, so this is an implementation detail from the perspective of the user\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nWhen option elements use ngValue, value or interpolated text simply to set\nthe option value, i.e. when the parent select doesn't have an ngModel,\nthere is no necessity in registering the options with the select controller.\nThis was previously no problem, as the ngModelController is set to a noop controller,\nso that all further interactions are aborted ($render etc)\n\nHowever, ngValue sets a hashed value inside the option value (to support arbitrary object types).\nThis can cause issues with tests that expect unhashed values.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "option", "are", "ad", "even", "select", "ha", "no", "ngmodel", "ng", "model", "ngvalu", "ng", "valu", "replac", "valu", "attribut", "element", "hash", "valu", "thi", "might", "break", "test", "it", "angular", "materi", "**what", "new", "behavior", "thi", "featur", "chang", "option", "are", "not", "ad", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ca", "n't", "think", "valid", "use", "case", "where", "you", "'d", "want", "registern", "option", "without", "ngmodel", "ng", "model", "integr", "you", "n't", "have", "model", "bind", "then", "you", "n't", "need", "store", "option", "intern", "you", "actual", "use", "ngoption", "ng", "option", "without", "ngmodel", "ng", "model", "render", "list", "option", "but", "you", "n't", "need", "regist", "option", "that", "registeropt", "regist", "option", "function", "also", "not", "document", "so", "thi", "implement", "detail", "perspect", "user", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "when", "option", "element", "use", "ngvalu", "ng", "valu", "valu", "or", "interpol", "text", "simpli", "set", "option", "valu", "when", "parent", "select", "n't", "have", "ngmodel", "ng", "model", "there", "no", "necess", "regist", "option", "select", "control", "thi", "wa", "previous", "no", "problem", "as", "ngmodelcontrol", "ng", "model", "control", "set", "noop", "control", "so", "that", "all", "further", "interact", "are", "abort", "render", "etc", "howev", "ngvalu", "ng", "valu", "set", "hash", "valu", "insid", "option", "valu", "support", "arbitrari", "object", "type", "thi", "caus", "issu", "test", "that", "expect", "unhash", "valu"], "B_body": "As discussed in https://github.com/angular/angular.js/commit/89447b3f2b4c6db62c24473a81fedc3b04242b85#commitcomment-10280666.\n", "B_clean_body": ["as", "discuss", "http", "github", "com", "angular", "angular", "js", "commit", "89447b3f2b4c6db62c24473a81fedc3b04242b85", "commitcom", "10280666"], "title_sim": [0.0038075843646368434], "body_sim": [0.2602974068853334], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 465}, {"A_title": "perf(ngOptions): use documentFragment to populate select", "A_clean_title": ["perf", "ngoption", "ng", "option", "use", "documentfrag", "document", "fragment", "popul", "select"], "B_title": "docs($resourceProvider): include '$'", "B_clean_title": ["doc", "resourceprovid", "resourc", "provid", "includ"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nperf/fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n- ngoptions is slow in ie with many options\n- strange freezes in ie in some cases\n\n**Does this PR introduce a breaking change?**\na tiny one possibly - now the select element is completely emptied before the options are appended\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis changes the way option elements are generated when the ngOption collection changes.\nPreviously, we would re-use option elements when possible (updating their text and\nlabel). Now, we first remove all currently displayed options and the create new options for the\ncollection. The new options are first appended to a documentFragment, which is in the end appended\nto the selectElement.\n\nUsing documentFragment improves render performance in IE with large option collections\n(> 100 elements) considerably.\n\nAlways creating new options fixes issues in IE where the select would become unresponsive to user\ninput.\n\nFixes #13607\nFixes #12076\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "perf", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "ngoption", "slow", "ie", "mani", "option", "strang", "freez", "ie", "some", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "tini", "one", "possibl", "now", "select", "element", "complet", "empti", "befor", "option", "are", "append", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "chang", "way", "option", "element", "are", "gener", "when", "ngoption", "ng", "option", "collect", "chang", "previous", "we", "would", "re", "use", "option", "element", "when", "possibl", "updat", "their", "text", "label", "now", "we", "first", "remov", "all", "current", "display", "option", "creat", "new", "option", "collect", "new", "option", "are", "first", "append", "documentfrag", "document", "fragment", "which", "end", "append", "selectel", "select", "element", "documentfrag", "document", "fragment", "improv", "render", "perform", "ie", "larg", "option", "collect", "100", "element", "consider", "alway", "creat", "new", "option", "fix", "issu", "ie", "where", "select", "would", "becom", "unrespons", "user", "input", "fix", "13607", "fix", "12076"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n**What is the current behavior? (You can also link to an open issue here)**\nincorrect code in the examples\n**What is the new behavior (if this is a feature change)?**\ncode is copy-paste-ready\n**Does this PR introduce a breaking change?**\nno\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nInclude the '$' in the injection argument of the two examples.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "incorrect", "code", "exampl", "**what", "new", "behavior", "thi", "featur", "chang", "code", "copi", "past", "readi", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "includ", "inject", "argument", "two", "exampl"], "title_sim": [0.03270733047963252], "body_sim": [0.6382099026097428], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 151}, {"A_title": "fix(ngView): use animation promises ensure that only one leave animation...", "A_clean_title": ["fix", "ngview", "ng", "view", "use", "anim", "promis", "ensur", "that", "onli", "one", "leav", "anim"], "B_title": "docs($exceptionHandler): code snippet syntax is incorrect", "B_clean_title": ["doc", "exceptionhandl", "except", "handler", "code", "snippet", "syntax", "incorrect"], "A_body": "... occurs at a time\n\nthe tracking depended on a local flag variable, which was susceptible to corruption due to\nrace conditions.\n\nCloses #9355\nCloses #7606\n", "A_clean_body": ["occur", "at", "time", "track", "depend", "local", "flag", "variabl", "which", "wa", "suscept", "corrupt", "due", "race", "condit", "close", "9355", "close", "7606"], "B_body": "Updated the documentation on exception handler, there was an end bracket missing.\n\nSupposedly not a breaking change, it's only documentation update.\n", "B_clean_body": ["updat", "document", "except", "handler", "there", "wa", "end", "bracket", "miss", "supposedli", "not", "break", "chang", "it", "'s", "onli", "document", "updat"], "title_sim": [-0.024899982794900966], "body_sim": [0.1371184190361459], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 621}, {"A_title": "docs(CONTRIBUTING.md): add note about scope wildcard", "A_clean_title": ["doc", "contribut", "md", "add", "note", "about", "scope", "wildcard"], "B_title": "fix(jqLite): make removeData() not remove event handlers", "B_clean_title": ["fix", "jqlite", "jq", "lite", "make", "removedata", "remov", "data", "not", "remov", "event", "handler"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nno hint that `*` is a valid scope -- it hints you could omit the `(...)` bit, but most commits of late don't\n\n**What is the new behavior (if this is a feature change)?**\n\ndocumentation of `*`\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "hint", "that", "valid", "scope", "it", "hint", "you", "could", "omit", "bit", "but", "most", "commit", "late", "don't", "**what", "new", "behavior", "thi", "featur", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix but a breaking change as well.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`removeData()` invoked on an element removes its event handlers as well.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n`removeData()` removes just user-set `data`, not internal data storage used for event handling. This aligns jqLite with jQuery.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~ (the current behavior is not documented)\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nFixes #15869", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "but", "break", "chang", "as", "well", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "removedata", "remov", "data", "invok", "element", "remov", "it", "event", "handler", "as", "well", "**what", "new", "behavior", "thi", "featur", "chang", "removedata", "remov", "data", "remov", "just", "user", "set", "data", "not", "intern", "data", "storag", "use", "event", "handl", "thi", "align", "jqlite", "jq", "lite", "jqueri", "queri", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "current", "behavior", "not", "document", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "fix", "15869"], "title_sim": [-0.02365469369355035], "body_sim": [0.8762718677649793], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 515}, {"A_title": "docs($compileProvider): improve strictComponentBindingsEnabled info", "A_clean_title": ["doc", "compileprovid", "compil", "provid", "improv", "strictcomponentbindingsen", "strict", "compon", "bind", "enabl", "info"], "B_title": "fix(jqLite): children() should only return elements", "B_clean_title": ["fix", "jqlite", "jq", "lite", "children", "onli", "return", "element"], "A_body": "Related to #16303\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs are too unspecific.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["relat", "16303", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "are", "too", "unspecif", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "The jQuery implementation of children only returns child nodes of the given element that are elements themselves. The previous jqLite implementation was returning all nodes except those that are text nodes. Use jQLite.contents() to get all the child nodes.\n\nThe jQuery implementation of contents returns [] if the object has no child nodes.  The previous jqLite implementation was returning undefined, causing a stack overflow in test/testabilityPatch.js when it tried to `cleanup()` a window object.\n\nThe testabilityPatch was incorrectly using children() rather than contents() inside cleanup() to iterate down through all the child nodes of the element to clean up.\n", "B_clean_body": ["jqueri", "queri", "implement", "children", "onli", "return", "child", "node", "given", "element", "that", "are", "element", "themselv", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "all", "node", "except", "those", "that", "are", "text", "node", "use", "jqlite", "content", "lite", "get", "all", "child", "node", "jqueri", "queri", "implement", "content", "return", "object", "ha", "no", "child", "node", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "undefin", "caus", "stack", "overflow", "js", "test", "testabilitypatch", "testabl", "patch", "when", "it", "tri", "cleanup", "window", "object", "testabilitypatch", "testabl", "patch", "wa", "incorrectli", "children", "rather", "than", "content", "insid", "cleanup", "iter", "down", "through", "all", "child", "node", "element", "clean", "up"], "title_sim": [-0.01626635939182336], "body_sim": [0.03172108754591053], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1774}, {"A_title": "docs(CONTRIBUTING.md): Updated commit types.", "A_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "B_title": "fix($browser/$location): single quote in url causes infinite digest in F...", "B_clean_title": ["fix", "browser", "locat", "singl", "quot", "url", "caus", "infinit", "digest"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "B_body": "...F\n\nThe real issue is in FF, see https://bugzilla.mozilla.org/show_bug.cgi?id=407172.\n\nFF overly encodes stuff which breaks our expectations and then we fail .url() != currentUrl.absUrl()\ncomparison unexpectidly, which leads to infinite digest.\n\nThe workaround is to correct for this inconsistency in $browser and decode any single quotes in urls.\n\nCloses #920\n", "B_clean_body": ["real", "issu", "ff", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=407172", "ff", "overli", "encod", "stuff", "which", "break", "our", "expect", "then", "we", "fail", "url", "currenturl", "absurl", "current", "url", "ab", "url", "comparison", "unexpectidli", "which", "lead", "infinit", "digest", "workaround", "correct", "thi", "inconsist", "browser", "decod", "ani", "singl", "quot", "url", "close", "920"], "title_sim": [0.054755975883154444], "body_sim": [0.19527925455927064], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.033234242010398575, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1631}, {"A_title": "fix($sce): do not assume $document[0] exists", "A_clean_title": ["fix", "sce", "not", "assum", "document", "exist"], "B_title": "wip: feat(ngModel): run formatters / setModelValue", "B_clean_title": ["wip", "feat", "ngmodel", "ng", "model", "run", "formatt", "setmodelvalu", "set", "model", "valu"], "A_body": "this is important so that people can mock $window without having to add stuff that angular uses internally into it\n\nCloses #9661\n", "A_clean_body": ["thi", "import", "so", "that", "peopl", "mock", "window", "without", "have", "add", "stuff", "that", "angular", "use", "intern", "into", "it", "close", "9661"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's currently no way to manually run the model -> view pipeline / formatters\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAn API to run the whole pipeline / the formatters is introduced.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nThe PR includes both a `$format` and a `$setModelValue` function. I think only one is needed, we just need to decide which one.\r\n\r\n$format:\r\n\r\n- PRO: does the most needed thing, very straightforward: run the formatters and updates the viewValue\r\n- CON: developer must run $render manually\r\n- CON: empty classes are set even though the DOM is not updated. Could be moved to $render()\r\n- CON: no equivalent on the view -> model side (inconsistent API)\r\n\r\n$setModelValue\r\n- PRO: equivalent to $setViewValue, runs the whole pipeline\r\n- CON: unintuitive that the function argument should / must be set to the current $modelValue, so the control does not get out of sync with the scope (same behavior as $setViewValue though)\r\n- CON: only runs $render if the viewValue has actually changed.\r\n- CON: always runs the validation, even though it might not be necessary\r\n\r\nBoth methods can handle the basic case, where an app developer wants to run the formatters the view -> model pipeline has been run, see https://github.com/angular/angular.js/issues/3407 or https://github.com/angular/angular.js/pull/5221\r\n\r\nI personally tend to introduce `$format` as it has the smaller surface area and introduces fewer side effects. The full model -> view pipeline is not really needed for most cases.\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "current", "no", "way", "manual", "run", "model", "view", "pipelin", "formatt", "**what", "new", "behavior", "thi", "featur", "chang", "api", "run", "whole", "pipelin", "formatt", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "pr", "includ", "both", "format", "setmodelvalu", "set", "model", "valu", "function", "think", "onli", "one", "need", "we", "just", "need", "decid", "which", "one", "format", "pro", "most", "need", "thing", "veri", "straightforward", "run", "formatt", "updat", "viewvalu", "view", "valu", "con", "develop", "must", "run", "render", "manual", "con", "empti", "class", "are", "set", "even", "though", "dom", "not", "updat", "could", "move", "render", "con", "no", "equival", "view", "model", "side", "inconsist", "api", "setmodelvalu", "set", "model", "valu", "pro", "equival", "setviewvalu", "set", "view", "valu", "run", "whole", "pipelin", "con", "unintuit", "that", "function", "argument", "must", "set", "current", "modelvalu", "model", "valu", "so", "control", "not", "get", "out", "sync", "scope", "same", "behavior", "as", "setviewvalu", "set", "view", "valu", "though", "con", "onli", "run", "render", "viewvalu", "view", "valu", "ha", "actual", "chang", "con", "alway", "run", "valid", "even", "though", "it", "might", "not", "necessari", "both", "method", "handl", "basic", "case", "where", "app", "develop", "want", "run", "formatt", "view", "model", "pipelin", "ha", "been", "run", "see", "http", "github", "com", "angular", "angular", "js", "issu", "3407", "or", "http", "github", "com", "angular", "angular", "js", "pull", "5221", "person", "tend", "introduc", "format", "as", "it", "ha", "smaller", "surfac", "area", "introduc", "fewer", "side", "effect", "full", "model", "view", "pipelin", "not", "realli", "need", "most", "case"], "title_sim": [-0.02606473653940365], "body_sim": [0.2939175133747975], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0010596624504264328, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1071}, {"A_title": "feat(jqLite): make injector() and scope() work with the document object", "A_clean_title": ["feat", "jqlite", "jq", "lite", "make", "injector", "scope", "work", "document", "object"], "B_title": "chore(doc-gen, docs-app): generate version for stable snapshot", "B_clean_title": ["chore", "doc", "gen", "doc", "app", "gener", "version", "stabl", "snapshot"], "A_body": "For typical app that has ng-app directive on the html element, we now can do:\n\nangular.element(document).injector() or .injector()\nangular.element(document).scope() or .scope()\n\ninstead of:\n\nangular.element(document.getElementsByTagName('html')[0]).injector()\n...\n", "A_clean_body": ["typic", "app", "that", "ha", "ng", "app", "direct", "html", "element", "we", "now", "angular", "element", "document", "injector", "or", "injector", "angular", "element", "document", "scope", "or", "scope", "instead", "angular", "element", "document", "getelementsbytagnam", "get", "element", "by", "tag", "name", "'html", "injector"], "B_body": "The \"stable snapshot\" is based on the latest commit on the current stable\r\nbranch, i.e. a preview of the next patch version.\r\n\r\nNext thing:\r\n- update the Firebase deployment so that on the branch with distTag = latest gets deployed to docs.angularjs.org and as to gcs as snapshot-stable\r\n\r\n\r\n", "B_clean_body": ["stabl", "snapshot", "base", "latest", "commit", "current", "stabl", "branch", "preview", "next", "patch", "version", "next", "thing", "updat", "firebas", "deploy", "so", "that", "branch", "disttag", "dist", "tag", "latest", "get", "deploy", "doc", "angularj", "org", "as", "gc", "as", "snapshot", "stabl"], "title_sim": [0.1491478930924916], "body_sim": [0.16879258972701505], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.10821337230018707, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2035}, {"A_title": "fix(ngOptions): remove selected attribute from unselected options", "A_clean_title": ["fix", "ngoption", "ng", "option", "remov", "select", "attribut", "unselect", "option"], "B_title": "fix($compile): update cloned elements if the template arrives after the ...", "B_clean_title": ["fix", "compil", "updat", "clone", "element", "templat", "arriv", "after"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14892 nad #14419\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nWhen the select model changes, we add the \"selected\" attribute to the selected option, so that\nscreen readers know which option is selected.\n\nPreviously, we failed to remove the attribute when the model changed to match a different option, or\nthe unknown / empty option.\n\nWhen using \"track by\", the behavior would also show when a user selected an option, and then the\nmodel was changed, because track by watches the tracked expression, and calls the $render function\non change.\n\nThis fix reads the current select value, finds the matching option and removes the \"selected\"\nattribute.\n\nFixes #14892\nFixes #14419\nRelated #12731\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14892", "nad", "14419", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "when", "select", "model", "chang", "we", "add", "select", "attribut", "select", "option", "so", "that", "screen", "reader", "know", "which", "option", "select", "previous", "we", "fail", "remov", "attribut", "when", "model", "chang", "match", "differ", "option", "or", "unknown", "empti", "option", "when", "track", "by", "behavior", "would", "also", "show", "when", "user", "select", "option", "then", "model", "wa", "chang", "becaus", "track", "by", "watch", "track", "express", "call", "render", "function", "chang", "thi", "fix", "read", "current", "select", "valu", "find", "match", "option", "remov", "select", "attribut", "fix", "14892", "fix", "14419", "relat", "12731"], "B_body": "...cloning\n\nIf an element has a directive whose content is loaded using `templateUrl`,\nand the element is cloned using a linking function before the template arrives,\nthe clone needs to be updated as well.\n\nThis also updates `ngIf` and `ngRepeat` to keep the connection to the clone\nof a tranclude function, so that they know about the changes a directive with\n`templateUrl` does to the element in the future.\n\nFixes to #4930.\n", "B_clean_body": ["clone", "element", "ha", "direct", "whose", "content", "load", "templateurl", "templat", "url", "element", "clone", "link", "function", "befor", "templat", "arriv", "clone", "need", "updat", "as", "well", "thi", "also", "updat", "ngif", "ng", "ngrepeat", "ng", "repeat", "keep", "connect", "clone", "tranclud", "function", "so", "that", "they", "know", "about", "chang", "direct", "templateurl", "templat", "url", "element", "futur", "fix", "4930"], "title_sim": [0.09765341679637006], "body_sim": [0.13792342784747613], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02977614968210928, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 957}, {"A_title": "fix(input[radio]): use strict comparison when evaluating checked-ness", "A_clean_title": ["fix", "input", "radio", "use", "strict", "comparison", "when", "evalu", "check", "ness"], "B_title": "fix(jqLite): use getElementsByTagName for dealoc-ing elements, cz of SVG on IE", "B_clean_title": ["fix", "jqlite", "jq", "lite", "use", "getelementsbytagnam", "get", "element", "by", "tag", "name", "dealoc", "ing", "element", "cz", "svg", "ie"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFix\n\n**What is the current behavior? (You can also link to an open issue here)**\nWhen using input[radio], the checked status is determined by doing\na non-strict comparison between the value of the input and the ngModel.$viewValue. This can\nlead to inconsistencies when using values such as 0 and false.\n\n**Does this PR introduce a breaking change?**\nYes\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nCloses #15283\n\nBREAKING CHANGE:\n\nWhen using input[radio], the checked status is now determined by doing\na strict comparison between the value of the input and the ngModel.$viewValue.\nPreviously, this was a non-strict comparison (==).\n\nThis means in the following examples the radio is no longer checked:\n\n```\n  <!-- this.selected = 0 -->\n  <input type=\"radio\" ng-model=\"$ctrl.selected\" value=\"0\" >\n\n  <!-- this.selected = 0; this.value = false; -->\n  <input type=\"radio\" ng-model=\"$ctrl.selected\" ng-value=\"$ctrl.value\" >\n```\n\nThe migration strategy is to convert values that matched with non-strict\nconversion so that they will match with strict conversion.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "input", "radio", "check", "statu", "determin", "by", "do", "non", "strict", "comparison", "between", "valu", "input", "ngmodel", "ng", "model", "viewvalu", "view", "valu", "thi", "lead", "inconsist", "when", "valu", "such", "as", "fals", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "close", "15283", "break", "chang", "when", "input", "radio", "check", "statu", "now", "determin", "by", "do", "strict", "comparison", "between", "valu", "input", "ngmodel", "ng", "model", "viewvalu", "view", "valu", "previous", "thi", "wa", "non", "strict", "comparison", "thi", "mean", "follow", "exampl", "radio", "no", "longer", "check", "thi", "select", "input", "type=", "radio", "ng", "model=", "ctrl", "select", "value=", "thi", "select", "thi", "valu", "fals", "input", "type=", "radio", "ng", "model=", "ctrl", "select", "ng", "value=", "ctrl", "valu", "migrat", "strategi", "convert", "valu", "that", "match", "non", "strict", "convers", "so", "that", "they", "will", "match", "strict", "convers"], "B_body": "See comments in #8075\n", "B_clean_body": ["see", "comment", "8075"], "title_sim": [0.15049927259537768], "body_sim": [0.03133627552193394], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.006149064322703902, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 830}, {"A_title": "docs(CONTRIBUTING.md): Updated commit types.", "A_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "B_title": "docs(guide/Components): snake -> kebab", "B_clean_title": ["doc", "guid", "compon", "snake", "kebab"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDoc correction.\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nDocs mention `snake_case`.\n\n**What is the new behavior (if this is a feature change)?**\n\nExample given is actually `kebab-case`.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example given is not in snake_case, it is in kebab-case.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "correct", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "mention", "snake", "case", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "given", "actual", "kebab", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "given", "not", "snake", "case", "it", "kebab", "case"], "title_sim": [0.2564080359758866], "body_sim": [0.9215478997802766], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 195}, {"A_title": "feat(jqLite): return [] for .val() on <select multiple> with no selection", "A_clean_title": ["feat", "jqlite", "jq", "lite", "return", "val", "select", "multipl", "no", "select"], "B_title": "fix(markup): Make special attrs such as ng:href work even without binding", "B_clean_title": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFeature (an API change).\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe `.val()` getter on `<select multiple>...</select>` returns `null` if no options are selected.\n\n**What is the new behavior (if this is a feature change)?**\nThe `.val()` getter on `<select multiple>...</select>` returns an empty array if no options are selected.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features) -- what should I do here?\n\n**Other information**:\n\nFixes #14370\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "api", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "val", "getter", "select", "multipl", "select", "return", "null", "no", "option", "are", "select", "**what", "new", "behavior", "thi", "featur", "chang", "val", "getter", "select", "multipl", "select", "return", "empti", "array", "no", "option", "are", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "what", "here", "**other", "information**", "fix", "14370"], "B_body": "fix(markup): Make special attrs such as ng:href work even without binding\n- special attrs such as ng:href, ng:check did not work as intended when\n  their values do not contain bindings. And this commit is to fix that\n\nCloses #534\n", "B_clean_body": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind", "special", "attr", "such", "as", "ng", "href", "ng", "check", "did", "not", "work", "as", "intend", "when", "their", "valu", "not", "contain", "bind", "thi", "commit", "fix", "that", "close", "534"], "title_sim": [0.029310341191890802], "body_sim": [0.11630392602250247], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.09273452973243802, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1839}, {"A_title": "Allow NgModelController to be copied", "A_clean_title": ["allow", "ngmodelcontrol", "ng", "model", "control", "copi"], "B_title": "test(orderBy): add test cases for ordering array-like objects", "B_clean_title": ["test", "orderbi", "order", "by", "add", "test", "case", "order", "array", "like", "object"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`copy` throws when copying a `NgModelController` instance. This will occur when deep watching such as when doing `<e ref=\"[myNgModel]\">` (#15833)\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe internal `NgModelController` `$$scope` is hidden\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno, unless someone is doing something crazy that depends on `$$scope` being enumerable?\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nI've split the commit up into 3.  I think the refactor + (modified) test should go into 1.7. I don't think the actual fix should go into 1.7.  The specific test case (watched a literal containing an ng-model) will no longer fail in 1.7. If we want to prevent other cases like manually deep-watching or manually `copy`ing an ng-model I think we should do it differently in 1.7...\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "copi", "throw", "when", "copi", "ngmodelcontrol", "ng", "model", "control", "instanc", "thi", "will", "occur", "when", "deep", "watch", "such", "as", "when", "do", "ref=", "myngmodel", "my", "ng", "model", "15833", "**what", "new", "behavior", "thi", "featur", "chang", "intern", "ngmodelcontrol", "ng", "model", "control", "scope", "hidden", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "unless", "someon", "do", "someth", "crazi", "that", "depend", "scope", "be", "enumer", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "'ve", "split", "commit", "up", "into", "think", "refactor", "modifi", "test", "go", "into", "n't", "think", "actual", "fix", "go", "into", "specif", "test", "case", "watch", "liter", "contain", "ng", "model", "will", "no", "longer", "fail", "we", "want", "prevent", "other", "case", "like", "manual", "deep", "watch", "or", "manual", "copi", "ing", "ng", "model", "think", "we", "it", "differ"], "B_body": "(Testing #9942 before merging)\n", "B_clean_body": ["test", "9942", "befor", "merg"], "title_sim": [0.0712378156062996], "body_sim": [0.17929725278305347], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0220707734603035, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 857}, {"A_title": "fix($animateCss): remove animation end event listeners on close", "A_clean_title": ["fix", "animatecss", "anim", "css", "remov", "anim", "end", "event", "listen", "close"], "B_title": "fix(ngView): use animation promises ensure that only one leave animation...", "B_clean_title": ["fix", "ngview", "ng", "view", "use", "anim", "promis", "ensur", "that", "onli", "one", "leav", "anim"], "A_body": "Previously the transition/animation end events were not removed when the\nanimation was closed. This normally didn't matter, because\nthe close function knows the animation are closed and won't do work\ntwice.\nHowever, the listeners themselves do computation that could fail when\nthe event was missing some data, for example when the event was\ntriggered instead of natural.\n\nCloses #10387\n", "A_clean_body": ["previous", "transit", "anim", "end", "event", "were", "not", "remov", "when", "anim", "wa", "close", "thi", "normal", "did", "n't", "matter", "becaus", "close", "function", "know", "anim", "are", "close", "wo", "n't", "work", "twice", "howev", "listen", "themselv", "comput", "that", "could", "fail", "when", "event", "wa", "miss", "some", "data", "exampl", "when", "event", "wa", "trigger", "instead", "natur", "close", "10387"], "B_body": "... occurs at a time\n\nthe tracking depended on a local flag variable, which was susceptible to corruption due to\nrace conditions.\n\nCloses #9355\nCloses #7606\n", "B_clean_body": ["occur", "at", "time", "track", "depend", "local", "flag", "variabl", "which", "wa", "suscept", "corrupt", "due", "race", "condit", "close", "9355", "close", "7606"], "title_sim": [0.4659282557316939], "body_sim": [0.29719656346521645], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.29583755700881537, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 431}, {"A_title": "docs(*): clarify module API and dependency injection rules", "A_clean_title": ["doc", "clarifi", "modul", "api", "depend", "inject", "rule"], "B_title": "fix(ngMock): handle cases where injector is created before tests", "B_clean_title": ["fix", "ngmock", "ng", "mock", "handl", "case", "where", "injector", "creat", "befor", "test"], "A_body": "Closes #16363\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["close", "16363", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This caused an exception for people who created an injector before the tests actually began to run. Since the array was initialized only in beforeEach, anyone accessing it before that would throw. This is solved easily but initializing the array immediately.\n\nCloses #10967\n", "B_clean_body": ["thi", "caus", "except", "peopl", "who", "creat", "injector", "befor", "test", "actual", "began", "run", "sinc", "array", "wa", "initi", "onli", "beforeeach", "befor", "each", "anyon", "access", "it", "befor", "that", "would", "throw", "thi", "solv", "easili", "but", "initi", "array", "immedi", "close", "10967"], "title_sim": [0.1249195908983336], "body_sim": [0.12608530709082813], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03576751344938101, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1068}, {"A_title": "docs($compileProvider): improve strictComponentBindingsEnabled info", "A_clean_title": ["doc", "compileprovid", "compil", "provid", "improv", "strictcomponentbindingsen", "strict", "compon", "bind", "enabl", "info"], "B_title": "Google logo in AngularJS.exports to vector format.", "B_clean_title": ["googl", "logo", "angularj", "export", "angular", "js", "vector", "format"], "A_body": "Related to #16303\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs are too unspecific.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["relat", "16303", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "are", "too", "unspecif", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Browser: Other\nComponent: docs\nRegression: no\n", "B_clean_body": ["browser", "other", "compon", "doc", "regress", "no"], "title_sim": [-0.03719139890360701], "body_sim": [0.20659684059480957], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1354}, {"A_title": "test(*): run class-related tests everywhere; fix eval syntax", "A_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "B_title": "fix(ngMessageFormat): ensure bindings are valid for Protractor", "B_clean_title": ["fix", "ngmessageformat", "ng", "messag", "format", "ensur", "bind", "are", "valid", "protractor"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Refer original PR #11644 \n", "B_clean_body": ["refer", "origin", "pr", "11644"], "title_sim": [0.1264953449305784], "body_sim": [0.34126875148452446], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 748}, {"A_title": "refactor($parse): add lgalfaso's refactors and suggestions", "A_clean_title": ["refactor", "pars", "add", "lgalfaso", "'s", "refactor", "suggest"], "B_title": "refactor($rootScope): consistently use noop as the default $watch listener", "B_clean_title": ["refactor", "rootscop", "root", "scope", "consist", "use", "noop", "as", "default", "watch", "listen"], "A_body": "@lgalfaso's PR #7543 had two aspects of it that I didn't include in my last changes to $parse (#7552, #7555)\n- Lexer should only take care of `constant`, and the Parser should deduce that a _primary_ `constant` is also a `literal`\n- Simplify the logic of Parser.filter \n", "A_clean_body": ["lgalfaso", "'s", "pr", "7543", "had", "two", "aspect", "it", "that", "did", "n't", "includ", "my", "last", "chang", "pars", "7552", "7555", "lexer", "onli", "take", "care", "constant", "parser", "deduc", "that", "primari", "constant", "also", "liter", "simplifi", "logic", "parser", "filter"], "B_body": "By doing the `isFunction(listener)` check before delegating to `$$watchDelegate` it removes that check from some `$$watchDelegate` methods.", "B_clean_body": ["by", "do", "isfunct", "function", "listen", "check", "befor", "deleg", "watchdeleg", "watch", "deleg", "it", "remov", "that", "check", "some", "watchdeleg", "watch", "deleg", "method"], "title_sim": [0.37745252041255134], "body_sim": [0.15310247637620225], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.46281595414588106, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1281}, {"A_title": "test($compile): fix IE specific test.", "A_clean_title": ["test", "compil", "fix", "ie", "specif", "test"], "B_title": "refactor(fromJson): Remove error() and just throw", "B_clean_title": ["refactor", "fromjson", "json", "remov", "error", "just", "throw"], "A_body": "For some reason, the tests pass but the build doesn't turn green on http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/ (e.g. http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/89/  )\n", "A_clean_body": ["some", "reason", "test", "pass", "but", "build", "n't", "turn", "green", "http", "angularj", "js", "chirayu", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular", "http", "angularj", "js", "chirayu", "89", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular"], "B_body": "It's more likely you are using angular.fromJson() inside Angular world, which means you get proper\nexception handling by $exceptionHandler.\n\nThere is no point to explicitly push it to console and it causes memory leaks on most browsers \n(tried Chrome stable/canary, Safari, FF).\n", "B_clean_body": ["it", "'s", "more", "like", "you", "are", "angular", "fromjson", "json", "insid", "angular", "world", "which", "mean", "you", "get", "proper", "except", "handl", "by", "exceptionhandl", "except", "handler", "there", "no", "point", "explicitli", "push", "it", "consol", "it", "caus", "memori", "leak", "most", "browser", "tri", "chrome", "stabl", "canari", "safari", "ff"], "title_sim": [0.16513075669754212], "body_sim": [0.195159762252532], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 474}, {"A_title": "docs($location): fix examples", "A_clean_title": ["doc", "locat", "fix", "exampl"], "B_title": "chore(doc-gen): render @example tag for ngdoc @method", "B_clean_title": ["chore", "doc", "gen", "render", "exampl", "tag", "ngdoc", "method"], "A_body": "The examples contained tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixed a HTML5 browser scenarion with a non-HTML5\r\none.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe examples contains tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixes a HTML5 browser scenario with a non-HTML5\r\none.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenarion", "non", "html5", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenario", "non", "html5", "one", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat / fix to the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`@example` in  `@method` is not rendered\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "fix", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "method", "not", "render", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "title_sim": [0.34831723871110176], "body_sim": [0.846550657277603], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 63}, {"A_title": "docs(api/$http): fix typo in $http API Reference", "A_clean_title": ["doc", "api", "http", "fix", "typo", "http", "api", "refer"], "B_title": "[Docs] Add links to Atom and Vim packages for angularjs development", "B_clean_title": ["doc", "add", "link", "atom", "vim", "packag", "angularj", "develop"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFix a typo in https://docs.angularjs.org/api/ng/service/$http. \n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere is a typo in https://docs.angularjs.org/api/ng/service/$http.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe typo is corrected.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\ndocs($http): fix typo in $http API Reference\n\nFix a typo in the $http API Reference\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "typo", "http", "angularj", "doc", "org", "api", "ng", "servic", "http", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "http", "angularj", "doc", "org", "api", "ng", "servic", "http", "**what", "new", "behavior", "thi", "featur", "chang", "typo", "correct", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "doc", "http", "fix", "typo", "http", "api", "refer", "fix", "typo", "http", "api", "refer"], "B_body": "**Docs update**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere was only links to packages for editors Webstorm, Sublime Text and Visual Studio\n\n**What is the new behavior (if this is a feature change)?**\n\nAdditionally there are links to Atom and Vim packages\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nAdd links to packages for Atom and Vim editors under editor support\nsubsection under tools section\n", "B_clean_body": ["**doc", "update**", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "onli", "link", "packag", "editor", "webstorm", "sublim", "text", "visual", "studio", "**what", "new", "behavior", "thi", "featur", "chang", "addit", "there", "are", "link", "atom", "vim", "packag", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "link", "packag", "atom", "vim", "editor", "under", "editor", "support", "subsect", "under", "tool", "section"], "title_sim": [0.19969455514383253], "body_sim": [0.8758747605295534], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 114}, {"A_title": "docs($location): fix typo", "A_clean_title": ["doc", "locat", "fix", "typo"], "B_title": "chore(node): update karma-sauce-launcher", "B_clean_title": ["chore", "node", "updat", "karma", "sauc", "launcher"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Related to #14961\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["relat", "14961", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.025789591764656974], "body_sim": [0.896654751994669], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 88}, {"A_title": "perf(orderBy): copy array with slice instead of for loop", "A_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "B_title": "chore(karma): use dots reporter by default", "B_clean_title": ["chore", "karma", "use", "dot", "report", "by", "default"], "A_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "A_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "B_body": "dots is nicer for local testing, as you usually don't run a\r\nton of test suites, and it's also more readable if you skip\r\nmany tests (i.e. run isolated tests)\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["dot", "nicer", "local", "test", "as", "you", "usual", "n't", "run", "ton", "test", "suit", "it", "'s", "also", "more", "readabl", "you", "skip", "mani", "test", "run", "isol", "test", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.10377239191995054], "body_sim": [0.1295105071634898], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1001}, {"A_title": "fix(jqLite): make removeData() not remove event handlers", "A_clean_title": ["fix", "jqlite", "jq", "lite", "make", "removedata", "remov", "data", "not", "remov", "event", "handler"], "B_title": "chore(travis): update iOs test browsers", "B_clean_title": ["chore", "travi", "updat", "io", "os", "test", "browser"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix but a breaking change as well.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`removeData()` invoked on an element removes its event handlers as well.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n`removeData()` removes just user-set `data`, not internal data storage used for event handling. This aligns jqLite with jQuery.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~ (the current behavior is not documented)\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nFixes #15869", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "but", "break", "chang", "as", "well", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "removedata", "remov", "data", "invok", "element", "remov", "it", "event", "handler", "as", "well", "**what", "new", "behavior", "thi", "featur", "chang", "removedata", "remov", "data", "remov", "just", "user", "set", "data", "not", "intern", "data", "storag", "use", "event", "handl", "thi", "align", "jqlite", "jq", "lite", "jqueri", "queri", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "current", "behavior", "not", "document", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "fix", "15869"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.03970304936799547], "body_sim": [0.9441992986850907], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.008304875854389935, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 10}, {"A_title": "fix(package.json): use full version numbers when interpolating", "A_clean_title": ["fix", "packag", "json", "use", "full", "version", "number", "when", "interpol"], "B_title": "docs($compileProvider): improve strictComponentBindingsEnabled info", "B_clean_title": ["doc", "compileprovid", "compil", "provid", "improv", "strictcomponentbindingsen", "strict", "compon", "bind", "enabl", "info"], "A_body": "When using less than 3 numbers in npm package version together with\ntilde interpolation, it lets major version upgrades, e.g. \"~0.10\" means\nat least 0.10 and less than 1.0; this pattern would match e.g. 0.11, 0.12 etc.\nBesides, some package.json dependencies were upgraded.\n", "A_clean_body": ["when", "less", "than", "number", "npm", "packag", "version", "togeth", "tild", "interpol", "it", "let", "major", "version", "upgrad", "~0", "10", "mean", "at", "least", "10", "less", "than", "thi", "pattern", "would", "match", "11", "12", "etc", "besid", "some", "packag", "json", "depend", "were", "upgrad"], "B_body": "Related to #16303\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs are too unspecific.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["relat", "16303", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "are", "too", "unspecif", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.05121852507450579], "body_sim": [0.04236901418276985], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1531}, {"A_title": "fix(jqLite): use getElementsByTagName for dealoc-ing elements, cz of SVG on IE", "A_clean_title": ["fix", "jqlite", "jq", "lite", "use", "getelementsbytagnam", "get", "element", "by", "tag", "name", "dealoc", "ing", "element", "cz", "svg", "ie"], "B_title": "docs(jqLite): document append doesn't work well with a multi-node object", "B_clean_title": ["doc", "jqlite", "jq", "lite", "document", "append", "n't", "work", "well", "multi", "node", "object"], "A_body": "See comments in #8075\n", "A_clean_body": ["see", "comment", "8075"], "B_body": "Contrary to jQuery jqLite's append doesn't clone elements so will not work\r\ncorrectly when invoked on a jqLite object containing more than one DOM node.\r\n\r\nRefs #11446\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#11446 (it documents the existing difference from jQuery)\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["contrari", "jqueri", "queri", "jqlite", "jq", "lite", "'s", "append", "n't", "clone", "element", "so", "will", "not", "work", "correctli", "when", "invok", "jqlite", "jq", "lite", "object", "contain", "more", "than", "one", "dom", "node", "ref", "11446", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "11446", "it", "document", "exist", "differ", "jqueri", "queri", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**"], "title_sim": [0.2988027955323499], "body_sim": [0.0935626706583881], "file_list_sim": 0.3333333333333333, "overlap_files_len": 1, "code_sim": [0.04916336383152754, 0.07874812303466787], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1358}, {"A_title": "fix($compile): support transcluding multi-element directives", "A_clean_title": ["fix", "compil", "support", "transclud", "multi", "element", "direct"], "B_title": "Feat input timeformat", "B_clean_title": ["feat", "input", "timeformat"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nTranscluding multi-element directives (e.g. `foo-start`/`foo-end`) is not supported on elements with multi-slot transclusion (a `uterdir` error is thrown).\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nTranscluded nodes are put into a DocumentFragment, where they can be traversed via `.nextSibling`. This way, transcluding multi-element directives on elements with multi-slot transclusion works correctly.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15554.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "transclud", "multi", "element", "direct", "foo", "start", "foo", "end", "not", "support", "element", "multi", "slot", "transclus", "uterdir", "error", "thrown", "**what", "new", "behavior", "thi", "featur", "chang", "transclud", "node", "are", "put", "into", "documentfrag", "document", "fragment", "where", "they", "travers", "via", "nextsibl", "next", "sibl", "thi", "way", "transclud", "multi", "element", "direct", "element", "multi", "slot", "transclus", "work", "correctli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "15554"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nBrowser differences when displaying input time and datetime-local\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nOption to adjust the format\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nCloses #10721\r\nCloses #16510 \r\n\r\nThere are two options:\r\n\r\ntimeFormatSeconds can be used to configure if seconds or milliseconds should be displayed in general.\r\ntimeStripEmptySeconds mimics the behavior of Chrome to hide the seconds completely if they are zero.\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browser", "differ", "when", "display", "input", "time", "datetim", "local", "**what", "new", "behavior", "thi", "featur", "chang", "option", "adjust", "format", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "close", "10721", "close", "16510", "there", "are", "two", "option", "timeformatsecond", "time", "format", "second", "use", "configur", "second", "or", "millisecond", "display", "gener", "timestripemptysecond", "time", "strip", "empti", "second", "mimic", "behavior", "chrome", "hide", "second", "complet", "they", "are", "zero"], "title_sim": [0.09319863368024839], "body_sim": [0.7433046595898991], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.05263737940722665, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 518}, {"A_title": "refactor($injector): remove the Chrome stringification hack", "A_clean_title": ["refactor", "injector", "remov", "chrome", "stringif", "hack"], "B_title": "chore(Rakefile): force 32bit JVM mode only when java supports it", "B_clean_title": ["chore", "rakefil", "forc", "32bit", "jvm", "mode", "onli", "when", "java", "support", "it"], "A_body": "The Chrome stringification hack added in afcedff34c8a44dda0d558d9d6337962f5f03d7b\r\nis no longer needed. I verified that both of the commented out tests pass\r\non Chrome 56.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's a workaround in place for Chrome 50-51. Current stable version is 56.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["chrome", "stringif", "hack", "ad", "afcedff34c8a44dda0d558d9d6337962f5f03d7b", "no", "longer", "need", "verifi", "that", "both", "comment", "out", "test", "pass", "chrome", "56", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "workaround", "place", "chrome", "50", "51", "current", "stabl", "version", "56", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Some Java installs don't have '-d32' flag (e.g. OpenJDK which is standard\nfor some Linux systems), and the closure_compile fails because of forcing\nthat flag. Test, and only run in faster 32bit mode if supported, or\nelse just run with no flag (default mode).\n", "B_clean_body": ["some", "java", "instal", "n't", "have", "d32", "flag", "openjdk", "open", "jdk", "which", "standard", "some", "linux", "system", "closur", "compil", "fail", "becaus", "forc", "that", "flag", "test", "onli", "run", "faster", "32bit", "mode", "support", "or", "just", "run", "no", "flag", "default", "mode"], "title_sim": [0.006540603781741435], "body_sim": [0.17353855214444422], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1476}, {"A_title": "doc:$route: Fix $route example and couple of typos in docs", "A_clean_title": ["doc", "rout", "fix", "rout", "exampl", "coupl", "typo", "doc"], "B_title": "refactor($compile): reuse shared simpleCompare method", "B_clean_title": ["refactor", "compil", "reus", "share", "simplecompar", "simpl", "compar", "method"], "A_body": "Rewrite $route example a bit, as it required $location and $route services\nto be eager published in the root scope.\n\nAdd missing partials (move them to docs/examples directory)\n\nFix small typos in formatter and ng:options docs.\n", "A_clean_body": ["rewrit", "rout", "exampl", "bit", "as", "it", "requir", "locat", "rout", "servic", "eager", "publish", "root", "scope", "add", "miss", "partial", "move", "them", "doc", "exampl", "directori", "fix", "small", "typo", "formatt", "ng", "option", "doc"], "B_body": "I think this could be used in some other places as well once it's available...", "B_clean_body": ["think", "thi", "could", "use", "some", "other", "place", "as", "well", "onc", "it", "'s", "avail"], "title_sim": [-0.025371278431859802], "body_sim": [0.11141721744422878], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2091}, {"A_title": "refactor($rootScope): simplify $emit stopPropagation handling", "A_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "B_title": "fix($http): Do not serialize File object", "B_clean_title": ["fix", "http", "not", "serial", "file", "object"], "A_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "A_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "B_body": "We might auto set X-File headers, when you pass a File object, but I can't find any spec on that...\n(ie X-File-Size, content-type, etc...)\n", "B_clean_body": ["we", "might", "auto", "set", "file", "header", "when", "you", "pass", "file", "object", "but", "ca", "n't", "find", "ani", "spec", "that", "ie", "file", "size", "content", "type", "etc"], "title_sim": [0.00424570399090761], "body_sim": [0.09478023282069778], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2094}, {"A_title": "docs(sce,urlutils): update table to use marked syntax", "A_clean_title": ["doc", "sce", "urlutil", "updat", "tabl", "use", "mark", "syntax"], "B_title": "docs($filter): add link to built-in filters page", "B_clean_title": ["doc", "filter", "add", "link", "built", "filter", "page"], "A_body": "Commit 258cae83dc1a03b6b878a7b4236c499288cd2624 replaced Showdown with marked.\n", "A_clean_body": ["commit", "258cae83dc1a03b6b878a7b4236c499288cd2624", "replac", "showdown", "mark"], "B_body": "tired to seek page with built-in filters every time I go to filters\n", "B_clean_body": ["tire", "seek", "page", "built", "filter", "everi", "time", "go", "filter"], "title_sim": [0.30730117179415606], "body_sim": [0.03934427836148373], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1073}, {"A_title": "chore(version-info.js): ignore curl file write errors", "A_clean_title": ["chore", "version", "info", "js", "ignor", "curl", "file", "write", "error"], "B_title": "feat(ngMocks): Describe unflushed http requests", "B_clean_title": ["feat", "ngmock", "ng", "mock", "describ", "unflush", "http", "request"], "A_body": "On Windows, curl can obviously not write to `dev/null`, and throws code 23, which prevents us from checking that the CDN server responded. However, we don't need the file anyway, we just need the status code, so we can ignore the file write error.\n\nThis needs to be tested on Linux / Mac however!\n", "A_clean_body": ["window", "curl", "obvious", "not", "write", "dev", "null", "throw", "code", "23", "which", "prevent", "us", "check", "that", "cdn", "server", "respond", "howev", "we", "n't", "need", "file", "anyway", "we", "just", "need", "statu", "code", "so", "we", "ignor", "file", "write", "error", "thi", "need", "test", "linux", "mac", "howev"], "B_body": "The current implementation of $httpBackend.verifyNoOutstandingRequest\r\ngives an integer number describing how many requests are unflushed.\r\n\r\nWhile it's superficially easy to solve test errors from that message\r\nby simply adding an additional $httpBackend.flush(), if a developer\r\nis truly not expecting the code to make further requests this is\r\nnot ideal.\r\n\r\nThis change explicitly prints out which additional requests remain\r\nunflushed in the error message, helping her determine if the code\r\nneeds changing, or if an additional flush is appropriate.\r\n\r\nBefore this change:\r\n\r\n    Unflushed requests: 1\r\n\r\nAfter this change:\r\n\r\n    Unflushed requests:\r\n      GET /some\r\n\r\nCloses #10596\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA feature improving the output of ngMocks \"Unflushed requests\" error message.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe error message includes the number of requests remaining unflushed.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThe error message now includes a brief description of which requests remain unflushed.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo - unless the error messages are considered public API.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["current", "implement", "httpbackend", "verifynooutstandingrequest", "http", "backend", "verifi", "no", "outstand", "request", "give", "integ", "number", "describ", "how", "mani", "request", "are", "unflush", "while", "it", "'s", "superfici", "easi", "solv", "test", "error", "that", "messag", "by", "simpli", "ad", "addit", "httpbackend", "flush", "http", "backend", "develop", "truli", "not", "expect", "code", "make", "further", "request", "thi", "not", "ideal", "thi", "chang", "explicitli", "print", "out", "which", "addit", "request", "remain", "unflush", "error", "messag", "help", "her", "determin", "code", "need", "chang", "or", "addit", "flush", "appropri", "befor", "thi", "chang", "unflush", "request", "after", "thi", "chang", "unflush", "request", "get", "some", "close", "10596", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "improv", "output", "ngmock", "ng", "mock", "unflush", "request", "error", "messag", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "error", "messag", "includ", "number", "request", "remain", "unflush", "**what", "new", "behavior", "thi", "featur", "chang", "error", "messag", "now", "includ", "brief", "descript", "which", "request", "remain", "unflush", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "unless", "error", "messag", "are", "consid", "public", "api", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-4.1182987480254847e-05], "body_sim": [0.35041148016980833], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.14394998276757198, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 310}, {"A_title": "fix($rootScope): fix potential memory leak when removing scope listeners ", "A_clean_title": ["fix", "rootscop", "root", "scope", "fix", "potenti", "memori", "leak", "when", "remov", "scope", "listen"], "B_title": "chore(*): normalize Vojta's email in .mailmap correctly", "B_clean_title": ["chore", "normal", "vojta", "'s", "email", "mailmap", "correctli"], "A_body": "This attempts to fix #16135, but is assuming that browsers will use some type of memory efficient array implementation for sparse arrays (which they appear to do, see [1](https://stackoverflow.com/questions/614126/why-is-array-push-sometimes-faster-than-arrayn-value/614255#614255), [2](https://www.safaribooksonline.com/library/view/javascript-the-definitive/9781449393854/ch07s03.html), [3](https://www.html5rocks.com/en/tutorials/speed/v8/#toc-topic-numbers)).  In the worst case this ~~should have no change~~ may cause some extra swapping of array implementations and/or not fix the bug, in the best case it will be more memory efficient in this edge case.\r\n\r\nAlso added a couple tests that show why we don't simply use `splice`.\r\n\r\nThanks @jvilk for investigating this `delete` solution.", "A_clean_body": ["thi", "attempt", "fix", "16135", "but", "assum", "that", "browser", "will", "use", "some", "type", "memori", "effici", "array", "implement", "spars", "array", "which", "they", "appear", "see", "http", "array", "push", "sometim", "faster", "than", "arrayn", "valu", "614255", "stackoverflow", "com", "question", "614126", "whi", "614255", "http", "safaribooksonlin", "html", "www", "com", "librari", "view", "javascript", "definit", "9781449393854", "ch07s03", "http", "html5rock", "www", "com", "en", "tutori", "speed", "v8", "toc", "topic", "number", "worst", "case", "thi", "~~should", "have", "no", "change~~", "may", "caus", "some", "extra", "swap", "array", "implement", "or", "not", "fix", "bug", "best", "case", "it", "will", "more", "memori", "effici", "thi", "edg", "case", "also", "ad", "coupl", "test", "that", "show", "whi", "we", "n't", "simpli", "use", "splice", "thank", "jvilk", "investig", "thi", "delet", "solut"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nVojta's mails are not normalized.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThey are normalized.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "vojta", "'s", "mail", "are", "not", "normal", "**what", "new", "behavior", "thi", "featur", "chang", "they", "are", "normal", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**"], "title_sim": [0.003769503005091051], "body_sim": [0.3079506210724149], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 105}, {"A_title": "docs(guide/Migrating from Previous Versions): add info for 1.4 ngPatt\u2026", "A_clean_title": ["doc", "guid", "migrat", "previou", "version", "add", "info", "ngpatt\u2026", "ng", "patt\u2026"], "B_title": "fix(ngMock): handle cases where injector is created before tests", "B_clean_title": ["fix", "ngmock", "ng", "mock", "handl", "case", "where", "injector", "creat", "befor", "test"], "A_body": "\u2026ern and pattern breaking change\r\n\r\nIntroduced in commit 0e00108\r\n\r\nCloses #15758\r\n\r\n", "A_clean_body": ["\u2026ern", "pattern", "break", "chang", "introduc", "commit", "0e00108", "close", "15758"], "B_body": "This caused an exception for people who created an injector before the tests actually began to run. Since the array was initialized only in beforeEach, anyone accessing it before that would throw. This is solved easily but initializing the array immediately.\n\nCloses #10967\n", "B_clean_body": ["thi", "caus", "except", "peopl", "who", "creat", "injector", "befor", "test", "actual", "began", "run", "sinc", "array", "wa", "initi", "onli", "beforeeach", "befor", "each", "anyon", "access", "it", "befor", "that", "would", "throw", "thi", "solv", "easili", "but", "initi", "array", "immedi", "close", "10967"], "title_sim": [0.14605047573302685], "body_sim": [0.17174671927737975], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 755}, {"A_title": "fix(ngView): use animation promises ensure that only one leave animation...", "A_clean_title": ["fix", "ngview", "ng", "view", "use", "anim", "promis", "ensur", "that", "onli", "one", "leav", "anim"], "B_title": "chore(docs): update to lunr-0.5.12", "B_clean_title": ["chore", "doc", "updat", "lunr", "12"], "A_body": "... occurs at a time\n\nthe tracking depended on a local flag variable, which was susceptible to corruption due to\nrace conditions.\n\nCloses #9355\nCloses #7606\n", "A_clean_body": ["occur", "at", "time", "track", "depend", "local", "flag", "variabl", "which", "wa", "suscept", "corrupt", "due", "race", "condit", "close", "9355", "close", "7606"], "B_body": "This improves the search results for certain terms. Compare the results for **scope**:\nCurrently:\n![search-scope-current](https://cloud.githubusercontent.com/assets/1153097/10083876/adc9c410-6300-11e5-8781-73cb2046f548.PNG)\n\nAfter the update:\n![search-scope-new](https://cloud.githubusercontent.com/assets/1153097/10083878/b0bf0ff4-6300-11e5-8b9a-7e2c87920a73.PNG)\n", "B_clean_body": ["thi", "improv", "search", "result", "certain", "term", "compar", "result", "**scope**", "current", "search", "scope", "current", "http", "6300", "11e5", "8781", "githubusercont", "73cb2046f548", "png", "cloud", "com", "asset", "1153097", "10083876", "adc9c410", "after", "updat", "search", "scope", "new", "http", "6300", "11e5", "8b9a", "githubusercont", "7e2c87920a73", "png", "cloud", "com", "asset", "1153097", "10083878", "b0bf0ff4"], "title_sim": [0.012157259721974591], "body_sim": [0.01481829995319139], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 358}, {"A_title": "chore(travis): speed up the build", "A_clean_title": ["chore", "travi", "speed", "up", "build"], "B_title": "chore(docs.angularjs.org): allow robots in partials/ but prevent inde\u2026", "B_clean_title": ["chore", "doc", "angularj", "org", "allow", "robot", "partial", "but", "prevent", "inde\u2026"], "A_body": "Just wanna see the travis build...\n- parallelize the tasks\n- cache requests (e2e tests)\n\nThis reduces the time from ~18min to ~12min.\n\nIt makes the output little messy. We could buffer output of each task and display it once it's fully finished, nicely. I think giving instant feedback is better.\n\nConflicts:\n    Gruntfile.js\n    package.json\n", "A_clean_body": ["just", "wan", "na", "see", "travi", "build", "parallel", "task", "cach", "request", "e2e", "test", "thi", "reduc", "time", "~18min", "~12min", "it", "make", "output", "littl", "messi", "we", "could", "buffer", "output", "each", "task", "display", "it", "onc", "it", "'s", "fulli", "finish", "nice", "think", "give", "instant", "feedback", "better", "conflict", "gruntfil", "js", "packag", "json"], "B_body": "\u2026xing\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["\u2026xing", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.39077543813416105], "body_sim": [0.11244945032989065], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1688}, {"A_title": "fix($http): correct xhrStatus of different `timeout` values", "A_clean_title": ["fix", "http", "correct", "xhrstatu", "xhr", "statu", "differ", "timeout", "valu"], "B_title": "build(*): update Node from 6 to 8, update Yarn", "B_clean_title": ["build", "updat", "node", "updat", "yarn"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nIncorrect xhrStatus\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCorrect xhrStatus\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n@gkalpak @frederikprijck this is something I'd like your review / opinion on\r\n\r\nWhile trying to find out if https://github.com/angular/angular.js/pull/14021 was (partially) fixed by https://github.com/angular/angular.js/commit/5e2bc5bbf347a9dfadc08b1514b8be06fd550913, I noticed there's a problem with the http tests and the actual behavior:\r\n\r\nIn https://github.com/angular/angular.js/blob/e5c6174839e96113c93913dd8b3c4cca760dfc41/test/ng/httpSpec.js#L1910\r\n\r\nwe expect that the xhrStatus is 'timeout', however it actually is 'abort' in real $http usage. This is not caught by our tests because the tests run against the mocked $httpBackend which must manually be kept in sync with the real $http implementation.\r\n\r\nWhat's more, our implementation of abort / timeout doesn't follow the way normal xhr abort / timeout works:\r\n\r\nIf you use xhr.abort() then the onabort handler is called.\r\nIf you set xhr.timeout and the timeout is exceeded then the ontimeout handler is callded.\r\n\r\n(In the browser, both events are marked as \"canceled\" in the devtools, at least in Chrome).\r\n\r\nIn $http, in both cases you would get xhrStatus 'abort', because we abort the xhrRequest, but\r\ndon't distinguish between these cases. \r\n\r\nIn the current implementation, the \"timeout\" handler would only be called in the case of a real\r\nnetwork timeout (presumably, because I couldn't find a way to test this).\r\n\r\nWhat's more, if you pass a $timeout as the timeout parameter, it will currently set xhrStatus \"abort\" if the time runs out (promise resolved). This case can only be fixed by reading the internal $$timeoutId property on the promise returned by $timeout.\r\n\r\nThis PR fixes the code in both the mock httpBackend and the regular http to follow the same logic as xhr does:\r\n\r\n| xhr | http option | xhr result | current http xhrStatus| new http xhrStatus| \r\n------- | ------- | -------------- | -------------- | ------------ |\r\n| xhr.abort() | resolving promise | onabort callback is called | abort | abort\r\n| xhr.timeout | numerical value |  ontimeout callback | abort | timeout\r\n| ---- | $timeout |  ----------- | abort | timeout\r\n\r\nHere's a plunker that shows the difference, with a patched angular.js file (to swit\r\n\r\nhttp://plnkr.co/edit/nsviFV7YyF4TiXCyISMN?p=preview\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "incorrect", "xhrstatu", "xhr", "statu", "**what", "new", "behavior", "thi", "featur", "chang", "correct", "xhrstatu", "xhr", "statu", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "gkalpak", "frederikprijck", "thi", "someth", "'d", "like", "your", "review", "opinion", "while", "tri", "find", "out", "http", "github", "com", "angular", "angular", "js", "pull", "14021", "wa", "partial", "fix", "by", "http", "github", "com", "angular", "angular", "js", "commit", "5e2bc5bbf347a9dfadc08b1514b8be06fd550913", "notic", "there", "'s", "problem", "http", "test", "actual", "behavior", "http", "js", "github", "com", "angular", "angular", "js", "blob", "e5c6174839e96113c93913dd8b3c4cca760dfc41", "test", "ng", "httpspec", "http", "spec", "l1910", "we", "expect", "that", "xhrstatu", "xhr", "statu", "'timeout", "howev", "it", "actual", "'abort", "real", "http", "usag", "thi", "not", "caught", "by", "our", "test", "becaus", "test", "run", "against", "mock", "httpbackend", "http", "backend", "which", "must", "manual", "kept", "sync", "real", "http", "implement", "what", "'s", "more", "our", "implement", "abort", "timeout", "n't", "follow", "way", "normal", "xhr", "abort", "timeout", "work", "you", "use", "xhr", "abort", "then", "onabort", "handler", "call", "you", "set", "xhr", "timeout", "timeout", "exceed", "then", "ontimeout", "handler", "calld", "browser", "both", "event", "are", "mark", "as", "cancel", "devtool", "at", "least", "chrome", "http", "both", "case", "you", "would", "get", "xhrstatu", "xhr", "statu", "'abort", "becaus", "we", "abort", "xhrrequest", "xhr", "request", "but", "n't", "distinguish", "between", "these", "case", "current", "implement", "timeout", "handler", "would", "onli", "call", "case", "real", "network", "timeout", "presum", "becaus", "could", "n't", "find", "way", "test", "thi", "what", "'s", "more", "you", "pass", "timeout", "as", "timeout", "paramet", "it", "will", "current", "set", "xhrstatu", "xhr", "statu", "abort", "time", "run", "out", "promis", "resolv", "thi", "case", "onli", "fix", "by", "read", "intern", "timeoutid", "timeout", "id", "properti", "promis", "return", "by", "timeout", "thi", "pr", "fix", "code", "both", "mock", "httpbackend", "http", "backend", "regular", "http", "follow", "same", "logic", "as", "xhr", "xhr", "http", "option", "xhr", "result", "current", "http", "xhrstatus|", "xhr", "status|", "new", "http", "xhrstatus|", "xhr", "status|", "xhr", "abort", "resolv", "promis", "onabort", "callback", "call", "abort", "abort", "xhr", "timeout", "numer", "valu", "ontimeout", "callback", "abort", "timeout", "timeout", "abort", "timeout", "here", "'s", "plunker", "that", "show", "differ", "patch", "angular", "js", "file", "swit", "http", "plnkr", "co", "edit", "nsvifv7yyf4tixcyismn", "nsvi", "fv7yy", "f4ti", "cy", "ismn", "p=preview"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBuild-related.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nWe use Node 6 & an old Yarn version.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nWe use Node 8 & a new Yarn version.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\nAngular (2+) switched to Node 8 and so should we.\r\n\r\nRef angular/angular#20807\r\nRef angular/angular#20832\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "build", "relat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "use", "node", "old", "yarn", "version", "**what", "new", "behavior", "thi", "featur", "chang", "we", "use", "node", "new", "yarn", "version", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**", "angular", "2+", "switch", "node", "so", "we", "ref", "angular", "angular", "20807", "ref", "angular", "angular", "20832"], "title_sim": [0.06558744365496574], "body_sim": [0.702106851281356], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 59}, {"A_title": "docs(ngRepeat): I added the phrase \"and by age\" on line 236", "A_clean_title": ["doc", "ngrepeat", "ng", "repeat", "ad", "phrase", "by", "age", "line", "236"], "B_title": "fix(ngModel): use keydown/change events on IE9 instead of input", "B_clean_title": ["fix", "ngmodel", "ng", "model", "use", "keydown", "chang", "event", "ie9", "instead", "input"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo change in behavior introduced \n\n**What is the new behavior (if this is a feature change)?**\n\nNo change in behavior introduced\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example seems to also be filtering by age. It threw me off a bit because I was getting results when I entered numbers in the input field.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "chang", "behavior", "introduc", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "behavior", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "seem", "also", "filter", "by", "age", "it", "threw", "me", "off", "bit", "becaus", "wa", "get", "result", "when", "enter", "number", "input", "field"], "B_body": "On IE9 the input event is not fired when backspace or delete key are pressed or when\ncut is performed. This makes listening on the input event unreliable and therefore\nit's better for us to just use keydown/change events instead.\n\nCloses #879\n", "B_clean_body": ["ie9", "input", "event", "not", "fire", "when", "backspac", "or", "delet", "key", "are", "press", "or", "when", "cut", "perform", "thi", "make", "listen", "input", "event", "unreli", "therefor", "it", "'s", "better", "us", "just", "use", "keydown", "chang", "event", "instead", "close", "879"], "title_sim": [0.08907166389896973], "body_sim": [0.15826825925328192], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06552173653526255, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1563}, {"A_title": "chore(docs): don't use bower for docs dependencies", "A_clean_title": ["chore", "doc", "n't", "use", "bower", "doc", "depend"], "B_title": "test(ng-non-bindable): test sibling bindings", "B_clean_title": ["test", "ng", "non", "bindabl", "test", "sibl", "bind"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nchore\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDocs app uses bower\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nNo use of bower in the docs application\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "app", "use", "bower", "**what", "new", "behavior", "thi", "featur", "chang", "no", "use", "bower", "doc", "applic", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Ref: https://github.com/angular/angular.dart/blob/master/test/directives/ng_non_bindable_spec.dart\n", "B_clean_body": ["ref", "http", "dart", "github", "com", "angular", "angular", "non", "bindabl", "spec", "dart", "blob", "master", "test", "direct", "ng"], "title_sim": [0.09880334008462288], "body_sim": [0.28455610695012923], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1167}, {"A_title": "Hosting: fix robots issues", "A_clean_title": ["host", "fix", "robot", "issu"], "B_title": "docs(guide): add note about value attribute", "B_clean_title": ["doc", "guid", "add", "note", "about", "valu", "attribut"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "- Add note about value attribute for the progress tag with IE\n\nThis should address #7218.\n", "B_clean_body": ["add", "note", "about", "valu", "attribut", "progress", "tag", "ie", "thi", "address", "7218"], "title_sim": [0.027449935243635554], "body_sim": [0.03756114605245459], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 603}, {"A_title": "fix(input[text]): composing function dosen't works properly in IE", "A_clean_title": ["fix", "input", "text", "compos", "function", "dose", "n't", "work", "properli", "ie"], "B_title": "fix($httpBackend): use ActiveX XHR when making PATCH requests on IE8", "B_clean_title": ["fix", "httpbackend", "http", "backend", "use", "activex", "activ", "xhr", "when", "make", "patch", "request", "ie8"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nComposing function dosen't works properly in IE. Please refer to https://github.com/angular/angular.js/issues/6656 and \"Other information\" below.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt works properly in IE.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nI have investigated on #6656 issue and I found composing function works differently in only IE.\r\nI confirmed this by the scenario below.\r\n - Code changes to investigate this problem(just added console.log)\r\n    ![2017-10-12 17_53_02-engineering-system - c__users_jileeon_documents_git_engineering-system - _p](https://user-images.githubusercontent.com/5166067/31534128-7aac2cba-b030-11e7-8fb6-5a4754dcb0ed.png)\r\n - Scenario\r\n  1. Just type '\uc774\uc7ac\uc775' and focusout.(in IE and Chrome)\r\n - Result(attached images show differences)\r\n   console.log in Chrome\r\n    ![2017-10-12 18_57_52-developer tools - http___127 0 0 1_8888_system_requests_2279](https://user-images.githubusercontent.com/5166067/31534418-ccd3e2d4-b031-11e7-980e-009b635d0bba.png)\r\n   console.log in IE\r\n    ![2017-10-12 18_58_43-f12](https://user-images.githubusercontent.com/5166067/31534528-39585bba-b032-11e7-9486-34f9f479b6e9.png)\r\n   It shows that last values of $viewValue are different. '\uc774\uc7ac\uc774'(IE) != '\uc774\uc7ac\uc775'(Chrome)\r\n   Because 'compositionend' event is not occurred in IE. So $viewValue is not updated with last value in the textbox. It means that IE triggers composition events('compositionstart', 'compositionupdate', 'compositionend') wrong.\r\n   So I added additional condition(ev.originalEvent.data !== undefined) on 'if (composing) return;' statement.\r\n   As you saw these console logs(IE and Chrome) above, this additional condition makes composing function works properly in IE.(by checking ev.originalEvent.data value. if its value is undefined, $viewValue going to be updated with last value in the textbox in IE. So it works like 'compositionend').\r\n   In addition, When IE fixes this wrong event triggering, It works fine without any problems. ", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compos", "function", "dose", "n't", "work", "properli", "ie", "pleas", "refer", "http", "github", "com", "angular", "angular", "js", "issu", "6656", "other", "inform", "below", "**what", "new", "behavior", "thi", "featur", "chang", "it", "work", "properli", "ie", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "have", "investig", "6656", "issu", "found", "compos", "function", "work", "differ", "onli", "ie", "confirm", "thi", "by", "scenario", "below", "code", "chang", "investig", "thi", "problem", "just", "ad", "consol", "log", "2017", "10", "12", "engin", "system", "17", "53", "02", "system", "user", "jileeon", "document", "git", "engin", "http", "7aac2cba", "b030", "11e7", "8fb6", "user", "imag", "githubusercont", "5a4754dcb0", "png", "com", "5166067", "31534128", "scenario", "just", "type", "focusout", "ie", "chrome", "result", "attach", "imag", "show", "differ", "consol", "log", "chrome", "2017", "10", "12", "develop", "18", "57", "52", "tool", "http", "127", "8888", "system", "request", "2279", "http", "ccd3e2d4", "b031", "11e7", "980e", "user", "imag", "githubusercont", "009b635d0bba", "png", "com", "5166067", "31534418", "consol", "log", "ie", "2017", "10", "12", "f12", "18", "58", "43", "http", "39585bba", "b032", "11e7", "9486", "user", "imag", "githubusercont", "34f9f479b6e9", "png", "com", "5166067", "31534528", "it", "show", "that", "last", "valu", "viewvalu", "view", "valu", "are", "differ", "ie", "chrome", "becaus", "'compositionend", "event", "not", "occur", "ie", "so", "viewvalu", "view", "valu", "not", "updat", "last", "valu", "textbox", "it", "mean", "that", "ie", "trigger", "composit", "event", "'compositionstart", "'compositionupd", "'compositionend", "wrong", "so", "ad", "addit", "condit", "ev", "originalev", "data", "origin", "event", "undefin", "'if", "compos", "return", "statement", "as", "you", "saw", "these", "consol", "log", "ie", "chrome", "abov", "thi", "addit", "condit", "make", "compos", "function", "work", "properli", "ie", "by", "check", "ev", "originalev", "data", "origin", "event", "valu", "it", "valu", "undefin", "viewvalu", "view", "valu", "go", "updat", "last", "valu", "textbox", "ie", "so", "it", "work", "like", "'compositionend", "addit", "when", "ie", "fix", "thi", "wrong", "event", "trigger", "it", "work", "fine", "without", "ani", "problem"], "B_body": "IE8's native XHR doesn't support PATCH requests, but the ActiveX one does.\n\nCloses #2518\nCloses #5043\n", "B_clean_body": ["ie8", "'s", "nativ", "xhr", "n't", "support", "patch", "request", "but", "activex", "activ", "one", "close", "2518", "close", "5043"], "title_sim": [0.117647753085701], "body_sim": [0.060249657068347715], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03203689118633695, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1399}, {"A_title": "fix($parse): unwrap promise when setting a field", "A_clean_title": ["fix", "pars", "unwrap", "promis", "when", "set", "field"], "B_title": "chore(version-info): use branchPattern to check tag", "B_clean_title": ["chore", "version", "info", "use", "branchpattern", "branch", "pattern", "check", "tag"], "A_body": "This fixes an inconsistency where you can't call the setter function\nwhen the expression resolves to a top level field name on a promise.\n\nSetting a field on an unresolved promise will throw an exception.  (This\nshouldn't really happen in your template/js code and points to a\nprogramming error.)\n\nCloses #1827\n", "A_clean_body": ["thi", "fix", "inconsist", "where", "you", "ca", "n't", "call", "setter", "function", "when", "express", "resolv", "top", "level", "field", "name", "promis", "set", "field", "unresolv", "promis", "will", "throw", "except", "thi", "n't", "realli", "happen", "your", "templat", "js", "code", "point", "program", "error", "close", "1827"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe have two fields in package.json for checking the current version:\n- branchVersion\n- branchPattern\n\nThe `branchVersion` field is used to work out what version to use in the\ndocs application, so we should not update this to the most recent version\nuntil that version is on the Google CDN. Otherwise the docs app will break.\n\nThe `branchPattern` is used to determine what branch we are currently\nworking from and is generally used as a gate-keeper to prevent invalid\nreleases from the wrong branch.\n\nThe `getTaggedVersion()` method was using the `branchVersion` to check\nthat the tagged commit was valid but this fails when we are moving to a\nnew minor version with release candidates.\n\nThis fix avoids the problem by doing a custom comparison against the\n`branchPattern` instead.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "we", "have", "two", "field", "packag", "json", "check", "current", "version", "branchvers", "branch", "version", "branchpattern", "branch", "pattern", "branchvers", "branch", "version", "field", "use", "work", "out", "what", "version", "use", "doc", "applic", "so", "we", "not", "updat", "thi", "most", "recent", "version", "until", "that", "version", "googl", "cdn", "otherwis", "doc", "app", "will", "break", "branchpattern", "branch", "pattern", "use", "determin", "what", "branch", "we", "are", "current", "work", "gener", "use", "as", "gate", "keeper", "prevent", "invalid", "releas", "wrong", "branch", "gettaggedvers", "get", "tag", "version", "method", "wa", "branchvers", "branch", "version", "check", "that", "tag", "commit", "wa", "valid", "but", "thi", "fail", "when", "we", "are", "move", "new", "minor", "version", "releas", "candid", "thi", "fix", "avoid", "problem", "by", "do", "custom", "comparison", "against", "branchpattern", "branch", "pattern", "instead"], "title_sim": [0.023321293929447453], "body_sim": [0.2326684110986127], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0031358909803951415, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1197}, {"A_title": "docs(ngAria): fix markdown spacing for headers", "A_clean_title": ["doc", "ngaria", "ng", "aria", "fix", "markdown", "space", "header"], "B_title": "test(Angular): remove special case for Edge", "B_clean_title": ["test", "angular", "remov", "special", "case", "edg"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.038735486790624156], "body_sim": [0.9392608475927483], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 747}, {"A_title": "refactor($parse): make use of local variable instead of refetching property", "A_clean_title": ["refactor", "pars", "make", "use", "local", "variabl", "instead", "refetch", "properti"], "B_title": "docs(faq): document the AngularJS/jqLite deprecation strategy", "B_clean_title": ["doc", "faq", "document", "angularj", "jqlite", "angular", "js", "jq", "lite", "deprec", "strategi"], "A_body": "I swear that variable [wasn't there originally](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa#diff-780de070ede30180f6aedb6c5f7d57caR1218)!", "A_clean_body": ["swear", "that", "variabl", "wa", "n't", "there", "origin", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff", "780de070ede30180f6aedb6c5f7d57car1218", "780de070ede30180f6aedb6c5f7d57ca", "r1218"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe deprecation strategy is not specified.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe deprecation strategy is specified.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\nFixes #15282", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "deprec", "strategi", "not", "specifi", "**what", "new", "behavior", "thi", "featur", "chang", "deprec", "strategi", "specifi", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "fix", "15282"], "title_sim": [0.06698306086641066], "body_sim": [0.33272486866850187], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 6}, {"A_title": "chore(node): update semver", "A_clean_title": ["chore", "node", "updat", "semver"], "B_title": "docs(linky): mark \"target\" param as optional in linky filter", "B_clean_title": ["doc", "linki", "mark", "target", "param", "as", "option", "linki", "filter"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This argument is optional in practice, and it is not provided in many of the examples in the documentation.\r\nIts optional presence is handled here:\r\nhttps://github.com/angular/angular.js/blob/master/src/ngSanitize/filter/linky.js#L185.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe second argument to ngSanitize's \"linky\" filter is marked as non-optional, it is handled as optional and usage shows it as being optional.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nngSanitize's \"linky\" filter has it's second parameter marked as optional.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "argument", "option", "practic", "it", "not", "provid", "mani", "exampl", "document", "it", "option", "presenc", "handl", "here", "http", "js", "github", "com", "angular", "angular", "js", "blob", "master", "src", "ngsanit", "filter", "linki", "ng", "sanit", "l185", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "second", "argument", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "mark", "as", "non", "option", "it", "handl", "as", "option", "usag", "show", "it", "as", "be", "option", "**what", "new", "behavior", "thi", "featur", "chang", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "ha", "it", "'s", "second", "paramet", "mark", "as", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.03062116973443232], "body_sim": [0.8082720138320831], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 54}, {"A_title": "fix(ngOptions): select disabled option when set from model", "A_clean_title": ["fix", "ngoption", "ng", "option", "select", "disabl", "option", "when", "set", "model"], "B_title": "chore(*): update all Karma-related packages except Karma", "B_clean_title": ["chore", "updat", "all", "karma", "relat", "packag", "except", "karma"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #12756\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\nProbably not, when we understand it as a bug fix.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nWhen a disabled option is set as the ngModel, ngOptions will now select the option\nin the select element, which will set select.val() to the option hash value and visually\nshow the option value / label as selected in the select box. Previously, disabled\noptions forced the unknown value.\nThe previous behavior is inconsistent with both default HTML behavior and select with\nngModel but without ngOptions. Both allow disabled values to be selected programmatically.\n\nCommon use cases for this behavior include options that where previously valid, but have\nbeen disabled, and cannot be selected again.\n\nFixes #12756\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "12756", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "probabl", "not", "when", "we", "understand", "it", "as", "bug", "fix", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "when", "disabl", "option", "set", "as", "ngmodel", "ng", "model", "ngoption", "ng", "option", "will", "now", "select", "option", "select", "element", "which", "will", "set", "select", "val", "option", "hash", "valu", "visual", "show", "option", "valu", "label", "as", "select", "select", "box", "previous", "disabl", "option", "forc", "unknown", "valu", "previou", "behavior", "inconsist", "both", "default", "html", "behavior", "select", "ngmodel", "ng", "model", "but", "without", "ngoption", "ng", "option", "both", "allow", "disabl", "valu", "select", "programmat", "common", "use", "case", "thi", "behavior", "includ", "option", "that", "where", "previous", "valid", "but", "have", "been", "disabl", "not", "select", "again", "fix", "12756"], "B_body": "The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["updat", "karma", "chrome", "launcher", "add", "support", "chromeheadless", "chrome", "headless", "chromecanaryheadless", "chrome", "canari", "headless", "launcher", "test", "karma", "start", "karma", "jqlite", "conf", "js", "browsers=chromecanaryheadless", "browsers=chrom", "canari", "headless", "updat", "karma", "firefox", "launcher", "disabl", "multi", "process", "which", "may", "increas", "stabil", "jenkin", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.02771731960754562], "body_sim": [0.6482441041545122], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 417}, {"A_title": "feat(ngModel): bind to getters/setters", "A_clean_title": ["feat", "ngmodel", "ng", "model", "bind", "getter", "setter"], "B_title": "revert: fix($resource): allow params in `hostname` (except for IPv6 addresses)", "B_clean_title": ["revert", "fix", "resourc", "allow", "param", "hostnam", "except", "ipv6", "pv6", "address"], "A_body": "Currently, you might do this if you want to bind to getters/setters:\n\n> controller\n\n``` javascript\n// ...\n$scope.watch(function () {\n  return myModel.getterSetter();\n}, function (newValue) {\n  $scope.someProp = newValue;\n});\n\n$scope.watch('someProp', function (newValue) {\n  myModel.getterSetter(newValue);\n});\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"someProp\">\n```\n\nThe implementation in this PR changes the semantics of `ngModel` in the following ways:\n\nIf the expression bound to `ngModel` resolves to a function, the function is invoked to get the current value to be expressed in the DOM. When the binding changes, if the expression bound to `ngModel` resolves to a function (at that time) the function is invoked with the new value.\n\nThis means instead, you could do this:\n\n> controller\n\n``` javascript\n// ...\n$scope.myModel = myModel;\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"myModel.getterSetter\">\n```\n\nI like that to end developers, this feels like \"uniform access\" for common cases. I don't like that this means there's a difference in semantics between `ngModel` and expressions elsewhere in Angular.\n\nThis would be a breaking change, but I don't think that this would affect any legitimate use cases. The only case I can think of is if hypothetically, you bind to some property that's originally a function, overwriting it with a string. I can't think of any good reason to write controller code like that.\n\n@IgorMinar suggested a different syntax so that the difference in semantics is obvious. Something like:\n\n``` html\n<input ng-model=\"myModel.getterSetter()\">\n```\n\nI like that this makes the semantics obvious. I don't like that this still violates the \"uniform access principle.\"\n\nCloses #768\n", "A_clean_body": ["current", "you", "might", "thi", "you", "want", "bind", "getter", "setter", "control", "javascript", "scope", "watch", "function", "return", "mymodel", "gettersett", "my", "model", "getter", "setter", "function", "newvalu", "new", "valu", "scope", "someprop", "some", "prop", "newvalu", "new", "valu", "scope", "watch", "'someprop", "'some", "prop", "function", "newvalu", "new", "valu", "mymodel", "gettersett", "my", "model", "getter", "setter", "newvalu", "new", "valu", "templat", "html", "input", "ng", "model=", "someprop", "some", "prop", "implement", "thi", "pr", "chang", "semant", "ngmodel", "ng", "model", "follow", "way", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "function", "invok", "get", "current", "valu", "express", "dom", "when", "bind", "chang", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "at", "that", "time", "function", "invok", "new", "valu", "thi", "mean", "instead", "you", "could", "thi", "control", "javascript", "scope", "mymodel", "my", "model", "mymodel", "my", "model", "templat", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "end", "develop", "thi", "feel", "like", "uniform", "access", "common", "case", "n't", "like", "that", "thi", "mean", "there", "'s", "differ", "semant", "between", "ngmodel", "ng", "model", "express", "elsewher", "angular", "thi", "would", "break", "chang", "but", "n't", "think", "that", "thi", "would", "affect", "ani", "legitim", "use", "case", "onli", "case", "think", "hypothet", "you", "bind", "some", "properti", "that", "'s", "origin", "function", "overwrit", "it", "string", "ca", "n't", "think", "ani", "good", "reason", "write", "control", "code", "like", "that", "igorminar", "igor", "minar", "suggest", "differ", "syntax", "so", "that", "differ", "semant", "obviou", "someth", "like", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "thi", "make", "semant", "obviou", "n't", "like", "that", "thi", "still", "violat", "uniform", "access", "principl", "close", "768"], "B_body": "This reverts commit 7f45b5fee79e2cb87d65bdd015d455304cec1ee4.", "B_clean_body": ["thi", "revert", "commit", "7f45b5fee79e2cb87d65bdd015d455304cec1ee4"], "title_sim": [-0.009139472430112625], "body_sim": [0.31202936192450886], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 904}, {"A_title": "fix(numberFilter): correctly round fractions despite floating-point arithmetics issues in JS", "A_clean_title": ["fix", "numberfilt", "number", "filter", "correctli", "round", "fraction", "despit", "float", "point", "arithmet", "issu", "js"], "B_title": "fix($parse): respect the interceptor.$stateful flag", "B_clean_title": ["fix", "pars", "respect", "interceptor", "state", "flag"], "A_body": "Closes #7870\nCloses #7878\n", "A_clean_body": ["close", "7870", "close", "7878"], "B_body": "~~This actually depends on #16009 because that (unnecessary) `$stateful` flag was previously being ignored in the case of the failing test.~~", "B_clean_body": ["~~thi", "actual", "depend", "16009", "becaus", "that", "unnecessari", "state", "flag", "wa", "previous", "be", "ignor", "case", "fail", "test"], "title_sim": [0.0627964290229585], "body_sim": [0.013990133945919019], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03138853498749359, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1068}, {"A_title": "fix($compile): create new (isolate) scopes for directives on root elements", "A_clean_title": ["fix", "compil", "creat", "new", "isol", "scope", "direct", "root", "element"], "B_title": "docs(guide/Unit Testing): Typo in 'focused'", "B_clean_title": ["doc", "guid", "unit", "test", "typo", "'focus"], "A_body": "previously we would not create them and it's causing all kinds of issues and accidental leaks\n\nCloses #817\n", "A_clean_body": ["previous", "we", "would", "not", "creat", "them", "it", "'s", "caus", "all", "kind", "issu", "accident", "leak", "close", "817"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nN/A\n\n**What is the new behavior (if this is a feature change)?**\n\nNone\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "none", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.03307366351110294], "body_sim": [0.1135594388900312], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1493}, {"A_title": "docs($sce): grammar fix - there was a word omitted", "A_clean_title": ["doc", "sce", "grammar", "fix", "there", "wa", "word", "omit"], "B_title": "fix($animate): allow enabled children to animate on disabled parents", "B_clean_title": ["fix", "anim", "allow", "enabl", "children", "anim", "disabl", "parent"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\nno change\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n...teeny letter missing.  Just a grammar change.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "teeni", "letter", "miss", "just", "grammar", "chang"], "B_body": "Prior to this fix if a parent container disabled animations for\nitself then no children could be enabled explicity via\n`$animate.enabled`. This patch allows for that to work.\n\nCloses #13179\nCloses #13695\n", "B_clean_body": ["prior", "thi", "fix", "parent", "contain", "disabl", "anim", "itself", "then", "no", "children", "could", "enabl", "explic", "via", "anim", "enabl", "thi", "patch", "allow", "that", "work", "close", "13179", "close", "13695"], "title_sim": [0.04485234916272531], "body_sim": [0.10970684594231599], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 102}, {"A_title": "chore(version-info): use branchPattern to check tag", "A_clean_title": ["chore", "version", "info", "use", "branchpattern", "branch", "pattern", "check", "tag"], "B_title": "fix(ngOptions): remove selected attribute from unselected options", "B_clean_title": ["fix", "ngoption", "ng", "option", "remov", "select", "attribut", "unselect", "option"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe have two fields in package.json for checking the current version:\n- branchVersion\n- branchPattern\n\nThe `branchVersion` field is used to work out what version to use in the\ndocs application, so we should not update this to the most recent version\nuntil that version is on the Google CDN. Otherwise the docs app will break.\n\nThe `branchPattern` is used to determine what branch we are currently\nworking from and is generally used as a gate-keeper to prevent invalid\nreleases from the wrong branch.\n\nThe `getTaggedVersion()` method was using the `branchVersion` to check\nthat the tagged commit was valid but this fails when we are moving to a\nnew minor version with release candidates.\n\nThis fix avoids the problem by doing a custom comparison against the\n`branchPattern` instead.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "we", "have", "two", "field", "packag", "json", "check", "current", "version", "branchvers", "branch", "version", "branchpattern", "branch", "pattern", "branchvers", "branch", "version", "field", "use", "work", "out", "what", "version", "use", "doc", "applic", "so", "we", "not", "updat", "thi", "most", "recent", "version", "until", "that", "version", "googl", "cdn", "otherwis", "doc", "app", "will", "break", "branchpattern", "branch", "pattern", "use", "determin", "what", "branch", "we", "are", "current", "work", "gener", "use", "as", "gate", "keeper", "prevent", "invalid", "releas", "wrong", "branch", "gettaggedvers", "get", "tag", "version", "method", "wa", "branchvers", "branch", "version", "check", "that", "tag", "commit", "wa", "valid", "but", "thi", "fail", "when", "we", "are", "move", "new", "minor", "version", "releas", "candid", "thi", "fix", "avoid", "problem", "by", "do", "custom", "comparison", "against", "branchpattern", "branch", "pattern", "instead"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14892 nad #14419\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nWhen the select model changes, we add the \"selected\" attribute to the selected option, so that\nscreen readers know which option is selected.\n\nPreviously, we failed to remove the attribute when the model changed to match a different option, or\nthe unknown / empty option.\n\nWhen using \"track by\", the behavior would also show when a user selected an option, and then the\nmodel was changed, because track by watches the tracked expression, and calls the $render function\non change.\n\nThis fix reads the current select value, finds the matching option and removes the \"selected\"\nattribute.\n\nFixes #14892\nFixes #14419\nRelated #12731\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14892", "nad", "14419", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "when", "select", "model", "chang", "we", "add", "select", "attribut", "select", "option", "so", "that", "screen", "reader", "know", "which", "option", "select", "previous", "we", "fail", "remov", "attribut", "when", "model", "chang", "match", "differ", "option", "or", "unknown", "empti", "option", "when", "track", "by", "behavior", "would", "also", "show", "when", "user", "select", "option", "then", "model", "wa", "chang", "becaus", "track", "by", "watch", "track", "express", "call", "render", "function", "chang", "thi", "fix", "read", "current", "select", "valu", "find", "match", "option", "remov", "select", "attribut", "fix", "14892", "fix", "14419", "relat", "12731"], "title_sim": [0.03529778724247179], "body_sim": [0.5898136434305369], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0041418838221636825, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 107}, {"A_title": "Increase performance when checking if element is animatable", "A_clean_title": ["increas", "perform", "when", "check", "element", "animat"], "B_title": "docs(guide/Forms): add labels to forms", "B_clean_title": ["doc", "guid", "form", "add", "label", "form"], "A_body": "Built upon PR #13783 \n", "A_clean_body": ["built", "upon", "pr", "13783"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nno label tags in the inputs\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nnot a feature\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nI can add label tags to the other input fields in the docs.", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "label", "tag", "input", "**what", "new", "behavior", "thi", "featur", "chang", "not", "featur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "label", "tag", "other", "input", "field", "doc"], "title_sim": [0.08617878025865723], "body_sim": [0.6106813064958491], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 305}, {"A_title": "test(Angular): remove special case for Edge", "A_clean_title": ["test", "angular", "remov", "special", "case", "edg"], "B_title": "feat(ngMocks): Describe unflushed http requests", "B_clean_title": ["feat", "ngmock", "ng", "mock", "describ", "unflush", "http", "request"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "The current implementation of $httpBackend.verifyNoOutstandingRequest\r\ngives an integer number describing how many requests are unflushed.\r\n\r\nWhile it's superficially easy to solve test errors from that message\r\nby simply adding an additional $httpBackend.flush(), if a developer\r\nis truly not expecting the code to make further requests this is\r\nnot ideal.\r\n\r\nThis change explicitly prints out which additional requests remain\r\nunflushed in the error message, helping her determine if the code\r\nneeds changing, or if an additional flush is appropriate.\r\n\r\nBefore this change:\r\n\r\n    Unflushed requests: 1\r\n\r\nAfter this change:\r\n\r\n    Unflushed requests:\r\n      GET /some\r\n\r\nCloses #10596\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA feature improving the output of ngMocks \"Unflushed requests\" error message.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe error message includes the number of requests remaining unflushed.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThe error message now includes a brief description of which requests remain unflushed.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo - unless the error messages are considered public API.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["current", "implement", "httpbackend", "verifynooutstandingrequest", "http", "backend", "verifi", "no", "outstand", "request", "give", "integ", "number", "describ", "how", "mani", "request", "are", "unflush", "while", "it", "'s", "superfici", "easi", "solv", "test", "error", "that", "messag", "by", "simpli", "ad", "addit", "httpbackend", "flush", "http", "backend", "develop", "truli", "not", "expect", "code", "make", "further", "request", "thi", "not", "ideal", "thi", "chang", "explicitli", "print", "out", "which", "addit", "request", "remain", "unflush", "error", "messag", "help", "her", "determin", "code", "need", "chang", "or", "addit", "flush", "appropri", "befor", "thi", "chang", "unflush", "request", "after", "thi", "chang", "unflush", "request", "get", "some", "close", "10596", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "improv", "output", "ngmock", "ng", "mock", "unflush", "request", "error", "messag", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "error", "messag", "includ", "number", "request", "remain", "unflush", "**what", "new", "behavior", "thi", "featur", "chang", "error", "messag", "now", "includ", "brief", "descript", "which", "request", "remain", "unflush", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "unless", "error", "messag", "are", "consid", "public", "api", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.06478082115885385], "body_sim": [0.7257865710601036], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 381}, {"A_title": "docs/chore(version stuff): fix how versions are handled in builds and docs", "A_clean_title": ["doc", "chore", "version", "stuff", "fix", "how", "version", "are", "handl", "build", "doc"], "B_title": "chore(*): update protractor", "B_clean_title": ["chore", "updat", "protractor"], "A_body": "There are three somewhat independent commits.\n- The first is a simple bug fix in the docs\n- The second updates how the versions are managed in the docs\n- The third does the same for the build\n", "A_clean_body": ["there", "are", "three", "somewhat", "independ", "commit", "first", "simpl", "bug", "fix", "doc", "second", "updat", "how", "version", "are", "manag", "doc", "third", "same", "build"], "B_body": "Update protractor to latest 5.1.2 to make it work with Chrome 58 on Jenkins.\r\nThis version is not compatible with FF 53 and directConnect, but this should be irrelevant as protractor on Travis does not use directConnect and we don't test FF on Jenkins.", "B_clean_body": ["updat", "protractor", "latest", "make", "it", "work", "chrome", "58", "jenkin", "thi", "version", "not", "compat", "ff", "53", "directconnect", "direct", "connect", "but", "thi", "irrelev", "as", "protractor", "travi", "not", "use", "directconnect", "direct", "connect", "we", "n't", "test", "ff", "jenkin"], "title_sim": [0.39977444252379], "body_sim": [0.31940589922547347], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1163}, {"A_title": "chore(github): update the issue template", "A_clean_title": ["chore", "github", "updat", "issu", "templat"], "B_title": "fix($parse): do not pass scope/locals to interceptors of one-time bindings", "B_clean_title": ["fix", "pars", "not", "pass", "scope", "local", "interceptor", "one", "time", "bind"], "A_body": "Updates the issue template.\r\n- make it more like the Angular one\r\n- include extra information into comments, so the actual output is cleaner and you can find the relevant info faster when triaging\r\n- make it easier to differentiate between bugs and features\r\n- remove section that are only relevant for features ... this is often filled out with redundant info\r\n- make sections shorter and hopefully clearer", "A_clean_body": ["updat", "issu", "templat", "make", "it", "more", "like", "angular", "one", "includ", "extra", "inform", "into", "comment", "so", "actual", "output", "cleaner", "you", "find", "relev", "info", "faster", "when", "triag", "make", "it", "easier", "differenti", "between", "bug", "featur", "remov", "section", "that", "are", "onli", "relev", "featur", "thi", "often", "fill", "out", "redund", "info", "make", "section", "shorter", "hope", "clearer"], "B_body": "2ee5033967d5f87a516bad137686b0592e25d26b should not have added these args (see 529550d0da3d88514ce9efb038fb935fbf90f971 which dropped them elsewhere)", "B_clean_body": ["2ee5033967d5f87a516bad137686b0592e25d26b", "not", "have", "ad", "these", "arg", "see", "529550d0da3d88514ce9efb038fb935fbf90f971", "which", "drop", "them", "elsewher"], "title_sim": [0.04035400005248389], "body_sim": [0.08647102769264192], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.011789104573795289, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 126}, {"A_title": "chore: upgrade grunt packages to match master", "A_clean_title": ["chore", "upgrad", "grunt", "packag", "match", "master"], "B_title": "refactor($parse): add lgalfaso's refactors and suggestions", "B_clean_title": ["refactor", "pars", "add", "lgalfaso", "'s", "refactor", "suggest"], "A_body": "Seems to fix Jenkins build.\n\nBroken: http://ci.angularjs.org/job/angular.js-angular-v1.0.x/lastBuild/console\n\nFixed: http://ci.angularjs.org/job/angular.js-brian/34/console\n", "A_clean_body": ["seem", "fix", "jenkin", "build", "broken", "http", "angular", "angularj", "js", "v1", "ci", "org", "job", "angular", "lastbuild", "consol", "last", "build", "fix", "http", "angularj", "js", "brian", "34", "consol", "ci", "org", "job", "angular"], "B_body": "@lgalfaso's PR #7543 had two aspects of it that I didn't include in my last changes to $parse (#7552, #7555)\n- Lexer should only take care of `constant`, and the Parser should deduce that a _primary_ `constant` is also a `literal`\n- Simplify the logic of Parser.filter \n", "B_clean_body": ["lgalfaso", "'s", "pr", "7543", "had", "two", "aspect", "it", "that", "did", "n't", "includ", "my", "last", "chang", "pars", "7552", "7555", "lexer", "onli", "take", "care", "constant", "parser", "deduc", "that", "primari", "constant", "also", "liter", "simplifi", "logic", "parser", "filter"], "title_sim": [-0.028358013268295994], "body_sim": [0.05563532546851813], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 268}, {"A_title": "docs($http): add a note about modifying data in transformRequest", "A_clean_title": ["doc", "http", "add", "note", "about", "modifi", "data", "transformrequest", "transform", "request"], "B_title": "perf(ngStyleDirective): use $watchCollection", "B_clean_title": ["perf", "ngstyledirect", "ng", "style", "direct", "use", "watchcollect", "watch", "collect"], "A_body": "- **What kind of change does this PR introduce?** (Bug fix, feature, docs update, ...)\n  docs update\n- **What is the current behavior?** (You can also link to an open issue here)\n  See #12468\n\nCloses #12468\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "12468", "close", "12468"], "B_body": "This re-commits https://github.com/angular/angular.js/commit/4c8d8ad5083d9dd17c0b8480339d5f95943f1b71 which was [reverted](https://github.com/angular/angular.js/commit/36fd167e1d6668ab497970f491a6d95344e97e41) (with [tests added](https://github.com/angular/angular.js/commit/da75d138b144d196fc2b397c7a86a74528c151a5)).  This is possible now because of 189461f9bf6fda18ddbd16c42f2e959cf939c3da, although note that change is currently causing #15905 so maybe we should hold off on merging this one for now?\r\n\r\nFYI @gdi2290", "B_clean_body": ["thi", "re", "commit", "http", "github", "com", "angular", "angular", "js", "commit", "4c8d8ad5083d9dd17c0b8480339d5f95943f1b71", "which", "wa", "revert", "http", "github", "com", "angular", "angular", "js", "commit", "36fd167e1d6668ab497970f491a6d95344e97e41", "test", "ad", "http", "github", "com", "angular", "angular", "js", "commit", "da75d138b144d196fc2b397c7a86a74528c151a5", "thi", "possibl", "now", "becaus", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "although", "note", "that", "chang", "current", "caus", "15905", "so", "mayb", "we", "hold", "off", "merg", "thi", "one", "now", "fyi", "gdi2290"], "title_sim": [-0.025267151037492816], "body_sim": [0.1647576729989314], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03648226914929373, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 429}, {"A_title": "refactor($parse): remove unused expression arguments", "A_clean_title": ["refactor", "pars", "remov", "unus", "express", "argument"], "B_title": "feat(jqLite): make injector() and scope() work with the document object", "B_clean_title": ["feat", "jqlite", "jq", "lite", "make", "injector", "scope", "work", "document", "object"], "A_body": "Not sure if I'm missing some...?\n", "A_clean_body": ["not", "sure", "'m", "miss", "some"], "B_body": "For typical app that has ng-app directive on the html element, we now can do:\n\nangular.element(document).injector() or .injector()\nangular.element(document).scope() or .scope()\n\ninstead of:\n\nangular.element(document.getElementsByTagName('html')[0]).injector()\n...\n", "B_clean_body": ["typic", "app", "that", "ha", "ng", "app", "direct", "html", "element", "we", "now", "angular", "element", "document", "injector", "or", "injector", "angular", "element", "document", "scope", "or", "scope", "instead", "angular", "element", "document", "getelementsbytagnam", "get", "element", "by", "tag", "name", "'html", "injector"], "title_sim": [0.3502938281805009], "body_sim": [0.12847217058535904], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1670}, {"A_title": "refactor($compile): remove workaround for chrome bug fixed in v50", "A_clean_title": ["refactor", "compil", "remov", "workaround", "chrome", "bug", "fix", "v50"], "B_title": "fix: call $animate.on() listeners when document is hidden", "B_clean_title": ["fix", "call", "anim", "listen", "when", "document", "hidden"], "A_body": "Based on the comments this shouldn't be needed anymore?", "A_clean_body": ["base", "comment", "thi", "n't", "need", "anymor"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRegression fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14120\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nThe first commit fixes a very rare case of callbacks being called in the wrong order, and has nothing to do with the regression (but it was found while fixing it)\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "regress", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14120", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "first", "commit", "fix", "veri", "rare", "case", "callback", "be", "call", "wrong", "order", "ha", "noth", "regress", "but", "it", "wa", "found", "while", "fix", "it"], "title_sim": [0.05753011896728453], "body_sim": [0.11129080175845171], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 765}, {"A_title": "test(orderBy): add test cases for ordering array-like objects", "A_clean_title": ["test", "orderbi", "order", "by", "add", "test", "case", "order", "array", "like", "object"], "B_title": "docs(guide/Developer Guide): Update twitter handle", "B_clean_title": ["doc", "guid", "develop", "guid", "updat", "twitter", "handl"], "A_body": "(Testing #9942 before merging)\n", "A_clean_body": ["test", "9942", "befor", "merg"], "B_body": "Replaced the old Angular twitter handle with the new one.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["replac", "old", "angular", "twitter", "handl", "new", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.13817702977614527], "body_sim": [0.09087427391616429], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 876}, {"A_title": "Ngoptions documentation change", "A_clean_title": ["ngoption", "document", "chang"], "B_title": "fix(): fix scoping for transclusion directives inside replace directive", "B_clean_title": ["fix", "fix", "scope", "transclus", "direct", "insid", "replac", "direct"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nredundant link to ngOptions, no link to ngRepeat\n\n**What is the new behavior (if this is a feature change)?**\n\nlink to ngRepeat, no redundant link to ngOptions\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "redund", "link", "ngoption", "ng", "option", "no", "link", "ngrepeat", "ng", "repeat", "**what", "new", "behavior", "thi", "featur", "chang", "link", "ngrepeat", "ng", "repeat", "no", "redund", "link", "ngoption", "ng", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "B_body": "Tweaks to the implementation of #12975\n\nCloses #12975\nCloses #12936 \n", "B_clean_body": ["tweak", "implement", "12975", "close", "12975", "close", "12936"], "title_sim": [-0.01849453753338027], "body_sim": [-0.0009481552349548611], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 310}, {"A_title": "refactor($compile): remove workaround for chrome bug fixed in v50", "A_clean_title": ["refactor", "compil", "remov", "workaround", "chrome", "bug", "fix", "v50"], "B_title": "chore(travis): turn on caching for node_modules and bower_components directories", "B_clean_title": ["chore", "travi", "turn", "cach", "node", "modul", "bower", "compon", "directori"], "A_body": "Based on the comments this shouldn't be needed anymore?", "A_clean_body": ["base", "comment", "thi", "n't", "need", "anymor"], "B_body": "The cache behavior is documented at http://docs.travis-ci.com/user/caching/\n\nThis commit also disabled our custom caching via npm-bundler-deps.sh\n", "B_clean_body": ["cach", "behavior", "document", "at", "http", "travi", "ci", "doc", "com", "user", "cach", "thi", "commit", "also", "disabl", "our", "custom", "cach", "via", "npm", "bundler", "dep", "sh"], "title_sim": [-0.029092802137908096], "body_sim": [0.17383857542354256], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1169}, {"A_title": "fix(ngMessages): prevent race condition with ngAnimate", "A_clean_title": ["fix", "ngmessag", "ng", "messag", "prevent", "race", "condit", "nganim", "ng", "anim"], "B_title": "Overload \"component\" method to accept object map of components", "B_clean_title": ["overload", "compon", "method", "accept", "object", "map", "compon"], "A_body": "If `ngMessage` tried to add a message back in that was about to be removed\nafter an animation, the NgMessageController got confused and tried to detach\nthe newly added message, when the pending node was destroyed.\n\nThis change applies a unique `attachId` to the message object and its DOM\nnode when it is attached. This is then checked when a DOM node is being\ndestroyed to prevent unwanted calls to `detach`.\n\nCloses #12856\n", "A_clean_body": ["ngmessag", "ng", "messag", "tri", "add", "messag", "back", "that", "wa", "about", "remov", "after", "anim", "ngmessagecontrol", "ng", "messag", "control", "got", "confus", "tri", "detach", "newli", "ad", "messag", "when", "pend", "node", "wa", "destroy", "thi", "chang", "appli", "uniqu", "attachid", "attach", "id", "messag", "object", "it", "dom", "node", "when", "it", "attach", "thi", "then", "check", "when", "dom", "node", "be", "destroy", "prevent", "unwant", "call", "detach", "close", "12856"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\"component\" method does not allow multiple components registration\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\"component\" method accepts object as a parameter where the keys are component names and the values are the component definition objects\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compon", "method", "not", "allow", "multipl", "compon", "registr", "**what", "new", "behavior", "thi", "featur", "chang", "compon", "method", "accept", "object", "as", "paramet", "where", "key", "are", "compon", "name", "valu", "are", "compon", "definit", "object", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.07289128293962004], "body_sim": [0.264608537192203], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.060915851988871624, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 637}, {"A_title": "chore($resource): remove obsolete API", "A_clean_title": ["chore", "resourc", "remov", "obsolet", "api"], "B_title": "chore(ci): remove repeated tests running from Travis build", "B_clean_title": ["chore", "ci", "remov", "repeat", "test", "run", "travi", "build"], "A_body": "This code has been in the $resource service since 2010, but was\r\nnever documented and can therefore be removed. It'll save precious bytes!\r\n\r\nShout-out to @gkalpak for finding this.\r\n\r\nTechnically, we don't have to remove it, but it doesn't make sense to keep it in the repository either. It leads to devs fixing bugs in undocumented APIs: https://github.com/angular/angular.js/commit/6eb4ffc085cc0fde19cbac2c3da227ff47d71e4e ;)\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nobsolete code removal\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo \ud83d\ude1b \r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been removed\r\n- ~ [ ] Docs have been added / updated (for bug fixes / features) ~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "code", "ha", "been", "resourc", "servic", "sinc", "2010", "but", "wa", "never", "document", "therefor", "remov", "it", "'ll", "save", "preciou", "byte", "shout", "out", "gkalpak", "find", "thi", "technic", "we", "n't", "have", "remov", "it", "but", "it", "n't", "make", "sens", "keep", "it", "repositori", "either", "it", "lead", "dev", "fix", "bug", "undocu", "api", "ap", "http", "github", "com", "angular", "angular", "js", "commit", "6eb4ffc085cc0fde19cbac2c3da227ff47d71e4", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "obsolet", "code", "remov", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "remov", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "In b2902446eb41591f5d868846d3c5bad3a888bcba the doce2e tests were moved\ninto the 'unit' test job on Travis, but only half of this change ever made\nit into v1.2.x. This change fixes up the other half, so that the doce2e\ntests are run only once.\n", "B_clean_body": ["b2902446eb41591f5d868846d3c5bad3a888bcba", "doce2", "test", "were", "move", "into", "'unit", "test", "job", "travi", "but", "onli", "half", "thi", "chang", "ever", "made", "it", "into", "v1", "thi", "chang", "fix", "up", "other", "half", "so", "that", "doce2", "test", "are", "run", "onli", "onc"], "title_sim": [0.40980265807202654], "body_sim": [0.3351828461270039], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1107}, {"A_title": "fix($sanitize): sanitize `xml:base` attributes", "A_clean_title": ["fix", "sanit", "sanit", "xml", "base", "attribut"], "B_title": "chore(travis): add commitplease validation to ci-checks", "B_clean_title": ["chore", "travi", "add", "commitpleas", "valid", "ci", "check"], "A_body": "On Firefox there is a XSS vulnerability if a malicious attacker\r\ncan write into the `xml:base` attribute on an SVG anchor.\r\n", "A_clean_body": ["firefox", "there", "xss", "vulner", "malici", "attack", "write", "into", "xml", "base", "attribut", "svg", "anchor"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPR commit messages are not validated\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\ntravis validates PR commit messages\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format \ud83d\ude06 \r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "pr", "commit", "messag", "are", "not", "valid", "**what", "new", "behavior", "thi", "featur", "chang", "travi", "valid", "pr", "commit", "messag", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [-0.01775350215159756], "body_sim": [0.016434935213746914], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02280681732604159, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 179}, {"A_title": "fix(numberFilter): correctly round fractions despite floating-point arithmetics issues in JS", "A_clean_title": ["fix", "numberfilt", "number", "filter", "correctli", "round", "fraction", "despit", "float", "point", "arithmet", "issu", "js"], "B_title": "fix(ngTransclude): remove terminal: true", "B_clean_title": ["fix", "ngtransclud", "ng", "transclud", "remov", "termin", "true"], "A_body": "Closes #7870\nCloses #7878\n", "A_clean_body": ["close", "7870", "close", "7878"], "B_body": "This was introduced in commit 2adaff083f309bd324c466edd781f3edbf0aff89,\r\nbut made obsolete in 41f3269bfbd90a8d48e62639bb43f3020617bc57.\r\n\r\nFixes #16411\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "wa", "introduc", "commit", "2adaff083f309bd324c466edd781f3edbf0aff89", "but", "made", "obsolet", "41f3269bfbd90a8d48e62639bb43f3020617bc57", "fix", "16411", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.36223217920456], "body_sim": [0.001598042564562155], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.021368750026045182, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1302}, {"A_title": "chore(browserstack): Update browserstacktunnel-wrapper, fix options", "A_clean_title": ["chore", "browserstack", "updat", "browserstacktunnel", "wrapper", "fix", "option"], "B_title": "docs(ngComponentRouter): add note about shims needed for IE", "B_clean_title": ["doc", "ngcomponentrout", "ng", "compon", "router", "add", "note", "about", "shim", "need", "ie"], "A_body": "Only the latest version of the package works correctly (the backend for it at\r\nBrowserStack is not versioned) and the options have changed in the new version\r\nof the package.\r\n\r\nAlso, iOS 8.0 is no longer available on BrowserStack, only 8.3 is. Instead,\r\nthis commit changes it to 9.3 as we shouldn't be testing on 8 anymore anyway.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix in the testing infrastructure.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe Browserstack wrapper doesn't set the local identified correctly, old wrapper is used that uses incorrect parameter names.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nPackage got updated, params are fine again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["onli", "latest", "version", "packag", "work", "correctli", "backend", "it", "at", "browserstack", "browser", "stack", "not", "version", "option", "have", "chang", "new", "version", "packag", "also", "io", "os", "no", "longer", "avail", "browserstack", "browser", "stack", "onli", "instead", "thi", "commit", "chang", "it", "as", "we", "n't", "test", "anymor", "anyway", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "test", "infrastructur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browserstack", "wrapper", "n't", "set", "local", "identifi", "correctli", "old", "wrapper", "use", "that", "use", "incorrect", "paramet", "name", "**what", "new", "behavior", "thi", "featur", "chang", "packag", "got", "updat", "param", "are", "fine", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\ninfo about es6 shims is missing\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "info", "about", "es6", "shim", "miss"], "title_sim": [0.0633215939455381], "body_sim": [0.6773698368957772], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 362}, {"A_title": "doc:$route: Fix $route example and couple of typos in docs", "A_clean_title": ["doc", "rout", "fix", "rout", "exampl", "coupl", "typo", "doc"], "B_title": "docs(ngRepeat): I added the phrase \"and by age\" on line 236", "B_clean_title": ["doc", "ngrepeat", "ng", "repeat", "ad", "phrase", "by", "age", "line", "236"], "A_body": "Rewrite $route example a bit, as it required $location and $route services\nto be eager published in the root scope.\n\nAdd missing partials (move them to docs/examples directory)\n\nFix small typos in formatter and ng:options docs.\n", "A_clean_body": ["rewrit", "rout", "exampl", "bit", "as", "it", "requir", "locat", "rout", "servic", "eager", "publish", "root", "scope", "add", "miss", "partial", "move", "them", "doc", "exampl", "directori", "fix", "small", "typo", "formatt", "ng", "option", "doc"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo change in behavior introduced \n\n**What is the new behavior (if this is a feature change)?**\n\nNo change in behavior introduced\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example seems to also be filtering by age. It threw me off a bit because I was getting results when I entered numbers in the input field.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "chang", "behavior", "introduc", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "behavior", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "seem", "also", "filter", "by", "age", "it", "threw", "me", "off", "bit", "becaus", "wa", "get", "result", "when", "enter", "number", "input", "field"], "title_sim": [0.07970053082415399], "body_sim": [0.12229017920543356], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1874}, {"A_title": "refactor($sniffer): make $sniffer service private", "A_clean_title": ["refactor", "sniffer", "make", "sniffer", "servic", "privat"], "B_title": "chore(gruntfile): check the node version before starting", "B_clean_title": ["chore", "gruntfil", "check", "node", "version", "befor", "start"], "A_body": "This service has been accidentaly documented in the past, it should not be considered\nto be public api.\n\nI'm also removing fallback to Modernizr since we don't need it.\n\nBreaks any app that depends on this service and its fallback to Modernizr, please\nmigrate to custom \"Modernizr\" service:\n\n```\nmodule.value('Modernizr', function() { return Modernizr; });\n```\n", "A_clean_body": ["thi", "servic", "ha", "been", "accidentali", "document", "past", "it", "not", "consid", "public", "api", "'m", "also", "remov", "fallback", "modernizr", "sinc", "we", "n't", "need", "it", "break", "ani", "app", "that", "depend", "thi", "servic", "it", "fallback", "modernizr", "pleas", "migrat", "custom", "modernizr", "servic", "modul", "valu", "'modernizr", "function", "return", "modernizr"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe specify the node version that is required to run the build in the `.nvmrc`\nfile. So let's check that the current node version satisfies this and report\na helpful message if it is not.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "we", "specifi", "node", "version", "that", "requir", "run", "build", "nvmrc", "file", "so", "let", "'s", "check", "that", "current", "node", "version", "satisfi", "thi", "report", "help", "messag", "it", "not"], "title_sim": [0.09765638816782346], "body_sim": [0.2077971271472598], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1670}, {"A_title": "test($parse): add tests for watching one-time array/object literals", "A_clean_title": ["test", "pars", "add", "test", "watch", "one", "time", "array", "object", "liter"], "B_title": "fix($location): url rewriting if element was removed", "B_clean_title": ["fix", "locat", "url", "rewrit", "element", "wa", "remov"], "A_body": "These are some examples of cases which 189461f9bf6fda18ddbd16c42f2e959cf939c3da enabled. All the one-time tests failed before that commit.\r\n\r\nIt's possible that these overlap with [these tests](https://github.com/angular/angular.js/blob/189461f9bf6fda18ddbd16c42f2e959cf939c3da/test/ng/parseSpec.js#L2692) a bit (the non-deep ones), but I think at least the `should ignore changes within nested objects` tests are a good addition.", "A_clean_body": ["these", "are", "some", "exampl", "case", "which", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "enabl", "all", "one", "time", "test", "fail", "befor", "that", "commit", "it", "'s", "possibl", "that", "these", "overlap", "these", "test", "http", "js", "github", "com", "angular", "angular", "js", "blob", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "test", "ng", "parsespec", "pars", "spec", "l2692", "bit", "non", "deep", "one", "but", "think", "at", "least", "ignor", "chang", "within", "nest", "object", "test", "are", "good", "addit"], "B_body": "When user clicks a link, $location needs to intercept this event.  The <a> doesn't have to be target element of the DOM event, so it needs to traverse the DOM, to find first <a> parent.\n\nIf the target element was removed from DOM, during the same event, it would throw an exception. This fixes the issue.\n\nCloses #1058\n", "B_clean_body": ["when", "user", "click", "link", "locat", "need", "intercept", "thi", "event", "n't", "have", "target", "element", "dom", "event", "so", "it", "need", "travers", "dom", "find", "first", "parent", "target", "element", "wa", "remov", "dom", "dure", "same", "event", "it", "would", "throw", "except", "thi", "fix", "issu", "close", "1058"], "title_sim": [0.07222450533622625], "body_sim": [0.1442970867064575], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.009285817822337158, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2088}, {"A_title": "docs ($compile): add error documentation for noslot error in $compile", "A_clean_title": ["doc", "compil", "add", "error", "document", "noslot", "error", "compil"], "B_title": "docs(guide/External Resources): Remove stale resources", "B_clean_title": ["doc", "guid", "extern", "resourc", "remov", "stale", "resourc"], "A_body": "there was no error page for the $compile:noslot error\r\n\r\nthis resolves #15790\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["there", "wa", "no", "error", "page", "compil", "noslot", "error", "thi", "resolv", "15790", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Small docs fix:\n\nThis commit removes two resources (Firebase Foundations and Angular Course) that I authored but no longer maintain.\n", "B_clean_body": ["small", "doc", "fix", "thi", "commit", "remov", "two", "resourc", "firebas", "foundat", "angular", "cours", "that", "author", "but", "no", "longer", "maintain"], "title_sim": [0.04378132192571211], "body_sim": [0.30776586420864954], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 228}, {"A_title": "refactor($compile): remove unused `return` statement", "A_clean_title": ["refactor", "compil", "remov", "unus", "return", "statement"], "B_title": "test(*): run class-related tests everywhere; fix eval syntax", "B_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "A_body": "As discussed in https://github.com/angular/angular.js/commit/89447b3f2b4c6db62c24473a81fedc3b04242b85#commitcomment-10280666.\n", "A_clean_body": ["as", "discuss", "http", "github", "com", "angular", "angular", "js", "commit", "89447b3f2b4c6db62c24473a81fedc3b04242b85", "commitcom", "10280666"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.02409329427794426], "body_sim": [0.3881123502451248], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 772}, {"A_title": "chore($resource): remove obsolete API", "A_clean_title": ["chore", "resourc", "remov", "obsolet", "api"], "B_title": "fix(numberFilter): correctly round fractions despite floating-point arithmetics issues in JS", "B_clean_title": ["fix", "numberfilt", "number", "filter", "correctli", "round", "fraction", "despit", "float", "point", "arithmet", "issu", "js"], "A_body": "This code has been in the $resource service since 2010, but was\r\nnever documented and can therefore be removed. It'll save precious bytes!\r\n\r\nShout-out to @gkalpak for finding this.\r\n\r\nTechnically, we don't have to remove it, but it doesn't make sense to keep it in the repository either. It leads to devs fixing bugs in undocumented APIs: https://github.com/angular/angular.js/commit/6eb4ffc085cc0fde19cbac2c3da227ff47d71e4e ;)\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nobsolete code removal\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo \ud83d\ude1b \r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been removed\r\n- ~ [ ] Docs have been added / updated (for bug fixes / features) ~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "code", "ha", "been", "resourc", "servic", "sinc", "2010", "but", "wa", "never", "document", "therefor", "remov", "it", "'ll", "save", "preciou", "byte", "shout", "out", "gkalpak", "find", "thi", "technic", "we", "n't", "have", "remov", "it", "but", "it", "n't", "make", "sens", "keep", "it", "repositori", "either", "it", "lead", "dev", "fix", "bug", "undocu", "api", "ap", "http", "github", "com", "angular", "angular", "js", "commit", "6eb4ffc085cc0fde19cbac2c3da227ff47d71e4", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "obsolet", "code", "remov", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "remov", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Closes #7870\nCloses #7878\n", "B_clean_body": ["close", "7870", "close", "7878"], "title_sim": [-0.027255716252732418], "body_sim": [0.011922433913802372], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1205}, {"A_title": "fix(orderBy): ensure correct ordering with arrays of objects and no predicate", "A_clean_title": ["fix", "orderbi", "order", "by", "ensur", "correct", "order", "array", "object", "no", "predic"], "B_title": "fix(input): allow overriding timezone for date input types", "B_clean_title": ["fix", "input", "allow", "overrid", "timezon", "date", "input", "type"], "A_body": "This fix also considerably refactors how the `orderBy` filter works in internally.\n\nThe new algorithm precomputes the predicate values for the array being ordered. This makes the algorith easier to follow but also ensures that this computation is done a maximum of n times, whereas in the previous algorithm it could be greater. The downside is that we must temporarily store this intermediate array.\n\nThere could be performance implications, but they are as likely to be beneficial as detrimental. It could probably do with benchmarking.\n\nCloses #11866\n", "A_clean_body": ["thi", "fix", "also", "consider", "refactor", "how", "orderbi", "order", "by", "filter", "work", "intern", "new", "algorithm", "precomput", "predic", "valu", "array", "be", "order", "thi", "make", "algorith", "easier", "follow", "but", "also", "ensur", "that", "thi", "comput", "done", "maximum", "time", "wherea", "previou", "algorithm", "it", "could", "greater", "downsid", "that", "we", "must", "temporarili", "store", "thi", "intermedi", "array", "there", "could", "perform", "implic", "but", "they", "are", "as", "like", "benefici", "as", "detriment", "it", "could", "probabl", "benchmark", "close", "11866"], "B_body": "Fixes #13382\r\nCloses #16181\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee https://github.com/angular/angular.js/issues/16181\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\noverrideModelOptions can be used to change the timezone.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["fix", "13382", "close", "16181", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "http", "github", "com", "angular", "angular", "js", "issu", "16181", "**what", "new", "behavior", "thi", "featur", "chang", "overridemodelopt", "overrid", "model", "option", "use", "chang", "timezon", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.059777608850174156], "body_sim": [0.22038807107371403], "file_list_sim": 0.1111111111111111, "overlap_files_len": 1, "code_sim": [0.038940641557381646, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 896}, {"A_title": "docs($location): fix typo", "A_clean_title": ["doc", "locat", "fix", "typo"], "B_title": "Warn for missing / obsolete error docs", "B_clean_title": ["warn", "miss", "obsolet", "error", "doc"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe don't know when error docs are missing or obsolete\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\nI have removed an obsolete animation error and moved the tpload error to the correct namespace. In the $templateRequest file, it looks like the error is created in the $compile namespace, but it actually ends up as the $templateRequest namespace, where it should be.\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "n't", "know", "when", "error", "doc", "are", "miss", "or", "obsolet", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "have", "remov", "obsolet", "anim", "error", "move", "tpload", "error", "correct", "namespac", "templaterequest", "templat", "request", "file", "it", "look", "like", "error", "creat", "compil", "namespac", "but", "it", "actual", "end", "up", "as", "templaterequest", "templat", "request", "namespac", "where", "it"], "title_sim": [0.14341769713013272], "body_sim": [0.775563026409818], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 296}, {"A_title": "fix($sniffer): report history false on Android < 4", "A_clean_title": ["fix", "sniffer", "report", "histori", "fals", "android"], "B_title": "chore(*): update protractor", "B_clean_title": ["chore", "updat", "protractor"], "A_body": "Android has history.pushState, but it does not update the location correctly:\nhttp://code.google.com/p/android/issues/detail?id=17471\n\nCloses #904\n", "A_clean_body": ["android", "ha", "histori", "pushstat", "push", "state", "but", "it", "not", "updat", "locat", "correctli", "http", "googl", "code", "com", "android", "issu", "detail", "id=17471", "close", "904"], "B_body": "Update protractor to latest 5.1.2 to make it work with Chrome 58 on Jenkins.\r\nThis version is not compatible with FF 53 and directConnect, but this should be irrelevant as protractor on Travis does not use directConnect and we don't test FF on Jenkins.", "B_clean_body": ["updat", "protractor", "latest", "make", "it", "work", "chrome", "58", "jenkin", "thi", "version", "not", "compat", "ff", "53", "directconnect", "direct", "connect", "but", "thi", "irrelev", "as", "protractor", "travi", "not", "use", "directconnect", "direct", "connect", "we", "n't", "test", "ff", "jenkin"], "title_sim": [-0.000377333203998075], "body_sim": [0.23590488566399292], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1828}, {"A_title": "fix($parse): Allow property names that collide with native object proper...", "A_clean_title": ["fix", "pars", "allow", "properti", "name", "that", "collid", "nativ", "object", "proper"], "B_title": "chore(*): update all Karma-related packages except Karma", "B_clean_title": ["chore", "updat", "all", "karma", "relat", "packag", "except", "karma"], "A_body": "...ties\n\nI.e. constructor, toString, or watch on FF\n(https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/watch)\n- optimize parser a bit to not create getter function for operators\n", "A_clean_body": ["tie", "constructor", "tostr", "string", "or", "watch", "ff", "http", "mozilla", "develop", "org", "en", "javascript", "refer", "global", "object", "object", "watch", "java", "script", "optim", "parser", "bit", "not", "creat", "getter", "function", "oper"], "B_body": "The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["updat", "karma", "chrome", "launcher", "add", "support", "chromeheadless", "chrome", "headless", "chromecanaryheadless", "chrome", "canari", "headless", "launcher", "test", "karma", "start", "karma", "jqlite", "conf", "js", "browsers=chromecanaryheadless", "browsers=chrom", "canari", "headless", "updat", "karma", "firefox", "launcher", "disabl", "multi", "process", "which", "may", "increas", "stabil", "jenkin", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.028712322788839888], "body_sim": [0.05859239028626574], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1885}, {"A_title": "feat($parse): support trailing commas in object & array literals", "A_clean_title": ["feat", "pars", "support", "trail", "comma", "object", "array", "liter"], "B_title": "fix($parse): do not pass scope/locals to interceptors of one-time bindings", "B_clean_title": ["fix", "pars", "not", "pass", "scope", "local", "interceptor", "one", "time", "bind"], "A_body": "Per ECMAScript 5.1 specification trailing commas are allowed in object and\narray literals. All modern browsers as well as IE>8 support this syntax.\nThis commit adds support for such syntax to Angular expressions.\n\nI'm creating a new pull request as @btford asked me to re-open #3685 with an explanation\nand I don't have privileges to re-open prs.\n\nMain use case of trailing commas are when using multi-line notation for objects/arrays. When you have sth like:\n\n``` javascript\n{\n    par1: \"val1\",\n    par3: \"val3\",\n    par2: \"val2\",\n}\n```\n\nit's much easier to move lines 2. and 3. around without causing errors. Such reordering is cumberscome when trailing commas are ommited. I agree readability is a little reduced when using a single-line form, but for multi-line ones it's IMO a godsend.\n\nCurrently there are no good tools to minify Angular expressions so this might be less used form now but once such a tool is created, for longer objects/arrays such notation would help.\n", "A_clean_body": ["per", "ecmascript", "ecma", "script", "specif", "trail", "comma", "are", "allow", "object", "array", "liter", "all", "modern", "browser", "as", "well", "as", "ie", "support", "thi", "syntax", "thi", "commit", "add", "support", "such", "syntax", "angular", "express", "'m", "creat", "new", "pull", "request", "as", "btford", "ask", "me", "re", "open", "3685", "explan", "n't", "have", "privileg", "re", "open", "pr", "main", "use", "case", "trail", "comma", "are", "when", "multi", "line", "notat", "object", "array", "when", "you", "have", "sth", "like", "javascript", "par1", "val1", "par3", "val3", "par2", "val2", "it", "'s", "much", "easier", "move", "line", "around", "without", "caus", "error", "such", "reorder", "cumberscom", "when", "trail", "comma", "are", "ommit", "agre", "readabl", "littl", "reduc", "when", "singl", "line", "form", "but", "multi", "line", "one", "it", "'s", "imo", "godsend", "current", "there", "are", "no", "good", "tool", "minifi", "angular", "express", "so", "thi", "might", "less", "use", "form", "now", "but", "onc", "such", "tool", "creat", "longer", "object", "array", "such", "notat", "would", "help"], "B_body": "2ee5033967d5f87a516bad137686b0592e25d26b should not have added these args (see 529550d0da3d88514ce9efb038fb935fbf90f971 which dropped them elsewhere)", "B_clean_body": ["2ee5033967d5f87a516bad137686b0592e25d26b", "not", "have", "ad", "these", "arg", "see", "529550d0da3d88514ce9efb038fb935fbf90f971", "which", "drop", "them", "elsewher"], "title_sim": [0.3738627268060953], "body_sim": [0.23398244292952372], "file_list_sim": 1.0, "overlap_files_len": 2, "code_sim": [0.048056104387684935, 0.048056104387684935], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1429}, {"A_title": "fix($parse): do not shallow-watch computed property keys", "A_clean_title": ["fix", "pars", "not", "shallow", "watch", "comput", "properti", "key"], "B_title": "fix(formatNumber): better corner case handling", "B_clean_title": ["fix", "formatnumb", "format", "number", "better", "corner", "case", "handl"], "A_body": "Fixes a case which b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f missed. ES6 computed keys can implicitly invoke `.toString()` of an object so we can't shallow-watch it.\r\n\r\nThe other option is shallow-watching `String(key)` instead, but I'm a little hesitant to watch something slightly different then how it's used in the real expression.", "A_clean_body": ["fix", "case", "which", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "miss", "es6", "comput", "key", "implicitli", "invok", "tostr", "string", "object", "so", "we", "ca", "n't", "shallow", "watch", "it", "other", "option", "shallow", "watch", "string", "key", "instead", "but", "'m", "littl", "hesit", "watch", "someth", "slightli", "differ", "then", "how", "it", "'s", "use", "real", "express"], "B_body": "The idea here is that we actually parse the input number ourselves and then do the rounding ourselves manually. This allows us more control and reliability on the output for corner case numbers.\n\nCloses #8674\nCloses #12709 \nCloses #8705 \nCloses #12707 \nCloses #10246\nCloses #10252\n", "B_clean_body": ["idea", "here", "that", "we", "actual", "pars", "input", "number", "ourselv", "then", "round", "ourselv", "manual", "thi", "allow", "us", "more", "control", "reliabl", "output", "corner", "case", "number", "close", "8674", "close", "12709", "close", "8705", "close", "12707", "close", "10246", "close", "10252"], "title_sim": [0.07236925178111843], "body_sim": [0.06569761155787188], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03731178723950015, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 597}, {"A_title": "refactor($rootScope): simplify $emit stopPropagation handling", "A_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "B_title": "docs($animate): detail options object", "B_clean_title": ["doc", "anim", "detail", "option", "object"], "A_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "A_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "B_body": "- Document options object used in various $animate methods\n\nThis should address #12645.\n", "B_clean_body": ["document", "option", "object", "use", "variou", "anim", "method", "thi", "address", "12645"], "title_sim": [-0.0014697608743711144], "body_sim": [0.14082738159145466], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 539}, {"A_title": "fix(Angular): deprecate angular.merge", "A_clean_title": ["fix", "angular", "deprec", "angular", "merg"], "B_title": "feat(input) add ng:minlength and ng:maxlength validation support", "B_clean_title": ["feat", "input", "add", "ng", "minlength", "ng", "maxlength", "valid", "support"], "A_body": "This function has problems with special object types but since it's not used in core,\r\nit is not worth implementing fixes for these cases.\r\nA general purpose library like lodash (provides `merge`) should be used instead.\r\n\r\nCloses #12653\r\nCloses #14941\r\nCloses #15180\r\nCloses #15992\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDeprecation\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nUnclear API support\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDeprecation / docs update\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nNot sure if this should be marked fix or feat\r\n~If we deprecate only in 1.7.0, then the known issue section can still go in 1.6.x~\r\n", "A_clean_body": ["thi", "function", "ha", "problem", "special", "object", "type", "but", "sinc", "it", "'s", "not", "use", "core", "it", "not", "worth", "implement", "fix", "these", "case", "gener", "purpos", "librari", "like", "lodash", "provid", "merg", "use", "instead", "close", "12653", "close", "14941", "close", "15180", "close", "15992", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "deprec", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "unclear", "api", "support", "**what", "new", "behavior", "thi", "featur", "chang", "deprec", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "not", "sure", "thi", "mark", "fix", "or", "feat", "~if", "we", "deprec", "onli", "then", "known", "issu", "section", "still", "go", "x~"], "B_body": "notes(igor): I also e2e tests and refactorred the e2e test example to be\nmore clear about what is a variable and what is an html/framework api.\n", "B_clean_body": ["note", "igor", "also", "e2e", "test", "refactor", "e2e", "test", "exampl", "more", "clear", "about", "what", "variabl", "what", "html", "framework", "api"], "title_sim": [-0.0340748023749793], "body_sim": [0.14287707279189132], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.019605963832100958, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2056}, {"A_title": "docs/chore(version stuff): fix how versions are handled in builds and docs", "A_clean_title": ["doc", "chore", "version", "stuff", "fix", "how", "version", "are", "handl", "build", "doc"], "B_title": "fix(select): let ngValue take precedence over option text with multip\u2026", "B_clean_title": ["fix", "select", "let", "ngvalu", "ng", "valu", "take", "preced", "over", "option", "text", "multip\u2026"], "A_body": "There are three somewhat independent commits.\n- The first is a simple bug fix in the docs\n- The second updates how the versions are managed in the docs\n- The third does the same for the build\n", "A_clean_body": ["there", "are", "three", "somewhat", "independ", "commit", "first", "simpl", "bug", "fix", "doc", "second", "updat", "how", "version", "are", "manag", "doc", "third", "same", "build"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an option contains multiple interpolations, an ngValue on the option element is ignored. See #15413\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "option", "contain", "multipl", "interpol", "ngvalu", "ng", "valu", "option", "element", "ignor", "see", "15413", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.04499337270207647], "body_sim": [0.3402561902574391], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0178657371474943, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 989}, {"A_title": "fix(AngularPublic): expose missing angular public methods", "A_clean_title": ["fix", "angularpubl", "angular", "public", "expos", "miss", "angular", "public", "method"], "B_title": "test(jQuery): test not firing $destroy on jQuery.cleanData with jQuery UI", "B_clean_title": ["test", "jqueri", "queri", "test", "not", "fire", "destroy", "jqueri", "cleandata", "queri", "clean", "data", "jqueri", "queri", "ui"], "A_body": "- expose lowercase, uppercase and isDate to angular public api\n- remove unnecessary extention of jqLite at an early stage\n", "A_clean_body": ["expos", "lowercas", "uppercas", "isdat", "date", "angular", "public", "api", "remov", "unnecessari", "extent", "jqlite", "jq", "lite", "at", "earli", "stage"], "B_body": "So far it wasn't tested that Angular's logic for skipping it triggering\nthe $destroy event on jQuery.cleanData in the replaceWith internal function\nworks correctly when Angular is not the last one to patch the cleanData method\n(e.g. if jQuery UI does the patching later). This commits adds the relevant\ntest.\n\nRef #8486\n\ncc @IgorMinar\n", "B_clean_body": ["so", "far", "it", "wa", "n't", "test", "that", "angular", "'s", "logic", "skip", "it", "trigger", "destroy", "event", "jqueri", "cleandata", "queri", "clean", "data", "replacewith", "replac", "intern", "function", "work", "correctli", "when", "angular", "not", "last", "one", "patch", "cleandata", "clean", "data", "method", "jqueri", "queri", "ui", "patch", "later", "thi", "commit", "add", "relev", "test", "ref", "8486", "cc", "igorminar", "igor", "minar"], "title_sim": [0.011074608791411969], "body_sim": [0.16389858519358808], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1093}, {"A_title": "fix($controller): remove the option to instantiate controllers from c\u2026", "A_clean_title": ["fix", "control", "remov", "option", "instanti", "control", "c\u2026"], "B_title": "refactor(jqLite): wrap the jqueryVersion binding in a span", "B_clean_title": ["refactor", "jqlite", "jq", "lite", "wrap", "jqueryvers", "jqueri", "version", "bind", "span"], "A_body": "\u2026onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n", "A_clean_body": ["\u2026onstructor", "window", "thi", "also", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "close", "15349", "break", "chang", "option", "instanti", "control", "constructor", "global", "window", "object", "ha", "been", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "that", "could", "enabl", "thi", "behavior", "ha", "been", "remov", "thi", "behavior", "had", "been", "deprec", "sinc", "angularj", "angular", "js", "v1", "becaus", "pollut", "global", "scope", "bad", "migrat", "remov", "call", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "config", "regist", "your", "control", "via", "modul", "api", "or", "controllerprovid", "control", "provid", "angular", "modul", "'mymodul", "'mi", "modul", "control", "'mycontrol", "'mi", "control", "function", "angular", "modul", "'mymodul", "'mi", "modul", "config", "function", "controllerprovid", "control", "provid", "controllerprovid", "regist", "control", "provid", "'mycontrol", "'mi", "control", "function"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRefactor\n\n**What is the current behavior? (You can also link to an open issue here)**\nBindings are not wrapped in `<span>`s in some e2e tests.\n\n**What is the new behavior (if this is a feature change)?**\nBindings are now wrapped in `<span>`s.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nProtractor's by.binding selector selects the whole element in which the binding\nis contained as otherwise it can't know which bit of text has been interpolated.\n\nIt's safer to wrap the binding in a span so that we're sure what the e2e tests\nare exactly testing.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "bind", "are", "not", "wrap", "span", "some", "e2e", "test", "**what", "new", "behavior", "thi", "featur", "chang", "bind", "are", "now", "wrap", "span", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "protractor", "'s", "by", "bind", "selector", "select", "whole", "element", "which", "bind", "contain", "as", "otherwis", "it", "ca", "n't", "know", "which", "bit", "text", "ha", "been", "interpol", "it", "'s", "safer", "wrap", "bind", "span", "so", "that", "we", "'re", "sure", "what", "e2e", "test", "are", "exactli", "test"], "title_sim": [0.019208571066274382], "body_sim": [0.21821808423737538], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 141}, {"A_title": "fix(Angular): deprecate angular.merge", "A_clean_title": ["fix", "angular", "deprec", "angular", "merg"], "B_title": "docs(guide/Developer Guide): Update twitter handle", "B_clean_title": ["doc", "guid", "develop", "guid", "updat", "twitter", "handl"], "A_body": "This function has problems with special object types but since it's not used in core,\r\nit is not worth implementing fixes for these cases.\r\nA general purpose library like lodash (provides `merge`) should be used instead.\r\n\r\nCloses #12653\r\nCloses #14941\r\nCloses #15180\r\nCloses #15992\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDeprecation\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nUnclear API support\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDeprecation / docs update\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nNot sure if this should be marked fix or feat\r\n~If we deprecate only in 1.7.0, then the known issue section can still go in 1.6.x~\r\n", "A_clean_body": ["thi", "function", "ha", "problem", "special", "object", "type", "but", "sinc", "it", "'s", "not", "use", "core", "it", "not", "worth", "implement", "fix", "these", "case", "gener", "purpos", "librari", "like", "lodash", "provid", "merg", "use", "instead", "close", "12653", "close", "14941", "close", "15180", "close", "15992", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "deprec", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "unclear", "api", "support", "**what", "new", "behavior", "thi", "featur", "chang", "deprec", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "not", "sure", "thi", "mark", "fix", "or", "feat", "~if", "we", "deprec", "onli", "then", "known", "issu", "section", "still", "go", "x~"], "B_body": "Replaced the old Angular twitter handle with the new one.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["replac", "old", "angular", "twitter", "handl", "new", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.0489859153648026], "body_sim": [0.9294255245234578], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 59}, {"A_title": "fix(Angular): do not autobootstrap if the `src` exists but is empty", "A_clean_title": ["fix", "angular", "not", "autobootstrap", "src", "exist", "but", "empti"], "B_title": "fix(ngAnimate): let $animate.cancel() reject the runner promise", "B_clean_title": ["fix", "nganim", "ng", "anim", "let", "anim", "cancel", "reject", "runner", "promis"], "A_body": "In Chrome an empty `src` attribute will be ignored, but in Firefox it seems\r\nhappy to prepend the `base[href]` and try to load whatever that is.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["chrome", "empti", "src", "attribut", "will", "ignor", "but", "firefox", "it", "seem", "happi", "prepend", "base", "href", "tri", "load", "whatev", "that", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "<!-- General PR submission guidelines ../blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #14204\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThere is another aspect to this problem that is not fixed by this PR:\r\n2. Cancelling css animations should immediately abort the animation and set the DOM / css to its final state. This is currently broken in FF and IE11 (at least), see https://bugzilla.mozilla.org/show_bug.cgi?id=1425014. This must be tested with e2e test. Fixing this is not a BC.\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "md", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14204", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "blob", "master", "develop", "commit", "fix", "featur", "doc", "md", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "there", "anoth", "aspect", "thi", "problem", "that", "not", "fix", "by", "thi", "pr", "cancel", "css", "anim", "immedi", "abort", "anim", "set", "dom", "css", "it", "final", "state", "thi", "current", "broken", "ff", "ie11", "at", "least", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=1425014", "thi", "must", "test", "e2e", "test", "fix", "thi", "not", "bc"], "title_sim": [0.03854069677282386], "body_sim": [0.8592657599834562], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0025935157127876464, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 290}, {"A_title": "fix(numberFilter): correctly round fractions despite floating-point arithmetics issues in JS", "A_clean_title": ["fix", "numberfilt", "number", "filter", "correctli", "round", "fraction", "despit", "float", "point", "arithmet", "issu", "js"], "B_title": "docs: load angular from can only on production", "B_clean_title": ["doc", "load", "angular", "onli", "product"], "A_body": "Closes #7870\nCloses #7878\n", "A_clean_body": ["close", "7870", "close", "7878"], "B_body": "So that when running the docs locally, eg. during e2e testing, we use the latest build version of angular, rather than the stable one from CDN.\n", "B_clean_body": ["so", "that", "when", "run", "doc", "local", "eg", "dure", "e2e", "test", "we", "use", "latest", "build", "version", "angular", "rather", "than", "stabl", "one", "cdn"], "title_sim": [0.1558327658624218], "body_sim": [-0.004726585148616747], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07973915622629356, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 644}, {"A_title": "fix(markup): Make special attrs such as ng:href work even without binding", "A_clean_title": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind"], "B_title": "chore(travis): speed up the build", "B_clean_title": ["chore", "travi", "speed", "up", "build"], "A_body": "fix(markup): Make special attrs such as ng:href work even without binding\n- special attrs such as ng:href, ng:check did not work as intended when\n  their values do not contain bindings. And this commit is to fix that\n\nCloses #534\n", "A_clean_body": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind", "special", "attr", "such", "as", "ng", "href", "ng", "check", "did", "not", "work", "as", "intend", "when", "their", "valu", "not", "contain", "bind", "thi", "commit", "fix", "that", "close", "534"], "B_body": "Just wanna see the travis build...\n- parallelize the tasks\n- cache requests (e2e tests)\n\nThis reduces the time from ~18min to ~12min.\n\nIt makes the output little messy. We could buffer output of each task and display it once it's fully finished, nicely. I think giving instant feedback is better.\n\nConflicts:\n    Gruntfile.js\n    package.json\n", "B_clean_body": ["just", "wan", "na", "see", "travi", "build", "parallel", "task", "cach", "request", "e2e", "test", "thi", "reduc", "time", "~18min", "~12min", "it", "make", "output", "littl", "messi", "we", "could", "buffer", "output", "each", "task", "display", "it", "onc", "it", "'s", "fulli", "finish", "nice", "think", "give", "instant", "feedback", "better", "conflict", "gruntfil", "js", "packag", "json"], "title_sim": [0.034487221433098805], "body_sim": [0.10224120560188149], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.008557043713456395, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 677}, {"A_title": "docs(ChangeLog): fix typo", "A_clean_title": ["doc", "changelog", "chang", "log", "fix", "typo"], "B_title": "docs(linky): mark \"target\" param as optional in linky filter", "B_clean_title": ["doc", "linki", "mark", "target", "param", "as", "option", "linki", "filter"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs only.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "onli", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This argument is optional in practice, and it is not provided in many of the examples in the documentation.\r\nIts optional presence is handled here:\r\nhttps://github.com/angular/angular.js/blob/master/src/ngSanitize/filter/linky.js#L185.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe second argument to ngSanitize's \"linky\" filter is marked as non-optional, it is handled as optional and usage shows it as being optional.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nngSanitize's \"linky\" filter has it's second parameter marked as optional.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "argument", "option", "practic", "it", "not", "provid", "mani", "exampl", "document", "it", "option", "presenc", "handl", "here", "http", "js", "github", "com", "angular", "angular", "js", "blob", "master", "src", "ngsanit", "filter", "linki", "ng", "sanit", "l185", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "second", "argument", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "mark", "as", "non", "option", "it", "handl", "as", "option", "usag", "show", "it", "as", "be", "option", "**what", "new", "behavior", "thi", "featur", "chang", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "ha", "it", "'s", "second", "paramet", "mark", "as", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.023772163317828342], "body_sim": [0.7752841066453112], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 51}, {"A_title": "fix($sce): do not assume $document[0] exists", "A_clean_title": ["fix", "sce", "not", "assum", "document", "exist"], "B_title": "refactor($injector): remove the Chrome stringification hack", "B_clean_title": ["refactor", "injector", "remov", "chrome", "stringif", "hack"], "A_body": "this is important so that people can mock $window without having to add stuff that angular uses internally into it\n\nCloses #9661\n", "A_clean_body": ["thi", "import", "so", "that", "peopl", "mock", "window", "without", "have", "add", "stuff", "that", "angular", "use", "intern", "into", "it", "close", "9661"], "B_body": "The Chrome stringification hack added in afcedff34c8a44dda0d558d9d6337962f5f03d7b\r\nis no longer needed. I verified that both of the commented out tests pass\r\non Chrome 56.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's a workaround in place for Chrome 50-51. Current stable version is 56.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["chrome", "stringif", "hack", "ad", "afcedff34c8a44dda0d558d9d6337962f5f03d7b", "no", "longer", "need", "verifi", "that", "both", "comment", "out", "test", "pass", "chrome", "56", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "workaround", "place", "chrome", "50", "51", "current", "stabl", "version", "56", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.030189948209286114], "body_sim": [0.21042923858154303], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 839}, {"A_title": "docs(CONTRIBUTING.md): Updated commit types.", "A_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "B_title": "fix(Angular): do not autobootstrap if the `src` exists but is empty", "B_clean_title": ["fix", "angular", "not", "autobootstrap", "src", "exist", "but", "empti"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "B_body": "In Chrome an empty `src` attribute will be ignored, but in Firefox it seems\r\nhappy to prepend the `base[href]` and try to load whatever that is.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["chrome", "empti", "src", "attribut", "will", "ignor", "but", "firefox", "it", "seem", "happi", "prepend", "base", "href", "tri", "load", "whatev", "that", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.10017360528521069], "body_sim": [0.9309853605356228], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 119}, {"A_title": "fix(package.json): use full version numbers when interpolating", "A_clean_title": ["fix", "packag", "json", "use", "full", "version", "number", "when", "interpol"], "B_title": "feat(ngCookies): support sameSite option", "B_clean_title": ["feat", "ngcooki", "ng", "cooki", "support", "samesit", "same", "site", "option"], "A_body": "When using less than 3 numbers in npm package version together with\ntilde interpolation, it lets major version upgrades, e.g. \"~0.10\" means\nat least 0.10 and less than 1.0; this pattern would match e.g. 0.11, 0.12 etc.\nBesides, some package.json dependencies were upgraded.\n", "A_clean_body": ["when", "less", "than", "number", "npm", "packag", "version", "togeth", "tild", "interpol", "it", "let", "major", "version", "upgrad", "~0", "10", "mean", "at", "least", "10", "less", "than", "thi", "pattern", "would", "match", "11", "12", "etc", "besid", "some", "packag", "json", "depend", "were", "upgrad"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature for issue https://github.com/angular/angular.js/issues/16543\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nsupport sameSite option for ngCookie\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16543", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "support", "samesit", "same", "site", "option", "ngcooki", "ng", "cooki", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.020463337272862342], "body_sim": [0.063721059240791], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1715}, {"A_title": "feat($parse): support trailing commas in object & array literals", "A_clean_title": ["feat", "pars", "support", "trail", "comma", "object", "array", "liter"], "B_title": "benchmarks - remove no longer applicable, add $watchCollection", "B_clean_title": ["benchmark", "remov", "no", "longer", "applic", "add", "watchcollect", "watch", "collect"], "A_body": "Per ECMAScript 5.1 specification trailing commas are allowed in object and\narray literals. All modern browsers as well as IE>8 support this syntax.\nThis commit adds support for such syntax to Angular expressions.\n\nI'm creating a new pull request as @btford asked me to re-open #3685 with an explanation\nand I don't have privileges to re-open prs.\n\nMain use case of trailing commas are when using multi-line notation for objects/arrays. When you have sth like:\n\n``` javascript\n{\n    par1: \"val1\",\n    par3: \"val3\",\n    par2: \"val2\",\n}\n```\n\nit's much easier to move lines 2. and 3. around without causing errors. Such reordering is cumberscome when trailing commas are ommited. I agree readability is a little reduced when using a single-line form, but for multi-line ones it's IMO a godsend.\n\nCurrently there are no good tools to minify Angular expressions so this might be less used form now but once such a tool is created, for longer objects/arrays such notation would help.\n", "A_clean_body": ["per", "ecmascript", "ecma", "script", "specif", "trail", "comma", "are", "allow", "object", "array", "liter", "all", "modern", "browser", "as", "well", "as", "ie", "support", "thi", "syntax", "thi", "commit", "add", "support", "such", "syntax", "angular", "express", "'m", "creat", "new", "pull", "request", "as", "btford", "ask", "me", "re", "open", "3685", "explan", "n't", "have", "privileg", "re", "open", "pr", "main", "use", "case", "trail", "comma", "are", "when", "multi", "line", "notat", "object", "array", "when", "you", "have", "sth", "like", "javascript", "par1", "val1", "par3", "val3", "par2", "val2", "it", "'s", "much", "easier", "move", "line", "around", "without", "caus", "error", "such", "reorder", "cumberscom", "when", "trail", "comma", "are", "ommit", "agre", "readabl", "littl", "reduc", "when", "singl", "line", "form", "but", "multi", "line", "one", "it", "'s", "imo", "godsend", "current", "there", "are", "no", "good", "tool", "minifi", "angular", "express", "so", "thi", "might", "less", "use", "form", "now", "but", "onc", "such", "tool", "creat", "longer", "object", "array", "such", "notat", "would", "help"], "B_body": "Removing\r\n* cases accessing `constructor` that previously had extra \"security\" applied\r\n* the `bmPeWatchLiteral` directive that was making literals `$watch`-able, now they can be watched normally\r\n\r\nAdding\r\n* some `$watchCollection` tests", "B_clean_body": ["remov", "case", "access", "constructor", "that", "previous", "had", "extra", "secur", "appli", "bmpewatchliter", "bm", "pe", "watch", "liter", "direct", "that", "wa", "make", "liter", "watch", "abl", "now", "they", "watch", "normal", "ad", "some", "watchcollect", "watch", "collect", "test"], "title_sim": [0.020183069941261164], "body_sim": [0.116967966638553], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0017880151910270726, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1399}, {"A_title": "fix(css): ng:form should always be a block element", "A_clean_title": ["fix", "css", "ng", "form", "alway", "block", "element"], "B_title": "fix(booleanAttrs): convert to boolean", "B_clean_title": ["fix", "booleanattr", "boolean", "attr", "convert", "boolean"], "A_body": "fix for: http://jsfiddle.net/agamennon12345/twcvt/\n", "A_clean_body": ["fix", "http", "jsfiddl", "net", "agamennon12345", "twcvt"], "B_body": "jQuery's attr() does not handle 0 as false, when it comes to boolean attrs.\n\nAnother solution might be to not set attr() for boolean attrs at all...\n", "B_clean_body": ["jqueri", "queri", "'s", "attr", "not", "handl", "as", "fals", "when", "it", "come", "boolean", "attr", "anoth", "solut", "might", "not", "set", "attr", "boolean", "attr", "at", "all"], "title_sim": [0.2592860005819114], "body_sim": [0.053755771856254395], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.011464411415062409, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 159}, {"A_title": "feat($compile): support directive virtual groups", "A_clean_title": ["feat", "compil", "support", "direct", "virtual", "group"], "B_title": "chore(build): fix bower install", "B_clean_title": ["chore", "build", "fix", "bower", "instal"], "A_body": "By appending  X-start and X-end to a directive it is now possible\nto have the directive act on a group of elements.\n\nIt is now possible to iterate over multiple elements like so:\n\n```\n<table>\n  <tr ng-repeat-start=\"item in list\">I get repeated</tr>\n  <tr ng-repeat-end>I also get repeated</tr>\n</table>\n```\n", "A_clean_body": ["by", "append", "start", "end", "direct", "it", "now", "possibl", "have", "direct", "act", "group", "element", "it", "now", "possibl", "iter", "over", "multipl", "element", "like", "so", "tabl", "tr", "ng", "repeat", "start=", "item", "list", "get", "repeat", "tr", "tr", "ng", "repeat", "end", "also", "get", "repeat", "tr", "tabl"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.0061508021045531954], "body_sim": [0.05025642428853236], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1511}, {"A_title": "test($rootScope): add tests clarifying $watchGroup oldValues behavior", "A_clean_title": ["test", "rootscop", "root", "scope", "add", "test", "clarifi", "watchgroup", "watch", "group", "oldvalu", "old", "valu", "behavior"], "B_title": "docs(guide/Providers): Remove redundant apology", "B_clean_title": ["doc", "guid", "provid", "remov", "redund", "apolog"], "A_body": "Closes #16024\r\n\r\nThe first group seem related but have always passed.  The second group fail in v1.6.x as noted in the comments.  IMO these tests (with the notes about 1.6) show how weird the `oldValues` were before.\r\n\r\n~~Still need to add the BREAKING CHANGE message.~~", "A_clean_body": ["close", "16024", "first", "group", "seem", "relat", "but", "have", "alway", "pass", "second", "group", "fail", "v1", "as", "note", "comment", "imo", "these", "test", "note", "about", "show", "how", "weird", "oldvalu", "old", "valu", "were", "befor", "~~still", "need", "add", "break", "chang", "messag"], "B_body": "There is no longer a service called \"service\", so this is confusing.", "B_clean_body": ["there", "no", "longer", "servic", "call", "servic", "so", "thi", "confus"], "title_sim": [0.032651902011060656], "body_sim": [0.11525476249050146], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 380}, {"A_title": "chore(jenkins): do not publish to code.angularjs.org snapshot", "A_clean_title": ["chore", "jenkin", "not", "publish", "code", "angularj", "org", "snapshot"], "B_title": "fix(ngAnimate): don't close animations when child transitions close", "B_clean_title": ["fix", "nganim", "ng", "anim", "n't", "close", "anim", "when", "child", "transit", "close"], "A_body": "While the firewall continues to block the update ports\r\nwe will not try to publish there.\r\n", "A_clean_body": ["while", "firewal", "continu", "block", "updat", "port", "we", "will", "not", "tri", "publish", "there"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #16210\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "16210", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.03375519363848327], "body_sim": [0.0760112642505863], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0412112614161619, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 92}, {"A_title": "fix(ngOptions): ignore comment nodes when removing 'selected' attribute", "A_clean_title": ["fix", "ngoption", "ng", "option", "ignor", "comment", "node", "when", "remov", "'select", "attribut"], "B_title": "fix($browser): should use first value for a cookie.", "B_clean_title": ["fix", "browser", "use", "first", "valu", "cooki"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the \"selected\" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "regress", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "empti", "option", "ha", "ngif", "ng", "it", "ngoption", "ng", "option", "select", "ngif", "ng", "express", "fals", "then", "error", "thrown", "becaus", "we", "tri", "remov", "select", "attribut", "ngif", "ng", "comment", "node", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "With this change, $browser.cookies()[\"foo\"] will behave like\ndocCookies.getItem(\"foo\") where docCookies is defined at\nhttps://developer.mozilla.org/en-US/docs/DOM/document.cookie\n\nRef: https://github.com/angular/angular.js/issues/2635\n\nThis fixes the issue where, if there's a value for the XSRF-TOKEN cookie\nvalue with the path /, then that value is used for all applications in\nthe domain even if they set path specific values for XSRF-TOKEN.\n", "B_clean_body": ["thi", "chang", "browser", "cooki", "foo", "will", "behav", "like", "doccooki", "getitem", "doc", "cooki", "get", "item", "foo", "where", "doccooki", "doc", "cooki", "defin", "at", "http", "mozilla", "cooki", "develop", "org", "en", "us", "doc", "dom", "document", "ref", "http", "github", "com", "angular", "angular", "js", "issu", "2635", "thi", "fix", "issu", "where", "there", "'s", "valu", "xsrf", "token", "cooki", "valu", "path", "then", "that", "valu", "use", "all", "applic", "domain", "even", "they", "set", "path", "specif", "valu", "xsrf", "token"], "title_sim": [0.09450221083332924], "body_sim": [0.2646565517835104], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0197992132720754, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1300}, {"A_title": "fix:bootstrap: Fix bootstrap on IE<8", "A_clean_title": ["fix", "bootstrap", "fix", "bootstrap", "ie"], "B_title": "docs($http): add a note about modifying data in transformRequest", "B_clean_title": ["doc", "http", "add", "note", "about", "modifi", "data", "transformrequest", "transform", "request"], "A_body": "No reason for including ie-compat in bootstrap, it's included during angularInit.\n\nFix including ie-compat even for production.\n", "A_clean_body": ["no", "reason", "includ", "ie", "compat", "bootstrap", "it", "'s", "includ", "dure", "angularinit", "angular", "init", "fix", "includ", "ie", "compat", "even", "product"], "B_body": "- **What kind of change does this PR introduce?** (Bug fix, feature, docs update, ...)\n  docs update\n- **What is the current behavior?** (You can also link to an open issue here)\n  See #12468\n\nCloses #12468\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "12468", "close", "12468"], "title_sim": [-0.052119262933385486], "body_sim": [0.05578145155462832], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1693}, {"A_title": "feat(ngCookies): support sameSite option", "A_clean_title": ["feat", "ngcooki", "ng", "cooki", "support", "samesit", "same", "site", "option"], "B_title": "feat:$xhr: provide access to $xhr header defaults", "B_clean_title": ["feat", "xhr", "provid", "access", "xhr", "header", "default"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature for issue https://github.com/angular/angular.js/issues/16543\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nsupport sameSite option for ngCookie\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16543", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "support", "samesit", "same", "site", "option", "ngcooki", "ng", "cooki", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "$xhr header defaults are now exposed as $xhr.defaults.headers.common and\n$xhr.default.headers.<httpmethod>. This allows applications to configure\ntheir defaults as needed.\n\nThis commit doesn't allow headers to be set per request, only per\napplication. Per request change would require api change, which I tried\nto avoid _for now_.\n", "B_clean_body": ["xhr", "header", "default", "are", "now", "expos", "as", "xhr", "default", "header", "common", "xhr", "default", "header", "httpmethod", "thi", "allow", "applic", "configur", "their", "default", "as", "need", "thi", "commit", "n't", "allow", "header", "set", "per", "request", "onli", "per", "applic", "per", "request", "chang", "would", "requir", "api", "chang", "which", "tri", "avoid", "now"], "title_sim": [0.12742795192161713], "body_sim": [0.08348507499242079], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.09242729683954197, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2498}, {"A_title": "fix($http): throw error if success and error methods do not receive a fu...", "A_clean_title": ["fix", "http", "throw", "error", "success", "error", "method", "not", "receiv", "fu"], "B_title": "test($rootScope): add tests clarifying $watchGroup oldValues behavior", "B_clean_title": ["test", "rootscop", "root", "scope", "add", "test", "clarifi", "watchgroup", "watch", "group", "oldvalu", "old", "valu", "behavior"], "A_body": "...nction\n\nCloses #11330\n", "A_clean_body": ["nction", "close", "11330"], "B_body": "Closes #16024\r\n\r\nThe first group seem related but have always passed.  The second group fail in v1.6.x as noted in the comments.  IMO these tests (with the notes about 1.6) show how weird the `oldValues` were before.\r\n\r\n~~Still need to add the BREAKING CHANGE message.~~", "B_clean_body": ["close", "16024", "first", "group", "seem", "relat", "but", "have", "alway", "pass", "second", "group", "fail", "v1", "as", "note", "comment", "imo", "these", "test", "note", "about", "show", "how", "weird", "oldvalu", "old", "valu", "were", "befor", "~~still", "need", "add", "break", "chang", "messag"], "title_sim": [0.03796069602227041], "body_sim": [0.21267330295111], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005998749685269526, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1098}, {"A_title": "Fix($animate) : svg element with classNameFilter animation fix.", "A_clean_title": ["fix", "anim", "svg", "element", "classnamefilt", "class", "name", "filter", "anim", "fix"], "B_title": "test(orderBy): add test cases for ordering array-like objects", "B_clean_title": ["test", "orderbi", "order", "by", "add", "test", "case", "order", "array", "like", "object"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nclassNameFilter for animation with svg element should work same as the other elements.\n\n**What is the current behavior? (You can also link to an open issue here)**\nclassNameFilter not working for svg element.\n\n**What is the new behavior (if this is a feature change)?**\nclassNameFilter also handles svg element.\n\n**Does this PR introduce a breaking change?**\nNO\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nThis PR fix #14508 issue.\n\nFix($animate) : svg element with classNameFilter animation fix.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "classnamefilt", "class", "name", "filter", "anim", "svg", "element", "work", "same", "as", "other", "element", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "classnamefilt", "class", "name", "filter", "not", "work", "svg", "element", "**what", "new", "behavior", "thi", "featur", "chang", "classnamefilt", "class", "name", "filter", "also", "handl", "svg", "element", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "pr", "fix", "14508", "issu", "fix", "anim", "svg", "element", "classnamefilt", "class", "name", "filter", "anim", "fix"], "B_body": "(Testing #9942 before merging)\n", "B_clean_body": ["test", "9942", "befor", "merg"], "title_sim": [-0.007655110663625692], "body_sim": [0.08413543911675182], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.009481412353105376, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 530}, {"A_title": "Fixes to select and ngOptions - \"required\" validation and behavior with empty / unknown option", "A_clean_title": ["fix", "select", "ngoption", "ng", "option", "requir", "valid", "behavior", "empti", "unknown", "option"], "B_title": "refactor(jqLite): stop patching individual jQuery methods", "B_clean_title": ["refactor", "jqlite", "jq", "lite", "stop", "patch", "individu", "jqueri", "queri", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfixes\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n- (a) when the unknown option is selected and the select is \"required\", the required error is not set\r\n- (b) ngOptions: when the model is unmatched and an empty option exists, the empty option is always selected, even if the model is not null / undefined.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n- (a) the error is set\r\n- (b) the unknown option is selected if the model is not null / undefined\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nPossibly? For (a), the following situation is possible: The model is programatically set to a value that is no longer in select options, and the select is required. With this patch, the user cannot keep the unmatched value, because of the required error, which considers this value invalid (just realized this, so it's not in the commit message).\r\n\r\nFor (b), it's unlikely that anyone relied on the fact that the empty option is selected instead of the unmatched option - the fixd behavior was also present in regular select since the beginning.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "unknown", "option", "select", "select", "requir", "requir", "error", "not", "set", "ngoption", "ng", "option", "when", "model", "unmatch", "empti", "option", "exist", "empti", "option", "alway", "select", "even", "model", "not", "null", "undefin", "**what", "new", "behavior", "thi", "featur", "chang", "error", "set", "unknown", "option", "select", "model", "not", "null", "undefin", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "follow", "situat", "possibl", "model", "programat", "set", "valu", "that", "no", "longer", "select", "option", "select", "requir", "thi", "patch", "user", "not", "keep", "unmatch", "valu", "becaus", "requir", "error", "which", "consid", "thi", "valu", "invalid", "just", "realiz", "thi", "so", "it", "'s", "not", "commit", "messag", "it", "'s", "unlik", "that", "anyon", "reli", "fact", "that", "empti", "option", "select", "instead", "unmatch", "option", "fixd", "behavior", "wa", "also", "present", "regular", "select", "sinc", "begin", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Currently Angular monkey-patches a few jQuery methods that remove elements\nfrom the DOM. Since methods like .remove() have multiple signatures\nthat can change what's actually removed, Angular needs to carefully\nrepeat them in its patching or it can break apps using jQuery correctly.\nSuch a strategy is also not future-safe.\n\nInstead of patching individual methods on the prototype, it's better to\nhook into jQuery.cleanData and trigger custom events there. This should be\nsafe as e.g. jQuery UI needs it and uses it. It'll also be future-safe.\n\nThe only drawback is that $destroy is no longer triggered when using $detach\nbut:\n1. Angular doesn't use this method, jqLite doesn't implement it.\n2. Detached elements can be re-attached keeping all their events & data\n    so it makes sense that $destroy is not triggered on them.\n3. The approach from this commit is so much safer that any issues with\n    .detach() working differently are outweighed by the robustness of the code.\n\nBREAKING CHANGE: the $destroy event is no longer triggered when using the\njQuery detach() method. If you want to destroy Angular data attached to the\nelement, use remove().\n\ncc @caitp\n", "B_clean_body": ["current", "angular", "monkey", "patch", "few", "jqueri", "queri", "method", "that", "remov", "element", "dom", "sinc", "method", "like", "remov", "have", "multipl", "signatur", "that", "chang", "what", "'s", "actual", "remov", "angular", "need", "care", "repeat", "them", "it", "patch", "or", "it", "break", "app", "jqueri", "queri", "correctli", "such", "strategi", "also", "not", "futur", "safe", "instead", "patch", "individu", "method", "prototyp", "it", "'s", "better", "hook", "into", "jqueri", "cleandata", "queri", "clean", "data", "trigger", "custom", "event", "there", "thi", "safe", "as", "jqueri", "queri", "ui", "need", "it", "use", "it", "it", "'ll", "also", "futur", "safe", "onli", "drawback", "that", "destroy", "no", "longer", "trigger", "when", "detach", "but", "angular", "n't", "use", "thi", "method", "jqlite", "jq", "lite", "n't", "implement", "it", "detach", "element", "re", "attach", "keep", "all", "their", "event", "data", "so", "it", "make", "sens", "that", "destroy", "not", "trigger", "them", "approach", "thi", "commit", "so", "much", "safer", "that", "ani", "issu", "detach", "work", "differ", "are", "outweigh", "by", "robust", "code", "break", "chang", "destroy", "event", "no", "longer", "trigger", "when", "jqueri", "queri", "detach", "method", "you", "want", "destroy", "angular", "data", "attach", "element", "use", "remov", "cc", "caitp"], "title_sim": [-0.035440389144798544], "body_sim": [0.22227592282718486], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1085}, {"A_title": "docs(CONTRIBUTING): centralize, update, improve", "A_clean_title": ["doc", "contribut", "central", "updat", "improv"], "B_title": "docs($sce): grammar fix - there was a word omitted", "B_clean_title": ["doc", "sce", "grammar", "fix", "there", "wa", "word", "omit"], "A_body": "- remove outdated info\r\n- move info about writing docs from Wiki to contribute.md + updates\r\n- move info about development setup from docs/contribute to contribute.md\r\n- add info about running tests on Saucelabs / Browserstack\r\n- add info about specific core code topics\r\n- add link to contributing.md to Contribung page\r\n- add link to changelog.md to nav in docs\r\n\r\nCloses #7303\r\nCloses #9444\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["remov", "outdat", "info", "move", "info", "about", "write", "doc", "wiki", "contribut", "md", "updat", "move", "info", "about", "develop", "setup", "doc", "contribut", "contribut", "md", "add", "info", "about", "run", "test", "saucelab", "browserstack", "add", "info", "about", "specif", "core", "code", "topic", "add", "link", "contribut", "md", "contribung", "page", "add", "link", "changelog", "md", "nav", "doc", "close", "7303", "close", "9444", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\nno change\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n...teeny letter missing.  Just a grammar change.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "teeni", "letter", "miss", "just", "grammar", "chang"], "title_sim": [0.40791955878819564], "body_sim": [0.8569306088882848], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 551}, {"A_title": "fix($http): Do not serialize File object", "A_clean_title": ["fix", "http", "not", "serial", "file", "object"], "B_title": "docs(PULL_REQUEST_TEMPLATE.md): fix broken links in PR template", "B_clean_title": ["doc", "md", "pull", "request", "templat", "fix", "broken", "link", "pr", "templat"], "A_body": "We might auto set X-File headers, when you pass a File object, but I can't find any spec on that...\n(ie X-File-Size, content-type, etc...)\n", "A_clean_body": ["we", "might", "auto", "set", "file", "header", "when", "you", "pass", "file", "object", "but", "ca", "n't", "find", "ani", "spec", "that", "ie", "file", "size", "content", "type", "etc"], "B_body": "fix broken links in PR template", "B_clean_body": ["fix", "broken", "link", "pr", "templat"], "title_sim": [0.13451645302796947], "body_sim": [0.0672314912949807], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.05484497703267297, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2122}, {"A_title": "docs($exceptionHandler): code snippet syntax is incorrect", "A_clean_title": ["doc", "exceptionhandl", "except", "handler", "code", "snippet", "syntax", "incorrect"], "B_title": "fix($location): rewrite links with nested elements", "B_clean_title": ["fix", "locat", "rewrit", "link", "nest", "element"], "A_body": "Updated the documentation on exception handler, there was an end bracket missing.\n\nSupposedly not a breaking change, it's only documentation update.\n", "A_clean_body": ["updat", "document", "except", "handler", "there", "wa", "end", "bracket", "miss", "supposedli", "not", "break", "chang", "it", "'s", "onli", "document", "updat"], "B_body": "So docs is fixed now, inner links do not reload the page:\nhttp://ci.angularjs.org/job/angular.js-vojta/41/artifact/build/pkg/0.10.4-849c5365/docs-0.10.4-849c5365/index.html\n\nFor example:\n\n``` html\n<a href=\"some/link\">inner <span>text</span></a>\n```\n\nIf you click on \"text\", then the span element is event.target, so we need to traverse the DOM.\n", "B_clean_body": ["so", "doc", "fix", "now", "inner", "link", "not", "reload", "page", "http", "angularj", "js", "10", "849c5365", "doc", "10", "html", "ci", "org", "job", "angular", "vojta", "41", "artifact", "build", "pkg", "849c5365", "index", "exampl", "html", "href=", "some", "link", "inner", "span", "text", "span", "you", "click", "text", "then", "span", "element", "event", "target", "so", "we", "need", "travers", "dom"], "title_sim": [0.0037053819272138563], "body_sim": [0.25923650718369473], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1697}, {"A_title": "docs(ngRepeat): I added the phrase \"and by age\" on line 236", "A_clean_title": ["doc", "ngrepeat", "ng", "repeat", "ad", "phrase", "by", "age", "line", "236"], "B_title": "test(jQuery): test not firing $destroy on jQuery.cleanData with jQuery UI", "B_clean_title": ["test", "jqueri", "queri", "test", "not", "fire", "destroy", "jqueri", "cleandata", "queri", "clean", "data", "jqueri", "queri", "ui"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo change in behavior introduced \n\n**What is the new behavior (if this is a feature change)?**\n\nNo change in behavior introduced\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example seems to also be filtering by age. It threw me off a bit because I was getting results when I entered numbers in the input field.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "chang", "behavior", "introduc", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "behavior", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "seem", "also", "filter", "by", "age", "it", "threw", "me", "off", "bit", "becaus", "wa", "get", "result", "when", "enter", "number", "input", "field"], "B_body": "So far it wasn't tested that Angular's logic for skipping it triggering\nthe $destroy event on jQuery.cleanData in the replaceWith internal function\nworks correctly when Angular is not the last one to patch the cleanData method\n(e.g. if jQuery UI does the patching later). This commits adds the relevant\ntest.\n\nRef #8486\n\ncc @IgorMinar\n", "B_clean_body": ["so", "far", "it", "wa", "n't", "test", "that", "angular", "'s", "logic", "skip", "it", "trigger", "destroy", "event", "jqueri", "cleandata", "queri", "clean", "data", "replacewith", "replac", "intern", "function", "work", "correctli", "when", "angular", "not", "last", "one", "patch", "cleandata", "clean", "data", "method", "jqueri", "queri", "ui", "patch", "later", "thi", "commit", "add", "relev", "test", "ref", "8486", "cc", "igorminar", "igor", "minar"], "title_sim": [0.027007260067261472], "body_sim": [0.1679552553572918], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.014342393868128632, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 727}, {"A_title": "test(input): fix date type tests with max + timezone", "A_clean_title": ["test", "input", "fix", "date", "type", "test", "max", "timezon"], "B_title": "feat($componentController): provide isolated scope if none is passed", "B_clean_title": ["feat", "componentcontrol", "compon", "control", "provid", "isol", "scope", "none", "pass"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ntest update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nfeat\n\n**What is the current behavior? (You can also link to an open issue here)**\n\none must always provide a scope for the $componentController helper, which is annoying\n\n**What is the new behavior (if this is a feature change)?**\n\nnow an isolated child of rootScope is created and used if no scope is provided\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "one", "must", "alway", "provid", "scope", "componentcontrol", "compon", "control", "helper", "which", "annoy", "**what", "new", "behavior", "thi", "featur", "chang", "now", "isol", "child", "rootscop", "root", "scope", "creat", "use", "no", "scope", "provid", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.02794552122292401], "body_sim": [0.8431976592483155], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0033724218113130953, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 727}, {"A_title": "fix($compile): throw error in $onChanges immediately", "A_clean_title": ["fix", "compil", "throw", "error", "onchang", "chang", "immedi"], "B_title": "docs(guide/Internet Explorer Compatibility): Include warnings for usage of 'disabled' attribute", "B_clean_title": ["doc", "guid", "internet", "explor", "compat", "includ", "warn", "usag", "'disabl", "attribut"], "A_body": "This brings it in line with how we throw errors in a digest cycle.\r\n\r\nCloses https://github.com/angular/angular.js/issues/15578\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "bring", "it", "line", "how", "we", "throw", "error", "digest", "cycl", "close", "http", "github", "com", "angular", "angular", "js", "issu", "15578", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Setting the 'disabled' attribute on an element that has descendant elements has unexpected behavior in Internet Explorer 11.\r\n\r\n* Input elements that are descendants have the text content of the 'placeholder' attribute inserted as the value (and it is not removed when typing in the field). Changes to the field are not reflected in the model value.\r\n* Select elements that are descendants are disabled.\r\n\r\nTo avoid this issue, it is important to not set `disabled` or `ng-disabled` on an element that has descendant form elements. Normally these should only be used on actual form controls so the issue would not manifest.\r\n\r\nThe issue can also appear if a directive/component is named 'disabled' or takes an attribute named 'disabled' as an input/output attribute, so avoid these.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs do not mention IE11 bug regarding the disabled attribute on elements with descendants (though it shouldn't be used on non-form controls, this issue can prop up when making custom elements/attributes).\r\n\r\nA previous issue noticed the incorrect behavior regarding the 'placeholder' attribute on input elements but incorrectly thought the behavior to be a bug with AngularJS:\r\nhttps://github.com/angular/angular.js/issues/15700\r\n\r\nI am able to reproduce the issue in the Plunkr created by @Narretz on the aforementioned issue:\r\nhttp://plnkr.co/edit/jDJv5NtwwDSsp9hRT2rf?p=preview\r\n\r\nAlso, here's an updated version of the Plunkr showing model value is not updating due to the 'disabled' attribute:\r\nhttp://plnkr.co/edit/AHix3x3dOzySygDOcfJA?p=preview\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocs mention the bug and suggest preventative measures.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n", "B_clean_body": ["set", "'disabl", "attribut", "element", "that", "ha", "descend", "element", "ha", "unexpect", "behavior", "internet", "explor", "11", "input", "element", "that", "are", "descend", "have", "text", "content", "'placehold", "attribut", "insert", "as", "valu", "it", "not", "remov", "when", "type", "field", "chang", "field", "are", "not", "reflect", "model", "valu", "select", "element", "that", "are", "descend", "are", "disabl", "avoid", "thi", "issu", "it", "import", "not", "set", "disabl", "or", "ng", "disabl", "element", "that", "ha", "descend", "form", "element", "normal", "these", "onli", "use", "actual", "form", "control", "so", "issu", "would", "not", "manifest", "issu", "also", "appear", "direct", "compon", "name", "'disabl", "or", "take", "attribut", "name", "'disabl", "as", "input", "output", "attribut", "so", "avoid", "these", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "not", "mention", "ie11", "bug", "regard", "disabl", "attribut", "element", "descend", "though", "it", "n't", "use", "non", "form", "control", "thi", "issu", "prop", "up", "when", "make", "custom", "element", "attribut", "previou", "issu", "notic", "incorrect", "behavior", "regard", "'placehold", "attribut", "input", "element", "but", "incorrectli", "thought", "behavior", "bug", "angularj", "angular", "js", "http", "github", "com", "angular", "angular", "js", "issu", "15700", "am", "abl", "reproduc", "issu", "plunkr", "creat", "by", "narretz", "aforement", "issu", "http", "plnkr", "co", "edit", "jdjv5ntwwdssp9hrt2rf", "jv5ntww", "ssp9h", "rt2rf", "p=preview", "also", "here", "'s", "updat", "version", "plunkr", "show", "model", "valu", "not", "updat", "due", "'disabl", "attribut", "http", "plnkr", "co", "edit", "ahix3x3dozysygdocfja", "hix3x3d", "ozi", "syg", "ocf", "ja", "p=preview", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "mention", "bug", "suggest", "prevent", "measur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.004683344946237417], "body_sim": [0.7769195562993104], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1}, {"A_title": "fix(markup): Make special attrs such as ng:href work even without binding", "A_clean_title": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind"], "B_title": "docs(sce,urlutils): update table to use marked syntax", "B_clean_title": ["doc", "sce", "urlutil", "updat", "tabl", "use", "mark", "syntax"], "A_body": "fix(markup): Make special attrs such as ng:href work even without binding\n- special attrs such as ng:href, ng:check did not work as intended when\n  their values do not contain bindings. And this commit is to fix that\n\nCloses #534\n", "A_clean_body": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind", "special", "attr", "such", "as", "ng", "href", "ng", "check", "did", "not", "work", "as", "intend", "when", "their", "valu", "not", "contain", "bind", "thi", "commit", "fix", "that", "close", "534"], "B_body": "Commit 258cae83dc1a03b6b878a7b4236c499288cd2624 replaced Showdown with marked.\n", "B_clean_body": ["commit", "258cae83dc1a03b6b878a7b4236c499288cd2624", "replac", "showdown", "mark"], "title_sim": [-0.014570590333474166], "body_sim": [0.018956612387354414], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 726}, {"A_title": "docs(*): Add CODE_OF_CONDUCT.md", "A_clean_title": ["doc", "add", "md", "code", "conduct"], "B_title": "revert: \"fix($compile): do not write @-bound properties if attribute \u2026", "B_clean_title": ["revert", "fix", "compil", "not", "write", "bound", "properti", "attribut"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere is no `CODE_OF_CONDUCT.md` in the repo.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThere is `CODE_OF_CONDUCT.md` in the repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "no", "md", "code", "conduct", "repo", "**what", "new", "behavior", "thi", "featur", "chang", "there", "md", "code", "conduct", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**"], "B_body": "\u2026is not present\"\n\nThis reverts commit 8a1eb1625c080445ce1e519762e1f2d4fd842b72.\n\nThis commit broke the tabs component on the material project,\nwhich caused internal breakages. Will open a separate issue to\nlook into the issue.\n", "B_clean_body": ["\u2026i", "not", "present", "thi", "revert", "commit", "8a1eb1625c080445ce1e519762e1f2d4fd842b72", "thi", "commit", "broke", "tab", "compon", "materi", "project", "which", "caus", "intern", "breakag", "will", "open", "separ", "issu", "look", "into", "issu"], "title_sim": [-0.008409454522312088], "body_sim": [0.3867564936336943], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.14347167449309925, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 958}, {"A_title": "chore(*): normalize Vojta's email in .mailmap correctly", "A_clean_title": ["chore", "normal", "vojta", "'s", "email", "mailmap", "correctli"], "B_title": "fix($rootScope): provide correct value of one-time bindings in watchGroup", "B_clean_title": ["fix", "rootscop", "root", "scope", "provid", "correct", "valu", "one", "time", "bind", "watchgroup", "watch", "group"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nVojta's mails are not normalized.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThey are normalized.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "vojta", "'s", "mail", "are", "not", "normal", "**what", "new", "behavior", "thi", "featur", "chang", "they", "are", "normal", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**"], "B_body": "I don't recall how or why I came across this issue, and it's confusing me, but I found this stashed and the tests do make sense...?", "B_clean_body": ["n't", "recal", "how", "or", "whi", "came", "across", "thi", "issu", "it", "'s", "confus", "me", "but", "found", "thi", "stash", "test", "make", "sens"], "title_sim": [-0.031608576930817714], "body_sim": [0.24963089291318336], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 244}, {"A_title": "docs(tutorial): fix typo in step_00", "A_clean_title": ["doc", "tutori", "fix", "typo", "step", "00"], "B_title": "Add event info to animation event callbacks", "B_clean_title": ["add", "event", "info", "anim", "event", "callback"], "A_body": "Just removed an extra comma. No big deal.\n", "A_clean_body": ["just", "remov", "extra", "comma", "no", "big", "deal"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nthere's no information in animation event calls\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\ninfo is added\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "no", "inform", "anim", "event", "call", "**what", "new", "behavior", "thi", "featur", "chang", "info", "ad", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.017956906344047827], "body_sim": [0.09024596741193938], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2141}, {"A_title": "fix($compile): Allow literals in isolate scope references", "A_clean_title": ["fix", "compil", "allow", "liter", "isol", "scope", "refer"], "B_title": "test($rootScope): add $watch/$watchCollection tests", "B_clean_title": ["test", "rootscop", "root", "scope", "add", "watch", "watchcollect", "watch", "collect", "test"], "A_body": "When a component uses an isolate scope reference\nand the the component is used with an object literal\na new object is created on every evaluation.\nTherefore the compiler needs to compare\nthe values of the parent and the isolate scope\nusing object equality and not object reference\nequality.\n\nFixes #5296.\n", "A_clean_body": ["when", "compon", "use", "isol", "scope", "refer", "compon", "use", "object", "liter", "new", "object", "creat", "everi", "evalu", "therefor", "compil", "need", "compar", "valu", "parent", "isol", "scope", "object", "equal", "not", "object", "refer", "equal", "fix", "5296"], "B_body": "These are various cases that I felt were missing tests, mainly around constant/literal/one-time $watch/$watchCollection.", "B_clean_body": ["these", "are", "variou", "case", "that", "felt", "were", "miss", "test", "mainli", "around", "time", "constant", "liter", "one", "watch", "watchcollect", "watch", "collect"], "title_sim": [0.24914165023259224], "body_sim": [0.2836850522438133], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.20806104635382383, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1234}, {"A_title": "Scenario runner binding throw", "A_clean_title": ["scenario", "runner", "bind", "throw"], "B_title": "chore(travis): split out the docs e2e tests into their own travis job", "B_clean_title": ["chore", "travi", "split", "out", "doc", "e2e", "test", "into", "their", "own", "travi", "job"], "A_body": "I was wrong about throw being the same as done(error) in a DSL statement. Throw is an \"error\" and done(error) is a \"failure\".\n\nAlso, there was a test for the binding not matching before, but it tested in a condition where there were no bindings at all in the document in which case elements() in your new binding() would still throw.\n\nI added a new test that checks for bindings existing but none of them matching.\n\nI also fixed an issue where you were using contains() and checking if the return value was >= 0 but the function returns a boolean and false >= 0 is true. I'll code review more carefully next time.\n", "A_clean_body": ["wa", "wrong", "about", "throw", "be", "same", "as", "done", "error", "dsl", "statement", "throw", "error", "done", "error", "failur", "also", "there", "wa", "test", "bind", "not", "match", "befor", "but", "it", "test", "condit", "where", "there", "were", "no", "bind", "at", "all", "document", "which", "case", "element", "your", "new", "bind", "would", "still", "throw", "ad", "new", "test", "that", "check", "bind", "exist", "but", "none", "them", "match", "also", "fix", "issu", "where", "you", "were", "contain", "check", "return", "valu", "wa", "but", "function", "return", "boolean", "fals", "true", "'ll", "code", "review", "more", "care", "next", "time"], "B_body": "Previously, they were in the 'unit' job to save travis VMs, but this\nwas confusing and made it more difficult to track down errors easily.\n", "B_clean_body": ["previous", "they", "were", "'unit", "job", "save", "travi", "vm", "ms", "but", "thi", "wa", "confus", "made", "it", "more", "difficult", "track", "down", "error", "easili"], "title_sim": [0.024364407082999594], "body_sim": [0.495036002867347], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.15004047348094357, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1535}, {"A_title": "Warn for missing / obsolete error docs", "A_clean_title": ["warn", "miss", "obsolet", "error", "doc"], "B_title": "perf($rootScope): do not mark $watchCollectionInterceptor as $stateful", "B_clean_title": ["perf", "rootscop", "root", "scope", "not", "mark", "watchcollectioninterceptor", "watch", "collect", "interceptor", "as", "state"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe don't know when error docs are missing or obsolete\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\nI have removed an obsolete animation error and moved the tpload error to the correct namespace. In the $templateRequest file, it looks like the error is created in the $compile namespace, but it actually ends up as the $templateRequest namespace, where it should be.\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "n't", "know", "when", "error", "doc", "are", "miss", "or", "obsolet", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "have", "remov", "obsolet", "anim", "error", "move", "tpload", "error", "correct", "namespac", "templaterequest", "templat", "request", "file", "it", "look", "like", "error", "creat", "compil", "namespac", "but", "it", "actual", "end", "up", "as", "templaterequest", "templat", "request", "namespac", "where", "it"], "B_body": "I think this was a mistake [from the start](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa?diff=unified#diff-44d3307b66bf51b52e110307fa57e196R518).  This interceptor doesn't actually store any state, it just reads the inner/complex state of its input. EDIT: actually it had a purpose originally, although may no longer be as significant, see https://github.com/angular/angular.js/pull/16009#issuecomment-311543600\r\n\r\nRemoving the `$stateful` flag will allow some expressions (those with `inputs` such as array/object literals) to avoid invoking `$watchCollectionInterceptor` and avoid creating the literals etc. on each digest.", "B_clean_body": ["think", "thi", "wa", "mistak", "start", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff=unifi", "diff", "44d3307b66bf51b52e110307fa57e196r518", "thi", "interceptor", "n't", "actual", "store", "ani", "state", "it", "just", "read", "inner", "complex", "state", "it", "input", "edit", "actual", "it", "had", "purpos", "origin", "although", "may", "no", "longer", "as", "signific", "see", "http", "github", "com", "angular", "angular", "js", "pull", "16009", "issuecom", "311543600", "remov", "state", "flag", "will", "allow", "some", "express", "those", "input", "such", "as", "array", "object", "liter", "avoid", "invok", "watchcollectioninterceptor", "watch", "collect", "interceptor", "avoid", "creat", "liter", "etc", "each", "digest"], "title_sim": [0.06369640818824536], "body_sim": [0.36976869670586604], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0828777306226797, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 64}, {"A_title": "fix($sanitize): sanitize `xml:base` attributes", "A_clean_title": ["fix", "sanit", "sanit", "xml", "base", "attribut"], "B_title": "docs(angular.mock.inject): minor formatting change", "B_clean_title": ["doc", "angular", "mock", "inject", "minor", "format", "chang"], "A_body": "On Firefox there is a XSS vulnerability if a malicious attacker\r\ncan write into the `xml:base` attribute on an SVG anchor.\r\n", "A_clean_body": ["firefox", "there", "xss", "vulner", "malici", "attack", "write", "into", "xml", "base", "attribut", "svg", "anchor"], "B_body": "Without backticks, underscores are rendered as italics.\n", "B_clean_body": ["without", "backtick", "underscor", "are", "render", "as", "ital"], "title_sim": [0.004491118171649702], "body_sim": [-0.02176135805254048], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 468}, {"A_title": "docs(guide/Expressions): Redirection to MDN", "A_clean_title": ["doc", "guid", "express", "redirect", "mdn"], "B_title": "fix(input[text]): composing function dosen't works properly in IE", "B_clean_title": ["fix", "input", "text", "compos", "function", "dose", "n't", "work", "properli", "ie"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nIt is better to link to the English version of MDN rather than German version\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "it", "better", "link", "english", "version", "mdn", "rather", "than", "german", "version"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nComposing function dosen't works properly in IE. Please refer to https://github.com/angular/angular.js/issues/6656 and \"Other information\" below.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt works properly in IE.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nI have investigated on #6656 issue and I found composing function works differently in only IE.\r\nI confirmed this by the scenario below.\r\n - Code changes to investigate this problem(just added console.log)\r\n    ![2017-10-12 17_53_02-engineering-system - c__users_jileeon_documents_git_engineering-system - _p](https://user-images.githubusercontent.com/5166067/31534128-7aac2cba-b030-11e7-8fb6-5a4754dcb0ed.png)\r\n - Scenario\r\n  1. Just type '\uc774\uc7ac\uc775' and focusout.(in IE and Chrome)\r\n - Result(attached images show differences)\r\n   console.log in Chrome\r\n    ![2017-10-12 18_57_52-developer tools - http___127 0 0 1_8888_system_requests_2279](https://user-images.githubusercontent.com/5166067/31534418-ccd3e2d4-b031-11e7-980e-009b635d0bba.png)\r\n   console.log in IE\r\n    ![2017-10-12 18_58_43-f12](https://user-images.githubusercontent.com/5166067/31534528-39585bba-b032-11e7-9486-34f9f479b6e9.png)\r\n   It shows that last values of $viewValue are different. '\uc774\uc7ac\uc774'(IE) != '\uc774\uc7ac\uc775'(Chrome)\r\n   Because 'compositionend' event is not occurred in IE. So $viewValue is not updated with last value in the textbox. It means that IE triggers composition events('compositionstart', 'compositionupdate', 'compositionend') wrong.\r\n   So I added additional condition(ev.originalEvent.data !== undefined) on 'if (composing) return;' statement.\r\n   As you saw these console logs(IE and Chrome) above, this additional condition makes composing function works properly in IE.(by checking ev.originalEvent.data value. if its value is undefined, $viewValue going to be updated with last value in the textbox in IE. So it works like 'compositionend').\r\n   In addition, When IE fixes this wrong event triggering, It works fine without any problems. ", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compos", "function", "dose", "n't", "work", "properli", "ie", "pleas", "refer", "http", "github", "com", "angular", "angular", "js", "issu", "6656", "other", "inform", "below", "**what", "new", "behavior", "thi", "featur", "chang", "it", "work", "properli", "ie", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "have", "investig", "6656", "issu", "found", "compos", "function", "work", "differ", "onli", "ie", "confirm", "thi", "by", "scenario", "below", "code", "chang", "investig", "thi", "problem", "just", "ad", "consol", "log", "2017", "10", "12", "engin", "system", "17", "53", "02", "system", "user", "jileeon", "document", "git", "engin", "http", "7aac2cba", "b030", "11e7", "8fb6", "user", "imag", "githubusercont", "5a4754dcb0", "png", "com", "5166067", "31534128", "scenario", "just", "type", "focusout", "ie", "chrome", "result", "attach", "imag", "show", "differ", "consol", "log", "chrome", "2017", "10", "12", "develop", "18", "57", "52", "tool", "http", "127", "8888", "system", "request", "2279", "http", "ccd3e2d4", "b031", "11e7", "980e", "user", "imag", "githubusercont", "009b635d0bba", "png", "com", "5166067", "31534418", "consol", "log", "ie", "2017", "10", "12", "f12", "18", "58", "43", "http", "39585bba", "b032", "11e7", "9486", "user", "imag", "githubusercont", "34f9f479b6e9", "png", "com", "5166067", "31534528", "it", "show", "that", "last", "valu", "viewvalu", "view", "valu", "are", "differ", "ie", "chrome", "becaus", "'compositionend", "event", "not", "occur", "ie", "so", "viewvalu", "view", "valu", "not", "updat", "last", "valu", "textbox", "it", "mean", "that", "ie", "trigger", "composit", "event", "'compositionstart", "'compositionupd", "'compositionend", "wrong", "so", "ad", "addit", "condit", "ev", "originalev", "data", "origin", "event", "undefin", "'if", "compos", "return", "statement", "as", "you", "saw", "these", "consol", "log", "ie", "chrome", "abov", "thi", "addit", "condit", "make", "compos", "function", "work", "properli", "ie", "by", "check", "ev", "originalev", "data", "origin", "event", "valu", "it", "valu", "undefin", "viewvalu", "view", "valu", "go", "updat", "last", "valu", "textbox", "ie", "so", "it", "work", "like", "'compositionend", "addit", "when", "ie", "fix", "thi", "wrong", "event", "trigger", "it", "work", "fine", "without", "ani", "problem"], "title_sim": [0.030213448661230578], "body_sim": [0.5912410902806524], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 466}, {"A_title": "docs(changelog, guide/Migration): add info about $sce BC in 1.7", "A_clean_title": ["doc", "changelog", "guid", "migrat", "add", "info", "about", "sce", "bc"], "B_title": "fix(booleanAttrs): convert to boolean", "B_clean_title": ["fix", "booleanattr", "boolean", "attr", "convert", "boolean"], "A_body": "Closes #16593\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["close", "16593", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "jQuery's attr() does not handle 0 as false, when it comes to boolean attrs.\n\nAnother solution might be to not set attr() for boolean attrs at all...\n", "B_clean_body": ["jqueri", "queri", "'s", "attr", "not", "handl", "as", "fals", "when", "it", "come", "boolean", "attr", "anoth", "solut", "might", "not", "set", "attr", "boolean", "attr", "at", "all"], "title_sim": [-0.002163494317523206], "body_sim": [0.009752603193557828], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06844025934225975, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2281}, {"A_title": "docs(developers.md): update node version as specified in package.json", "A_clean_title": ["doc", "develop", "md", "updat", "node", "version", "as", "specifi", "packag", "json"], "B_title": "chore(ci): disable unit testing on Firefox", "B_clean_title": ["chore", "ci", "disabl", "unit", "test", "firefox"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`DEVELOPERS.MD` contains different node version from package.json. `Yarn install` works with 8.9.1+ only and doesn't work with 6.x as specified in docs.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nDocs are updated in accordance with package.json.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNot.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nSorry, this might be a very small and not significant fix, but I guess still requires some attention.\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "develop", "md", "contain", "differ", "node", "version", "packag", "json", "yarn", "instal", "work", "1+", "onli", "n't", "work", "as", "specifi", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "are", "updat", "accord", "packag", "json", "**doe", "thi", "pr", "introduc", "break", "chang", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "sorri", "thi", "might", "veri", "small", "not", "signific", "fix", "but", "guess", "still", "requir", "some", "attent"], "B_body": "Related to https://github.com/angular/angular.js/issues/15987\r\n\r\n", "B_clean_body": ["relat", "http", "github", "com", "angular", "angular", "js", "issu", "15987"], "title_sim": [-0.00909612928372497], "body_sim": [0.5325293652648811], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 225}, {"A_title": "feat($compile): support directive virtual groups", "A_clean_title": ["feat", "compil", "support", "direct", "virtual", "group"], "B_title": "docs($sanitizeProvider): fix param comment for enableSvg", "B_clean_title": ["doc", "sanitizeprovid", "sanit", "provid", "fix", "param", "comment", "enablesvg", "enabl", "svg"], "A_body": "By appending  X-start and X-end to a directive it is now possible\nto have the directive act on a group of elements.\n\nIt is now possible to iterate over multiple elements like so:\n\n```\n<table>\n  <tr ng-repeat-start=\"item in list\">I get repeated</tr>\n  <tr ng-repeat-end>I also get repeated</tr>\n</table>\n```\n", "A_clean_body": ["by", "append", "start", "end", "direct", "it", "now", "possibl", "have", "direct", "act", "group", "element", "it", "now", "possibl", "iter", "over", "multipl", "element", "like", "so", "tabl", "tr", "ng", "repeat", "start=", "item", "list", "get", "repeat", "tr", "tr", "ng", "repeat", "end", "also", "get", "repeat", "tr", "tabl"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe param is listed as type boolean, but has an erroneous comment describing it as a regex. (Maybe from a much earlier version of Angular?)\n\n**What is the new behavior (if this is a feature change)?**\n\nNo behavior change. Fixes the doc comment.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nI submitted a pull request for this previously, but the commit had the wrong email address so it didn't catch my CLA, so I'm resubmitting now.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "param", "list", "as", "type", "boolean", "but", "ha", "erron", "comment", "describ", "it", "as", "regex", "mayb", "much", "earlier", "version", "angular", "**what", "new", "behavior", "thi", "featur", "chang", "no", "behavior", "chang", "fix", "doc", "comment", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "submit", "pull", "request", "thi", "previous", "but", "commit", "had", "wrong", "email", "address", "so", "it", "did", "n't", "catch", "my", "cla", "so", "'m", "resubmit", "now"], "title_sim": [-0.007820997597475551], "body_sim": [0.11317592725548567], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0018192884022217568, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1071}, {"A_title": "docs(guide/Components): add link to documentation for component method", "A_clean_title": ["doc", "guid", "compon", "add", "link", "document", "compon", "method"], "B_title": "fix($parse): make promise unwrapping opt-in", "B_clean_title": ["fix", "pars", "make", "promis", "unwrap", "opt"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDoes not link to API of method which shows all syntaxes\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nLinks to API of method\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "not", "link", "api", "method", "which", "show", "all", "syntax", "**what", "new", "behavior", "thi", "featur", "chang", "link", "api", "method", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Previously promises found anywhere in the expression during expression\nevaluation would evaluate to undefined while unresolved and to the\nfulfillment value if fulfilled.\n\nThis is a feature that didn't prove to be wildly useful or popular,\nprimarily because of the dichotomy between data access in templates\n(accessed as raw values) and controller code (accessed as promises).\n\nIn most code we ended up resolving promises manually in controllers\nanyway and thus unifying the model access there.\n\nOther downsides of automatic promise unwrapping:\n- when building components it's often desirable to receive the\n  raw promises\n- adds complexity and slows down expression evaluation\n- makes expression code pre-generation unattractive due to the\n  amount of code that needs to be generated\n- makes IDE auto-completion and tool support hard\n- adds too much magic\n\nCloses #4158\nCloses #4270\n", "B_clean_body": ["previous", "promis", "found", "anywher", "express", "dure", "express", "evalu", "would", "evalu", "undefin", "while", "unresolv", "fulfil", "valu", "fulfil", "thi", "featur", "that", "did", "n't", "prove", "wildli", "use", "or", "popular", "primarili", "becaus", "dichotomi", "between", "data", "access", "templat", "access", "as", "raw", "valu", "control", "code", "access", "as", "promis", "most", "code", "we", "end", "up", "resolv", "promis", "manual", "control", "anyway", "thu", "unifi", "model", "access", "there", "other", "downsid", "automat", "promis", "unwrap", "when", "build", "compon", "it", "'s", "often", "desir", "receiv", "raw", "promis", "add", "complex", "slow", "down", "express", "evalu", "make", "express", "code", "pre", "gener", "unattract", "due", "amount", "code", "that", "need", "gener", "make", "ide", "auto", "complet", "tool", "support", "hard", "add", "too", "much", "magic", "close", "4158", "close", "4270"], "title_sim": [0.17786354995495177], "body_sim": [0.09474509969716914], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1668}, {"A_title": "chore(travis): split out the docs e2e tests into their own travis job", "A_clean_title": ["chore", "travi", "split", "out", "doc", "e2e", "test", "into", "their", "own", "travi", "job"], "B_title": "feat($sanitize): Added support for the sftp protocol in $$ SanitizeUriProvider and linky filter", "B_clean_title": ["feat", "sanit", "ad", "support", "sftp", "protocol", "sanitizeuriprovid", "sanit", "uri", "provid", "linki", "filter"], "A_body": "Previously, they were in the 'unit' job to save travis VMs, but this\nwas confusing and made it more difficult to track down errors easily.\n", "A_clean_body": ["previous", "they", "were", "'unit", "job", "save", "travi", "vm", "ms", "but", "thi", "wa", "confus", "made", "it", "more", "difficult", "track", "down", "error", "easili"], "B_body": "\u2026 SanitizeUriProvider\r\n\r\nAdded support for the sftp protocol in $$ SanitizeUriProvider and linky filter\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsftp not suported\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nsftp suported\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["sanitizeuriprovid", "sanit", "uri", "provid", "ad", "support", "sftp", "protocol", "sanitizeuriprovid", "sanit", "uri", "provid", "linki", "filter", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "sftp", "not", "suport", "**what", "new", "behavior", "thi", "featur", "chang", "sftp", "suport", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.012385631824740923], "body_sim": [0.07395620304776408], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 915}, {"A_title": "fix(ngAnimate): don't close animations when child transitions close", "A_clean_title": ["fix", "nganim", "ng", "anim", "n't", "close", "anim", "when", "child", "transit", "close"], "B_title": "chore(doc-gen): add production deployment environment", "B_clean_title": ["chore", "doc", "gen", "add", "product", "deploy", "environ"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #16210\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "16210", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This is a part of a fix for https://github.com/angular/dgeni/issues/56\n", "B_clean_body": ["thi", "part", "fix", "http", "github", "com", "angular", "dgeni", "issu", "56"], "title_sim": [0.00715792672102483], "body_sim": [0.4490439273546952], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.1110006530496071, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1296}, {"A_title": "fix(ngMessages): create new scope for ngMessage, clean it up correctly", "A_clean_title": ["fix", "ngmessag", "ng", "messag", "creat", "new", "scope", "ngmessag", "ng", "messag", "clean", "it", "up", "correctli"], "B_title": "refactor(fromJson): Remove error() and just throw", "B_clean_title": ["refactor", "fromjson", "json", "remov", "error", "just", "throw"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n#14307\n\n**What is the new behavior (if this is a feature change)?**\nngMessage creates a child scope instead of reusing the ngMessages scope.\n\n**Does this PR introduce a breaking change?**\nPossibly. Needs investigation.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nPreviously, ngMessage elements used the same scope as ngMessages. When ngMessage\nhas interpolation in the textContent, then removing the message would not remove\nthe watcher from the scope - it would only be removed when the whole ngMessages\nelement was removed.\n\nThis commit changes the ngMessage transclude function to create a new child scope\ninstead, which can be destroyed safely when the message element is removed and\nthe message is detached\n\nFixes #14307\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "14307", "**what", "new", "behavior", "thi", "featur", "chang", "ngmessag", "ng", "messag", "creat", "child", "scope", "instead", "reus", "ngmessag", "ng", "messag", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "need", "investig", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "previous", "ngmessag", "ng", "messag", "element", "use", "same", "scope", "as", "ngmessag", "ng", "messag", "when", "ngmessag", "ng", "messag", "ha", "interpol", "textcont", "text", "content", "then", "remov", "messag", "would", "not", "remov", "watcher", "scope", "it", "would", "onli", "remov", "when", "whole", "ngmessag", "ng", "messag", "element", "wa", "remov", "thi", "commit", "chang", "ngmessag", "ng", "messag", "transclud", "function", "creat", "new", "child", "scope", "instead", "which", "destroy", "safe", "when", "messag", "element", "remov", "messag", "detach", "fix", "14307"], "B_body": "It's more likely you are using angular.fromJson() inside Angular world, which means you get proper\nexception handling by $exceptionHandler.\n\nThere is no point to explicitly push it to console and it causes memory leaks on most browsers \n(tried Chrome stable/canary, Safari, FF).\n", "B_clean_body": ["it", "'s", "more", "like", "you", "are", "angular", "fromjson", "json", "insid", "angular", "world", "which", "mean", "you", "get", "proper", "except", "handl", "by", "exceptionhandl", "except", "handler", "there", "no", "point", "explicitli", "push", "it", "consol", "it", "caus", "memori", "leak", "most", "browser", "tri", "chrome", "stabl", "canari", "safari", "ff"], "title_sim": [0.02908585096232517], "body_sim": [0.20916421502867916], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1476}, {"A_title": "Fixed spelling error for word 'standalone'", "A_clean_title": ["fix", "spell", "error", "word", "'standalon"], "B_title": "fix($location): url rewriting if element was removed", "B_clean_title": ["fix", "locat", "url", "rewrit", "element", "wa", "remov"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "When user clicks a link, $location needs to intercept this event.  The <a> doesn't have to be target element of the DOM event, so it needs to traverse the DOM, to find first <a> parent.\n\nIf the target element was removed from DOM, during the same event, it would throw an exception. This fixes the issue.\n\nCloses #1058\n", "B_clean_body": ["when", "user", "click", "link", "locat", "need", "intercept", "thi", "event", "n't", "have", "target", "element", "dom", "event", "so", "it", "need", "travers", "dom", "find", "first", "parent", "target", "element", "wa", "remov", "dom", "dure", "same", "event", "it", "would", "throw", "except", "thi", "fix", "issu", "close", "1058"], "title_sim": [0.131383968608517], "body_sim": [0.09972587426889792], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1562}, {"A_title": "test($http): ignore date-toJSON test if running in IE8", "A_clean_title": ["test", "http", "ignor", "date", "tojson", "json", "test", "run", "ie8"], "B_title": "fix(jqLite): use getElementsByTagName for dealoc-ing elements, cz of SVG on IE", "B_clean_title": ["fix", "jqlite", "jq", "lite", "use", "getelementsbytagnam", "get", "element", "by", "tag", "name", "dealoc", "ing", "element", "cz", "svg", "ie"], "A_body": "IE8 does not implement Date.prototype.toISOString(), which is necessary for\nthis feature. The feature still works if this method is polyfilled, but these\ntests are not run with polyfills.\n\n/CC @IgorMinar (Please review, shouldn't take long!)\n", "A_clean_body": ["ie8", "not", "implement", "date", "prototyp", "toisostr", "iso", "string", "which", "necessari", "thi", "featur", "featur", "still", "work", "thi", "method", "polyfil", "but", "these", "test", "are", "not", "run", "polyfil", "cc", "igorminar", "igor", "minar", "pleas", "review", "n't", "take", "long"], "B_body": "See comments in #8075\n", "B_clean_body": ["see", "comment", "8075"], "title_sim": [-0.03527862433300151], "body_sim": [0.07920725527959016], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 5}, {"A_title": "docs(api/$http): fix typo in $http API Reference", "A_clean_title": ["doc", "api", "http", "fix", "typo", "http", "api", "refer"], "B_title": "fix($parse): Allow property names that collide with native object proper...", "B_clean_title": ["fix", "pars", "allow", "properti", "name", "that", "collid", "nativ", "object", "proper"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFix a typo in https://docs.angularjs.org/api/ng/service/$http. \n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere is a typo in https://docs.angularjs.org/api/ng/service/$http.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe typo is corrected.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\ndocs($http): fix typo in $http API Reference\n\nFix a typo in the $http API Reference\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "typo", "http", "angularj", "doc", "org", "api", "ng", "servic", "http", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "http", "angularj", "doc", "org", "api", "ng", "servic", "http", "**what", "new", "behavior", "thi", "featur", "chang", "typo", "correct", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "doc", "http", "fix", "typo", "http", "api", "refer", "fix", "typo", "http", "api", "refer"], "B_body": "...ties\n\nI.e. constructor, toString, or watch on FF\n(https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/watch)\n- optimize parser a bit to not create getter function for operators\n", "B_clean_body": ["tie", "constructor", "tostr", "string", "or", "watch", "ff", "http", "mozilla", "develop", "org", "en", "javascript", "refer", "global", "object", "object", "watch", "java", "script", "optim", "parser", "bit", "not", "creat", "getter", "function", "oper"], "title_sim": [0.018908065971013154], "body_sim": [0.10981913204670872], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1499}, {"A_title": "docs(guide): add note about value attribute", "A_clean_title": ["doc", "guid", "add", "note", "about", "valu", "attribut"], "B_title": "test($http): ensure json deserialization errors are forwarded to erro\u2026", "B_clean_title": ["test", "http", "ensur", "json", "deseri", "error", "are", "forward", "erro\u2026"], "A_body": "- Add note about value attribute for the progress tag with IE\n\nThis should address #7218.\n", "A_clean_body": ["add", "note", "about", "valu", "attribut", "progress", "tag", "ie", "thi", "address", "7218"], "B_body": "\u2026r handler\r\n\r\nSince https://github.com/angular/angular.js/commit/e13eeabd7e34a78becec06cfbe72c23f2dcb85f9,\r\nerrors thrown from onFulfilled and onRejected handlers are passed to the regular http\r\nerror handlers. Before this, JSON deserialization errors lead to hard application errors, and could\r\nnot be handled by application code. This behavior was introduced in https://github.com/angular/angular.js/commit/7b6c1d08aceba6704a40302f373400aed9ed0e0b, and originally, a malformed JSON string was forwarded\r\nas the data to the http success response handler.\r\n\r\nThis commit adds a specifc test case, even though the behavior is unlikely to break in the future without\r\na change in the $q rejection handling.\r\n\r\nRelated #11433\r\n\r\n", "B_clean_body": ["\u2026r", "handler", "sinc", "http", "github", "com", "angular", "angular", "js", "commit", "e13eeabd7e34a78becec06cfbe72c23f2dcb85f9", "error", "thrown", "onfulfil", "fulfil", "onreject", "reject", "handler", "are", "pass", "regular", "http", "error", "handler", "befor", "thi", "json", "deseri", "error", "lead", "hard", "applic", "error", "could", "not", "handl", "by", "applic", "code", "thi", "behavior", "wa", "introduc", "http", "github", "com", "angular", "angular", "js", "commit", "7b6c1d08aceba6704a40302f373400aed9ed0e0b", "origin", "malform", "json", "string", "wa", "forward", "as", "data", "http", "success", "respons", "handler", "thi", "commit", "add", "specifc", "test", "case", "even", "though", "behavior", "unlik", "break", "futur", "without", "chang", "reject", "handl", "relat", "11433"], "title_sim": [0.021337122276579794], "body_sim": [0.08680600515680256], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 243}, {"A_title": "fix($parse): standardize one-time literal vs non-literal and interceptors", "A_clean_title": ["fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "B_title": "docs(sce,urlutils): update table to use marked syntax", "B_clean_title": ["doc", "sce", "urlutil", "updat", "tabl", "use", "mark", "syntax"], "A_body": "Previously literal one-time bindings did not use the expression `inputs`, causing infinite digest issues with literal values. This often forces the use of deepEquals when watching one-time literals.\r\n\r\n`ng-class` is one example of deepEquals which is no longer required (and had to be updated to keep all tests passing).\r\n\r\nThis one-time/literal behavior is now also consistently propagated through interceptors (and had to be updated to keep all tests passing).\r\n\r\n----\r\n\r\nThe ngClass/interceptor part was not originally planned but had to be changed to keep tests passing. Maybe this can be split into smaller commits? But it's mainly just deleting...!", "A_clean_body": ["previous", "liter", "one", "time", "bind", "did", "not", "use", "express", "input", "caus", "infinit", "digest", "issu", "liter", "valu", "thi", "often", "forc", "use", "deepequ", "deep", "equal", "when", "watch", "one", "time", "liter", "ng", "class", "one", "exampl", "deepequ", "deep", "equal", "which", "no", "longer", "requir", "had", "updat", "keep", "all", "test", "pass", "thi", "one", "time", "liter", "behavior", "now", "also", "consist", "propag", "through", "interceptor", "had", "updat", "keep", "all", "test", "pass", "ngclass", "interceptor", "ng", "class", "part", "wa", "not", "origin", "plan", "but", "had", "chang", "keep", "test", "pass", "mayb", "thi", "split", "into", "smaller", "commit", "but", "it", "'s", "mainli", "just", "delet"], "B_body": "Commit 258cae83dc1a03b6b878a7b4236c499288cd2624 replaced Showdown with marked.\n", "B_clean_body": ["commit", "258cae83dc1a03b6b878a7b4236c499288cd2624", "replac", "showdown", "mark"], "title_sim": [0.04125809782428305], "body_sim": [0.02298255169508551], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1311}, {"A_title": "fix:SiteMap(docs) in SiteMap.js: SiteMap.xml was wrongly generated", "A_clean_title": ["fix", "sitemap", "site", "map", "doc", "sitemap", "js", "site", "map", "sitemap", "xml", "site", "map", "wa", "wrongli", "gener"], "B_title": "refactor($compile): remove unnecessary try/catch", "B_clean_title": ["refactor", "compil", "remov", "unnecessari", "tri", "catch"], "A_body": "doc.id should be used instead of doc.name, otherwise links are wrongly\ngenerated\n", "A_clean_body": ["doc", "id", "use", "instead", "doc", "name", "otherwis", "link", "are", "wrongli", "gener"], "B_body": "I don't see anything in there that could throw...\n", "B_clean_body": ["n't", "see", "anyth", "there", "that", "could", "throw"], "title_sim": [-0.020473320033205473], "body_sim": [0.11933310432327845], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1596}, {"A_title": "Fix scenario runner on IE7, IE8", "A_clean_title": ["fix", "scenario", "runner", "ie7", "ie8"], "B_title": "refactor(ngModelSpec): use valueFn over curry", "B_clean_title": ["refactor", "ngmodelspec", "ng", "model", "spec", "use", "valuefn", "valu", "fn", "over", "curri"], "A_body": "I did only remove config attribute from docs-scenario.html (`ng:scenario-output=\"json\"`) as I don't think we want this change. We could use just `html` output, as that's actually the only output being used, but using `json` output wouldn't display any result and scenario runner wouldn't work with JSTD.\n\nCouple of failing tests on both IE7, IE8 had been fixed with that commit.\nThe issue with input.enter() is fixed.\n- add ng:disabled, ng:checked, ng:multiple, ng:readonly, ng:selected\n- fetch fixed cookbook/advancedform (use ng:disabled)\n- fire keydown instead of change on input\n- remove frame when test finishes\n", "A_clean_body": ["did", "onli", "remov", "config", "attribut", "doc", "scenario", "html", "ng", "scenario", "output=", "json", "as", "n't", "think", "we", "want", "thi", "chang", "we", "could", "use", "just", "html", "output", "as", "that", "'s", "actual", "onli", "output", "be", "use", "but", "json", "output", "would", "n't", "display", "ani", "result", "scenario", "runner", "would", "n't", "work", "jstd", "coupl", "fail", "test", "both", "ie7", "ie8", "had", "been", "fix", "that", "commit", "issu", "input", "enter", "fix", "add", "ng", "disabl", "ng", "check", "ng", "multipl", "ng", "readonli", "ng", "select", "fetch", "fix", "cookbook", "advancedform", "use", "ng", "disabl", "fire", "keydown", "instead", "chang", "input", "remov", "frame", "when", "test", "finish"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nRefactor.\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nDefines a `curry` function, which is not needed because the internal helper `valueFn` does the exact same thing. See also this comment chain: [PR 15208 Comment](https://github.com/angular/angular.js/pull/15208#discussion_r81514963)\n\n**What is the new behavior (if this is a feature change)?**\n\nNothing changes.\n\n**Does this PR introduce a breaking change?**\n\nNope.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nRefactor ngModelSpec to use internal helper function `valueFn`.\nUse instead of multiple-defining a function called `curry`.\n\nAddresses a quick change mentioned in PR 15208 from Issue #14734\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "defin", "curri", "function", "which", "not", "need", "becaus", "intern", "helper", "valuefn", "valu", "fn", "exact", "same", "thing", "see", "also", "thi", "comment", "chain", "pr", "15208", "comment", "http", "github", "com", "angular", "angular", "js", "pull", "15208", "discuss", "r81514963", "**what", "new", "behavior", "thi", "featur", "chang", "noth", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "refactor", "ngmodelspec", "ng", "model", "spec", "use", "intern", "helper", "function", "valuefn", "valu", "fn", "use", "instead", "multipl", "defin", "function", "call", "curri", "address", "quick", "chang", "mention", "pr", "15208", "issu", "14734"], "title_sim": [0.06797766759962158], "body_sim": [0.33231847757086175], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1944}, {"A_title": "fix(markup): Make special attrs such as ng:href work even without binding", "A_clean_title": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind"], "B_title": "fix($parse): standardize one-time literal vs non-literal and interceptors", "B_clean_title": ["fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "A_body": "fix(markup): Make special attrs such as ng:href work even without binding\n- special attrs such as ng:href, ng:check did not work as intended when\n  their values do not contain bindings. And this commit is to fix that\n\nCloses #534\n", "A_clean_body": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind", "special", "attr", "such", "as", "ng", "href", "ng", "check", "did", "not", "work", "as", "intend", "when", "their", "valu", "not", "contain", "bind", "thi", "commit", "fix", "that", "close", "534"], "B_body": "Previously literal one-time bindings did not use the expression `inputs`, causing infinite digest issues with literal values. This often forces the use of deepEquals when watching one-time literals.\r\n\r\n`ng-class` is one example of deepEquals which is no longer required (and had to be updated to keep all tests passing).\r\n\r\nThis one-time/literal behavior is now also consistently propagated through interceptors (and had to be updated to keep all tests passing).\r\n\r\n----\r\n\r\nThe ngClass/interceptor part was not originally planned but had to be changed to keep tests passing. Maybe this can be split into smaller commits? But it's mainly just deleting...!", "B_clean_body": ["previous", "liter", "one", "time", "bind", "did", "not", "use", "express", "input", "caus", "infinit", "digest", "issu", "liter", "valu", "thi", "often", "forc", "use", "deepequ", "deep", "equal", "when", "watch", "one", "time", "liter", "ng", "class", "one", "exampl", "deepequ", "deep", "equal", "which", "no", "longer", "requir", "had", "updat", "keep", "all", "test", "pass", "thi", "one", "time", "liter", "behavior", "now", "also", "consist", "propag", "through", "interceptor", "had", "updat", "keep", "all", "test", "pass", "ngclass", "interceptor", "ng", "class", "part", "wa", "not", "origin", "plan", "but", "had", "chang", "keep", "test", "pass", "mayb", "thi", "split", "into", "smaller", "commit", "but", "it", "'s", "mainli", "just", "delet"], "title_sim": [0.01717417189116894], "body_sim": [0.23099410184923994], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06731082521156219, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2038}, {"A_title": "docs(indexPage.template.html): change bad punctuation in documentatio\u2026", "A_clean_title": ["doc", "indexpag", "templat", "html", "index", "page", "chang", "bad", "punctuat", "documentatio\u2026"], "B_title": "perf($animate): listen for document visibility changes", "B_clean_title": ["perf", "anim", "listen", "document", "visibl", "chang"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nDocs update to fix punctuation typo in footer\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee the footer of the Angular official [documentation](https://docs.angularjs.org/) page\n\n**What is the new behavior (if this is a feature change)?**\nThere are no more punctuation typos in the footer\n\n**Does this PR introduce a breaking change?**\nNo, it doesn't. Only affects to the footer.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [] Tests for the changes have been added (for bug fixes / features)\n- [] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nN/A\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "fix", "punctuat", "typo", "footer", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "footer", "angular", "offici", "document", "http", "angularj", "doc", "org", "page", "**what", "new", "behavior", "thi", "featur", "chang", "there", "are", "no", "more", "punctuat", "typo", "footer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "it", "n't", "onli", "affect", "footer", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Accessing the document for the hidden state is costly for\nplatforms like Electron.\n\nCloses #14066\n", "B_clean_body": ["access", "document", "hidden", "state", "costli", "platform", "like", "electron", "close", "14066"], "title_sim": [0.008836808912954013], "body_sim": [0.051577658862236885], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 119}, {"A_title": "refactor($compile): remove unnecessary try/catch", "A_clean_title": ["refactor", "compil", "remov", "unnecessari", "tri", "catch"], "B_title": "fix($location): url rewriting if element was removed", "B_clean_title": ["fix", "locat", "url", "rewrit", "element", "wa", "remov"], "A_body": "I don't see anything in there that could throw...\n", "A_clean_body": ["n't", "see", "anyth", "there", "that", "could", "throw"], "B_body": "When user clicks a link, $location needs to intercept this event.  The <a> doesn't have to be target element of the DOM event, so it needs to traverse the DOM, to find first <a> parent.\n\nIf the target element was removed from DOM, during the same event, it would throw an exception. This fixes the issue.\n\nCloses #1058\n", "B_clean_body": ["when", "user", "click", "link", "locat", "need", "intercept", "thi", "event", "n't", "have", "target", "element", "dom", "event", "so", "it", "need", "travers", "dom", "find", "first", "parent", "target", "element", "wa", "remov", "dom", "dure", "same", "event", "it", "would", "throw", "except", "thi", "fix", "issu", "close", "1058"], "title_sim": [0.3275508560285783], "body_sim": [0.15574662589855628], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01736220986866069, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1237}, {"A_title": "fix(ngMock/$httpBackend): fail if a url is provided but is `undefined`", "A_clean_title": ["fix", "ngmock", "ng", "mock", "httpbackend", "http", "backend", "fail", "url", "provid", "but", "undefin"], "B_title": "fix:SiteMap(docs) in SiteMap.js: SiteMap.xml was wrongly generated", "B_clean_title": ["fix", "sitemap", "site", "map", "doc", "sitemap", "js", "site", "map", "sitemap", "xml", "site", "map", "wa", "wrongli", "gener"], "A_body": "While the `url` parameter is optional for `$httpBackend.when`,\n`$httpBackend.expect` and related shortcut methods, it should not have the\nvalue of `undefined` if it has been provided.\n\nThis change ensures that an error is thrown in those cases.\n\nCloses #8442\nCloses #8462\nCloses #10934\n\nBREAKING CHANGE\n\nIt is no longer valid to explicitly pass `undefined` as the `url` argument\nto any of the `$httpBackend.when...()` and `$httpBackend.expect...()`\nmethods.\n\nWhile this argument is optional, it must have a defined value if it is\nprovided.\n\nPreviously passing an explicit `undefined` value was ignored but this\nlead to invalid tests passing unexpectedly.\n", "A_clean_body": ["while", "url", "paramet", "option", "httpbackend", "when", "http", "backend", "httpbackend", "expect", "http", "backend", "relat", "shortcut", "method", "it", "not", "have", "valu", "undefin", "it", "ha", "been", "provid", "thi", "chang", "ensur", "that", "error", "thrown", "those", "case", "close", "8442", "close", "8462", "close", "10934", "break", "chang", "it", "no", "longer", "valid", "explicitli", "pass", "undefin", "as", "url", "argument", "ani", "httpbackend", "when", "http", "backend", "httpbackend", "expect", "http", "backend", "method", "while", "thi", "argument", "option", "it", "must", "have", "defin", "valu", "it", "provid", "previous", "pass", "explicit", "undefin", "valu", "wa", "ignor", "but", "thi", "lead", "invalid", "test", "pass", "unexpectedli"], "B_body": "doc.id should be used instead of doc.name, otherwise links are wrongly\ngenerated\n", "B_clean_body": ["doc", "id", "use", "instead", "doc", "name", "otherwis", "link", "are", "wrongli", "gener"], "title_sim": [0.06561160316744459], "body_sim": [0.02808443818412382], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1535}, {"A_title": "docs($location): describe your change...", "A_clean_title": ["doc", "locat", "describ", "your", "chang"], "B_title": "test($compile): use FQDN for img[src]", "B_clean_title": ["test", "compil", "use", "fqdn", "img", "src"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\ninaccurate docs\n\n**What is the new behavior (if this is a feature change)?**\ncorrect docs\n\n**Does this PR introduce a breaking change?**\nno\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\ndocs for return of path() inaccurately describe the function\u2019s return when a value is passed in.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "inaccur", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "correct", "doc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "doc", "return", "path", "inaccur", "describ", "function", "return", "when", "valu", "pass"], "B_body": "img[src]=\"https://foo\" has the unfortunate problem that the browser will\nactually try retrieving the resource the non FQDN foo.  The local DNS\nmight suffix a domain to this, resolve it, and try to present a\ncertificate for the https request and prompt the user to pick a\ncertificate. This commit avoids that by making foo a FQDN.  Note that it\nmight be better to replace foo with example.com (ref\nhttp://tools.ietf.org/html/rfc2606#section-3).\n", "B_clean_body": ["img", "src", "http", "foo", "ha", "unfortun", "problem", "that", "browser", "will", "actual", "tri", "retriev", "resourc", "non", "fqdn", "foo", "local", "dn", "might", "suffix", "domain", "thi", "resolv", "it", "tri", "present", "certif", "http", "request", "prompt", "user", "pick", "certif", "thi", "commit", "avoid", "that", "by", "make", "foo", "fqdn", "note", "that", "it", "might", "better", "replac", "foo", "exampl", "com", "ref", "http", "ietf", "tool", "org", "html", "rfc2606", "section"], "title_sim": [-0.018586119434703414], "body_sim": [0.11869423194534519], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1035}, {"A_title": "chore(yarn): rely on Travis built-in Yarn support, update Yarn in Jenkins", "A_clean_title": ["chore", "yarn", "reli", "travi", "built", "yarn", "support", "updat", "yarn", "jenkin"], "B_title": "docs(*): document the breaking change introduced in e1da4be", "B_clean_title": ["doc", "document", "break", "chang", "introduc", "e1da4b"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe install an old Yarn verison manually.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nOn Travis we rely on built-in Yarn support and we only cache the Yarn cache, not `node_modules`. We install a new Yarn verison manually on Jenkins; the location of the install script changed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "instal", "old", "yarn", "verison", "manual", "**what", "new", "behavior", "thi", "featur", "chang", "travi", "we", "reli", "built", "yarn", "support", "we", "onli", "cach", "yarn", "cach", "not", "node", "modul", "we", "instal", "new", "yarn", "verison", "manual", "jenkin", "locat", "instal", "script", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nAlthough e1da4be introduced a breaking change, it wasn't documented as such.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe breaking change is documented.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n<sub>(In a way. \"Let me introduce you this breaking change. It has been around for 2 releases, but I don't think you've met.)\"</sub>\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "although", "e1da4b", "introduc", "break", "chang", "it", "wa", "n't", "document", "as", "such", "**what", "new", "behavior", "thi", "featur", "chang", "break", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "sub", "way", "let", "me", "introduc", "you", "thi", "break", "chang", "it", "ha", "been", "around", "releas", "but", "n't", "think", "you", "'ve", "met", "sub", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.060103335973985976], "body_sim": [0.9487460252191934], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 117}, {"A_title": "docs(ngOpen): add note about browser compatibility", "A_clean_title": ["doc", "ngopen", "ng", "open", "add", "note", "about", "browser", "compat"], "B_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "B_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "A_body": "- Add note about browser compatibility and recommend ng-show/ng-hide\n\nThis should address #7337.\n", "A_clean_body": ["add", "note", "about", "browser", "compat", "recommend", "ng", "hide", "show", "ng", "thi", "address", "7337"], "B_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "B_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "title_sim": [0.3071723034957464], "body_sim": [0.05739007321424071], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 843}, {"A_title": "fix($compile): create new (isolate) scopes for directives on root elements", "A_clean_title": ["fix", "compil", "creat", "new", "isol", "scope", "direct", "root", "element"], "B_title": "docs(faq): clarify the versioning strategy", "B_clean_title": ["doc", "faq", "clarifi", "version", "strategi"], "A_body": "previously we would not create them and it's causing all kinds of issues and accidental leaks\n\nCloses #817\n", "A_clean_body": ["previous", "we", "would", "not", "creat", "them", "it", "'s", "caus", "all", "kind", "issu", "accident", "leak", "close", "817"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nInformation is not super clear\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nclarify info on:\r\n- When do features and breaking changes appear\r\n- Relationship with Semver\r\n- Compatibility of core and optional modules \r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "inform", "not", "super", "clear", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "clarifi", "info", "when", "featur", "break", "chang", "appear", "relationship", "semver", "compat", "core", "option", "modul"], "title_sim": [0.09112688124836134], "body_sim": [0.12090725949805295], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1825}, {"A_title": "[[TRAVIS POKE]] fix($location): allow numeric location setter arguments", "A_clean_title": ["travi", "poke", "fix", "locat", "allow", "numer", "locat", "setter", "argument"], "B_title": "feat(form.FormController): add $getControls()", "B_clean_title": ["feat", "form", "formcontrol", "form", "control", "add", "getcontrol", "get", "control"], "A_body": "Dupe of #7161, with some amendments\n", "A_clean_body": ["dupe", "7161", "some", "amend"], "B_body": "Fixes #14749\r\nCloses #14517\r\nCloses #13202\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nthere's no straight forward way to get all controls of a form\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nyou can get a shallow copy of the form controls\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nI decided against a synchronized copy (https://github.com/angular/angular.js/issues/14749#issuecomment-230451318) because I don't see the clear benefit over a simple shallow copy + is slightly more involved to implmenent.\r\n", "B_clean_body": ["fix", "14749", "close", "14517", "close", "13202", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "no", "straight", "forward", "way", "get", "all", "control", "form", "**what", "new", "behavior", "thi", "featur", "chang", "you", "get", "shallow", "copi", "form", "control", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "decid", "against", "synchron", "copi", "http", "github", "com", "angular", "angular", "js", "issu", "14749", "issuecom", "230451318", "becaus", "n't", "see", "clear", "benefit", "over", "simpl", "shallow", "copi", "slightli", "more", "involv", "implmen"], "title_sim": [-0.02866419237117073], "body_sim": [0.017292301262140274], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005583320122159587, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1380}, {"A_title": "docs(ngNonBindable): Document effect on attributes", "A_clean_title": ["doc", "ngnonbind", "ng", "non", "bindabl", "document", "effect", "attribut"], "B_title": "docs(ChangeLog): fix typo", "B_clean_title": ["doc", "changelog", "chang", "log", "fix", "typo"], "A_body": "The phrase \"contents of the current DOM element\" may be interpreted either as\r\ninclusive of the DOM element's attributes or as exclusive of the attributes.\r\nThis situation concerns markup such as:\r\n\r\n    <div ng-non-bindable ng-controller=\"MyController\"></div>\r\n\r\nIn practice, AngularJS does not compile or bind attribute values for elements\r\nwhich specify the `ng-non-bindable` directive. Extend the documentation to\r\ndefinitely describe this behavior.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["phrase", "content", "current", "dom", "element", "may", "interpret", "either", "as", "inclus", "dom", "element", "'s", "attribut", "or", "as", "exclus", "attribut", "thi", "situat", "concern", "markup", "such", "as", "div", "ng", "non", "bindabl", "ng", "controller=", "mycontrol", "my", "control", "div", "practic", "angularj", "angular", "js", "not", "compil", "or", "bind", "attribut", "valu", "element", "which", "specifi", "ng", "non", "bindabl", "direct", "extend", "document", "definit", "describ", "thi", "behavior", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs only.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "onli", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.1623309073678799], "body_sim": [0.8628314957548036], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 57}, {"A_title": "chore(node): update karma-sauce-launcher", "A_clean_title": ["chore", "node", "updat", "karma", "sauc", "launcher"], "B_title": "docs(misc/FAQ): Correcting Misspell", "B_clean_title": ["doc", "misc", "faq", "correct", "misspel"], "A_body": "Related to #14961\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["relat", "14961", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "The HTML brackets are still just 'Angular' :-)\r\n\r\nFixing over-correction made in [this PR](https://github.com/angular/angular.js/commit/03043839d5a540b02208001fe12e812dfde00a8e)", "B_clean_body": ["html", "bracket", "are", "still", "just", "'angular", "fix", "over", "correct", "made", "thi", "pr", "http", "github", "com", "angular", "angular", "js", "commit", "03043839d5a540b02208001fe12e812dfde00a8"], "title_sim": [0.08274681804880848], "body_sim": [0.44112094199648016], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 111}, {"A_title": "chore(docs.angularjs.org): allow robots in partials/ but prevent inde\u2026", "A_clean_title": ["chore", "doc", "angularj", "org", "allow", "robot", "partial", "but", "prevent", "inde\u2026"], "B_title": "test(jQuery): test not firing $destroy on jQuery.cleanData with jQuery UI", "B_clean_title": ["test", "jqueri", "queri", "test", "not", "fire", "destroy", "jqueri", "cleandata", "queri", "clean", "data", "jqueri", "queri", "ui"], "A_body": "\u2026xing\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["\u2026xing", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "So far it wasn't tested that Angular's logic for skipping it triggering\nthe $destroy event on jQuery.cleanData in the replaceWith internal function\nworks correctly when Angular is not the last one to patch the cleanData method\n(e.g. if jQuery UI does the patching later). This commits adds the relevant\ntest.\n\nRef #8486\n\ncc @IgorMinar\n", "B_clean_body": ["so", "far", "it", "wa", "n't", "test", "that", "angular", "'s", "logic", "skip", "it", "trigger", "destroy", "event", "jqueri", "cleandata", "queri", "clean", "data", "replacewith", "replac", "intern", "function", "work", "correctli", "when", "angular", "not", "last", "one", "patch", "cleandata", "clean", "data", "method", "jqueri", "queri", "ui", "patch", "later", "thi", "commit", "add", "relev", "test", "ref", "8486", "cc", "igorminar", "igor", "minar"], "title_sim": [-0.006859016400028837], "body_sim": [0.17137335314146268], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1274}, {"A_title": "feat($compile): add more lifecycle hooks to directive controllers", "A_clean_title": ["feat", "compil", "add", "more", "lifecycl", "hook", "direct", "control"], "B_title": "docs(guide/decorators): add decorator guide", "B_clean_title": ["doc", "guid", "decor", "add", "decor", "guid"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFeature\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nMissing lifecycle hooks for directive controllers\n\n**What is the new behavior (if this is a feature change)?**\n\nAdd these lifecycle hooks\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis change adds in the following new lifecycle hooks, which map in some\nway to those in Angular 2:\n- `$onChanges(changesObj)` - Called whenever one-way bindings are updated. The `changesObj` is a hash whose keys\n  are the names of the bound properties that have changed, and the values are an object of the form\n  `{ currentValue: ..., previousValue: ... }`. Use this hook to trigger updates within a component such as\n  cloning the bound value to prevent accidental mutation of the outer value.\n- `$onDestroy` - Called on a controller when its containing scope is destroyed. Use this hook for releasing\n  external resources, watches and event handlers.\n- `$afterViewInit` - Called after this controller's element and its children been linked. Similar to the post-link\n  function this hook can be used to set up DOM event handlers and do direct DOM manipulation.\n  Note that child elements that contain `templateUrl` directives will not have been compiled and linked since\n  they are waiting for their template to load asynchronously and their own compilation and linking has been\n  suspended until that occurs.\n\nCloses #14127\nCloses #14030\nCloses #14020\nCloses #13991\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "miss", "lifecycl", "hook", "direct", "control", "**what", "new", "behavior", "thi", "featur", "chang", "add", "these", "lifecycl", "hook", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "chang", "add", "follow", "new", "lifecycl", "hook", "which", "map", "some", "way", "those", "angular", "onchang", "chang", "changesobj", "chang", "obj", "call", "whenev", "one", "way", "bind", "are", "updat", "changesobj", "chang", "obj", "hash", "whose", "key", "are", "name", "bound", "properti", "that", "have", "chang", "valu", "are", "object", "form", "currentvalu", "current", "valu", "previousvalu", "previou", "valu", "use", "thi", "hook", "trigger", "updat", "within", "compon", "such", "as", "clone", "bound", "valu", "prevent", "accident", "mutat", "outer", "valu", "ondestroy", "destroy", "call", "control", "when", "it", "contain", "scope", "destroy", "use", "thi", "hook", "releas", "extern", "resourc", "watch", "event", "handler", "afterviewinit", "after", "view", "init", "call", "after", "thi", "control", "'s", "element", "it", "children", "been", "link", "similar", "post", "link", "function", "thi", "hook", "use", "set", "up", "dom", "event", "handler", "direct", "dom", "manipul", "note", "that", "child", "element", "that", "contain", "templateurl", "templat", "url", "direct", "will", "not", "have", "been", "compil", "link", "sinc", "they", "are", "wait", "their", "templat", "load", "asynchron", "their", "own", "compil", "link", "ha", "been", "suspend", "until", "that", "occur", "close", "14127", "close", "14030", "close", "14020", "close", "13991"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update.\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere currently is no guide for decorators.\n\n**What is the new behavior (if this is a feature change)?**\n\nAdd a guide document for decorators\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n- explain decorators and how they are implemented in angular\n- explain how different types of services can be selected\n- explain `$delegate` objects and how they differ between services\n- warn of the risks/caveats of `$delegate` modification\n- note the exposure of `decorator` through the module api\n- show an example of decorating a core service\n- show an example of decorating a core directive\n- show an example of decorating a core filter\n\ncloses #12163\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "current", "no", "guid", "decor", "**what", "new", "behavior", "thi", "featur", "chang", "add", "guid", "document", "decor", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "explain", "decor", "how", "they", "are", "implement", "angular", "explain", "how", "differ", "type", "servic", "select", "explain", "deleg", "object", "how", "they", "differ", "between", "servic", "warn", "risk", "caveat", "deleg", "modif", "note", "exposur", "decor", "through", "modul", "api", "show", "exampl", "decor", "core", "servic", "show", "exampl", "decor", "core", "direct", "show", "exampl", "decor", "core", "filter", "close", "12163"], "title_sim": [0.07092339080152979], "body_sim": [0.6899000919336293], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 14}, {"A_title": "fix($compile): correctly handle `null`/`undefined` href `attrs.$set()`", "A_clean_title": ["fix", "compil", "correctli", "handl", "null", "undefin", "href", "attr", "set"], "B_title": "fix($sce): do not assume $document[0] exists", "B_clean_title": ["fix", "sce", "not", "assum", "document", "exist"], "A_body": "Accidentally broken while backporting #14890.\r\n\r\nSince #14890, `$$sanitizeUri()` can no longer handle `null`/`undefined` values.\r\nIn 1.7.x, there are no such calls.\r\nIn 1.6.x, there is still one such calls inside `Attributes.$set()`, so it needs to be adjusted accordingly.", "A_clean_body": ["accident", "broken", "while", "backport", "14890", "sinc", "14890", "sanitizeuri", "sanit", "uri", "no", "longer", "handl", "null", "undefin", "valu", "there", "are", "no", "such", "call", "there", "still", "one", "such", "call", "insid", "attribut", "set", "so", "it", "need", "adjust", "accordingli"], "B_body": "this is important so that people can mock $window without having to add stuff that angular uses internally into it\n\nCloses #9661\n", "B_clean_body": ["thi", "import", "so", "that", "peopl", "mock", "window", "without", "have", "add", "stuff", "that", "angular", "use", "intern", "into", "it", "close", "9661"], "title_sim": [0.03828157769694976], "body_sim": [0.1749334439929287], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1266}, {"A_title": "refactor($injector): remove the Chrome stringification hack", "A_clean_title": ["refactor", "injector", "remov", "chrome", "stringif", "hack"], "B_title": "test(modules): fix module tests which got disabled by ngMobile", "B_clean_title": ["test", "modul", "fix", "modul", "test", "which", "got", "disabl", "by", "ngmobil", "ng", "mobil"], "A_body": "The Chrome stringification hack added in afcedff34c8a44dda0d558d9d6337962f5f03d7b\r\nis no longer needed. I verified that both of the commented out tests pass\r\non Chrome 56.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's a workaround in place for Chrome 50-51. Current stable version is 56.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["chrome", "stringif", "hack", "ad", "afcedff34c8a44dda0d558d9d6337962f5f03d7b", "no", "longer", "need", "verifi", "that", "both", "comment", "out", "test", "pass", "chrome", "56", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "workaround", "place", "chrome", "50", "51", "current", "stabl", "version", "56", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "When ngMobile was merged in, we accidentaly included angular-scenario.js\nin the test file set for modules. Loading this file overrode jasmine's\n`it` and `describe` global functions which essentially disabled all of\n~200 unit tests for wrapped modules.\n\nThis change refactors the code to run the wrapped module tests.\n\nI had to extract browserTrigger from scenario runner in order to achieve\nthis without code duplication.\n", "B_clean_body": ["when", "ngmobil", "ng", "mobil", "wa", "merg", "we", "accidentali", "includ", "angular", "scenario", "js", "test", "file", "set", "modul", "load", "thi", "file", "overrod", "jasmine'", "it", "describ", "global", "function", "which", "essenti", "disabl", "all", "~200", "unit", "test", "wrap", "modul", "thi", "chang", "refactor", "code", "run", "wrap", "modul", "test", "had", "extract", "browsertrigg", "browser", "trigger", "scenario", "runner", "order", "achiev", "thi", "without", "code", "duplic"], "title_sim": [-0.004026971511471047], "body_sim": [0.2035399222431406], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1384}, {"A_title": "fix(ngMockE2E): ensure that mocked $httpBackend uses correct $browser", "A_clean_title": ["fix", "ngmocke2", "ng", "mock", "e2e", "ensur", "that", "mock", "httpbackend", "http", "backend", "use", "correct", "browser"], "B_title": "test($sanitize): exclude elclob test in Edge 17", "B_clean_title": ["test", "sanit", "exclud", "elclob", "test", "edg", "17"], "A_body": "The fix from #13124 enabled ngMock and ngMockE2E to work together but\r\ndid it in a way that meant that the \"real\" `$httpBackend` service that\r\nwas used in pass-through depended upon a different `$browser` service\r\nto the rest of the app.\r\n\r\nThis broke Protractor since it watches the `$browser` for outstanding\r\nrequests and the pass through requests were being tracked by the wrong\r\n`$browser` instance.\r\n\r\nCloses #15593\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["fix", "13124", "enabl", "ngmock", "ng", "mock", "ngmocke2", "ng", "mock", "e2e", "work", "togeth", "but", "did", "it", "way", "that", "meant", "that", "real", "httpbackend", "http", "backend", "servic", "that", "wa", "use", "pass", "through", "depend", "upon", "differ", "browser", "servic", "rest", "app", "thi", "broke", "protractor", "sinc", "it", "watch", "browser", "outstand", "request", "pass", "through", "request", "were", "be", "track", "by", "wrong", "browser", "instanc", "close", "15593", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "We don't exclude Edge completely to know if the bug has been fixed\r\nin the next version\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["we", "n't", "exclud", "edg", "complet", "know", "bug", "ha", "been", "fix", "next", "version", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.043152882383935894], "body_sim": [0.8443777845772982], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 478}, {"A_title": "docs($interpolateProvider): document XSS in $interpolate", "A_clean_title": ["doc", "interpolateprovid", "interpol", "provid", "document", "xss", "interpol"], "B_title": "chore: update jasmine-core to 2.5.2", "B_clean_title": ["chore", "updat", "jasmin", "core"], "A_body": "`$interpolateProvider.startSymbol` & friends are often used dangerously, to embed Angular templating in other templating languages. This change documents that that is a very dangerous practice.\n", "A_clean_body": ["interpolateprovid", "startsymbol", "interpol", "provid", "start", "symbol", "friend", "are", "often", "use", "danger", "emb", "angular", "templat", "other", "templat", "languag", "thi", "chang", "document", "that", "that", "veri", "danger", "practic"], "B_body": "This might resolve a Firefox test issue.\r\nLatest jasmine (2.6.2) has problems with some browsers, see here:\r\nhttps://github.com/jasmine/jasmine/issues/1327\r\n", "B_clean_body": ["thi", "might", "resolv", "firefox", "test", "issu", "latest", "jasmin", "ha", "problem", "some", "browser", "see", "here", "http", "github", "com", "jasmin", "jasmin", "issu", "1327"], "title_sim": [0.03344225363993471], "body_sim": [0.23287453020554358], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 594}, {"A_title": "test(*): run class-related tests everywhere; fix eval syntax", "A_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "B_title": "fix($location): prevent infinite digest with IDN urls in Edge", "B_clean_title": ["fix", "locat", "prevent", "infinit", "digest", "idn", "url", "edg"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFix\n\n**What is the current behavior? (You can also link to an open issue here)**\nInternationalized Domain Name Urls (IDN), e.g. with an Umlaut, in Edge lead to an infinite digest on page load.\n\n**What is the new behavior (if this is a feature change)?**\nNo Infdig\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\nFixes #15217\n\nNote:\nWe don't test on Edge yet, but I've tested this locally with the https://github.com/nickmccurdy/karma-edge-launcher \n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "internation", "domain", "name", "url", "idn", "umlaut", "edg", "lead", "infinit", "digest", "page", "load", "**what", "new", "behavior", "thi", "featur", "chang", "no", "infdig", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "fix", "15217", "note", "we", "n't", "test", "edg", "yet", "but", "'ve", "test", "thi", "local", "http", "edg", "launcher", "github", "com", "nickmccurdi", "karma"], "title_sim": [0.041795329340982235], "body_sim": [0.8625245780211339], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 208}, {"A_title": "fix(ngMessage): make ngMessage work with ngBind", "A_clean_title": ["fix", "ngmessag", "ng", "messag", "make", "ngmessag", "ng", "messag", "work", "ngbind", "ng", "bind"], "B_title": "fix($resource): don't use $parse for @dotted.member", "B_clean_title": ["fix", "resourc", "n't", "use", "pars", "dot", "member"], "A_body": "Fixes #8089 \n\n(I'm not actually sure why this works tbh)\n", "A_clean_body": ["fix", "8089", "'m", "not", "actual", "sure", "whi", "thi", "work", "tbh"], "B_body": "params and paramDefaults support looking up the parameter value from the\ndata object.  The syntax for that is `@nested.property.name`.\nCurrently, $resource uses $parse to do this.  This is too liberal\n(you can use values like `@a=b` or `@a | filter` and have it work -\nwhich doesn't really make sense).  It also puts up a dependency on\n$parse which is has restrictions to secure expressions used in\ntemplates.  The value here, though a string, is specified in Javascript\ncode and shouldn't have those restrictions.\n", "B_clean_body": ["param", "paramdefault", "param", "default", "support", "look", "up", "paramet", "valu", "data", "object", "syntax", "that", "nest", "properti", "name", "current", "resourc", "use", "pars", "thi", "thi", "too", "liber", "you", "use", "valu", "like", "a=b", "or", "filter", "have", "it", "work", "which", "n't", "realli", "make", "sens", "it", "also", "put", "up", "depend", "pars", "which", "ha", "restrict", "secur", "express", "use", "templat", "valu", "here", "though", "string", "specifi", "javascript", "code", "n't", "have", "those", "restrict"], "title_sim": [0.08285484288002129], "body_sim": [0.1354694421874799], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01832116017137142, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 702}, {"A_title": "Revert \"fix($parse): standardize one-time literal vs non-literal and interceptors\"", "A_clean_title": ["revert", "fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "B_title": "docs(*): don't hide results for middle-clicks", "B_clean_title": ["doc", "n't", "hide", "result", "middl", "click"], "A_body": "Reverts 60394a9d91dad8932fa900af7c8529837f1d4557 to fix #15905 in 1.6. Currently plan is to NOT revert in 1.7.\r\n\r\nFixes #15905 ", "A_clean_body": ["revert", "60394a9d91dad8932fa900af7c8529837f1d4557", "fix", "15905", "current", "plan", "not", "revert", "fix", "15905"], "B_body": "Middle-clicking opens a link in a new tab; it shouldn't close the results list\r\nas the user may want to open more of those links.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nMiddle-clicking on a link in the results list (which opens a link in a new tab) closes the list.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nList is kept open in such a case.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["middl", "click", "open", "link", "new", "tab", "it", "n't", "close", "result", "list", "as", "user", "may", "want", "open", "more", "those", "link", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "middl", "click", "link", "result", "list", "which", "open", "link", "new", "tab", "close", "list", "**what", "new", "behavior", "thi", "featur", "chang", "list", "kept", "open", "such", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.005614014139256978], "body_sim": [0.28416195200519395], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01405069442546451, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 141}, {"A_title": "chore(npm): publish artifacts to npm", "A_clean_title": ["chore", "npm", "publish", "artifact", "npm"], "B_title": "refactor($interpolate): remove unnecessary else", "B_clean_title": ["refactor", "interpol", "remov", "unnecessari"], "A_body": "Note that there are still a few pending tasks before this can land, namely getting permissions for all of the package names on npm:\n- ~~[angular](https://www.npmjs.org/package/angular)~~ \u2013 got it. Thanks @bclinkinbeard!\n- ~~[angular-animate](https://www.npmjs.org/package/angular-animate)~~ \u2013 got it. thanks @pitbeast!\n- ~~[angular-cookies](https://www.npmjs.org/package/angular-cookies)~~ \u2013 got it. Thanks @petermelias!\n- ~~[angular-mocks](https://www.npmjs.org/package/angular-mocks)~~ \u2013 got it. Thanks @zizzamia!\n- ~~[angular-route](https://www.npmjs.org/package/angular-route)~~ \u2013 got it. Thanks @mljsimone!\n- ~~[angular-resource](https://www.npmjs.org/package/angular-resource)~~ \u2013 got it. Thanks @roylines!\n- ~~[angular-sanitize](https://www.npmjs.org/package/angular-sanitize)~~ \u2013 got it. Thanks @akalinovski!\n\nIf you own one of these packages, you can help by adding user \"angularcore\" to the package\n### unclaimed:\n- angular-aria\n- angular-i18n\n- angular-loader\n- angular-scenario\n- angular-touch\n- angular-messages\n\n~~I also still need to add `package.json` for each `bower-angular-*` repo (since that's how we'll be publishing these artifacts).~~ done!\n\nCloses #2877 \n", "A_clean_body": ["note", "that", "there", "are", "still", "few", "pend", "task", "befor", "thi", "land", "name", "get", "permiss", "all", "packag", "name", "npm", "angular", "http", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "bclinkinbeard", "angular", "anim", "http", "anim", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "pitbeast", "angular", "cooki", "http", "cooki", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "petermelia", "angular", "mock", "http", "mock", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "zizzamia", "angular", "rout", "http", "rout", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "mljsimon", "angular", "resourc", "http", "resourc", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "roylin", "angular", "sanit", "http", "sanit", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "akalinovski", "you", "own", "one", "these", "packag", "you", "help", "by", "ad", "user", "angularcor", "packag", "unclaim", "angular", "aria", "angular", "i18n", "angular", "loader", "angular", "scenario", "angular", "touch", "angular", "messag", "~~i", "also", "still", "need", "add", "packag", "json", "each", "bower", "angular", "repo", "sinc", "that", "'s", "how", "we", "'ll", "publish", "these", "artifact", "done", "close", "2877"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nCleaner code.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "cleaner", "code", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.002560845515729259], "body_sim": [0.2574651562549192], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 826}, {"A_title": "refactor($compile): remove unnecessary try/catch", "A_clean_title": ["refactor", "compil", "remov", "unnecessari", "tri", "catch"], "B_title": "(cherry-pick) fix($browser): prevent infinite digests when clearing the hash of a url", "B_clean_title": ["cherri", "pick", "fix", "browser", "prevent", "infinit", "digest", "when", "clear", "hash", "url"], "A_body": "I don't see anything in there that could throw...\n", "A_clean_body": ["n't", "see", "anyth", "there", "that", "could", "throw"], "B_body": "By using `location.hash` to update the current browser location when only\nthe hash has changed, we prevent the browser from attempting to reload.\n\nCloses #9629\nCloses #9635\nCloses #10228\nCloses #10308\n", "B_clean_body": ["by", "locat", "hash", "updat", "current", "browser", "locat", "when", "onli", "hash", "ha", "chang", "we", "prevent", "browser", "attempt", "reload", "close", "9629", "close", "9635", "close", "10228", "close", "10308"], "title_sim": [0.012266318294783527], "body_sim": [0.03730818870666316], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.012983385923514322, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 324}, {"A_title": "refactor($parse): move duplicate $parse interpreter/compiler logic into common location", "A_clean_title": ["refactor", "pars", "move", "duplic", "pars", "interpret", "compil", "logic", "into", "common", "locat"], "B_title": "feat(security): explicitly whitelist URL schemes for bootstrap.", "B_clean_title": ["feat", "secur", "explicitli", "whitelist", "url", "scheme", "bootstrap"], "A_body": "... and deleted a couple other unused things.", "A_clean_body": ["delet", "coupl", "other", "unus", "thing"], "B_body": "Many browsers have some extension URL scheme. It is unclear how many of\r\nthose have the security issue of allowing parser-inserted loads of\r\nextension URLs.\r\n\r\nTo be conservative, this code whitelists the URL schemes that are known\r\nto be subject to CSP, i.e. the ones that are expected and safe.\r\n\r\nNote: there is no change in tests as behavior does not change for any known URL.", "B_clean_body": ["mani", "browser", "have", "some", "extens", "url", "scheme", "it", "unclear", "how", "mani", "those", "have", "secur", "issu", "allow", "parser", "insert", "load", "extens", "url", "ur", "ls", "conserv", "thi", "code", "whitelist", "url", "scheme", "that", "are", "known", "subject", "csp", "one", "that", "are", "expect", "safe", "note", "there", "no", "chang", "test", "as", "behavior", "not", "chang", "ani", "known", "url"], "title_sim": [0.0534072594712537], "body_sim": [0.09379461784461357], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 118}, {"A_title": "docs(ngRepeat): I added the phrase \"and by age\" on line 236", "A_clean_title": ["doc", "ngrepeat", "ng", "repeat", "ad", "phrase", "by", "age", "line", "236"], "B_title": "fix(ngMessages): prevent race condition with ngAnimate", "B_clean_title": ["fix", "ngmessag", "ng", "messag", "prevent", "race", "condit", "nganim", "ng", "anim"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo change in behavior introduced \n\n**What is the new behavior (if this is a feature change)?**\n\nNo change in behavior introduced\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example seems to also be filtering by age. It threw me off a bit because I was getting results when I entered numbers in the input field.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "chang", "behavior", "introduc", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "behavior", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "seem", "also", "filter", "by", "age", "it", "threw", "me", "off", "bit", "becaus", "wa", "get", "result", "when", "enter", "number", "input", "field"], "B_body": "If `ngMessage` tried to add a message back in that was about to be removed\nafter an animation, the NgMessageController got confused and tried to detach\nthe newly added message, when the pending node was destroyed.\n\nThis change applies a unique `attachId` to the message object and its DOM\nnode when it is attached. This is then checked when a DOM node is being\ndestroyed to prevent unwanted calls to `detach`.\n\nCloses #12856\n", "B_clean_body": ["ngmessag", "ng", "messag", "tri", "add", "messag", "back", "that", "wa", "about", "remov", "after", "anim", "ngmessagecontrol", "ng", "messag", "control", "got", "confus", "tri", "detach", "newli", "ad", "messag", "when", "pend", "node", "wa", "destroy", "thi", "chang", "appli", "uniqu", "attachid", "attach", "id", "messag", "object", "it", "dom", "node", "when", "it", "attach", "thi", "then", "check", "when", "dom", "node", "be", "destroy", "prevent", "unwant", "call", "detach", "close", "12856"], "title_sim": [0.269586497130408], "body_sim": [0.2995498979602917], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 330}, {"A_title": "docs($http): add a note about modifying data in transformRequest", "A_clean_title": ["doc", "http", "add", "note", "about", "modifi", "data", "transformrequest", "transform", "request"], "B_title": "fix(ng-bind-html): watch string value instead of wrapper", "B_clean_title": ["fix", "ng", "bind", "html", "watch", "string", "valu", "instead", "wrapper"], "A_body": "- **What kind of change does this PR introduce?** (Bug fix, feature, docs update, ...)\n  docs update\n- **What is the current behavior?** (You can also link to an open issue here)\n  See #12468\n\nCloses #12468\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "12468", "close", "12468"], "B_body": "Ref: https://github.com/angular/angular.js/pull/4045\n\nI have this sinking feeling that support this use case sort of\nencourages binding to function that blindly trust some html.  For now,\nI'm fixing the issue while I think about the use cases some more.\n\nIn the case of a function that performs any non-trivial work before\nwrapping the value (e.g. the showdown filter in issue #3980, or the\nbinding to a simply wrapper function in issue #3932 if it did anything\nmeaty), this fix makes it \"work\" - but performance is going to suck -\nyou should bind to some other thing on scope that watches the actual\nsource and adjusts itself when that changes (e.g. the showdown filter.)\nFor the case of the wrapper in #3932, if one isn't performing\nsanitization or some such thing - then you the developer has insight\ninto why that value is safe in that particular context - and it should\nbe available simply by name and not as a result of a function taking any\narbitrary input to make auditing of security a little saner.\n\nCloses #3932, #3980\n", "B_clean_body": ["ref", "http", "github", "com", "angular", "angular", "js", "pull", "4045", "have", "thi", "sink", "feel", "that", "support", "thi", "use", "case", "sort", "encourag", "bind", "function", "that", "blindli", "trust", "some", "html", "now", "'m", "fix", "issu", "while", "think", "about", "use", "case", "some", "more", "case", "function", "that", "perform", "ani", "non", "trivial", "work", "befor", "wrap", "valu", "showdown", "filter", "issu", "3980", "or", "bind", "simpli", "wrapper", "function", "issu", "3932", "it", "did", "anyth", "meati", "thi", "fix", "make", "it", "work", "but", "perform", "go", "suck", "you", "bind", "some", "other", "thing", "scope", "that", "watch", "actual", "sourc", "adjust", "itself", "when", "that", "chang", "showdown", "filter", "case", "wrapper", "3932", "one", "n't", "perform", "sanit", "or", "some", "such", "thing", "then", "you", "develop", "ha", "insight", "into", "whi", "that", "valu", "safe", "that", "particular", "context", "it", "avail", "simpli", "by", "name", "not", "as", "result", "function", "take", "ani", "arbitrari", "input", "make", "audit", "secur", "littl", "saner", "close", "3932", "3980"], "title_sim": [0.010833243310532453], "body_sim": [0.1544401154298518], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07585232728937032, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 886}, {"A_title": "docs(contributing): fix indentation for proper Markdown syntax", "A_clean_title": ["doc", "contribut", "fix", "indent", "proper", "markdown", "syntax"], "B_title": "fix($http): throw error if success and error methods do not receive a fu...", "B_clean_title": ["fix", "http", "throw", "error", "success", "error", "method", "not", "receiv", "fu"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nMarkdown isn't displayed properly.\n\n**What is the new behavior (if this is a feature change)?**\nMarkdown is displayed properly.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "markdown", "n't", "display", "properli", "**what", "new", "behavior", "thi", "featur", "chang", "markdown", "display", "properli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "...nction\n\nCloses #11330\n", "B_clean_body": ["nction", "close", "11330"], "title_sim": [0.000630692367208102], "body_sim": [-0.004272915330101333], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 511}, {"A_title": "chore(jenkins): do not publish to code.angularjs.org snapshot", "A_clean_title": ["chore", "jenkin", "not", "publish", "code", "angularj", "org", "snapshot"], "B_title": "chore(*): remove manualLowercase & manualUppercase functions", "B_clean_title": ["chore", "remov", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function"], "A_body": "While the firewall continues to block the update ports\r\nwe will not try to publish there.\r\n", "A_clean_body": ["while", "firewal", "continu", "block", "updat", "port", "we", "will", "not", "tri", "publish", "there"], "B_body": "The `manualLowercase` & `manualUppercase` functions were inspired by Google Caja\r\ncode. Caja is written in Java, though, where problems with `toLowerCase`\r\nworking differently in Turkish locale are well known[1]. In JavaScript\r\n`String#toLowerCase` is defined in the ECMAScript spec and all implementations\r\nare required to lowercase I in the same way, regardless of the current locale.\r\nDifferences may (and do) happen only in `String#toLocaleLowerCase`.\r\n\r\nOther libraries doing string normalization, like jQuery or DOMPurify don't\r\napply special lowercasing logic in a Turkish environment.\r\n\r\nTherefore, the `manualLowercase` & `manualUppercase` logic is dead code in\r\nAngularJS and can be removed.\r\n\r\nAlso, the `manualLowercase` & `manualUppercase` functions are incomplete; they\r\nonly lowercase ASCII characters which is different to native\r\n`String#toLowerCase`. Since those functions are used in many places in the\r\nlibrary, they would break a lot of code. For example, the lowercase filter would\r\nnot lowercase \u03a9 to \u03c9 but leave it as \u03a9.\r\n\r\n[1] https://garygregory.wordpress.com/2015/11/03/java-lowercase-conversion-turkey/\r\n\r\nRef #11387\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDead code removal.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe `manualLowercase` & `manualUppercase` functions are defined & used if `'I'.toLowerCase() !== 'i'`.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n`String#toLowerCase` is used everywhere.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function", "were", "inspir", "by", "googl", "caja", "code", "caja", "written", "java", "though", "where", "problem", "tolowercas", "lower", "case", "work", "differ", "turkish", "local", "are", "well", "known", "javascript", "java", "script", "string", "tolowercas", "lower", "case", "defin", "ecmascript", "ecma", "script", "spec", "all", "implement", "are", "requir", "lowercas", "same", "way", "regardless", "current", "local", "differ", "may", "happen", "onli", "string", "tolocalelowercas", "local", "lower", "case", "other", "librari", "do", "string", "normal", "like", "jqueri", "queri", "or", "dompurifi", "dom", "purifi", "don't", "appli", "special", "lowercas", "logic", "turkish", "environ", "therefor", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "logic", "dead", "code", "angularj", "angular", "js", "remov", "also", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function", "are", "incomplet", "they", "onli", "lowercas", "ascii", "charact", "which", "differ", "nativ", "string", "tolowercas", "lower", "case", "sinc", "those", "function", "are", "use", "mani", "place", "librari", "they", "would", "break", "lot", "code", "exampl", "lowercas", "filter", "would", "not", "lowercas", "but", "leav", "it", "as", "http", "lowercas", "convers", "wordpress", "turkey", "garygregori", "com", "2015", "11", "03", "java", "ref", "11387", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "dead", "code", "remov", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function", "are", "defin", "use", "i'", "tolowercas", "lower", "case", "**what", "new", "behavior", "thi", "featur", "chang", "string", "tolowercas", "lower", "case", "use", "everywher", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.5670736639973079], "body_sim": [0.17842239640220328], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 61}, {"A_title": "only use window.jQuery if it supports required jQuery.fn.on", "A_clean_title": ["onli", "use", "window", "jqueri", "queri", "it", "support", "requir", "jqueri", "fn", "queri"], "B_title": "fix($rootScope): fix potential memory leak when removing scope listeners (v2)", "B_clean_title": ["fix", "rootscop", "root", "scope", "fix", "potenti", "memori", "leak", "when", "remov", "scope", "listen", "v2"], "A_body": "This is a safe and simple fix to the legacy jQuery situation referenced in #2163 until the API in issue #608 is refined and implemented.\n", "A_clean_body": ["thi", "safe", "simpl", "fix", "legaci", "jqueri", "queri", "situat", "referenc", "2163", "until", "api", "issu", "608", "refin", "implement"], "B_body": "This is the alternative to #16161 that we discussed.\r\n\r\nThis simplifies the listener cleanup and avoids creating sparse listener arrays (unlike #16161) but introduces a new restriction that disallows recursive event $broadcast/$emit-ing.  We could remove this restriction but it would complicate everything event related by requiring a stack for the index.", "B_clean_body": ["thi", "altern", "16161", "that", "we", "discuss", "thi", "simplifi", "listen", "cleanup", "avoid", "creat", "spars", "listen", "array", "unlik", "16161", "but", "introduc", "new", "restrict", "that", "disallow", "recurs", "event", "broadcast", "emit", "ing", "we", "could", "remov", "thi", "restrict", "but", "it", "would", "complic", "everyth", "event", "relat", "by", "requir", "stack", "index"], "title_sim": [-0.037528226630956896], "body_sim": [0.11282391348820388], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0025295201598484933, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1339}, {"A_title": "docs(guide/Components): add link to documentation for component method", "A_clean_title": ["doc", "guid", "compon", "add", "link", "document", "compon", "method"], "B_title": "chore(doc-gen, docs-app): generate version for stable snapshot", "B_clean_title": ["chore", "doc", "gen", "doc", "app", "gener", "version", "stabl", "snapshot"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDoes not link to API of method which shows all syntaxes\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nLinks to API of method\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "not", "link", "api", "method", "which", "show", "all", "syntax", "**what", "new", "behavior", "thi", "featur", "chang", "link", "api", "method", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "The \"stable snapshot\" is based on the latest commit on the current stable\r\nbranch, i.e. a preview of the next patch version.\r\n\r\nNext thing:\r\n- update the Firebase deployment so that on the branch with distTag = latest gets deployed to docs.angularjs.org and as to gcs as snapshot-stable\r\n\r\n\r\n", "B_clean_body": ["stabl", "snapshot", "base", "latest", "commit", "current", "stabl", "branch", "preview", "next", "patch", "version", "next", "thing", "updat", "firebas", "deploy", "so", "that", "branch", "disttag", "dist", "tag", "latest", "get", "deploy", "doc", "angularj", "org", "as", "gc", "as", "snapshot", "stabl"], "title_sim": [0.17100889021755739], "body_sim": [0.26280880229658216], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 198}, {"A_title": "WIP: Scroll to anchor", "A_clean_title": ["wip", "scroll", "anchor"], "B_title": "fix(formatNumber): better corner case handling", "B_clean_title": ["fix", "formatnumb", "format", "number", "better", "corner", "case", "handl"], "A_body": "We need to find a name for this service...\n\nIt's actually only the last commit, I put it on the top of Misko's branch...\n", "A_clean_body": ["we", "need", "find", "name", "thi", "servic", "it", "'s", "actual", "onli", "last", "commit", "put", "it", "top", "misko", "'s", "branch"], "B_body": "The idea here is that we actually parse the input number ourselves and then do the rounding ourselves manually. This allows us more control and reliability on the output for corner case numbers.\n\nCloses #8674\nCloses #12709 \nCloses #8705 \nCloses #12707 \nCloses #10246\nCloses #10252\n", "B_clean_body": ["idea", "here", "that", "we", "actual", "pars", "input", "number", "ourselv", "then", "round", "ourselv", "manual", "thi", "allow", "us", "more", "control", "reliabl", "output", "corner", "case", "number", "close", "8674", "close", "12709", "close", "8705", "close", "12707", "close", "10246", "close", "10252"], "title_sim": [-0.18514811921150875], "body_sim": [0.06783446691847124], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.015748301812402943, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1474}, {"A_title": "docs(app): increments year", "A_clean_title": ["doc", "app", "increment", "year"], "B_title": "feat(ngModelOptions): allow to debounce 'default' only, and add catch\u2026", "B_clean_title": ["feat", "ngmodelopt", "ng", "model", "option", "allow", "debounc", "'default", "onli", "add", "catch\u2026"], "A_body": "Increments the year from 2014 to 2015.\n", "A_clean_body": ["increment", "year", "2014", "2015"], "B_body": "\u2026-all\r\n\r\nBREAKING CHANGE:\r\n\r\nthe 'default' key in 'debounce' now only debounces the default event, i.e. the event\r\nthat is added as an update trigger by the different input directives automatically.\r\n\r\nPreviously, it also applied to other update triggers defined in 'updateOn' that\r\ndid not have a corresponding key in the 'debounce'.\r\n\r\nThis behavior is now supported via a special wildcard / catch-all key: '*'.\r\n\r\nSee the following example:\r\n\r\nPre-1.7:\r\n'mouseup' is debounced by 500 milliseconds because 'default' is applied.\r\n```\r\nng-model-options=\"{\r\n  updateOn: 'default blur mouseup',\r\n  debounce: { 'default': 500, 'blur': 0 }\r\n}\r\n```\r\n\r\n1.7:\r\n'mouseup' is debounced by 1000 milliseconds because '*' is applied.\r\n```\r\nng-model-options=\"{\r\n  updateOn: 'default blur mouseup',\r\n  debounce: { 'default': 500, 'blur': 0, '*': 1000 }\r\n}\r\n```\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsee #15411\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nsee above\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYES, see above\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["all", "break", "chang", "'default", "key", "'debounc", "now", "onli", "debounc", "default", "event", "event", "that", "ad", "as", "updat", "trigger", "by", "differ", "input", "direct", "automat", "previous", "it", "also", "appli", "other", "updat", "trigger", "defin", "'updateon", "'updat", "that", "did", "not", "have", "correspond", "key", "'debounc", "thi", "behavior", "now", "support", "via", "special", "wildcard", "catch", "all", "key", "see", "follow", "exampl", "pre", "'mouseup", "debounc", "by", "500", "millisecond", "becaus", "'default", "appli", "ng", "model", "options=", "updateon", "updat", "'default", "blur", "mouseup", "debounc", "'default", "500", "'blur", "'mouseup", "debounc", "by", "1000", "millisecond", "becaus", "appli", "ng", "model", "options=", "updateon", "updat", "'default", "blur", "mouseup", "debounc", "'default", "500", "'blur", "1000", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "15411", "**what", "new", "behavior", "thi", "featur", "chang", "see", "abov", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "see", "abov", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.06419930727544919], "body_sim": [0.04041382715210862], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1046}, {"A_title": "chore(doc-gen, docs-app): create plnkr examples with correct Angular \u2026", "A_clean_title": ["chore", "doc", "gen", "doc", "app", "creat", "plnkr", "exampl", "correct", "angular"], "B_title": "fix($resource): don't use $parse for @dotted.member", "B_clean_title": ["fix", "resourc", "n't", "use", "pars", "dot", "member"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs-gen / app fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe plnkr examples include the latest stable Angular version instead of the snapshot version when opened from snapshot docs.\n\n**What is the new behavior (if this is a feature change)?**\nFixes the plnkr examples generated from snapshot docs\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\n\u2026version\n\nWhen the docs are based on the snapshot, the plnkr examples must use the snapshot files\nfrom code.angularjs.org\n\nFixes https://github.com/angular/angular.js/issues/15267\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "gen", "app", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "plnkr", "exampl", "includ", "latest", "stabl", "angular", "version", "instead", "snapshot", "version", "when", "open", "snapshot", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "plnkr", "exampl", "gener", "snapshot", "doc", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026version", "when", "doc", "are", "base", "snapshot", "plnkr", "exampl", "must", "use", "snapshot", "file", "code", "angularj", "org", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "15267"], "B_body": "params and paramDefaults support looking up the parameter value from the\ndata object.  The syntax for that is `@nested.property.name`.\nCurrently, $resource uses $parse to do this.  This is too liberal\n(you can use values like `@a=b` or `@a | filter` and have it work -\nwhich doesn't really make sense).  It also puts up a dependency on\n$parse which is has restrictions to secure expressions used in\ntemplates.  The value here, though a string, is specified in Javascript\ncode and shouldn't have those restrictions.\n", "B_clean_body": ["param", "paramdefault", "param", "default", "support", "look", "up", "paramet", "valu", "data", "object", "syntax", "that", "nest", "properti", "name", "current", "resourc", "use", "pars", "thi", "thi", "too", "liber", "you", "use", "valu", "like", "a=b", "or", "filter", "have", "it", "work", "which", "n't", "realli", "make", "sens", "it", "also", "put", "up", "depend", "pars", "which", "ha", "restrict", "secur", "express", "use", "templat", "valu", "here", "though", "string", "specifi", "javascript", "code", "n't", "have", "those", "restrict"], "title_sim": [0.02243698762633863], "body_sim": [0.20994763528717408], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03581748176200551, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1070}, {"A_title": "docs(input[range]): Fix erroneous examples", "A_clean_title": ["doc", "input", "rang", "fix", "erron", "exampl"], "B_title": "Revert ng style regression for 1.3.x", "B_clean_title": ["revert", "ng", "style", "regress"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocumentation update. \n\n**What is the current behavior? (You can also link to an open issue here)**\n\nExamples of input[range] doesn't works well because it use only the `scope.min` value instead of `scope.max`\n\n**What is the new behavior (if this is a feature change)?**\n- When updating min value, it update the min only.\n- When updating max value, it update the max only.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "document", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "input", "rang", "n't", "work", "well", "becaus", "it", "use", "onli", "scope", "min", "valu", "instead", "scope", "max", "**what", "new", "behavior", "thi", "featur", "chang", "when", "updat", "min", "valu", "it", "updat", "min", "onli", "when", "updat", "max", "valu", "it", "updat", "max", "onli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "I know, 1.4 is around the corner, but this should be handled nevertheless.\n", "B_clean_body": ["know", "around", "corner", "but", "thi", "handl", "nevertheless"], "title_sim": [0.054478133932661106], "body_sim": [0.1683484446097004], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 494}, {"A_title": "Fixes to select and ngOptions - \"required\" validation and behavior with empty / unknown option", "A_clean_title": ["fix", "select", "ngoption", "ng", "option", "requir", "valid", "behavior", "empti", "unknown", "option"], "B_title": "fix($location): do not $digest if browser's url changes within $apply", "B_clean_title": ["fix", "locat", "not", "digest", "browser", "'s", "url", "chang", "within", "appli"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfixes\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n- (a) when the unknown option is selected and the select is \"required\", the required error is not set\r\n- (b) ngOptions: when the model is unmatched and an empty option exists, the empty option is always selected, even if the model is not null / undefined.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n- (a) the error is set\r\n- (b) the unknown option is selected if the model is not null / undefined\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nPossibly? For (a), the following situation is possible: The model is programatically set to a value that is no longer in select options, and the select is required. With this patch, the user cannot keep the unmatched value, because of the required error, which considers this value invalid (just realized this, so it's not in the commit message).\r\n\r\nFor (b), it's unlikely that anyone relied on the fact that the empty option is selected instead of the unmatched option - the fixd behavior was also present in regular select since the beginning.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "unknown", "option", "select", "select", "requir", "requir", "error", "not", "set", "ngoption", "ng", "option", "when", "model", "unmatch", "empti", "option", "exist", "empti", "option", "alway", "select", "even", "model", "not", "null", "undefin", "**what", "new", "behavior", "thi", "featur", "chang", "error", "set", "unknown", "option", "select", "model", "not", "null", "undefin", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "follow", "situat", "possibl", "model", "programat", "set", "valu", "that", "no", "longer", "select", "option", "select", "requir", "thi", "patch", "user", "not", "keep", "unmatch", "valu", "becaus", "requir", "error", "which", "consid", "thi", "valu", "invalid", "just", "realiz", "thi", "so", "it", "'s", "not", "commit", "messag", "it", "'s", "unlik", "that", "anyon", "reli", "fact", "that", "empti", "option", "select", "instead", "unmatch", "option", "fixd", "behavior", "wa", "also", "present", "regular", "select", "sinc", "begin", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Chrome (probably other browsers as well) fires 'hashchange' event synchronously, so if you change raw location from within $apply/$digest, we don't want to $apply twice. (It would throw an exception).\n", "B_clean_body": ["chrome", "probabl", "other", "browser", "as", "well", "fire", "'hashchang", "event", "synchron", "so", "you", "chang", "raw", "locat", "within", "appli", "digest", "we", "n't", "want", "appli", "twice", "it", "would", "throw", "except"], "title_sim": [0.06491691306086914], "body_sim": [0.1299500072969138], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.032809254137480634, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1921}, {"A_title": "docs(guide/Providers): Remove redundant apology", "A_clean_title": ["doc", "guid", "provid", "remov", "redund", "apolog"], "B_title": "refactor($sniffer): make $sniffer service private", "B_clean_title": ["refactor", "sniffer", "make", "sniffer", "servic", "privat"], "A_body": "There is no longer a service called \"service\", so this is confusing.", "A_clean_body": ["there", "no", "longer", "servic", "call", "servic", "so", "thi", "confus"], "B_body": "This service has been accidentaly documented in the past, it should not be considered\nto be public api.\n\nI'm also removing fallback to Modernizr since we don't need it.\n\nBreaks any app that depends on this service and its fallback to Modernizr, please\nmigrate to custom \"Modernizr\" service:\n\n```\nmodule.value('Modernizr', function() { return Modernizr; });\n```\n", "B_clean_body": ["thi", "servic", "ha", "been", "accidentali", "document", "past", "it", "not", "consid", "public", "api", "'m", "also", "remov", "fallback", "modernizr", "sinc", "we", "n't", "need", "it", "break", "ani", "app", "that", "depend", "thi", "servic", "it", "fallback", "modernizr", "pleas", "migrat", "custom", "modernizr", "servic", "modul", "valu", "'modernizr", "function", "return", "modernizr"], "title_sim": [0.1487604146094496], "body_sim": [0.5852761403854616], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1801}, {"A_title": "Feat input timeformat", "A_clean_title": ["feat", "input", "timeformat"], "B_title": "docs(*): replace master/slave with leader/follower", "B_clean_title": ["doc", "replac", "master", "slave", "leader", "follow"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nBrowser differences when displaying input time and datetime-local\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nOption to adjust the format\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nCloses #10721\r\nCloses #16510 \r\n\r\nThere are two options:\r\n\r\ntimeFormatSeconds can be used to configure if seconds or milliseconds should be displayed in general.\r\ntimeStripEmptySeconds mimics the behavior of Chrome to hide the seconds completely if they are zero.\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browser", "differ", "when", "display", "input", "time", "datetim", "local", "**what", "new", "behavior", "thi", "featur", "chang", "option", "adjust", "format", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "close", "10721", "close", "16510", "there", "are", "two", "option", "timeformatsecond", "time", "format", "second", "use", "configur", "second", "or", "millisecond", "display", "gener", "timestripemptysecond", "time", "strip", "empti", "second", "mimic", "behavior", "chrome", "hide", "second", "complet", "they", "are", "zero"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreviously, the docs made use of `master/slave`, which is offensive.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit removes the usage of these terms and replace them with `leader/follower`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nhttps://github.com/angular/angular.js/issues/16201\r\n\r\nUpdated the docs according to the logged issue. I might have made changes which do not directly use both `master` **and** `slave`, feel free to let me know to undo those changes. I thought it wasn't bad to stay consistent.\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "previous", "doc", "made", "use", "master", "slave", "which", "offens", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "remov", "usag", "these", "term", "replac", "them", "leader", "follow", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "http", "github", "com", "angular", "angular", "js", "issu", "16201", "updat", "doc", "accord", "log", "issu", "might", "have", "made", "chang", "which", "not", "directli", "use", "both", "master", "**and**", "slave", "feel", "free", "let", "me", "know", "undo", "those", "chang", "thought", "it", "wa", "n't", "bad", "stay", "consist"], "title_sim": [0.004318349594752377], "body_sim": [0.8757983743355872], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 276}, {"A_title": "docs($interpolateProvider): document XSS in $interpolate", "A_clean_title": ["doc", "interpolateprovid", "interpol", "provid", "document", "xss", "interpol"], "B_title": "fix($sanitize): sanitize `xml:base` attributes", "B_clean_title": ["fix", "sanit", "sanit", "xml", "base", "attribut"], "A_body": "`$interpolateProvider.startSymbol` & friends are often used dangerously, to embed Angular templating in other templating languages. This change documents that that is a very dangerous practice.\n", "A_clean_body": ["interpolateprovid", "startsymbol", "interpol", "provid", "start", "symbol", "friend", "are", "often", "use", "danger", "emb", "angular", "templat", "other", "templat", "languag", "thi", "chang", "document", "that", "that", "veri", "danger", "practic"], "B_body": "On Firefox there is a XSS vulnerability if a malicious attacker\r\ncan write into the `xml:base` attribute on an SVG anchor.\r\n", "B_clean_body": ["firefox", "there", "xss", "vulner", "malici", "attack", "write", "into", "xml", "base", "attribut", "svg", "anchor"], "title_sim": [0.017579665327856726], "body_sim": [-0.0027689116608473744], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02390328442039386, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 835}, {"A_title": "fix($resource): properly call error callback when resource is called with", "A_clean_title": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call"], "B_title": "feat(ngModel): bind to getters/setters", "B_clean_title": ["feat", "ngmodel", "ng", "model", "bind", "getter", "setter"], "A_body": "fix($resource): properly call error callback when resource is called with two arguments\n", "A_clean_body": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call", "two", "argument"], "B_body": "Currently, you might do this if you want to bind to getters/setters:\n\n> controller\n\n``` javascript\n// ...\n$scope.watch(function () {\n  return myModel.getterSetter();\n}, function (newValue) {\n  $scope.someProp = newValue;\n});\n\n$scope.watch('someProp', function (newValue) {\n  myModel.getterSetter(newValue);\n});\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"someProp\">\n```\n\nThe implementation in this PR changes the semantics of `ngModel` in the following ways:\n\nIf the expression bound to `ngModel` resolves to a function, the function is invoked to get the current value to be expressed in the DOM. When the binding changes, if the expression bound to `ngModel` resolves to a function (at that time) the function is invoked with the new value.\n\nThis means instead, you could do this:\n\n> controller\n\n``` javascript\n// ...\n$scope.myModel = myModel;\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"myModel.getterSetter\">\n```\n\nI like that to end developers, this feels like \"uniform access\" for common cases. I don't like that this means there's a difference in semantics between `ngModel` and expressions elsewhere in Angular.\n\nThis would be a breaking change, but I don't think that this would affect any legitimate use cases. The only case I can think of is if hypothetically, you bind to some property that's originally a function, overwriting it with a string. I can't think of any good reason to write controller code like that.\n\n@IgorMinar suggested a different syntax so that the difference in semantics is obvious. Something like:\n\n``` html\n<input ng-model=\"myModel.getterSetter()\">\n```\n\nI like that this makes the semantics obvious. I don't like that this still violates the \"uniform access principle.\"\n\nCloses #768\n", "B_clean_body": ["current", "you", "might", "thi", "you", "want", "bind", "getter", "setter", "control", "javascript", "scope", "watch", "function", "return", "mymodel", "gettersett", "my", "model", "getter", "setter", "function", "newvalu", "new", "valu", "scope", "someprop", "some", "prop", "newvalu", "new", "valu", "scope", "watch", "'someprop", "'some", "prop", "function", "newvalu", "new", "valu", "mymodel", "gettersett", "my", "model", "getter", "setter", "newvalu", "new", "valu", "templat", "html", "input", "ng", "model=", "someprop", "some", "prop", "implement", "thi", "pr", "chang", "semant", "ngmodel", "ng", "model", "follow", "way", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "function", "invok", "get", "current", "valu", "express", "dom", "when", "bind", "chang", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "at", "that", "time", "function", "invok", "new", "valu", "thi", "mean", "instead", "you", "could", "thi", "control", "javascript", "scope", "mymodel", "my", "model", "mymodel", "my", "model", "templat", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "end", "develop", "thi", "feel", "like", "uniform", "access", "common", "case", "n't", "like", "that", "thi", "mean", "there", "'s", "differ", "semant", "between", "ngmodel", "ng", "model", "express", "elsewher", "angular", "thi", "would", "break", "chang", "but", "n't", "think", "that", "thi", "would", "affect", "ani", "legitim", "use", "case", "onli", "case", "think", "hypothet", "you", "bind", "some", "properti", "that", "'s", "origin", "function", "overwrit", "it", "string", "ca", "n't", "think", "ani", "good", "reason", "write", "control", "code", "like", "that", "igorminar", "igor", "minar", "suggest", "differ", "syntax", "so", "that", "differ", "semant", "obviou", "someth", "like", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "thi", "make", "semant", "obviou", "n't", "like", "that", "thi", "still", "violat", "uniform", "access", "principl", "close", "768"], "title_sim": [0.02476203405237743], "body_sim": [0.10449888146272576], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06335512634084095, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1043}, {"A_title": "Fix docs usage section for directives with void attributes", "A_clean_title": ["fix", "doc", "usag", "section", "direct", "void", "attribut"], "B_title": "chore(*): update all Karma-related packages except Karma", "B_clean_title": ["chore", "updat", "all", "karma", "relat", "packag", "except", "karma"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nImprovement for the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "improv", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["updat", "karma", "chrome", "launcher", "add", "support", "chromeheadless", "chrome", "headless", "chromecanaryheadless", "chrome", "canari", "headless", "launcher", "test", "karma", "start", "karma", "jqlite", "conf", "js", "browsers=chromecanaryheadless", "browsers=chrom", "canari", "headless", "updat", "karma", "firefox", "launcher", "disabl", "multi", "process", "which", "may", "increas", "stabil", "jenkin", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.00985862575819326], "body_sim": [0.9722913450846313], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 159}, {"A_title": "fix($resource): properly call error callback when resource is called with", "A_clean_title": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call"], "B_title": "Fix docs usage section for directives with void attributes", "B_clean_title": ["fix", "doc", "usag", "section", "direct", "void", "attribut"], "A_body": "fix($resource): properly call error callback when resource is called with two arguments\n", "A_clean_body": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call", "two", "argument"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nImprovement for the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "improv", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.03248258141940718], "body_sim": [0.016839342650634765], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.04191396422045272, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2246}, {"A_title": "refactor($animate): use CSS3 transition/animation events instead of $timeouts to track ongoing animations", "A_clean_title": ["refactor", "anim", "use", "css3", "transit", "anim", "event", "instead", "timeout", "track", "ongo", "anim"], "B_title": "fix($parse): properly handle dots at the end of identifiers", "B_clean_title": ["fix", "pars", "properli", "handl", "dot", "at", "end", "identifi"], "A_body": "Closes #3629\nCloses #3874\n", "A_clean_body": ["close", "3629", "close", "3874"], "B_body": "Fixes #4613\nFixes #4912\n", "B_clean_body": ["fix", "4613", "fix", "4912"], "title_sim": [0.009007823998968158], "body_sim": [-0.08379454132040248], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0020646065968760977, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 340}, {"A_title": "chore(ci): remove repeated tests running from Travis build", "A_clean_title": ["chore", "ci", "remov", "repeat", "test", "run", "travi", "build"], "B_title": "docs($compile): remove a mention of preassigning bindings in controllers", "B_clean_title": ["doc", "compil", "remov", "mention", "preassign", "bind", "control"], "A_body": "In b2902446eb41591f5d868846d3c5bad3a888bcba the doce2e tests were moved\ninto the 'unit' test job on Travis, but only half of this change ever made\nit into v1.2.x. This change fixes up the other half, so that the doce2e\ntests are run only once.\n", "A_clean_body": ["b2902446eb41591f5d868846d3c5bad3a888bcba", "doce2", "test", "were", "move", "into", "'unit", "test", "job", "travi", "but", "onli", "half", "thi", "chang", "ever", "made", "it", "into", "v1", "thi", "chang", "fix", "up", "other", "half", "so", "that", "doce2", "test", "are", "run", "onli", "onc"], "B_body": "The deprecation warning is no longer needed as the feature has been removed\r\nin 1.7.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreassigning bindings to controllers is described as deprecated but still working. This feature has been removed so the warning is no longer needed.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["deprec", "warn", "no", "longer", "need", "as", "featur", "ha", "been", "remov", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "preassign", "bind", "control", "describ", "as", "deprec", "but", "still", "work", "thi", "featur", "ha", "been", "remov", "so", "warn", "no", "longer", "need", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.25282667101546974], "body_sim": [0.3078405685786589], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 912}, {"A_title": "refactor($parse): move duplicate $parse interpreter/compiler logic into common location", "A_clean_title": ["refactor", "pars", "move", "duplic", "pars", "interpret", "compil", "logic", "into", "common", "locat"], "B_title": "docs(CONTRIBUTING.md): add note about scope wildcard", "B_clean_title": ["doc", "contribut", "md", "add", "note", "about", "scope", "wildcard"], "A_body": "... and deleted a couple other unused things.", "A_clean_body": ["delet", "coupl", "other", "unus", "thing"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nno hint that `*` is a valid scope -- it hints you could omit the `(...)` bit, but most commits of late don't\n\n**What is the new behavior (if this is a feature change)?**\n\ndocumentation of `*`\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "hint", "that", "valid", "scope", "it", "hint", "you", "could", "omit", "bit", "but", "most", "commit", "late", "don't", "**what", "new", "behavior", "thi", "featur", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [0.01168180594039262], "body_sim": [0.007224088307581292], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 144}, {"A_title": "fix(select): auto-select new option that is marked as selected", "A_clean_title": ["fix", "select", "auto", "select", "new", "option", "that", "mark", "as", "select"], "B_title": "fix($location): support urls with any protocol", "B_clean_title": ["fix", "locat", "support", "url", "ani", "protocol"], "A_body": "When adding a new <option> element, if the DOM of this option element\nstates that the element is marked as `selected`, then select the new\n<option> element\n\nCloses #6828\n\nThis is a new PR based on a wrong merge done at #7136\n", "A_clean_body": ["when", "ad", "new", "option", "element", "dom", "thi", "option", "element", "state", "that", "element", "mark", "as", "select", "then", "select", "new", "option", "element", "close", "6828", "thi", "new", "pr", "base", "wrong", "merg", "done", "at", "7136"], "B_body": "The url used for location parsing was quite strict and did not support\ncustom url schemes like \"chrome-extension://\". With this change the only\nrequirement for scheme is that it doesn't contain \":\" character.\n", "B_clean_body": ["url", "use", "locat", "pars", "wa", "quit", "strict", "did", "not", "support", "custom", "url", "scheme", "like", "chrome", "extens", "thi", "chang", "onli", "requir", "scheme", "that", "it", "n't", "contain", "charact"], "title_sim": [0.00741016310950755], "body_sim": [0.08535567790097294], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 787}, {"A_title": "docs(uppercase): Added an example", "A_clean_title": ["doc", "uppercas", "ad", "exampl"], "B_title": "chore(gitignore): add .agignore", "B_clean_title": ["chore", "gitignor", "add", "agignor"], "A_body": "I saw that the uppercase filter had no example so I decided to add a minimal example to explain how the uppercase filter works.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere is currently no example for the `uppercase` filter, so I added one.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/a\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["saw", "that", "uppercas", "filter", "had", "no", "exampl", "so", "decid", "add", "minim", "exampl", "explain", "how", "uppercas", "filter", "work", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "current", "no", "exampl", "uppercas", "filter", "so", "ad", "one", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "I use a .agignore file to skip the build directory and some other files\nwhile searching using Ag (see\nhttps://github.com/ggreer/the_silver_searcher).\n", "B_clean_body": ["use", "agignor", "file", "skip", "build", "directori", "some", "other", "file", "while", "search", "ag", "see", "http", "github", "silver", "searcher", "com", "ggreer"], "title_sim": [0.0028587613818249987], "body_sim": [0.11543222402504418], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1374}, {"A_title": "Improve module template, add custom installation notes for ngMock", "A_clean_title": ["improv", "modul", "templat", "add", "custom", "instal", "note", "ngmock", "ng", "mock"], "B_title": "refactor($injector): remove the Chrome stringification hack", "B_clean_title": ["refactor", "injector", "remov", "chrome", "stringif", "hack"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n- module install page doesn't mention npm\n- ngMock install page is misleading, as angular-mocks shouldn't be included in application code\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Docs have been added / updated (for bug fixes / features)\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "modul", "instal", "page", "n't", "mention", "npm", "ngmock", "ng", "mock", "instal", "page", "mislead", "as", "angular", "mock", "n't", "includ", "applic", "code", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "B_body": "The Chrome stringification hack added in afcedff34c8a44dda0d558d9d6337962f5f03d7b\r\nis no longer needed. I verified that both of the commented out tests pass\r\non Chrome 56.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's a workaround in place for Chrome 50-51. Current stable version is 56.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["chrome", "stringif", "hack", "ad", "afcedff34c8a44dda0d558d9d6337962f5f03d7b", "no", "longer", "need", "verifi", "that", "both", "comment", "out", "test", "pass", "chrome", "56", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "workaround", "place", "chrome", "50", "51", "current", "stabl", "version", "56", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.02544348025404058], "body_sim": [0.8601924119681253], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 290}, {"A_title": "chore(jenkins): do not publish to code.angularjs.org snapshot", "A_clean_title": ["chore", "jenkin", "not", "publish", "code", "angularj", "org", "snapshot"], "B_title": "chore(*): bump Yarn in Jenkins init-node script", "B_clean_title": ["chore", "bump", "yarn", "jenkin", "init", "node", "script"], "A_body": "While the firewall continues to block the update ports\r\nwe will not try to publish there.\r\n", "A_clean_body": ["while", "firewal", "continu", "block", "updat", "port", "we", "will", "not", "tri", "publish", "there"], "B_body": "Without it Jenkins builds are broken.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["without", "it", "jenkin", "build", "are", "broken", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.4841010986761113], "body_sim": [0.12464600998240458], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 185}, {"A_title": "docs(CONTRIBUTING): centralize, update, improve", "A_clean_title": ["doc", "contribut", "central", "updat", "improv"], "B_title": "chore(version-info): use branchPattern to check tag", "B_clean_title": ["chore", "version", "info", "use", "branchpattern", "branch", "pattern", "check", "tag"], "A_body": "- remove outdated info\r\n- move info about writing docs from Wiki to contribute.md + updates\r\n- move info about development setup from docs/contribute to contribute.md\r\n- add info about running tests on Saucelabs / Browserstack\r\n- add info about specific core code topics\r\n- add link to contributing.md to Contribung page\r\n- add link to changelog.md to nav in docs\r\n\r\nCloses #7303\r\nCloses #9444\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["remov", "outdat", "info", "move", "info", "about", "write", "doc", "wiki", "contribut", "md", "updat", "move", "info", "about", "develop", "setup", "doc", "contribut", "contribut", "md", "add", "info", "about", "run", "test", "saucelab", "browserstack", "add", "info", "about", "specif", "core", "code", "topic", "add", "link", "contribut", "md", "contribung", "page", "add", "link", "changelog", "md", "nav", "doc", "close", "7303", "close", "9444", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe have two fields in package.json for checking the current version:\n- branchVersion\n- branchPattern\n\nThe `branchVersion` field is used to work out what version to use in the\ndocs application, so we should not update this to the most recent version\nuntil that version is on the Google CDN. Otherwise the docs app will break.\n\nThe `branchPattern` is used to determine what branch we are currently\nworking from and is generally used as a gate-keeper to prevent invalid\nreleases from the wrong branch.\n\nThe `getTaggedVersion()` method was using the `branchVersion` to check\nthat the tagged commit was valid but this fails when we are moving to a\nnew minor version with release candidates.\n\nThis fix avoids the problem by doing a custom comparison against the\n`branchPattern` instead.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "we", "have", "two", "field", "packag", "json", "check", "current", "version", "branchvers", "branch", "version", "branchpattern", "branch", "pattern", "branchvers", "branch", "version", "field", "use", "work", "out", "what", "version", "use", "doc", "applic", "so", "we", "not", "updat", "thi", "most", "recent", "version", "until", "that", "version", "googl", "cdn", "otherwis", "doc", "app", "will", "break", "branchpattern", "branch", "pattern", "use", "determin", "what", "branch", "we", "are", "current", "work", "gener", "use", "as", "gate", "keeper", "prevent", "invalid", "releas", "wrong", "branch", "gettaggedvers", "get", "tag", "version", "method", "wa", "branchvers", "branch", "version", "check", "that", "tag", "commit", "wa", "valid", "but", "thi", "fail", "when", "we", "are", "move", "new", "minor", "version", "releas", "candid", "thi", "fix", "avoid", "problem", "by", "do", "custom", "comparison", "against", "branchpattern", "branch", "pattern", "instead"], "title_sim": [-0.00327846573289499], "body_sim": [0.7078007247879469], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06365038965413691, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 362}, {"A_title": "docs(ChangeLog): fix typo", "A_clean_title": ["doc", "changelog", "chang", "log", "fix", "typo"], "B_title": "fix($compile): support transcluding multi-element directives", "B_clean_title": ["fix", "compil", "support", "transclud", "multi", "element", "direct"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs only.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "onli", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nTranscluding multi-element directives (e.g. `foo-start`/`foo-end`) is not supported on elements with multi-slot transclusion (a `uterdir` error is thrown).\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nTranscluded nodes are put into a DocumentFragment, where they can be traversed via `.nextSibling`. This way, transcluding multi-element directives on elements with multi-slot transclusion works correctly.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15554.", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "transclud", "multi", "element", "direct", "foo", "start", "foo", "end", "not", "support", "element", "multi", "slot", "transclus", "uterdir", "error", "thrown", "**what", "new", "behavior", "thi", "featur", "chang", "transclud", "node", "are", "put", "into", "documentfrag", "document", "fragment", "where", "they", "travers", "via", "nextsibl", "next", "sibl", "thi", "way", "transclud", "multi", "element", "direct", "element", "multi", "slot", "transclus", "work", "correctli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "15554"], "title_sim": [0.050671322300139134], "body_sim": [0.8511252959412833], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 269}, {"A_title": "perf(ngModel,ngForm): change ng-model/form controllers to use prototype methods", "A_clean_title": ["perf", "ngmodel", "ng", "model", "ngform", "ng", "form", "chang", "ng", "model", "form", "control", "use", "prototyp", "method"], "B_title": "chore(*): stop testing on Edge 15 due to its instability", "B_clean_title": ["chore", "stop", "test", "edg", "15", "due", "it", "instabl"], "A_body": "This makes the largetable-bp ng-model benchmarks 10-15% faster (down 90-100ms for me). The actual controller instantiation doesn't change too much but the overall numbers seem consistently faster, I assume all due to reducing memory usage / gc. Specifically on creation there is ~40% less memory GCed, on destruction there is about ~25% less.\n\nLooking at the heap snapshot this is entirely from having less closures (~70k => 30k closures), other counts are all equal or very close.\n\nLooking at the chrome timeline the number of GC events is about half and the time/gc amounts roughly match the benchpress measurements.\n\nWorth the breaking change? The diff can probably be reduced or split into 2 commits if there's interest...\n", "A_clean_body": ["thi", "make", "larget", "bp", "ng", "model", "benchmark", "10", "15", "faster", "down", "90", "100m", "me", "actual", "control", "instanti", "n't", "chang", "too", "much", "but", "overal", "number", "seem", "consist", "faster", "assum", "all", "due", "reduc", "memori", "usag", "gc", "specif", "creation", "there", "~40", "less", "memori", "gced", "ced", "destruct", "there", "about", "~25", "less", "look", "at", "heap", "snapshot", "thi", "entir", "have", "less", "closur", "~70k", "30k", "closur", "other", "count", "are", "all", "equal", "or", "veri", "close", "look", "at", "chrome", "timelin", "number", "gc", "event", "about", "half", "time", "gc", "amount", "roughli", "match", "benchpress", "measur", "worth", "break", "chang", "diff", "probabl", "reduc", "or", "split", "into", "commit", "there", "'s", "interest"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nChore.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nEdge 15 & 16 are tested.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nOnly Edge 16 is tested.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nEdge 15 disconnects from Karma frequently causing extreme build instability.\r\nWe are testing on Edge 16 & Edge 17 should be released soon anyway.", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "edg", "15", "16", "are", "test", "**what", "new", "behavior", "thi", "featur", "chang", "onli", "edg", "16", "test", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "edg", "15", "disconnect", "karma", "frequent", "caus", "extrem", "build", "instabl", "we", "are", "test", "edg", "16", "edg", "17", "releas", "soon", "anyway"], "title_sim": [-0.019787943831636068], "body_sim": [0.2009905397800688], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 870}, {"A_title": "chore(doc-gen): add production deployment environment", "A_clean_title": ["chore", "doc", "gen", "add", "product", "deploy", "environ"], "B_title": "more important cookie service fixes", "B_clean_title": ["more", "import", "cooki", "servic", "fix"], "A_body": "This is a part of a fix for https://github.com/angular/dgeni/issues/56\n", "A_clean_body": ["thi", "part", "fix", "http", "github", "com", "angular", "dgeni", "issu", "56"], "B_body": "- preserve existing cookies\n- correctly handle cases when browser doesn't set cookies\n", "B_clean_body": ["preserv", "exist", "cooki", "correctli", "handl", "case", "when", "browser", "n't", "set", "cooki"], "title_sim": [-0.0030735640743517548], "body_sim": [0.058608277887493065], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06359278564213365, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1239}, {"A_title": "test($http): ignore date-toJSON test if running in IE8", "A_clean_title": ["test", "http", "ignor", "date", "tojson", "json", "test", "run", "ie8"], "B_title": "fix($compile): support transcluding multi-element directives", "B_clean_title": ["fix", "compil", "support", "transclud", "multi", "element", "direct"], "A_body": "IE8 does not implement Date.prototype.toISOString(), which is necessary for\nthis feature. The feature still works if this method is polyfilled, but these\ntests are not run with polyfills.\n\n/CC @IgorMinar (Please review, shouldn't take long!)\n", "A_clean_body": ["ie8", "not", "implement", "date", "prototyp", "toisostr", "iso", "string", "which", "necessari", "thi", "featur", "featur", "still", "work", "thi", "method", "polyfil", "but", "these", "test", "are", "not", "run", "polyfil", "cc", "igorminar", "igor", "minar", "pleas", "review", "n't", "take", "long"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nTranscluding multi-element directives (e.g. `foo-start`/`foo-end`) is not supported on elements with multi-slot transclusion (a `uterdir` error is thrown).\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nTranscluded nodes are put into a DocumentFragment, where they can be traversed via `.nextSibling`. This way, transcluding multi-element directives on elements with multi-slot transclusion works correctly.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15554.", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "transclud", "multi", "element", "direct", "foo", "start", "foo", "end", "not", "support", "element", "multi", "slot", "transclus", "uterdir", "error", "thrown", "**what", "new", "behavior", "thi", "featur", "chang", "transclud", "node", "are", "put", "into", "documentfrag", "document", "fragment", "where", "they", "travers", "via", "nextsibl", "next", "sibl", "thi", "way", "transclud", "multi", "element", "direct", "element", "multi", "slot", "transclus", "work", "correctli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "15554"], "title_sim": [-0.05679722370670782], "body_sim": [0.38197167330073145], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 898}, {"A_title": "docs(*): ensure jsdoc type expressions are valid", "A_clean_title": ["doc", "ensur", "jsdoc", "type", "express", "are", "valid"], "B_title": "fix(jqLite): use getElementsByTagName for dealoc-ing elements, cz of SVG on IE", "B_clean_title": ["fix", "jqlite", "jq", "lite", "use", "getelementsbytagnam", "get", "element", "by", "tag", "name", "dealoc", "ing", "element", "cz", "svg", "ie"], "A_body": "These changes are to coincide with the forthcoming change to dgeni-packages: https://github.com/angular/dgeni-packages/pull/10\n\nThere are a bunch of invalid jsdoc type expressions that will break if you use the new dgeni tagParser.  This PR will fix those.  Unfortunately, the docs will look wrong if we merge them before the new tagParser arrives.\n", "A_clean_body": ["these", "chang", "are", "coincid", "forthcom", "chang", "dgeni", "packag", "http", "packag", "pull", "10", "github", "com", "angular", "dgeni", "there", "are", "bunch", "invalid", "jsdoc", "type", "express", "that", "will", "break", "you", "use", "new", "dgeni", "tagpars", "tag", "parser", "thi", "pr", "will", "fix", "those", "unfortun", "doc", "will", "look", "wrong", "we", "merg", "them", "befor", "new", "tagpars", "tag", "parser", "arriv"], "B_body": "See comments in #8075\n", "B_clean_body": ["see", "comment", "8075"], "title_sim": [0.04820439632126324], "body_sim": [0.07805026258766329], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 133}, {"A_title": "docs(app): adds border", "A_clean_title": ["doc", "app", "add", "border"], "B_title": "Improve module template, add custom installation notes for ngMock", "B_clean_title": ["improv", "modul", "templat", "add", "custom", "instal", "note", "ngmock", "ng", "mock"], "A_body": "Adds a border to the top of the h2 like the current docs app.\n", "A_clean_body": ["add", "border", "top", "h2", "like", "current", "doc", "app"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n- module install page doesn't mention npm\n- ngMock install page is misleading, as angular-mocks shouldn't be included in application code\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Docs have been added / updated (for bug fixes / features)\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "modul", "instal", "page", "n't", "mention", "npm", "ngmock", "ng", "mock", "instal", "page", "mislead", "as", "angular", "mock", "n't", "includ", "applic", "code", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.20542969719221604], "body_sim": [0.283533743381129], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 481}, {"A_title": "refactor(angular): removed unnecessary parameter for slice function", "A_clean_title": ["refactor", "angular", "remov", "unnecessari", "paramet", "slice", "function"], "B_title": "fix($httpBackend): use ActiveX XHR when making PATCH requests on IE8", "B_clean_title": ["fix", "httpbackend", "http", "backend", "use", "activex", "activ", "xhr", "when", "make", "patch", "request", "ie8"], "A_body": "- the end index for slice, if not specified, is default to the\n  end of the array it operates on.\n", "A_clean_body": ["end", "index", "slice", "not", "specifi", "default", "end", "array", "it", "oper"], "B_body": "IE8's native XHR doesn't support PATCH requests, but the ActiveX one does.\n\nCloses #2518\nCloses #5043\n", "B_clean_body": ["ie8", "'s", "nativ", "xhr", "n't", "support", "patch", "request", "but", "activex", "activ", "one", "close", "2518", "close", "5043"], "title_sim": [0.10230442512511051], "body_sim": [0.07228839016963576], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 865}, {"A_title": "feat(input) add ng:minlength and ng:maxlength validation support", "A_clean_title": ["feat", "input", "add", "ng", "minlength", "ng", "maxlength", "valid", "support"], "B_title": "Fix deprecate ngtouch", "B_clean_title": ["fix", "deprec", "ngtouch"], "A_body": "notes(igor): I also e2e tests and refactorred the e2e test example to be\nmore clear about what is a variable and what is an html/framework api.\n", "A_clean_body": ["note", "igor", "also", "e2e", "test", "refactor", "e2e", "test", "exampl", "more", "clear", "about", "what", "variabl", "what", "html", "framework", "api"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.06684273143014888], "body_sim": [0.10107648065406592], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0514234182462735, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2296}, {"A_title": "feat($injector): ability to load new modules after bootstrapping", "A_clean_title": ["feat", "injector", "abil", "load", "new", "modul", "after", "bootstrap"], "B_title": "docs(*): don't hide results for middle-clicks", "B_clean_title": ["doc", "n't", "hide", "result", "middl", "click"], "A_body": "The new method `$injector.loadNewModules(modules)` will add each of the\r\ninjectables to the injector and execute all of the run blocks for each\r\nmodule passed to the method.\r\n\r\n* The application developer is responsible for loading the code containing\r\nthe modules.\r\n* Modules cannot be unloaded.\r\n* Previously compiled HTML will not be affected by newly loaded directives,\r\nfilters and components.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["new", "method", "injector", "loadnewmodul", "load", "new", "modul", "modul", "will", "add", "each", "inject", "injector", "execut", "all", "run", "block", "each", "modul", "pass", "method", "applic", "develop", "respons", "load", "code", "contain", "modul", "modul", "not", "unload", "previous", "compil", "html", "will", "not", "affect", "by", "newli", "load", "direct", "filter", "compon", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Middle-clicking opens a link in a new tab; it shouldn't close the results list\r\nas the user may want to open more of those links.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nMiddle-clicking on a link in the results list (which opens a link in a new tab) closes the list.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nList is kept open in such a case.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["middl", "click", "open", "link", "new", "tab", "it", "n't", "close", "result", "list", "as", "user", "may", "want", "open", "more", "those", "link", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "middl", "click", "link", "result", "list", "which", "open", "link", "new", "tab", "close", "list", "**what", "new", "behavior", "thi", "featur", "chang", "list", "kept", "open", "such", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.0026390398637135878], "body_sim": [0.7237461339790497], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005864234620079187, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 7}, {"A_title": "perf(orderBy): copy array with slice instead of for loop", "A_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "B_title": "fix($browser): should use first value for a cookie.", "B_clean_title": ["fix", "browser", "use", "first", "valu", "cooki"], "A_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "A_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "B_body": "With this change, $browser.cookies()[\"foo\"] will behave like\ndocCookies.getItem(\"foo\") where docCookies is defined at\nhttps://developer.mozilla.org/en-US/docs/DOM/document.cookie\n\nRef: https://github.com/angular/angular.js/issues/2635\n\nThis fixes the issue where, if there's a value for the XSRF-TOKEN cookie\nvalue with the path /, then that value is used for all applications in\nthe domain even if they set path specific values for XSRF-TOKEN.\n", "B_clean_body": ["thi", "chang", "browser", "cooki", "foo", "will", "behav", "like", "doccooki", "getitem", "doc", "cooki", "get", "item", "foo", "where", "doccooki", "doc", "cooki", "defin", "at", "http", "mozilla", "cooki", "develop", "org", "en", "us", "doc", "dom", "document", "ref", "http", "github", "com", "angular", "angular", "js", "issu", "2635", "thi", "fix", "issu", "where", "there", "'s", "valu", "xsrf", "token", "cooki", "valu", "path", "then", "that", "valu", "use", "all", "applic", "domain", "even", "they", "set", "path", "specif", "valu", "xsrf", "token"], "title_sim": [0.14259950370039892], "body_sim": [0.25583822997076483], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.019057628621912223, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 552}, {"A_title": "fix($sanitize): use appropriate inert document strategy for Firefox and Safari", "A_clean_title": ["fix", "sanit", "use", "appropri", "inert", "document", "strategi", "firefox", "safari"], "B_title": "feat($compile): throw error when directive name or factory fn is invalid", "B_clean_title": ["feat", "compil", "throw", "error", "when", "direct", "name", "or", "factori", "fn", "invalid"], "A_body": "Both Firefox and Safari are vulnerable to XSS if we use an inert document\r\ncreated via `document.implementation.createHTMLDocument()`.\r\n\r\nNow we check for those vulnerabilities and then use a DOMParser or XHR\r\nstrategy if needed.\r\n\r\nThanks to @cure53 for the heads up on this issue.\r\n", "A_clean_body": ["both", "firefox", "safari", "are", "vulner", "xss", "we", "use", "inert", "document", "creat", "via", "document", "implement", "createhtmldocu", "creat", "html", "document", "now", "we", "check", "those", "vulner", "then", "use", "dompars", "dom", "parser", "or", "xhr", "strategi", "need", "thank", "cure53", "head", "up", "thi", "issu"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeat\n\n**What is the current behavior? (You can also link to an open issue here)**\nwhen the directive name or factory fn is undefined, no error is thrown\n\n**What is the new behavior (if this is a feature change)?**\nbetter errors are thrown\n\n**Does this PR introduce a breaking change?**\nNo. Although I'm not sure if isFunction will catch all exotic ways to define a function.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nCloses: #15056\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "direct", "name", "or", "factori", "fn", "undefin", "no", "error", "thrown", "**what", "new", "behavior", "thi", "featur", "chang", "better", "error", "are", "thrown", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "although", "'m", "not", "sure", "isfunct", "function", "will", "catch", "all", "exot", "way", "defin", "function", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "close", "15056"], "title_sim": [0.024766983521260746], "body_sim": [0.17829800305800994], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.007360521400013793, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 273}, {"A_title": "fix(ngMessage): make ngMessage work with ngBind", "A_clean_title": ["fix", "ngmessag", "ng", "messag", "make", "ngmessag", "ng", "messag", "work", "ngbind", "ng", "bind"], "B_title": "docs($compile): remove a mention of preassigning bindings in controllers", "B_clean_title": ["doc", "compil", "remov", "mention", "preassign", "bind", "control"], "A_body": "Fixes #8089 \n\n(I'm not actually sure why this works tbh)\n", "A_clean_body": ["fix", "8089", "'m", "not", "actual", "sure", "whi", "thi", "work", "tbh"], "B_body": "The deprecation warning is no longer needed as the feature has been removed\r\nin 1.7.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreassigning bindings to controllers is described as deprecated but still working. This feature has been removed so the warning is no longer needed.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["deprec", "warn", "no", "longer", "need", "as", "featur", "ha", "been", "remov", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "preassign", "bind", "control", "describ", "as", "deprec", "but", "still", "work", "thi", "featur", "ha", "been", "remov", "so", "warn", "no", "longer", "need", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.19710532876423106], "body_sim": [0.1428833136590351], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 534}, {"A_title": "docs(*): replace master/slave with leader/follower", "A_clean_title": ["doc", "replac", "master", "slave", "leader", "follow"], "B_title": "docs($compile): remove a mention of preassigning bindings in controllers", "B_clean_title": ["doc", "compil", "remov", "mention", "preassign", "bind", "control"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreviously, the docs made use of `master/slave`, which is offensive.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit removes the usage of these terms and replace them with `leader/follower`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nhttps://github.com/angular/angular.js/issues/16201\r\n\r\nUpdated the docs according to the logged issue. I might have made changes which do not directly use both `master` **and** `slave`, feel free to let me know to undo those changes. I thought it wasn't bad to stay consistent.\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "previous", "doc", "made", "use", "master", "slave", "which", "offens", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "remov", "usag", "these", "term", "replac", "them", "leader", "follow", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "http", "github", "com", "angular", "angular", "js", "issu", "16201", "updat", "doc", "accord", "log", "issu", "might", "have", "made", "chang", "which", "not", "directli", "use", "both", "master", "**and**", "slave", "feel", "free", "let", "me", "know", "undo", "those", "chang", "thought", "it", "wa", "n't", "bad", "stay", "consist"], "B_body": "The deprecation warning is no longer needed as the feature has been removed\r\nin 1.7.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreassigning bindings to controllers is described as deprecated but still working. This feature has been removed so the warning is no longer needed.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["deprec", "warn", "no", "longer", "need", "as", "featur", "ha", "been", "remov", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "preassign", "bind", "control", "describ", "as", "deprec", "but", "still", "work", "thi", "featur", "ha", "been", "remov", "so", "warn", "no", "longer", "need", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.0967698884221609], "body_sim": [0.928622731318472], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 150}, {"A_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "A_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "B_title": "perf($animate): listen for document visibility changes", "B_clean_title": ["perf", "anim", "listen", "document", "visibl", "chang"], "A_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "A_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "B_body": "Accessing the document for the hidden state is costly for\nplatforms like Electron.\n\nCloses #14066\n", "B_clean_body": ["access", "document", "hidden", "state", "costli", "platform", "like", "electron", "close", "14066"], "title_sim": [-0.02451664517049439], "body_sim": [0.17059095278248354], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 730}, {"A_title": "fix($http): Do not serialize File object", "A_clean_title": ["fix", "http", "not", "serial", "file", "object"], "B_title": "fix(date filter): default to fullDate format", "B_clean_title": ["fix", "date", "filter", "default", "fulldat", "full", "date", "format"], "A_body": "We might auto set X-File headers, when you pass a File object, but I can't find any spec on that...\n(ie X-File-Size, content-type, etc...)\n", "A_clean_body": ["we", "might", "auto", "set", "file", "header", "when", "you", "pass", "file", "object", "but", "ca", "n't", "find", "ani", "spec", "that", "ie", "file", "size", "content", "type", "etc"], "B_body": "The browser's behave inconsistently, so we should just stick to one format\nwhen the format is not specified by the developer\n\nCloses #605\n", "B_clean_body": ["browser", "'s", "behav", "inconsist", "so", "we", "just", "stick", "one", "format", "when", "format", "not", "specifi", "by", "develop", "close", "605"], "title_sim": [0.008390121525449783], "body_sim": [0.21065154557026244], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 131}, {"A_title": "docs(guide/Forms): add labels to forms", "A_clean_title": ["doc", "guid", "form", "add", "label", "form"], "B_title": "docs(jqlite): add known issue", "B_clean_title": ["doc", "jqlite", "add", "known", "issu"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nno label tags in the inputs\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nnot a feature\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nI can add label tags to the other input fields in the docs.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "label", "tag", "input", "**what", "new", "behavior", "thi", "featur", "chang", "not", "featur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "label", "tag", "other", "input", "field", "doc"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.2105497972759227], "body_sim": [0.9798276069860095], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 225}, {"A_title": "chore(gitignore): add .agignore", "A_clean_title": ["chore", "gitignor", "add", "agignor"], "B_title": "docs($animation): fix weird spaces around colons", "B_clean_title": ["doc", "anim", "fix", "weird", "space", "around", "colon"], "A_body": "I use a .agignore file to skip the build directory and some other files\nwhile searching using Ag (see\nhttps://github.com/ggreer/the_silver_searcher).\n", "A_clean_body": ["use", "agignor", "file", "skip", "build", "directori", "some", "other", "file", "while", "search", "ag", "see", "http", "github", "silver", "searcher", "com", "ggreer"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSpacing around colons is weird.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "space", "around", "colon", "weird", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.02449380031964591], "body_sim": [0.09139853177240521], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1314}, {"A_title": "chore(travis: fix deployment condition to include tagged commits", "A_clean_title": ["chore", "travi", "fix", "deploy", "condit", "includ", "tag", "commit"], "B_title": "docs(guide/decorators): add decorator guide", "B_clean_title": ["doc", "guid", "decor", "add", "decor", "guid"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update.\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere currently is no guide for decorators.\n\n**What is the new behavior (if this is a feature change)?**\n\nAdd a guide document for decorators\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n- explain decorators and how they are implemented in angular\n- explain how different types of services can be selected\n- explain `$delegate` objects and how they differ between services\n- warn of the risks/caveats of `$delegate` modification\n- note the exposure of `decorator` through the module api\n- show an example of decorating a core service\n- show an example of decorating a core directive\n- show an example of decorating a core filter\n\ncloses #12163\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "current", "no", "guid", "decor", "**what", "new", "behavior", "thi", "featur", "chang", "add", "guid", "document", "decor", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "explain", "decor", "how", "they", "are", "implement", "angular", "explain", "how", "differ", "type", "servic", "select", "explain", "deleg", "object", "how", "they", "differ", "between", "servic", "warn", "risk", "caveat", "deleg", "modif", "note", "exposur", "decor", "through", "modul", "api", "show", "exampl", "decor", "core", "servic", "show", "exampl", "decor", "core", "direct", "show", "exampl", "decor", "core", "filter", "close", "12163"], "title_sim": [0.023019206703382245], "body_sim": [0.7756125132848071], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 601}, {"A_title": "fix($compile): sanitize values bound to img[src]", "A_clean_title": ["fix", "compil", "sanit", "valu", "bound", "img", "src"], "B_title": "fix(input): correctly handle invalid model values for `input[date/time/\u2026...", "B_clean_title": ["fix", "input", "correctli", "handl", "invalid", "model", "valu", "input", "date", "time"], "A_body": "Ref: 9532234bf1c408af9a6fd2c4743fdb585b920531\n", "A_clean_body": ["ref", "9532234bf1c408af9a6fd2c4743fdb585b920531"], "B_body": "...]`\n\nSimilar to `input[number]` Angular will throw if the model value\nfor a `input[date]` is not a `Date` object.\nFor `Invalid Date`s (dates who\u2019s `getTime()` is `NaN`) `input[date]` \nwill render an empty string.\n\nCloses #8949\n", "B_clean_body": ["similar", "input", "number", "angular", "will", "throw", "model", "valu", "input", "date", "not", "date", "object", "invalid", "date", "date", "who", "gettim", "get", "time", "nan", "na", "input", "date", "will", "render", "empti", "string", "close", "8949"], "title_sim": [0.07651259891131622], "body_sim": [0.00876967081077737], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.022159270092208663, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 468}, {"A_title": "fix:SiteMap(docs) in SiteMap.js: SiteMap.xml was wrongly generated", "A_clean_title": ["fix", "sitemap", "site", "map", "doc", "sitemap", "js", "site", "map", "sitemap", "xml", "site", "map", "wa", "wrongli", "gener"], "B_title": "chore(karma): use dots reporter by default", "B_clean_title": ["chore", "karma", "use", "dot", "report", "by", "default"], "A_body": "doc.id should be used instead of doc.name, otherwise links are wrongly\ngenerated\n", "A_clean_body": ["doc", "id", "use", "instead", "doc", "name", "otherwis", "link", "are", "wrongli", "gener"], "B_body": "dots is nicer for local testing, as you usually don't run a\r\nton of test suites, and it's also more readable if you skip\r\nmany tests (i.e. run isolated tests)\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["dot", "nicer", "local", "test", "as", "you", "usual", "n't", "run", "ton", "test", "suit", "it", "'s", "also", "more", "readabl", "you", "skip", "mani", "test", "run", "isol", "test", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.0012280576593053252], "body_sim": [0.1922659981104147], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2240}, {"A_title": "fix(input): use lowercase method to account for undefined type", "A_clean_title": ["fix", "input", "use", "lowercas", "method", "account", "undefin", "type"], "B_title": "Feat: ngRef directive to publish controllers, or elements into current scope ", "B_clean_title": ["feat", "ngref", "ng", "ref", "direct", "publish", "control", "or", "element", "into", "current", "scope"], "A_body": "This was causing some internal breakages. I verify that this fixes the problem, but I haven't yet pinned down exactly how this case/path occurred.\n", "A_clean_body": ["thi", "wa", "caus", "some", "intern", "breakag", "verifi", "that", "thi", "fix", "problem", "but", "have", "n't", "yet", "pin", "down", "exactli", "how", "thi", "case", "path", "occur"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\npublish a component's or element-directive's, or jqlite wrapped DOM element into the containing scope\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThis is a rebased and updated version of https://github.com/angular/angular.js/pull/14080 with the following changes:\r\n\r\n- publish the jqlite-wrapped DOM element instead of the raw DOM element. In AngularJS, we don't deal with raw DOM elements, so this would create an inconsistency\r\n- introduce a `ngRefElement` attribute that indicates that you always want to publish the jqlite-wrapped DOM element, even if a controller exists\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "new", "behavior", "thi", "featur", "chang", "publish", "compon", "'s", "or", "element", "direct", "'s", "or", "jqlite", "wrap", "dom", "element", "into", "contain", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "rebas", "updat", "version", "http", "github", "com", "angular", "angular", "js", "pull", "14080", "follow", "chang", "publish", "jqlite", "wrap", "dom", "element", "instead", "raw", "dom", "element", "angularj", "angular", "js", "we", "n't", "deal", "raw", "dom", "element", "so", "thi", "would", "creat", "inconsist", "introduc", "ngrefel", "ng", "ref", "element", "attribut", "that", "indic", "that", "you", "alway", "want", "publish", "jqlite", "wrap", "dom", "element", "even", "control", "exist"], "title_sim": [-0.0018214087678379996], "body_sim": [0.29882345015738915], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1313}, {"A_title": "feat: angularFilter.date: date filter can show day/mon string", "A_clean_title": ["feat", "angularfilt", "date", "angular", "filter", "date", "filter", "show", "day", "mon", "string"], "B_title": "feat(ngModel): bind to getters/setters", "B_clean_title": ["feat", "ngmodel", "ng", "model", "bind", "getter", "setter"], "A_body": "  Support new date format, specifically day of week/Month of year in string\n  e.g. {{ someDate | data:\"EEE, MMM d, yyyy\" }} -> \"Wed, Jul 10, 2011\"\nCloses #396\n", "A_clean_body": ["support", "new", "date", "format", "specif", "day", "week", "month", "year", "string", "somed", "some", "date", "data", "eee", "mmm", "yyyi", "wed", "jul", "10", "2011", "close", "396"], "B_body": "Currently, you might do this if you want to bind to getters/setters:\n\n> controller\n\n``` javascript\n// ...\n$scope.watch(function () {\n  return myModel.getterSetter();\n}, function (newValue) {\n  $scope.someProp = newValue;\n});\n\n$scope.watch('someProp', function (newValue) {\n  myModel.getterSetter(newValue);\n});\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"someProp\">\n```\n\nThe implementation in this PR changes the semantics of `ngModel` in the following ways:\n\nIf the expression bound to `ngModel` resolves to a function, the function is invoked to get the current value to be expressed in the DOM. When the binding changes, if the expression bound to `ngModel` resolves to a function (at that time) the function is invoked with the new value.\n\nThis means instead, you could do this:\n\n> controller\n\n``` javascript\n// ...\n$scope.myModel = myModel;\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"myModel.getterSetter\">\n```\n\nI like that to end developers, this feels like \"uniform access\" for common cases. I don't like that this means there's a difference in semantics between `ngModel` and expressions elsewhere in Angular.\n\nThis would be a breaking change, but I don't think that this would affect any legitimate use cases. The only case I can think of is if hypothetically, you bind to some property that's originally a function, overwriting it with a string. I can't think of any good reason to write controller code like that.\n\n@IgorMinar suggested a different syntax so that the difference in semantics is obvious. Something like:\n\n``` html\n<input ng-model=\"myModel.getterSetter()\">\n```\n\nI like that this makes the semantics obvious. I don't like that this still violates the \"uniform access principle.\"\n\nCloses #768\n", "B_clean_body": ["current", "you", "might", "thi", "you", "want", "bind", "getter", "setter", "control", "javascript", "scope", "watch", "function", "return", "mymodel", "gettersett", "my", "model", "getter", "setter", "function", "newvalu", "new", "valu", "scope", "someprop", "some", "prop", "newvalu", "new", "valu", "scope", "watch", "'someprop", "'some", "prop", "function", "newvalu", "new", "valu", "mymodel", "gettersett", "my", "model", "getter", "setter", "newvalu", "new", "valu", "templat", "html", "input", "ng", "model=", "someprop", "some", "prop", "implement", "thi", "pr", "chang", "semant", "ngmodel", "ng", "model", "follow", "way", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "function", "invok", "get", "current", "valu", "express", "dom", "when", "bind", "chang", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "at", "that", "time", "function", "invok", "new", "valu", "thi", "mean", "instead", "you", "could", "thi", "control", "javascript", "scope", "mymodel", "my", "model", "mymodel", "my", "model", "templat", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "end", "develop", "thi", "feel", "like", "uniform", "access", "common", "case", "n't", "like", "that", "thi", "mean", "there", "'s", "differ", "semant", "between", "ngmodel", "ng", "model", "express", "elsewher", "angular", "thi", "would", "break", "chang", "but", "n't", "think", "that", "thi", "would", "affect", "ani", "legitim", "use", "case", "onli", "case", "think", "hypothet", "you", "bind", "some", "properti", "that", "'s", "origin", "function", "overwrit", "it", "string", "ca", "n't", "think", "ani", "good", "reason", "write", "control", "code", "like", "that", "igorminar", "igor", "minar", "suggest", "differ", "syntax", "so", "that", "differ", "semant", "obviou", "someth", "like", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "thi", "make", "semant", "obviou", "n't", "like", "that", "thi", "still", "violat", "uniform", "access", "principl", "close", "768"], "title_sim": [0.045135519899584635], "body_sim": [0.0624682300945208], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.21989751177321848, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1099}, {"A_title": "docs(guide/Providers): Remove redundant apology", "A_clean_title": ["doc", "guid", "provid", "remov", "redund", "apolog"], "B_title": "test(support): verify support tests results in all tested browsers", "B_clean_title": ["test", "support", "verifi", "support", "test", "result", "all", "test", "browser"], "A_body": "There is no longer a service called \"service\", so this is confusing.", "A_clean_body": ["there", "no", "longer", "servic", "call", "servic", "so", "thi", "confus"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nNew tests.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nIt's not tested whether browsers pass or fail specific support tests used to skip particular test blocks.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll browsers have verified support tests results.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "new", "test", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "it", "'s", "not", "test", "whether", "browser", "pass", "or", "fail", "specif", "support", "test", "use", "skip", "particular", "test", "block", "**what", "new", "behavior", "thi", "featur", "chang", "all", "browser", "have", "verifi", "support", "test", "result", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.1009736068658979], "body_sim": [0.10727062684501823], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 83}, {"A_title": "fix(testabilityPatch): reset cache after memory leak detection", "A_clean_title": ["fix", "testabilitypatch", "testabl", "patch", "reset", "cach", "after", "memori", "leak", "detect"], "B_title": "docs(*): don't hide results for middle-clicks", "B_clean_title": ["doc", "n't", "hide", "result", "middl", "click"], "A_body": "When you have a test failure in the angular.js project, which also causes a memory leak, such as a failure to dealocate an element or a scope, you often get a false-negative failure for every subsequent test. This change ensures that after such an error, the cache is reset so that subsequent tests can run normally.\n", "A_clean_body": ["when", "you", "have", "test", "failur", "angular", "js", "project", "which", "also", "caus", "memori", "leak", "such", "as", "failur", "dealoc", "element", "or", "scope", "you", "often", "get", "fals", "neg", "failur", "everi", "subsequ", "test", "thi", "chang", "ensur", "that", "after", "such", "error", "cach", "reset", "so", "that", "subsequ", "test", "run", "normal"], "B_body": "Middle-clicking opens a link in a new tab; it shouldn't close the results list\r\nas the user may want to open more of those links.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nMiddle-clicking on a link in the results list (which opens a link in a new tab) closes the list.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nList is kept open in such a case.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["middl", "click", "open", "link", "new", "tab", "it", "n't", "close", "result", "list", "as", "user", "may", "want", "open", "more", "those", "link", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "middl", "click", "link", "result", "list", "which", "open", "link", "new", "tab", "close", "list", "**what", "new", "behavior", "thi", "featur", "chang", "list", "kept", "open", "such", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.007810141672417631], "body_sim": [0.3433750457007335], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.033765020257655994, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 716}, {"A_title": "test(*): run class-related tests everywhere; fix eval syntax", "A_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "B_title": "docs(app): fixes material build", "B_clean_title": ["doc", "app", "fix", "materi", "build"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "The theme css files were reorganized at some point in Angular Material 0.7.x and the build is now failing because the files are missing. The styles on the site do not work correctly now with 0.7.x because the css is missing. This change will keep us on 0.6.x until we can update the theme issue.\n", "B_clean_body": ["theme", "css", "file", "were", "reorgan", "at", "some", "point", "angular", "materi", "build", "now", "fail", "becaus", "file", "are", "miss", "style", "site", "not", "work", "correctli", "now", "becaus", "css", "miss", "thi", "chang", "will", "keep", "us", "until", "we", "updat", "theme", "issu"], "title_sim": [0.08504383257285275], "body_sim": [0.24896627870016538], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 840}, {"A_title": "fix:SiteMap(docs) in SiteMap.js: SiteMap.xml was wrongly generated", "A_clean_title": ["fix", "sitemap", "site", "map", "doc", "sitemap", "js", "site", "map", "sitemap", "xml", "site", "map", "wa", "wrongli", "gener"], "B_title": "Docs: update $location guide info; fix some headlines", "B_clean_title": ["doc", "updat", "locat", "guid", "info", "fix", "some", "headlin"], "A_body": "doc.id should be used instead of doc.name, otherwise links are wrongly\ngenerated\n", "A_clean_body": ["doc", "id", "use", "instead", "doc", "name", "otherwis", "link", "are", "wrongli", "gener"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.02947145986512487], "body_sim": [0.21280945325159692], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2566}, {"A_title": "fix($scope): fixes multiple root element error when there is a whites\u2026", "A_clean_title": ["fix", "scope", "fix", "multipl", "root", "element", "error", "when", "there", "whites\u2026"], "B_title": "refactor($compile): remove unnecessary try/catch", "B_clean_title": ["refactor", "compil", "remov", "unnecessari", "tri", "catch"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nIf one tries to load a directive with a top-level comment angular throws an error \nError: [$compile:tplrt] Template for directive 'myDirective' must have exactly one root element\nhttps://github.com/angular/angular.js/issues/15108\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nfixes multiple root element error when there is a whitespace after a comment\n\nAdded new conditional for NODE_TYPE_TEXT inside removeComments method of $compile\nAdded corresponding unit tests.\n\nCloses #15108\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "one", "tri", "load", "direct", "top", "level", "comment", "angular", "throw", "error", "error", "compil", "tplrt", "templat", "direct", "'mydirect", "'mi", "direct", "must", "have", "exactli", "one", "root", "element", "http", "github", "com", "angular", "angular", "js", "issu", "15108", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "multipl", "root", "element", "error", "when", "there", "whitespac", "after", "comment", "ad", "new", "condit", "node", "type", "text", "insid", "removecom", "remov", "comment", "method", "compil", "ad", "correspond", "unit", "test", "close", "15108"], "B_body": "I don't see anything in there that could throw...\n", "B_clean_body": ["n't", "see", "anyth", "there", "that", "could", "throw"], "title_sim": [0.12443969304995318], "body_sim": [0.15918733711973243], "file_list_sim": 0.6666666666666666, "overlap_files_len": 2, "code_sim": [0.18107545860323507, 0.18107545860323507], "location_sim": [0.0, 0.0], "pattern": 0, "time": 312}, {"A_title": "feat(jqLite): make injector() and scope() work with the document object", "A_clean_title": ["feat", "jqlite", "jq", "lite", "make", "injector", "scope", "work", "document", "object"], "B_title": "fix(jQuery): cooperate with other libraries monkey-patching jQuery.cleanData", "B_clean_title": ["fix", "jqueri", "queri", "cooper", "other", "librari", "monkey", "patch", "jqueri", "cleandata", "queri", "clean", "data"], "A_body": "For typical app that has ng-app directive on the html element, we now can do:\n\nangular.element(document).injector() or .injector()\nangular.element(document).scope() or .scope()\n\ninstead of:\n\nangular.element(document.getElementsByTagName('html')[0]).injector()\n...\n", "A_clean_body": ["typic", "app", "that", "ha", "ng", "app", "direct", "html", "element", "we", "now", "angular", "element", "document", "injector", "or", "injector", "angular", "element", "document", "scope", "or", "scope", "instead", "angular", "element", "document", "getelementsbytagnam", "get", "element", "by", "tag", "name", "'html", "injector"], "B_body": "Some libraries (like jQuery UI) patch jQuery.cleanData as well. This commit\nmakes Angular work correctly even if such external patching was done after\nthe Angular one.\n\nFixes #8471\n\n/cc @IgorMinar\n", "B_clean_body": ["some", "librari", "like", "jqueri", "queri", "ui", "patch", "jqueri", "cleandata", "queri", "clean", "data", "as", "well", "thi", "commit", "make", "angular", "work", "correctli", "even", "such", "extern", "patch", "wa", "done", "after", "angular", "one", "fix", "8471", "cc", "igorminar", "igor", "minar"], "title_sim": [0.29076401514757827], "body_sim": [0.251456629353475], "file_list_sim": 0.125, "overlap_files_len": 1, "code_sim": [0.0808142244312031, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 867}, {"A_title": "docs(CONTRIBUTING.md): Updated commit types.", "A_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "B_title": "fix(ngModel): use keydown/change events on IE9 instead of input", "B_clean_title": ["fix", "ngmodel", "ng", "model", "use", "keydown", "chang", "event", "ie9", "instead", "input"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "B_body": "On IE9 the input event is not fired when backspace or delete key are pressed or when\ncut is performed. This makes listening on the input event unreliable and therefore\nit's better for us to just use keydown/change events instead.\n\nCloses #879\n", "B_clean_body": ["ie9", "input", "event", "not", "fire", "when", "backspac", "or", "delet", "key", "are", "press", "or", "when", "cut", "perform", "thi", "make", "listen", "input", "event", "unreli", "therefor", "it", "'s", "better", "us", "just", "use", "keydown", "chang", "event", "instead", "close", "879"], "title_sim": [0.15558361878587146], "body_sim": [0.12500377820176437], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02869716112386095, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1639}, {"A_title": "docs($interpolate): typo", "A_clean_title": ["doc", "interpol", "typo"], "B_title": "build(*): update Node from 6 to 8, update Yarn", "B_clean_title": ["build", "updat", "node", "updat", "yarn"], "A_body": "There was missing `JS` at line 141.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs only, example fix.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nSomewhat confusing:\r\n```\r\nvar exp = $interpolate('Hello {{name | uppercase}}!');\r\nexpect(exp({name:'AngularJS'})).toEqual('Hello ANGULAR!');\r\n```\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format", "A_clean_body": ["there", "wa", "miss", "js", "at", "line", "141", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "onli", "exampl", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "somewhat", "confus", "var", "exp", "interpol", "'hello", "name", "uppercas", "expect", "exp", "name", "'angularj", "'angular", "js", "toequal", "equal", "'hello", "angular", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBuild-related.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nWe use Node 6 & an old Yarn version.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nWe use Node 8 & a new Yarn version.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\nAngular (2+) switched to Node 8 and so should we.\r\n\r\nRef angular/angular#20807\r\nRef angular/angular#20832\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "build", "relat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "use", "node", "old", "yarn", "version", "**what", "new", "behavior", "thi", "featur", "chang", "we", "use", "node", "new", "yarn", "version", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**", "angular", "2+", "switch", "node", "so", "we", "ref", "angular", "angular", "20807", "ref", "angular", "angular", "20832"], "title_sim": [0.04126781419342355], "body_sim": [0.8643476767213678], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 267}, {"A_title": "chore(gruntfile): check the node version before starting", "A_clean_title": ["chore", "gruntfil", "check", "node", "version", "befor", "start"], "B_title": "feat(ngModelOptions): allow to debounce 'default' only, and add catch\u2026", "B_clean_title": ["feat", "ngmodelopt", "ng", "model", "option", "allow", "debounc", "'default", "onli", "add", "catch\u2026"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe specify the node version that is required to run the build in the `.nvmrc`\nfile. So let's check that the current node version satisfies this and report\na helpful message if it is not.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "we", "specifi", "node", "version", "that", "requir", "run", "build", "nvmrc", "file", "so", "let", "'s", "check", "that", "current", "node", "version", "satisfi", "thi", "report", "help", "messag", "it", "not"], "B_body": "\u2026-all\r\n\r\nBREAKING CHANGE:\r\n\r\nthe 'default' key in 'debounce' now only debounces the default event, i.e. the event\r\nthat is added as an update trigger by the different input directives automatically.\r\n\r\nPreviously, it also applied to other update triggers defined in 'updateOn' that\r\ndid not have a corresponding key in the 'debounce'.\r\n\r\nThis behavior is now supported via a special wildcard / catch-all key: '*'.\r\n\r\nSee the following example:\r\n\r\nPre-1.7:\r\n'mouseup' is debounced by 500 milliseconds because 'default' is applied.\r\n```\r\nng-model-options=\"{\r\n  updateOn: 'default blur mouseup',\r\n  debounce: { 'default': 500, 'blur': 0 }\r\n}\r\n```\r\n\r\n1.7:\r\n'mouseup' is debounced by 1000 milliseconds because '*' is applied.\r\n```\r\nng-model-options=\"{\r\n  updateOn: 'default blur mouseup',\r\n  debounce: { 'default': 500, 'blur': 0, '*': 1000 }\r\n}\r\n```\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsee #15411\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nsee above\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYES, see above\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["all", "break", "chang", "'default", "key", "'debounc", "now", "onli", "debounc", "default", "event", "event", "that", "ad", "as", "updat", "trigger", "by", "differ", "input", "direct", "automat", "previous", "it", "also", "appli", "other", "updat", "trigger", "defin", "'updateon", "'updat", "that", "did", "not", "have", "correspond", "key", "'debounc", "thi", "behavior", "now", "support", "via", "special", "wildcard", "catch", "all", "key", "see", "follow", "exampl", "pre", "'mouseup", "debounc", "by", "500", "millisecond", "becaus", "'default", "appli", "ng", "model", "options=", "updateon", "updat", "'default", "blur", "mouseup", "debounc", "'default", "500", "'blur", "'mouseup", "debounc", "by", "1000", "millisecond", "becaus", "appli", "ng", "model", "options=", "updateon", "updat", "'default", "blur", "mouseup", "debounc", "'default", "500", "'blur", "1000", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "15411", "**what", "new", "behavior", "thi", "featur", "chang", "see", "abov", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "see", "abov", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.06308416192934604], "body_sim": [0.8344620152340959], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01749113667029944, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 397}, {"A_title": "test($compile): fix IE specific test.", "A_clean_title": ["test", "compil", "fix", "ie", "specif", "test"], "B_title": "fix($location): always decode special chars in `$location.url(value)`", "B_clean_title": ["fix", "locat", "alway", "decod", "special", "char", "locat", "url", "valu"], "A_body": "For some reason, the tests pass but the build doesn't turn green on http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/ (e.g. http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/89/  )\n", "A_clean_body": ["some", "reason", "test", "pass", "but", "build", "n't", "turn", "green", "http", "angularj", "js", "chirayu", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular", "http", "angularj", "js", "chirayu", "89", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular"], "B_body": "See https://github.com/angular/angular.js/issues/16312#issuecomment-348268476\r\n\r\n\r\n@bourey - can you check that with this regression fix your original issue is still resolved?", "B_clean_body": ["see", "http", "github", "com", "angular", "angular", "js", "issu", "16312", "issuecom", "348268476", "bourey", "you", "check", "that", "thi", "regress", "fix", "your", "origin", "issu", "still", "resolv"], "title_sim": [0.0029929376654566696], "body_sim": [0.3816697719299453], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1621}, {"A_title": "Fix($animate) : svg element with classNameFilter animation fix.", "A_clean_title": ["fix", "anim", "svg", "element", "classnamefilt", "class", "name", "filter", "anim", "fix"], "B_title": "fix(ngMockE2E): ensure that mocked $httpBackend uses correct $browser", "B_clean_title": ["fix", "ngmocke2", "ng", "mock", "e2e", "ensur", "that", "mock", "httpbackend", "http", "backend", "use", "correct", "browser"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nclassNameFilter for animation with svg element should work same as the other elements.\n\n**What is the current behavior? (You can also link to an open issue here)**\nclassNameFilter not working for svg element.\n\n**What is the new behavior (if this is a feature change)?**\nclassNameFilter also handles svg element.\n\n**Does this PR introduce a breaking change?**\nNO\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nThis PR fix #14508 issue.\n\nFix($animate) : svg element with classNameFilter animation fix.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "classnamefilt", "class", "name", "filter", "anim", "svg", "element", "work", "same", "as", "other", "element", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "classnamefilt", "class", "name", "filter", "not", "work", "svg", "element", "**what", "new", "behavior", "thi", "featur", "chang", "classnamefilt", "class", "name", "filter", "also", "handl", "svg", "element", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "pr", "fix", "14508", "issu", "fix", "anim", "svg", "element", "classnamefilt", "class", "name", "filter", "anim", "fix"], "B_body": "The fix from #13124 enabled ngMock and ngMockE2E to work together but\r\ndid it in a way that meant that the \"real\" `$httpBackend` service that\r\nwas used in pass-through depended upon a different `$browser` service\r\nto the rest of the app.\r\n\r\nThis broke Protractor since it watches the `$browser` for outstanding\r\nrequests and the pass through requests were being tracked by the wrong\r\n`$browser` instance.\r\n\r\nCloses #15593\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["fix", "13124", "enabl", "ngmock", "ng", "mock", "ngmocke2", "ng", "mock", "e2e", "work", "togeth", "but", "did", "it", "way", "that", "meant", "that", "real", "httpbackend", "http", "backend", "servic", "that", "wa", "use", "pass", "through", "depend", "upon", "differ", "browser", "servic", "rest", "app", "thi", "broke", "protractor", "sinc", "it", "watch", "browser", "outstand", "request", "pass", "through", "request", "were", "be", "track", "by", "wrong", "browser", "instanc", "close", "15593", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.10117392699688171], "body_sim": [0.7859245461954464], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0016932368610060593, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 260}, {"A_title": "Remove angular.uppercase/lowercase", "A_clean_title": ["remov", "angular", "uppercas", "lowercas"], "B_title": "refactor($sniffer): remove $sniffer.vendorPrefix", "B_clean_title": ["refactor", "sniffer", "remov", "sniffer", "vendorprefix", "vendor", "prefix"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix/refactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nwe expose lowercase/uppercase on the public angular object\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nyes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "expos", "lowercas", "uppercas", "public", "angular", "object", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nremoval\n\n**What is the current behavior? (You can also link to an open issue here)**\n`$sniffer.vendorPrefix` is a vendor prefix of the current browser in the form used for properties in `element.style`, e.g. `Moz` or `Webkit`. It's an incorrect prefix in case of IE/Edge - it should be `ms`, not `Ms` there as this prefix is only available in the lowercase form.\n\n**What is the new behavior (if this is a feature change)?**\nThe API doesn't exist.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nPreviously, Angular tried to detect the CSS prefix the browser supports and\nthen use the saved one. This strategy is not ideal as currently some browsers\nare supporting more than one vendor prefix. The best example is Microsoft Edge\nthat added -webkit- prefixes to be more Web-compatible; Firefox is doing\na similar thing on mobile. Some of the -webkit--prefixed things are now even\ngetting into specs to sanction that they're now required for Web compatibility.\n\nIn some cases Edge even supports only the -webkit--prefixed property; one\nexample is -webkit-appearance.\n\n$sniffer.vendorPrefix is no longer used in Angular core outside of $sniffer\nitself; taking that and the above problems into account, it's better to just\nremove it. The only remaining use case was an internal use in detection of\nsupport for transitions/animations but we can directly check the webkit prefix\nthere manually; no other prefix matters for them anyway.\n\n$sniffer is undocumented API so this removal is not a breaking change. However,\nif you've previously been using it in your code, just paste the following\nto get the same function:\n\n```\nvar vendorPrefix = (function() {\n  var prefix, prop, match;\n  var vendorRegex = /^(Moz|webkit|ms)(?=[A-Z])/;\n  for (prop in document.createElement('div').style) {\n    if ((match = vendorRegex.exec(prop))) {\n      prefix = match[0];\n      break;\n    }\n  }\n  return prefix;\n})();\n```\n\nThe vendorPrefix variable will contain what $sniffer.vendorPrefix used to.\n\nNote that we advise to not check for vendor prefixes this way; if you have to\ndo it, it's better to check it separately for each CSS property used for the\nreasons described at the beginning. If you use jQuery, you don't have to do\nanything; it automatically adds vendor prefixes to CSS prefixes for you in\nthe .css() method.\n\nFixes #13690\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "remov", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "sniffer", "vendorprefix", "vendor", "prefix", "vendor", "prefix", "current", "browser", "form", "use", "properti", "element", "style", "moz", "or", "webkit", "it", "'s", "incorrect", "prefix", "case", "ie", "edg", "it", "ms", "not", "ms", "there", "as", "thi", "prefix", "onli", "avail", "lowercas", "form", "**what", "new", "behavior", "thi", "featur", "chang", "api", "n't", "exist", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "previous", "angular", "tri", "detect", "css", "prefix", "browser", "support", "then", "use", "save", "one", "thi", "strategi", "not", "ideal", "as", "current", "some", "browser", "are", "support", "more", "than", "one", "vendor", "prefix", "best", "exampl", "microsoft", "edg", "that", "ad", "webkit", "prefix", "more", "web", "compat", "firefox", "do", "similar", "thing", "mobil", "some", "webkit", "prefix", "thing", "are", "now", "even", "get", "into", "spec", "sanction", "that", "they", "'re", "now", "requir", "web", "compat", "some", "case", "edg", "even", "support", "onli", "webkit", "prefix", "properti", "one", "exampl", "webkit", "appear", "sniffer", "vendorprefix", "vendor", "prefix", "no", "longer", "use", "angular", "core", "outsid", "sniffer", "itself", "take", "that", "abov", "problem", "into", "account", "it", "'s", "better", "just", "remov", "it", "onli", "remain", "use", "case", "wa", "intern", "use", "detect", "support", "transit", "anim", "but", "we", "directli", "check", "webkit", "prefix", "there", "manual", "no", "other", "prefix", "matter", "them", "anyway", "sniffer", "undocu", "api", "so", "thi", "remov", "not", "break", "chang", "howev", "you", "'ve", "previous", "been", "it", "your", "code", "just", "past", "follow", "get", "same", "function", "var", "vendorprefix", "vendor", "prefix", "function", "var", "prefix", "prop", "match", "var", "vendorregex", "vendor", "regex", "moz|webkit|m", "prop", "document", "createel", "creat", "element", "'div", "style", "match", "vendorregex", "exec", "vendor", "regex", "prop", "prefix", "match", "break", "return", "prefix", "vendorprefix", "vendor", "prefix", "variabl", "will", "contain", "what", "sniffer", "vendorprefix", "vendor", "prefix", "use", "note", "that", "we", "advis", "not", "check", "vendor", "prefix", "thi", "way", "you", "have", "it", "it", "'s", "better", "check", "it", "separ", "each", "css", "properti", "use", "reason", "describ", "at", "begin", "you", "use", "jqueri", "queri", "you", "n't", "have", "anyth", "it", "automat", "add", "vendor", "prefix", "css", "prefix", "you", "css", "method", "fix", "13690"], "title_sim": [0.5530127542796784], "body_sim": [0.6459362655655301], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 41}, {"A_title": "refactor($parse): remove unnecessary .constant if when collecting inputs", "A_clean_title": ["refactor", "pars", "remov", "unnecessari", "constant", "when", "collect", "input"], "B_title": "Feat ngmodel override updateOn 1.6", "B_clean_title": ["feat", "ngmodel", "overrid", "updateon", "updat"], "A_body": "The `if`s are unnecessary because the calculation of `ast.toWatch` should have taken constants into account already.", "A_clean_body": ["are", "unnecessari", "becaus", "calcul", "ast", "towatch", "watch", "have", "taken", "constant", "into", "account", "alreadi"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFeat + docs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nI've removed the complex example of updateOn / debounce because it makes less sense with the default behavior of 1.6\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "'ve", "remov", "complex", "exampl", "updateon", "updat", "debounc", "becaus", "it", "make", "less", "sens", "default", "behavior"], "title_sim": [0.019153004936655654], "body_sim": [0.1413551611638417], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 144}, {"A_title": "refactor(jqLite): stop patching individual jQuery methods", "A_clean_title": ["refactor", "jqlite", "jq", "lite", "stop", "patch", "individu", "jqueri", "queri", "method"], "B_title": "docs($sceProvider): XSS when turning of SCE", "B_clean_title": ["doc", "sceprovid", "sce", "provid", "xss", "when", "turn", "sce"], "A_body": "Currently Angular monkey-patches a few jQuery methods that remove elements\nfrom the DOM. Since methods like .remove() have multiple signatures\nthat can change what's actually removed, Angular needs to carefully\nrepeat them in its patching or it can break apps using jQuery correctly.\nSuch a strategy is also not future-safe.\n\nInstead of patching individual methods on the prototype, it's better to\nhook into jQuery.cleanData and trigger custom events there. This should be\nsafe as e.g. jQuery UI needs it and uses it. It'll also be future-safe.\n\nThe only drawback is that $destroy is no longer triggered when using $detach\nbut:\n1. Angular doesn't use this method, jqLite doesn't implement it.\n2. Detached elements can be re-attached keeping all their events & data\n    so it makes sense that $destroy is not triggered on them.\n3. The approach from this commit is so much safer that any issues with\n    .detach() working differently are outweighed by the robustness of the code.\n\nBREAKING CHANGE: the $destroy event is no longer triggered when using the\njQuery detach() method. If you want to destroy Angular data attached to the\nelement, use remove().\n\ncc @caitp\n", "A_clean_body": ["current", "angular", "monkey", "patch", "few", "jqueri", "queri", "method", "that", "remov", "element", "dom", "sinc", "method", "like", "remov", "have", "multipl", "signatur", "that", "chang", "what", "'s", "actual", "remov", "angular", "need", "care", "repeat", "them", "it", "patch", "or", "it", "break", "app", "jqueri", "queri", "correctli", "such", "strategi", "also", "not", "futur", "safe", "instead", "patch", "individu", "method", "prototyp", "it", "'s", "better", "hook", "into", "jqueri", "cleandata", "queri", "clean", "data", "trigger", "custom", "event", "there", "thi", "safe", "as", "jqueri", "queri", "ui", "need", "it", "use", "it", "it", "'ll", "also", "futur", "safe", "onli", "drawback", "that", "destroy", "no", "longer", "trigger", "when", "detach", "but", "angular", "n't", "use", "thi", "method", "jqlite", "jq", "lite", "n't", "implement", "it", "detach", "element", "re", "attach", "keep", "all", "their", "event", "data", "so", "it", "make", "sens", "that", "destroy", "not", "trigger", "them", "approach", "thi", "commit", "so", "much", "safer", "that", "ani", "issu", "detach", "work", "differ", "are", "outweigh", "by", "robust", "code", "break", "chang", "destroy", "event", "no", "longer", "trigger", "when", "jqueri", "queri", "detach", "method", "you", "want", "destroy", "angular", "data", "attach", "element", "use", "remov", "cc", "caitp"], "B_body": "Document that turning off SCE is very, very dangerous and should normally not be used by applications.\n", "B_clean_body": ["document", "that", "turn", "off", "sce", "veri", "veri", "danger", "normal", "not", "use", "by", "applic"], "title_sim": [-0.0418455423593366], "body_sim": [0.16338233373983377], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 515}, {"A_title": "feat($rootScope): allow suspending and resuming watchers on scope", "A_clean_title": ["feat", "rootscop", "root", "scope", "allow", "suspend", "resum", "watcher", "scope"], "B_title": "refactor($compile): remove unnecessary try/catch", "B_clean_title": ["refactor", "compil", "remov", "unnecessari", "tri", "catch"], "A_body": "This is a rebase of @shahata's original PR at #10658.\r\nWe need to think about @lgalfaso's concerns (https://github.com/angular/angular.js/pull/10658#issuecomment-75211793 and https://github.com/angular/angular.js/pull/10658#issuecomment-78611215) before merging...", "A_clean_body": ["thi", "rebas", "shahata", "'s", "origin", "pr", "at", "10658", "we", "need", "think", "about", "lgalfaso", "'s", "concern", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "75211793", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "78611215", "befor", "merg"], "B_body": "I don't see anything in there that could throw...\n", "B_clean_body": ["n't", "see", "anyth", "there", "that", "could", "throw"], "title_sim": [0.08781513107132317], "body_sim": [0.2753674052236573], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.08612076622267041, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 725}, {"A_title": "WIP: even-more-perf-rebased", "A_clean_title": ["wip", "even", "more", "perf", "rebas"], "B_title": "fix($parse): do not shallow-watch inputs when wrapped in an interceptor fn", "B_clean_title": ["fix", "pars", "not", "shallow", "watch", "input", "when", "wrap", "interceptor", "fn"], "A_body": "ignore this pr, it's here just for CI testing\n", "A_clean_body": ["ignor", "thi", "pr", "it", "'s", "here", "just", "ci", "test"], "B_body": "Fixes #15905 \r\n\r\nThis basically applies the same as b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f to interceptors.\r\n\r\nFor example normally when watching `[var]` the `var` only needs to be shallow-watched. But if that expression then gets wrapped in an interceptor such as `$parse('[var]', interceptor)` we must assume the `interceptor` is non-pure and might read state from within the `var` (just like filters/functions...).\r\n\r\nThis tries to preserve shallow watching of things behind operators such as `!` by distinguishing if an expression is pure due to an operator such as `!` (\"absolute\") or pure only if no parent operation wants to deep watch it (\"relative\").  This way when wrapped in an interceptor the \"absolute\" ones can still be shallow watched, while the \"relative\" ones that the interceptor has access to can no longer be shallow watched.\r\n\r\nThis still doesn't fully restore the 1.6.3 ng-class functionality because it still doesn't do a deep-watch for one-time bindings like 1.6.3 did. The one (famous last words...) remaining regression from 1.6.3 is demonstrated by the modified ng-class spec (objects-in-literals-with-interceptors-in-one-time bindings).  This is due to [this annoying condition](https://github.com/angular/angular.js/blob/b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f/src/ng/parse.js#L1946-L1948) which I really wish I could find a better method of doing...", "B_clean_body": ["fix", "15905", "thi", "basic", "appli", "same", "as", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "interceptor", "exampl", "normal", "when", "watch", "var", "var", "onli", "need", "shallow", "watch", "but", "that", "express", "then", "get", "wrap", "interceptor", "such", "as", "pars", "var", "interceptor", "we", "must", "assum", "interceptor", "non", "pure", "might", "read", "state", "within", "var", "just", "like", "filter", "function", "thi", "tri", "preserv", "shallow", "watch", "thing", "behind", "oper", "such", "as", "by", "distinguish", "express", "pure", "due", "oper", "such", "as", "absolut", "or", "pure", "onli", "no", "parent", "oper", "want", "deep", "watch", "it", "rel", "thi", "way", "when", "wrap", "interceptor", "absolut", "one", "still", "shallow", "watch", "while", "rel", "one", "that", "interceptor", "ha", "access", "no", "longer", "shallow", "watch", "thi", "still", "n't", "fulli", "restor", "ng", "class", "function", "becaus", "it", "still", "n't", "deep", "watch", "one", "time", "bind", "like", "did", "one", "famou", "last", "word", "remain", "regress", "demonstr", "by", "modifi", "ng", "class", "spec", "object", "liter", "interceptor", "one", "time", "bind", "thi", "due", "thi", "annoy", "condit", "http", "js", "github", "com", "angular", "angular", "js", "blob", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "src", "ng", "pars", "l1946", "l1948", "which", "realli", "wish", "could", "find", "better", "method", "do"], "title_sim": [-0.09174631249385115], "body_sim": [0.16320757160527175], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.017890253253898297, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1015}, {"A_title": "fix(sanitizeUri): sanitize URIs that contain IDEOGRAPHIC SPACE chars", "A_clean_title": ["fix", "sanitizeuri", "sanit", "uri", "sanit", "uri", "ur", "that", "contain", "ideograph", "space", "char"], "B_title": "fix(ngView): use animation promises ensure that only one leave animation...", "B_clean_title": ["fix", "ngview", "ng", "view", "use", "anim", "promis", "ensur", "that", "onli", "one", "leav", "anim"], "A_body": "Chrome 62 was not sanitizing dangerous URLs containing\r\nJavaScript, if they started with these \"whitespace\" characters.\r\n\r\nCloses #16288\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#16288\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nURIs are sanitized correctly on Chrome 62\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["chrome", "62", "wa", "not", "sanit", "danger", "url", "ur", "ls", "contain", "javascript", "java", "script", "they", "start", "these", "whitespac", "charact", "close", "16288", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "16288", "**what", "new", "behavior", "thi", "featur", "chang", "uri", "ur", "are", "sanit", "correctli", "chrome", "62", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "... occurs at a time\n\nthe tracking depended on a local flag variable, which was susceptible to corruption due to\nrace conditions.\n\nCloses #9355\nCloses #7606\n", "B_clean_body": ["occur", "at", "time", "track", "depend", "local", "flag", "variabl", "which", "wa", "suscept", "corrupt", "due", "race", "condit", "close", "9355", "close", "7606"], "title_sim": [0.03570465212377171], "body_sim": [0.07114836398727357], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1125}, {"A_title": "wip: feat(ngModel): run formatters / setModelValue", "A_clean_title": ["wip", "feat", "ngmodel", "ng", "model", "run", "formatt", "setmodelvalu", "set", "model", "valu"], "B_title": "refactor($controller): remove unused injected $window", "B_clean_title": ["refactor", "control", "remov", "unus", "inject", "window"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's currently no way to manually run the model -> view pipeline / formatters\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAn API to run the whole pipeline / the formatters is introduced.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nThe PR includes both a `$format` and a `$setModelValue` function. I think only one is needed, we just need to decide which one.\r\n\r\n$format:\r\n\r\n- PRO: does the most needed thing, very straightforward: run the formatters and updates the viewValue\r\n- CON: developer must run $render manually\r\n- CON: empty classes are set even though the DOM is not updated. Could be moved to $render()\r\n- CON: no equivalent on the view -> model side (inconsistent API)\r\n\r\n$setModelValue\r\n- PRO: equivalent to $setViewValue, runs the whole pipeline\r\n- CON: unintuitive that the function argument should / must be set to the current $modelValue, so the control does not get out of sync with the scope (same behavior as $setViewValue though)\r\n- CON: only runs $render if the viewValue has actually changed.\r\n- CON: always runs the validation, even though it might not be necessary\r\n\r\nBoth methods can handle the basic case, where an app developer wants to run the formatters the view -> model pipeline has been run, see https://github.com/angular/angular.js/issues/3407 or https://github.com/angular/angular.js/pull/5221\r\n\r\nI personally tend to introduce `$format` as it has the smaller surface area and introduces fewer side effects. The full model -> view pipeline is not really needed for most cases.\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "current", "no", "way", "manual", "run", "model", "view", "pipelin", "formatt", "**what", "new", "behavior", "thi", "featur", "chang", "api", "run", "whole", "pipelin", "formatt", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "pr", "includ", "both", "format", "setmodelvalu", "set", "model", "valu", "function", "think", "onli", "one", "need", "we", "just", "need", "decid", "which", "one", "format", "pro", "most", "need", "thing", "veri", "straightforward", "run", "formatt", "updat", "viewvalu", "view", "valu", "con", "develop", "must", "run", "render", "manual", "con", "empti", "class", "are", "set", "even", "though", "dom", "not", "updat", "could", "move", "render", "con", "no", "equival", "view", "model", "side", "inconsist", "api", "setmodelvalu", "set", "model", "valu", "pro", "equival", "setviewvalu", "set", "view", "valu", "run", "whole", "pipelin", "con", "unintuit", "that", "function", "argument", "must", "set", "current", "modelvalu", "model", "valu", "so", "control", "not", "get", "out", "sync", "scope", "same", "behavior", "as", "setviewvalu", "set", "view", "valu", "though", "con", "onli", "run", "render", "viewvalu", "view", "valu", "ha", "actual", "chang", "con", "alway", "run", "valid", "even", "though", "it", "might", "not", "necessari", "both", "method", "handl", "basic", "case", "where", "app", "develop", "want", "run", "formatt", "view", "model", "pipelin", "ha", "been", "run", "see", "http", "github", "com", "angular", "angular", "js", "issu", "3407", "or", "http", "github", "com", "angular", "angular", "js", "pull", "5221", "person", "tend", "introduc", "format", "as", "it", "ha", "smaller", "surfac", "area", "introduc", "fewer", "side", "effect", "full", "model", "view", "pipelin", "not", "realli", "need", "most", "case"], "B_body": "This got left behind after e269c14425a3209040f65c022658770e00a36f16", "B_clean_body": ["thi", "got", "left", "behind", "after", "e269c14425a3209040f65c022658770e00a36f16"], "title_sim": [-0.04254983947342386], "body_sim": [0.13865762288791075], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 183}, {"A_title": "fix($location): always decode special chars in `$location.url(value)`", "A_clean_title": ["fix", "locat", "alway", "decod", "special", "char", "locat", "url", "valu"], "B_title": "fix($parse): do not shallow-watch inputs to one-time intercepted expressions", "B_clean_title": ["fix", "pars", "not", "shallow", "watch", "input", "one", "time", "intercept", "express"], "A_body": "See https://github.com/angular/angular.js/issues/16312#issuecomment-348268476\r\n\r\n\r\n@bourey - can you check that with this regression fix your original issue is still resolved?", "A_clean_body": ["see", "http", "github", "com", "angular", "angular", "js", "issu", "16312", "issuecom", "348268476", "bourey", "you", "check", "that", "thi", "regress", "fix", "your", "origin", "issu", "still", "resolv"], "B_body": "This was missed in aac5623247a86681cbe0e1c8179617b816394c1d\r\n\r\nDepends on #15958, will be fixed in master by #16015 (I've added the test there as well).", "B_clean_body": ["thi", "wa", "miss", "aac5623247a86681cbe0e1c8179617b816394c1d", "depend", "15958", "will", "fix", "master", "by", "16015", "'ve", "ad", "test", "there", "as", "well"], "title_sim": [0.07701315815906047], "body_sim": [0.18557970573370847], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 167}, {"A_title": "fix(form): preperly clean up when invalid widget is removed", "A_clean_title": ["fix", "form", "preperli", "clean", "up", "when", "invalid", "widget", "remov"], "B_title": "refactor($compile): reuse shared simpleCompare method", "B_clean_title": ["refactor", "compil", "reus", "share", "simplecompar", "simpl", "compar", "method"], "A_body": "Removing invalid widget sometimes resulted in improper cleanup of the form state.\n", "A_clean_body": ["remov", "invalid", "widget", "sometim", "result", "improp", "cleanup", "form", "state"], "B_body": "I think this could be used in some other places as well once it's available...", "B_clean_body": ["think", "thi", "could", "use", "some", "other", "place", "as", "well", "onc", "it", "'s", "avail"], "title_sim": [0.0892049696798604], "body_sim": [-0.07721193970998577], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1814}, {"A_title": "chore(ci): remove repeated tests running from Travis build", "A_clean_title": ["chore", "ci", "remov", "repeat", "test", "run", "travi", "build"], "B_title": "docs($animate): detail options object", "B_clean_title": ["doc", "anim", "detail", "option", "object"], "A_body": "In b2902446eb41591f5d868846d3c5bad3a888bcba the doce2e tests were moved\ninto the 'unit' test job on Travis, but only half of this change ever made\nit into v1.2.x. This change fixes up the other half, so that the doce2e\ntests are run only once.\n", "A_clean_body": ["b2902446eb41591f5d868846d3c5bad3a888bcba", "doce2", "test", "were", "move", "into", "'unit", "test", "job", "travi", "but", "onli", "half", "thi", "chang", "ever", "made", "it", "into", "v1", "thi", "chang", "fix", "up", "other", "half", "so", "that", "doce2", "test", "are", "run", "onli", "onc"], "B_body": "- Document options object used in various $animate methods\n\nThis should address #12645.\n", "B_clean_body": ["document", "option", "object", "use", "variou", "anim", "method", "thi", "address", "12645"], "title_sim": [0.04435904552633628], "body_sim": [0.27119657500306416], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 611}, {"A_title": "docs(ngNonBindable): Document effect on attributes", "A_clean_title": ["doc", "ngnonbind", "ng", "non", "bindabl", "document", "effect", "attribut"], "B_title": "chore(node): update semver", "B_clean_title": ["chore", "node", "updat", "semver"], "A_body": "The phrase \"contents of the current DOM element\" may be interpreted either as\r\ninclusive of the DOM element's attributes or as exclusive of the attributes.\r\nThis situation concerns markup such as:\r\n\r\n    <div ng-non-bindable ng-controller=\"MyController\"></div>\r\n\r\nIn practice, AngularJS does not compile or bind attribute values for elements\r\nwhich specify the `ng-non-bindable` directive. Extend the documentation to\r\ndefinitely describe this behavior.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["phrase", "content", "current", "dom", "element", "may", "interpret", "either", "as", "inclus", "dom", "element", "'s", "attribut", "or", "as", "exclus", "attribut", "thi", "situat", "concern", "markup", "such", "as", "div", "ng", "non", "bindabl", "ng", "controller=", "mycontrol", "my", "control", "div", "practic", "angularj", "angular", "js", "not", "compil", "or", "bind", "attribut", "valu", "element", "which", "specifi", "ng", "non", "bindabl", "direct", "extend", "document", "definit", "describ", "thi", "behavior", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.043113628457423524], "body_sim": [0.8687906002325044], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 49}, {"A_title": "chore(ci): disable unit testing on Firefox", "A_clean_title": ["chore", "ci", "disabl", "unit", "test", "firefox"], "B_title": "fix($location): decode non-component special chars in Hashbang URLS", "B_clean_title": ["fix", "locat", "decod", "non", "compon", "special", "char", "hashbang", "url"], "A_body": "Related to https://github.com/angular/angular.js/issues/15987\r\n\r\n", "A_clean_body": ["relat", "http", "github", "com", "angular", "angular", "js", "issu", "15987"], "B_body": "Fixes https://github.com/angular/angular.js/pull/16316#issuecomment-347527097\r\n", "B_clean_body": ["fix", "http", "github", "com", "angular", "angular", "js", "pull", "16316", "issuecom", "347527097"], "title_sim": [-0.044290928234004476], "body_sim": [0.9185683424087908], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 198}, {"A_title": "fix($sanitize): prevent clobbered elements from freezing the browser", "A_clean_title": ["fix", "sanit", "prevent", "clobber", "element", "freez", "browser"], "B_title": "chore(*): update all Karma-related packages except Karma", "B_clean_title": ["chore", "updat", "all", "karma", "relat", "packag", "except", "karma"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nbrowser can be frozen with bad HTML\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nan exception is thrown instead\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browser", "frozen", "bad", "html", "**what", "new", "behavior", "thi", "featur", "chang", "except", "thrown", "instead", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["updat", "karma", "chrome", "launcher", "add", "support", "chromeheadless", "chrome", "headless", "chromecanaryheadless", "chrome", "canari", "headless", "launcher", "test", "karma", "start", "karma", "jqlite", "conf", "js", "browsers=chromecanaryheadless", "browsers=chrom", "canari", "headless", "updat", "karma", "firefox", "launcher", "disabl", "multi", "process", "which", "may", "increas", "stabil", "jenkin", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.0072761415883407276], "body_sim": [0.9672815622285734], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 84}, {"A_title": "fix($controller): remove the option to instantiate controllers from c\u2026", "A_clean_title": ["fix", "control", "remov", "option", "instanti", "control", "c\u2026"], "B_title": "fix($sanitize): sanitize `xml:base` attributes", "B_clean_title": ["fix", "sanit", "sanit", "xml", "base", "attribut"], "A_body": "\u2026onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n", "A_clean_body": ["\u2026onstructor", "window", "thi", "also", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "close", "15349", "break", "chang", "option", "instanti", "control", "constructor", "global", "window", "object", "ha", "been", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "that", "could", "enabl", "thi", "behavior", "ha", "been", "remov", "thi", "behavior", "had", "been", "deprec", "sinc", "angularj", "angular", "js", "v1", "becaus", "pollut", "global", "scope", "bad", "migrat", "remov", "call", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "config", "regist", "your", "control", "via", "modul", "api", "or", "controllerprovid", "control", "provid", "angular", "modul", "'mymodul", "'mi", "modul", "control", "'mycontrol", "'mi", "control", "function", "angular", "modul", "'mymodul", "'mi", "modul", "config", "function", "controllerprovid", "control", "provid", "controllerprovid", "regist", "control", "provid", "'mycontrol", "'mi", "control", "function"], "B_body": "On Firefox there is a XSS vulnerability if a malicious attacker\r\ncan write into the `xml:base` attribute on an SVG anchor.\r\n", "B_clean_body": ["firefox", "there", "xss", "vulner", "malici", "attack", "write", "into", "xml", "base", "attribut", "svg", "anchor"], "title_sim": [0.0013938805952033594], "body_sim": [-0.010782616945543357], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 313}, {"A_title": "docs(developers.md): update node version as specified in package.json", "A_clean_title": ["doc", "develop", "md", "updat", "node", "version", "as", "specifi", "packag", "json"], "B_title": "fix(http): do not allow encoded callback params in jsonp requests", "B_clean_title": ["fix", "http", "not", "allow", "encod", "callback", "param", "jsonp", "request"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`DEVELOPERS.MD` contains different node version from package.json. `Yarn install` works with 8.9.1+ only and doesn't work with 6.x as specified in docs.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nDocs are updated in accordance with package.json.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNot.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nSorry, this might be a very small and not significant fix, but I guess still requires some attention.\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "develop", "md", "contain", "differ", "node", "version", "packag", "json", "yarn", "instal", "work", "1+", "onli", "n't", "work", "as", "specifi", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "are", "updat", "accord", "packag", "json", "**doe", "thi", "pr", "introduc", "break", "chang", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "sorri", "thi", "might", "veri", "small", "not", "signific", "fix", "but", "guess", "still", "requir", "some", "attent"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nsecurity vector open in jsonp\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nvector is closed\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "secur", "vector", "open", "jsonp", "**what", "new", "behavior", "thi", "featur", "chang", "vector", "close", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.03831867226482755], "body_sim": [0.8891479989142261], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 119}, {"A_title": "Scenario runner element", "A_clean_title": ["scenario", "runner", "element"], "B_title": "feat($resource): add support for `request` and `requestError` interceptors", "B_clean_title": ["feat", "resourc", "add", "support", "request", "requesterror", "request", "error", "interceptor"], "A_body": "Adds all the missing jQuery methods to element() DSL\n", "A_clean_body": ["add", "all", "miss", "jqueri", "queri", "method", "element", "dsl"], "B_body": "Just a rebased version of #13273.", "B_clean_body": ["just", "rebas", "version", "13273"], "title_sim": [-0.02609624627682413], "body_sim": [-0.08202058424179982], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03773850919649656, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2289}, {"A_title": "doc:$route: Fix $route example and couple of typos in docs", "A_clean_title": ["doc", "rout", "fix", "rout", "exampl", "coupl", "typo", "doc"], "B_title": "feat($parse): support trailing commas in object & array literals", "B_clean_title": ["feat", "pars", "support", "trail", "comma", "object", "array", "liter"], "A_body": "Rewrite $route example a bit, as it required $location and $route services\nto be eager published in the root scope.\n\nAdd missing partials (move them to docs/examples directory)\n\nFix small typos in formatter and ng:options docs.\n", "A_clean_body": ["rewrit", "rout", "exampl", "bit", "as", "it", "requir", "locat", "rout", "servic", "eager", "publish", "root", "scope", "add", "miss", "partial", "move", "them", "doc", "exampl", "directori", "fix", "small", "typo", "formatt", "ng", "option", "doc"], "B_body": "Per ECMAScript 5.1 specification trailing commas are allowed in object and\narray literals. All modern browsers as well as IE>8 support this syntax.\nThis commit adds support for such syntax to Angular expressions.\n\nI'm creating a new pull request as @btford asked me to re-open #3685 with an explanation\nand I don't have privileges to re-open prs.\n\nMain use case of trailing commas are when using multi-line notation for objects/arrays. When you have sth like:\n\n``` javascript\n{\n    par1: \"val1\",\n    par3: \"val3\",\n    par2: \"val2\",\n}\n```\n\nit's much easier to move lines 2. and 3. around without causing errors. Such reordering is cumberscome when trailing commas are ommited. I agree readability is a little reduced when using a single-line form, but for multi-line ones it's IMO a godsend.\n\nCurrently there are no good tools to minify Angular expressions so this might be less used form now but once such a tool is created, for longer objects/arrays such notation would help.\n", "B_clean_body": ["per", "ecmascript", "ecma", "script", "specif", "trail", "comma", "are", "allow", "object", "array", "liter", "all", "modern", "browser", "as", "well", "as", "ie", "support", "thi", "syntax", "thi", "commit", "add", "support", "such", "syntax", "angular", "express", "'m", "creat", "new", "pull", "request", "as", "btford", "ask", "me", "re", "open", "3685", "explan", "n't", "have", "privileg", "re", "open", "pr", "main", "use", "case", "trail", "comma", "are", "when", "multi", "line", "notat", "object", "array", "when", "you", "have", "sth", "like", "javascript", "par1", "val1", "par3", "val3", "par2", "val2", "it", "'s", "much", "easier", "move", "line", "around", "without", "caus", "error", "such", "reorder", "cumberscom", "when", "trail", "comma", "are", "ommit", "agre", "readabl", "littl", "reduc", "when", "singl", "line", "form", "but", "multi", "line", "one", "it", "'s", "imo", "godsend", "current", "there", "are", "no", "good", "tool", "minifi", "angular", "express", "so", "thi", "might", "less", "use", "form", "now", "but", "onc", "such", "tool", "creat", "longer", "object", "array", "such", "notat", "would", "help"], "title_sim": [0.0456827150407168], "body_sim": [0.18212990346325347], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.008760960375066039, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 782}, {"A_title": "chore($sniffer): Remove $sniffer.hashchange", "A_clean_title": ["chore", "sniffer", "remov", "sniffer", "hashchang"], "B_title": "Fix deprecate ngtouch", "B_clean_title": ["fix", "deprec", "ngtouch"], "A_body": "The hashchange event is not supported only in ancient browsers like Android<2.2\nand IE<8. Angular never really supported IE7 and in 1.3 where support for IE8\nis dropped it makes even less sense to check for hashchange support.\n", "A_clean_body": ["hashchang", "event", "not", "support", "onli", "ancient", "browser", "like", "android", "ie", "angular", "never", "realli", "support", "ie7", "where", "support", "ie8", "drop", "it", "make", "even", "less", "sens", "check", "hashchang", "support"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.0342872966884611], "body_sim": [0.10895996145292285], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1212}, {"A_title": "refactor($rootScope): consistently use noop as the default $watch listener", "A_clean_title": ["refactor", "rootscop", "root", "scope", "consist", "use", "noop", "as", "default", "watch", "listen"], "B_title": "Overload \"component\" method to accept object map of components", "B_clean_title": ["overload", "compon", "method", "accept", "object", "map", "compon"], "A_body": "By doing the `isFunction(listener)` check before delegating to `$$watchDelegate` it removes that check from some `$$watchDelegate` methods.", "A_clean_body": ["by", "do", "isfunct", "function", "listen", "check", "befor", "deleg", "watchdeleg", "watch", "deleg", "it", "remov", "that", "check", "some", "watchdeleg", "watch", "deleg", "method"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\"component\" method does not allow multiple components registration\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\"component\" method accepts object as a parameter where the keys are component names and the values are the component definition objects\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compon", "method", "not", "allow", "multipl", "compon", "registr", "**what", "new", "behavior", "thi", "featur", "chang", "compon", "method", "accept", "object", "as", "paramet", "where", "key", "are", "compon", "name", "valu", "are", "compon", "definit", "object", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.007405235250354121], "body_sim": [0.10264855468011538], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.001939675529582351, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 157}, {"A_title": "test($log): fix up to work with Safari 9", "A_clean_title": ["test", "log", "fix", "up", "work", "safari"], "B_title": "chore(docs): update to lunr-0.5.12", "B_clean_title": ["chore", "doc", "updat", "lunr", "12"], "A_body": "On Safari 9.0.2, you are not allowed to write to `sourceUrl` or `line`\non a native Error object.\n\nThis commit uses a custom error instead.\n", "A_clean_body": ["safari", "you", "are", "not", "allow", "write", "sourceurl", "sourc", "url", "or", "line", "nativ", "error", "object", "thi", "commit", "use", "custom", "error", "instead"], "B_body": "This improves the search results for certain terms. Compare the results for **scope**:\nCurrently:\n![search-scope-current](https://cloud.githubusercontent.com/assets/1153097/10083876/adc9c410-6300-11e5-8781-73cb2046f548.PNG)\n\nAfter the update:\n![search-scope-new](https://cloud.githubusercontent.com/assets/1153097/10083878/b0bf0ff4-6300-11e5-8b9a-7e2c87920a73.PNG)\n", "B_clean_body": ["thi", "improv", "search", "result", "certain", "term", "compar", "result", "**scope**", "current", "search", "scope", "current", "http", "6300", "11e5", "8781", "githubusercont", "73cb2046f548", "png", "cloud", "com", "asset", "1153097", "10083876", "adc9c410", "after", "updat", "search", "scope", "new", "http", "6300", "11e5", "8b9a", "githubusercont", "7e2c87920a73", "png", "cloud", "com", "asset", "1153097", "10083878", "b0bf0ff4"], "title_sim": [0.04517549104740627], "body_sim": [0.20391104698822018], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 111}, {"A_title": "test(ngMock): remove a broken jqLite cache clearing", "A_clean_title": ["test", "ngmock", "ng", "mock", "remov", "broken", "jqlite", "jq", "lite", "cach", "clear"], "B_title": "refactor($sniffer): make $sniffer service private", "B_clean_title": ["refactor", "sniffer", "make", "sniffer", "servic", "privat"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA test change.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`angular.element.cache` is reset to an empty object in one spec.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt's no longer reset at all.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nThis is blocking PR #16512.", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "angular", "element", "cach", "reset", "empti", "object", "one", "spec", "**what", "new", "behavior", "thi", "featur", "chang", "it", "'s", "no", "longer", "reset", "at", "all", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "thi", "block", "pr", "16512"], "B_body": "This service has been accidentaly documented in the past, it should not be considered\nto be public api.\n\nI'm also removing fallback to Modernizr since we don't need it.\n\nBreaks any app that depends on this service and its fallback to Modernizr, please\nmigrate to custom \"Modernizr\" service:\n\n```\nmodule.value('Modernizr', function() { return Modernizr; });\n```\n", "B_clean_body": ["thi", "servic", "ha", "been", "accidentali", "document", "past", "it", "not", "consid", "public", "api", "'m", "also", "remov", "fallback", "modernizr", "sinc", "we", "n't", "need", "it", "break", "ani", "app", "that", "depend", "thi", "servic", "it", "fallback", "modernizr", "pleas", "migrat", "custom", "modernizr", "servic", "modul", "valu", "'modernizr", "function", "return", "modernizr"], "title_sim": [0.09183702943405882], "body_sim": [0.20722389302072822], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2192}, {"A_title": "test($compile): fix IE specific test.", "A_clean_title": ["test", "compil", "fix", "ie", "specif", "test"], "B_title": "feat($parse): support trailing commas in object & array literals", "B_clean_title": ["feat", "pars", "support", "trail", "comma", "object", "array", "liter"], "A_body": "For some reason, the tests pass but the build doesn't turn green on http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/ (e.g. http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/89/  )\n", "A_clean_body": ["some", "reason", "test", "pass", "but", "build", "n't", "turn", "green", "http", "angularj", "js", "chirayu", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular", "http", "angularj", "js", "chirayu", "89", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular"], "B_body": "Per ECMAScript 5.1 specification trailing commas are allowed in object and\narray literals. All modern browsers as well as IE>8 support this syntax.\nThis commit adds support for such syntax to Angular expressions.\n\nI'm creating a new pull request as @btford asked me to re-open #3685 with an explanation\nand I don't have privileges to re-open prs.\n\nMain use case of trailing commas are when using multi-line notation for objects/arrays. When you have sth like:\n\n``` javascript\n{\n    par1: \"val1\",\n    par3: \"val3\",\n    par2: \"val2\",\n}\n```\n\nit's much easier to move lines 2. and 3. around without causing errors. Such reordering is cumberscome when trailing commas are ommited. I agree readability is a little reduced when using a single-line form, but for multi-line ones it's IMO a godsend.\n\nCurrently there are no good tools to minify Angular expressions so this might be less used form now but once such a tool is created, for longer objects/arrays such notation would help.\n", "B_clean_body": ["per", "ecmascript", "ecma", "script", "specif", "trail", "comma", "are", "allow", "object", "array", "liter", "all", "modern", "browser", "as", "well", "as", "ie", "support", "thi", "syntax", "thi", "commit", "add", "support", "such", "syntax", "angular", "express", "'m", "creat", "new", "pull", "request", "as", "btford", "ask", "me", "re", "open", "3685", "explan", "n't", "have", "privileg", "re", "open", "pr", "main", "use", "case", "trail", "comma", "are", "when", "multi", "line", "notat", "object", "array", "when", "you", "have", "sth", "like", "javascript", "par1", "val1", "par3", "val3", "par2", "val2", "it", "'s", "much", "easier", "move", "line", "around", "without", "caus", "error", "such", "reorder", "cumberscom", "when", "trail", "comma", "are", "ommit", "agre", "readabl", "littl", "reduc", "when", "singl", "line", "form", "but", "multi", "line", "one", "it", "'s", "imo", "godsend", "current", "there", "are", "no", "good", "tool", "minifi", "angular", "express", "so", "thi", "might", "less", "use", "form", "now", "but", "onc", "such", "tool", "creat", "longer", "object", "array", "such", "notat", "would", "help"], "title_sim": [-0.006224448877083445], "body_sim": [0.2006282944681563], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 58}, {"A_title": "docs($sce): grammar fix - there was a word omitted", "A_clean_title": ["doc", "sce", "grammar", "fix", "there", "wa", "word", "omit"], "B_title": "docs(indexPage.template.html): change bad punctuation in documentatio\u2026", "B_clean_title": ["doc", "indexpag", "templat", "html", "index", "page", "chang", "bad", "punctuat", "documentatio\u2026"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\nno change\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n...teeny letter missing.  Just a grammar change.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "teeni", "letter", "miss", "just", "grammar", "chang"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nDocs update to fix punctuation typo in footer\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee the footer of the Angular official [documentation](https://docs.angularjs.org/) page\n\n**What is the new behavior (if this is a feature change)?**\nThere are no more punctuation typos in the footer\n\n**Does this PR introduce a breaking change?**\nNo, it doesn't. Only affects to the footer.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [] Tests for the changes have been added (for bug fixes / features)\n- [] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nN/A\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "fix", "punctuat", "typo", "footer", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "footer", "angular", "offici", "document", "http", "angularj", "doc", "org", "page", "**what", "new", "behavior", "thi", "featur", "chang", "there", "are", "no", "more", "punctuat", "typo", "footer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "it", "n't", "onli", "affect", "footer", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.12895353512531885], "body_sim": [0.9798633794451684], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 57}, {"A_title": "feat(security): explicitly whitelist URL schemes for bootstrap.", "A_clean_title": ["feat", "secur", "explicitli", "whitelist", "url", "scheme", "bootstrap"], "B_title": "feat(ngModel): provide ng-empty and ng-not-empty CSS classes", "B_clean_title": ["feat", "ngmodel", "ng", "model", "provid", "ng", "empti", "ng", "not", "empti", "css", "class"], "A_body": "Many browsers have some extension URL scheme. It is unclear how many of\r\nthose have the security issue of allowing parser-inserted loads of\r\nextension URLs.\r\n\r\nTo be conservative, this code whitelists the URL schemes that are known\r\nto be subject to CSP, i.e. the ones that are expected and safe.\r\n\r\nNote: there is no change in tests as behavior does not change for any known URL.", "A_clean_body": ["mani", "browser", "have", "some", "extens", "url", "scheme", "it", "unclear", "how", "mani", "those", "have", "secur", "issu", "allow", "parser", "insert", "load", "extens", "url", "ur", "ls", "conserv", "thi", "code", "whitelist", "url", "scheme", "that", "are", "known", "subject", "csp", "one", "that", "are", "expect", "safe", "note", "there", "no", "chang", "test", "as", "behavior", "not", "chang", "ani", "known", "url"], "B_body": "I believe that this feature should be enough to fix #10050\n", "B_clean_body": ["believ", "that", "thi", "featur", "enough", "fix", "10050"], "title_sim": [0.10475780224790698], "body_sim": [0.21981378446643615], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 436}, {"A_title": "perf(ngStyleDirective): use $watchCollection", "A_clean_title": ["perf", "ngstyledirect", "ng", "style", "direct", "use", "watchcollect", "watch", "collect"], "B_title": "chore(docs): update to lunr-0.5.12", "B_clean_title": ["chore", "doc", "updat", "lunr", "12"], "A_body": "This re-commits https://github.com/angular/angular.js/commit/4c8d8ad5083d9dd17c0b8480339d5f95943f1b71 which was [reverted](https://github.com/angular/angular.js/commit/36fd167e1d6668ab497970f491a6d95344e97e41) (with [tests added](https://github.com/angular/angular.js/commit/da75d138b144d196fc2b397c7a86a74528c151a5)).  This is possible now because of 189461f9bf6fda18ddbd16c42f2e959cf939c3da, although note that change is currently causing #15905 so maybe we should hold off on merging this one for now?\r\n\r\nFYI @gdi2290", "A_clean_body": ["thi", "re", "commit", "http", "github", "com", "angular", "angular", "js", "commit", "4c8d8ad5083d9dd17c0b8480339d5f95943f1b71", "which", "wa", "revert", "http", "github", "com", "angular", "angular", "js", "commit", "36fd167e1d6668ab497970f491a6d95344e97e41", "test", "ad", "http", "github", "com", "angular", "angular", "js", "commit", "da75d138b144d196fc2b397c7a86a74528c151a5", "thi", "possibl", "now", "becaus", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "although", "note", "that", "chang", "current", "caus", "15905", "so", "mayb", "we", "hold", "off", "merg", "thi", "one", "now", "fyi", "gdi2290"], "B_body": "This improves the search results for certain terms. Compare the results for **scope**:\nCurrently:\n![search-scope-current](https://cloud.githubusercontent.com/assets/1153097/10083876/adc9c410-6300-11e5-8781-73cb2046f548.PNG)\n\nAfter the update:\n![search-scope-new](https://cloud.githubusercontent.com/assets/1153097/10083878/b0bf0ff4-6300-11e5-8b9a-7e2c87920a73.PNG)\n", "B_clean_body": ["thi", "improv", "search", "result", "certain", "term", "compar", "result", "**scope**", "current", "search", "scope", "current", "http", "6300", "11e5", "8781", "githubusercont", "73cb2046f548", "png", "cloud", "com", "asset", "1153097", "10083876", "adc9c410", "after", "updat", "search", "scope", "new", "http", "6300", "11e5", "8b9a", "githubusercont", "7e2c87920a73", "png", "cloud", "com", "asset", "1153097", "10083878", "b0bf0ff4"], "title_sim": [0.0014435676782225267], "body_sim": [0.40421910722968357], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 581}, {"A_title": "fix(ngModelController): allow $overrideModelOptions to set updateOn", "A_clean_title": ["fix", "ngmodelcontrol", "ng", "model", "control", "allow", "overridemodelopt", "overrid", "model", "option", "set", "updateon", "updat"], "B_title": "docs(guide/External Resources): describe your change...", "B_clean_title": ["doc", "guid", "extern", "resourc", "describ", "your", "chang"], "A_body": "Also adds more docs about \"default\" events and how to override\r\nModelOptions.\r\n\r\nCloses #16351\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["also", "add", "more", "doc", "about", "default", "event", "how", "overrid", "modelopt", "model", "option", "close", "16351", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Deprecating content @ deleted URL\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRemoving URL \r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ X] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["deprec", "content", "delet", "url", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "remov", "url", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.0698161294012339], "body_sim": [0.9081961391350367], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 43}, {"A_title": "refactor($sniffer): make $sniffer service private", "A_clean_title": ["refactor", "sniffer", "make", "sniffer", "servic", "privat"], "B_title": "Fix animation event regression", "B_clean_title": ["fix", "anim", "event", "regress"], "A_body": "This service has been accidentaly documented in the past, it should not be considered\nto be public api.\n\nI'm also removing fallback to Modernizr since we don't need it.\n\nBreaks any app that depends on this service and its fallback to Modernizr, please\nmigrate to custom \"Modernizr\" service:\n\n```\nmodule.value('Modernizr', function() { return Modernizr; });\n```\n", "A_clean_body": ["thi", "servic", "ha", "been", "accidentali", "document", "past", "it", "not", "consid", "public", "api", "'m", "also", "remov", "fallback", "modernizr", "sinc", "we", "n't", "need", "it", "break", "ani", "app", "that", "depend", "thi", "servic", "it", "fallback", "modernizr", "pleas", "migrat", "custom", "modernizr", "servic", "modul", "valu", "'modernizr", "function", "return", "modernizr"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nregression fix for #14321\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n@matsko Do you think you could take a look at this?\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "regress", "fix", "14321", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "matsko", "you", "think", "you", "could", "take", "look", "at", "thi"], "title_sim": [-0.09864885132640726], "body_sim": [0.21340787252627172], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1464}, {"A_title": "Test on latest 2 Safari versions", "A_clean_title": ["test", "latest", "safari", "version"], "B_title": "docs($location): fix examples", "B_clean_title": ["doc", "locat", "fix", "exampl"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "The examples contained tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixed a HTML5 browser scenarion with a non-HTML5\r\none.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe examples contains tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixes a HTML5 browser scenario with a non-HTML5\r\none.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenarion", "non", "html5", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenario", "non", "html5", "one", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.0408672013240949], "body_sim": [0.7680888675579026], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 343}, {"A_title": "Ngoptions documentation change", "A_clean_title": ["ngoption", "document", "chang"], "B_title": "refactor(jqLite): stop patching individual jQuery methods", "B_clean_title": ["refactor", "jqlite", "jq", "lite", "stop", "patch", "individu", "jqueri", "queri", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nredundant link to ngOptions, no link to ngRepeat\n\n**What is the new behavior (if this is a feature change)?**\n\nlink to ngRepeat, no redundant link to ngOptions\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "redund", "link", "ngoption", "ng", "option", "no", "link", "ngrepeat", "ng", "repeat", "**what", "new", "behavior", "thi", "featur", "chang", "link", "ngrepeat", "ng", "repeat", "no", "redund", "link", "ngoption", "ng", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "B_body": "Currently Angular monkey-patches a few jQuery methods that remove elements\nfrom the DOM. Since methods like .remove() have multiple signatures\nthat can change what's actually removed, Angular needs to carefully\nrepeat them in its patching or it can break apps using jQuery correctly.\nSuch a strategy is also not future-safe.\n\nInstead of patching individual methods on the prototype, it's better to\nhook into jQuery.cleanData and trigger custom events there. This should be\nsafe as e.g. jQuery UI needs it and uses it. It'll also be future-safe.\n\nThe only drawback is that $destroy is no longer triggered when using $detach\nbut:\n1. Angular doesn't use this method, jqLite doesn't implement it.\n2. Detached elements can be re-attached keeping all their events & data\n    so it makes sense that $destroy is not triggered on them.\n3. The approach from this commit is so much safer that any issues with\n    .detach() working differently are outweighed by the robustness of the code.\n\nBREAKING CHANGE: the $destroy event is no longer triggered when using the\njQuery detach() method. If you want to destroy Angular data attached to the\nelement, use remove().\n\ncc @caitp\n", "B_clean_body": ["current", "angular", "monkey", "patch", "few", "jqueri", "queri", "method", "that", "remov", "element", "dom", "sinc", "method", "like", "remov", "have", "multipl", "signatur", "that", "chang", "what", "'s", "actual", "remov", "angular", "need", "care", "repeat", "them", "it", "patch", "or", "it", "break", "app", "jqueri", "queri", "correctli", "such", "strategi", "also", "not", "futur", "safe", "instead", "patch", "individu", "method", "prototyp", "it", "'s", "better", "hook", "into", "jqueri", "cleandata", "queri", "clean", "data", "trigger", "custom", "event", "there", "thi", "safe", "as", "jqueri", "queri", "ui", "need", "it", "use", "it", "it", "'ll", "also", "futur", "safe", "onli", "drawback", "that", "destroy", "no", "longer", "trigger", "when", "detach", "but", "angular", "n't", "use", "thi", "method", "jqlite", "jq", "lite", "n't", "implement", "it", "detach", "element", "re", "attach", "keep", "all", "their", "event", "data", "so", "it", "make", "sens", "that", "destroy", "not", "trigger", "them", "approach", "thi", "commit", "so", "much", "safer", "that", "ani", "issu", "detach", "work", "differ", "are", "outweigh", "by", "robust", "code", "break", "chang", "destroy", "event", "no", "longer", "trigger", "when", "jqueri", "queri", "detach", "method", "you", "want", "destroy", "angular", "data", "attach", "element", "use", "remov", "cc", "caitp"], "title_sim": [-0.031011089719238247], "body_sim": [0.17463192679487158], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 864}, {"A_title": "docs(ngNonBindable): Document effect on attributes", "A_clean_title": ["doc", "ngnonbind", "ng", "non", "bindabl", "document", "effect", "attribut"], "B_title": "chore: unit test latest + latest-1 version of FF, Chrome, Edge", "B_clean_title": ["chore", "unit", "test", "latest", "latest", "version", "ff", "chrome", "edg"], "A_body": "The phrase \"contents of the current DOM element\" may be interpreted either as\r\ninclusive of the DOM element's attributes or as exclusive of the attributes.\r\nThis situation concerns markup such as:\r\n\r\n    <div ng-non-bindable ng-controller=\"MyController\"></div>\r\n\r\nIn practice, AngularJS does not compile or bind attribute values for elements\r\nwhich specify the `ng-non-bindable` directive. Extend the documentation to\r\ndefinitely describe this behavior.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["phrase", "content", "current", "dom", "element", "may", "interpret", "either", "as", "inclus", "dom", "element", "'s", "attribut", "or", "as", "exclus", "attribut", "thi", "situat", "concern", "markup", "such", "as", "div", "ng", "non", "bindabl", "ng", "controller=", "mycontrol", "my", "control", "div", "practic", "angularj", "angular", "js", "not", "compil", "or", "bind", "attribut", "valu", "element", "which", "specifi", "ng", "non", "bindabl", "direct", "extend", "document", "definit", "describ", "thi", "behavior", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "At the moment, we use fixed versions of these browsers to test - especially for FF and Chrome it's useful to test the latest, as they release faster.\r\nFor the future, we could also look into using  `latest-1` additionally.", "B_clean_body": ["at", "moment", "we", "use", "fix", "version", "these", "browser", "test", "especi", "ff", "chrome", "it", "'s", "use", "test", "latest", "as", "they", "releas", "faster", "futur", "we", "could", "also", "look", "into", "latest", "addit"], "title_sim": [0.00018757273663296524], "body_sim": [0.29677311167152265], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 215}, {"A_title": "test($parse): add one-time/interceptor tests", "A_clean_title": ["test", "pars", "add", "one", "time", "interceptor", "test"], "B_title": "fix($location): always decode special chars in `$location.url(value)`", "B_clean_title": ["fix", "locat", "alway", "decod", "special", "char", "locat", "url", "valu"], "A_body": "I realized that https://github.com/angular/angular.js/commit/189461f9bf6fda18ddbd16c42f2e959cf939c3da changed this a little - previously the second test failed for two reasons\r\n1. one-time literals [did not use .inputs](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) unlike the normal [one-time delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1856), so the `identity` interceptor would throw an infdig because the literal recreated each digest was being watched\r\n2. one-time literals with interceptors [only check `isDefined`](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1933) to determine when the one time is \"done\" which is unlike [the one-time watch delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) that checks all the values in the literal, so the interceptor thought the \"one-time\" was done right away for literals\r\n\r\nI think both of these changes are correct and want to make sure we don't revert them. This should probably only go into 1.7 since this change will [probably be reverted](https://github.com/angular/angular.js/pull/15958) in 1.6.", "A_clean_body": ["realiz", "that", "http", "github", "com", "angular", "angular", "js", "commit", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "chang", "thi", "littl", "previous", "second", "test", "fail", "two", "reason", "one", "time", "liter", "did", "not", "use", "input", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "unlik", "normal", "one", "time", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1856", "so", "ident", "interceptor", "would", "throw", "infdig", "becaus", "liter", "recreat", "each", "digest", "wa", "be", "watch", "one", "time", "liter", "interceptor", "onli", "check", "isdefin", "defin", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1933", "determin", "when", "one", "time", "done", "which", "unlik", "one", "time", "watch", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "that", "check", "all", "valu", "liter", "so", "interceptor", "thought", "one", "time", "wa", "done", "right", "away", "liter", "think", "both", "these", "chang", "are", "correct", "want", "make", "sure", "we", "n't", "revert", "them", "thi", "probabl", "onli", "go", "into", "sinc", "thi", "chang", "will", "probabl", "revert", "http", "github", "com", "angular", "angular", "js", "pull", "15958"], "B_body": "See https://github.com/angular/angular.js/issues/16312#issuecomment-348268476\r\n\r\n\r\n@bourey - can you check that with this regression fix your original issue is still resolved?", "B_clean_body": ["see", "http", "github", "com", "angular", "angular", "js", "issu", "16312", "issuecom", "348268476", "bourey", "you", "check", "that", "thi", "regress", "fix", "your", "origin", "issu", "still", "resolv"], "title_sim": [0.07510661571210156], "body_sim": [0.6788065867143747], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 176}, {"A_title": "test(jQuery): test not firing $destroy on jQuery.cleanData with jQuery UI", "A_clean_title": ["test", "jqueri", "queri", "test", "not", "fire", "destroy", "jqueri", "cleandata", "queri", "clean", "data", "jqueri", "queri", "ui"], "B_title": "docs($resourceProvider): include '$'", "B_clean_title": ["doc", "resourceprovid", "resourc", "provid", "includ"], "A_body": "So far it wasn't tested that Angular's logic for skipping it triggering\nthe $destroy event on jQuery.cleanData in the replaceWith internal function\nworks correctly when Angular is not the last one to patch the cleanData method\n(e.g. if jQuery UI does the patching later). This commits adds the relevant\ntest.\n\nRef #8486\n\ncc @IgorMinar\n", "A_clean_body": ["so", "far", "it", "wa", "n't", "test", "that", "angular", "'s", "logic", "skip", "it", "trigger", "destroy", "event", "jqueri", "cleandata", "queri", "clean", "data", "replacewith", "replac", "intern", "function", "work", "correctli", "when", "angular", "not", "last", "one", "patch", "cleandata", "clean", "data", "method", "jqueri", "queri", "ui", "patch", "later", "thi", "commit", "add", "relev", "test", "ref", "8486", "cc", "igorminar", "igor", "minar"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n**What is the current behavior? (You can also link to an open issue here)**\nincorrect code in the examples\n**What is the new behavior (if this is a feature change)?**\ncode is copy-paste-ready\n**Does this PR introduce a breaking change?**\nno\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nInclude the '$' in the injection argument of the two examples.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "incorrect", "code", "exampl", "**what", "new", "behavior", "thi", "featur", "chang", "code", "copi", "past", "readi", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "includ", "inject", "argument", "two", "exampl"], "title_sim": [0.07531810823982457], "body_sim": [0.1460852306317455], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 749}, {"A_title": "fix(ngAria): do not set aria attributes on input[type=\"hidden\"]", "A_clean_title": ["fix", "ngaria", "ng", "aria", "not", "set", "aria", "attribut", "input", "type=", "hidden"], "B_title": "fix(jqLite): children() should only return elements", "B_clean_title": ["fix", "jqlite", "jq", "lite", "children", "onli", "return", "element"], "A_body": "This fixes a error found by @edclements  using the Google Accessibility Developer Tools audit.\r\nInput fields of type hidden shouldn't have aria attributes.\r\nhttps://www.w3.org/TR/html-aria/#allowed-aria-roles-states-and-properties-1\r\n\r\nCloses #15113\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\naria attributes added to input type hidden\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nNot anymore.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI would say not actually, because the previous behavior didnt follow the spec and I can'T see why anyone would rely on this behavior. It was marked as breaking change in https://github.com/angular/angular.js/pull/15113, though\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nRebased and updated version of https://github.com/angular/angular.js/pull/15113\r\n", "A_clean_body": ["thi", "fix", "error", "found", "by", "edclement", "googl", "access", "develop", "tool", "audit", "input", "field", "type", "hidden", "n't", "have", "aria", "attribut", "http", "w3", "aria", "www", "org", "tr", "html", "allow", "aria", "role", "state", "properti", "close", "15113", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "aria", "attribut", "ad", "input", "type", "hidden", "**what", "new", "behavior", "thi", "featur", "chang", "not", "anymor", "**doe", "thi", "pr", "introduc", "break", "chang", "would", "say", "not", "actual", "becaus", "previou", "behavior", "didnt", "follow", "spec", "can't", "see", "whi", "anyon", "would", "reli", "thi", "behavior", "it", "wa", "mark", "as", "break", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "15113", "though", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "rebas", "updat", "version", "http", "github", "com", "angular", "angular", "js", "pull", "15113"], "B_body": "The jQuery implementation of children only returns child nodes of the given element that are elements themselves. The previous jqLite implementation was returning all nodes except those that are text nodes. Use jQLite.contents() to get all the child nodes.\n\nThe jQuery implementation of contents returns [] if the object has no child nodes.  The previous jqLite implementation was returning undefined, causing a stack overflow in test/testabilityPatch.js when it tried to `cleanup()` a window object.\n\nThe testabilityPatch was incorrectly using children() rather than contents() inside cleanup() to iterate down through all the child nodes of the element to clean up.\n", "B_clean_body": ["jqueri", "queri", "implement", "children", "onli", "return", "child", "node", "given", "element", "that", "are", "element", "themselv", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "all", "node", "except", "those", "that", "are", "text", "node", "use", "jqlite", "content", "lite", "get", "all", "child", "node", "jqueri", "queri", "implement", "content", "return", "object", "ha", "no", "child", "node", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "undefin", "caus", "stack", "overflow", "js", "test", "testabilitypatch", "testabl", "patch", "when", "it", "tri", "cleanup", "window", "object", "testabilitypatch", "testabl", "patch", "wa", "incorrectli", "children", "rather", "than", "content", "insid", "cleanup", "iter", "down", "through", "all", "child", "node", "element", "clean", "up"], "title_sim": [0.04011716419187614], "body_sim": [0.10168160154959371], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03595393153760518, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1813}, {"A_title": "docs(angular.Module): improved documentation for component method", "A_clean_title": ["doc", "angular", "modul", "improv", "document", "compon", "method"], "B_title": "docs(guide/Forms): add labels to forms", "B_clean_title": ["doc", "guid", "form", "add", "label", "form"], "A_body": "Copy improved documentation for component() method from $compileProvider\r\nand add missing object syntax.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDoes not mention all syntaxes, is inconsistent with other documentation.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nFixes these issues\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["copi", "improv", "document", "compon", "method", "compileprovid", "compil", "provid", "add", "miss", "object", "syntax", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "not", "mention", "all", "syntax", "inconsist", "other", "document", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "these", "issu", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nno label tags in the inputs\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nnot a feature\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nI can add label tags to the other input fields in the docs.", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "label", "tag", "input", "**what", "new", "behavior", "thi", "featur", "chang", "not", "featur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "label", "tag", "other", "input", "field", "doc"], "title_sim": [0.03686341720424023], "body_sim": [0.8705296983926525], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 532}, {"A_title": "fix(numberFilter): correctly round fractions despite floating-point arithmetics issues in JS", "A_clean_title": ["fix", "numberfilt", "number", "filter", "correctli", "round", "fraction", "despit", "float", "point", "arithmet", "issu", "js"], "B_title": "feat(jqLite): return [] for .val() on <select multiple> with no selection", "B_clean_title": ["feat", "jqlite", "jq", "lite", "return", "val", "select", "multipl", "no", "select"], "A_body": "Closes #7870\nCloses #7878\n", "A_clean_body": ["close", "7870", "close", "7878"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFeature (an API change).\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe `.val()` getter on `<select multiple>...</select>` returns `null` if no options are selected.\n\n**What is the new behavior (if this is a feature change)?**\nThe `.val()` getter on `<select multiple>...</select>` returns an empty array if no options are selected.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features) -- what should I do here?\n\n**Other information**:\n\nFixes #14370\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "api", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "val", "getter", "select", "multipl", "select", "return", "null", "no", "option", "are", "select", "**what", "new", "behavior", "thi", "featur", "chang", "val", "getter", "select", "multipl", "select", "return", "empti", "array", "no", "option", "are", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "what", "here", "**other", "information**", "fix", "14370"], "title_sim": [0.012163043199369955], "body_sim": [0.004837430645994819], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.022434400356928307, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 807}, {"A_title": "perf($rootScope): do not mark $watchCollectionInterceptor as $stateful", "A_clean_title": ["perf", "rootscop", "root", "scope", "not", "mark", "watchcollectioninterceptor", "watch", "collect", "interceptor", "as", "state"], "B_title": "Revert ng style regression for 1.3.x", "B_clean_title": ["revert", "ng", "style", "regress"], "A_body": "I think this was a mistake [from the start](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa?diff=unified#diff-44d3307b66bf51b52e110307fa57e196R518).  This interceptor doesn't actually store any state, it just reads the inner/complex state of its input. EDIT: actually it had a purpose originally, although may no longer be as significant, see https://github.com/angular/angular.js/pull/16009#issuecomment-311543600\r\n\r\nRemoving the `$stateful` flag will allow some expressions (those with `inputs` such as array/object literals) to avoid invoking `$watchCollectionInterceptor` and avoid creating the literals etc. on each digest.", "A_clean_body": ["think", "thi", "wa", "mistak", "start", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff=unifi", "diff", "44d3307b66bf51b52e110307fa57e196r518", "thi", "interceptor", "n't", "actual", "store", "ani", "state", "it", "just", "read", "inner", "complex", "state", "it", "input", "edit", "actual", "it", "had", "purpos", "origin", "although", "may", "no", "longer", "as", "signific", "see", "http", "github", "com", "angular", "angular", "js", "pull", "16009", "issuecom", "311543600", "remov", "state", "flag", "will", "allow", "some", "express", "those", "input", "such", "as", "array", "object", "liter", "avoid", "invok", "watchcollectioninterceptor", "watch", "collect", "interceptor", "avoid", "creat", "liter", "etc", "each", "digest"], "B_body": "I know, 1.4 is around the corner, but this should be handled nevertheless.\n", "B_clean_body": ["know", "around", "corner", "but", "thi", "handl", "nevertheless"], "title_sim": [-0.06512875918395787], "body_sim": [0.11978165555844979], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01384719793620018, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 747}, {"A_title": "docs app style updates", "A_clean_title": ["doc", "app", "style", "updat"], "B_title": "test(support): verify support tests results in all tested browsers", "B_clean_title": ["test", "support", "verifi", "support", "test", "result", "all", "test", "browser"], "A_body": "This updates the docs app to the new header style found on angularjs.org.\r\n\r\nI've also taken the liberty to update the menu entries on the doc site - pending approval I'll update the org site, too (would fix https://github.com/angular/angular.js/issues/14351)\r\n\r\nAnd fixes https://github.com/angular/angular.js/issues/14963\r\n\r\nNotable differences between org / docs:\r\n- search icon\r\n- font family / weight (should we update?)\r\n- no drop shadow on navbar because there's a secondary bar on docs\r\n\r\nNotable differences between docs old / new:\r\n- mobile: the top header + search are fixed, sub header is relative (previously all relative)\r\n- mobile search close icon has moved over the search bar, because I had some problems giving it it's previous position while keeping the search results scrollable (oh my)\r\n\r\nImplementation notes:\r\n- angular-topnav.css is included as is from org site\r\n- several overrides necessary because org uses bootstrap 2 / docs uses bs 3 (oh my)\r\n- org site uses one breakpoint at 800px, docs uses one at 768 and one at 992. I tested it and it doesn't affect the common screen sizes\r\n\r\nFuture work:\r\n- clean up the css and maybe implement sass for the docs app\r\n\r\nScreens:\r\n\r\n![fireshot screen capture 014 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop dropdown open](https://cloud.githubusercontent.com/assets/1153097/22548685/f47fb29c-e947-11e6-8f41-a6ab683a4037.png)\r\n![fireshot screen capture 015 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop search](https://cloud.githubusercontent.com/assets/1153097/22548686/f481f354-e947-11e6-8ea6-735012fe9c9c.png)\r\n![fireshot screen capture 016 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone dropdown](https://cloud.githubusercontent.com/assets/1153097/22548683/f47f66ac-e947-11e6-87b3-8317404394a1.png)\r\n![fireshot screen capture 017 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone search](https://cloud.githubusercontent.com/assets/1153097/22548684/f47fad88-e947-11e6-80c6-9beb87f70c53.png)\r\n", "A_clean_body": ["thi", "updat", "doc", "app", "new", "header", "style", "found", "angularj", "org", "'ve", "also", "taken", "liberti", "updat", "menu", "entri", "doc", "site", "pend", "approv", "'ll", "updat", "org", "site", "too", "would", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14351", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14963", "notabl", "differ", "between", "org", "doc", "search", "icon", "font", "famili", "weight", "we", "updat", "no", "drop", "shadow", "navbar", "becaus", "there", "'s", "secondari", "bar", "doc", "notabl", "differ", "between", "doc", "old", "new", "mobil", "top", "header", "search", "are", "fix", "sub", "header", "rel", "previous", "all", "rel", "mobil", "search", "close", "icon", "ha", "move", "over", "search", "bar", "becaus", "had", "some", "problem", "give", "it", "it", "'s", "previou", "posit", "while", "keep", "search", "result", "scrollabl", "oh", "my", "implement", "note", "angular", "topnav", "css", "includ", "as", "org", "site", "sever", "overrid", "necessari", "becaus", "org", "use", "bootstrap", "doc", "use", "bs", "oh", "my", "org", "site", "use", "one", "breakpoint", "at", "800px", "doc", "use", "one", "at", "768", "one", "at", "992", "test", "it", "it", "n't", "affect", "common", "screen", "size", "futur", "work", "clean", "up", "css", "mayb", "implement", "sass", "doc", "app", "screen", "fireshot", "screen", "captur", "014", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "dropdown", "open", "http", "e947", "11e6", "8f41", "githubusercont", "a6ab683a4037", "png", "cloud", "com", "asset", "1153097", "22548685", "f47fb29c", "fireshot", "screen", "captur", "015", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "search", "http", "e947", "11e6", "8ea6", "githubusercont", "735012fe9c9c", "png", "cloud", "com", "asset", "1153097", "22548686", "f481f354", "fireshot", "screen", "captur", "016", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "dropdown", "http", "e947", "11e6", "87b3", "githubusercont", "8317404394a1", "png", "cloud", "com", "asset", "1153097", "22548683", "f47f66ac", "fireshot", "screen", "captur", "017", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "search", "http", "e947", "11e6", "80c6", "githubusercont", "9beb87f70c53", "png", "cloud", "com", "asset", "1153097", "22548684", "f47fad88"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nNew tests.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nIt's not tested whether browsers pass or fail specific support tests used to skip particular test blocks.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll browsers have verified support tests results.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "new", "test", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "it", "'s", "not", "test", "whether", "browser", "pass", "or", "fail", "specif", "support", "test", "use", "skip", "particular", "test", "block", "**what", "new", "behavior", "thi", "featur", "chang", "all", "browser", "have", "verifi", "support", "test", "result", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.07771860942210869], "body_sim": [0.26734461850691604], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005522323692781367, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 112}, {"A_title": "docs(component): clarify component usage", "A_clean_title": ["doc", "compon", "clarifi", "compon", "usag"], "B_title": "chore(node): update semver", "B_clean_title": ["chore", "node", "updat", "semver"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update for issue #15042 \n\n**What is the current behavior? (You can also link to an open issue here)**\n\noutdated documentation\n\n**What is the new behavior (if this is a feature change)?**\n\nN/A\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "issu", "15042", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "outdat", "document", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.006343456609961372], "body_sim": [0.9171679717917136], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 490}, {"A_title": "docs($resourceProvider): Correct JS syntax error", "A_clean_title": ["doc", "resourceprovid", "resourc", "provid", "correct", "js", "syntax", "error"], "B_title": "fix($parse): properly handle dots at the end of identifiers", "B_clean_title": ["fix", "pars", "properli", "handl", "dot", "at", "end", "identifi"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nExample code has a syntax error\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nExample code no longer has a syntax error\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "code", "ha", "syntax", "error", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "code", "no", "longer", "ha", "syntax", "error", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Fixes #4613\nFixes #4912\n", "B_clean_body": ["fix", "4613", "fix", "4912"], "title_sim": [0.07055206140467471], "body_sim": [0.19822320137474175], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 816}, {"A_title": "revert: fix($compile): do not add <span> elements to root text nodes", "A_clean_title": ["revert", "fix", "compil", "not", "add", "span", "element", "root", "text", "node"], "B_title": "fix(AngularPublic): expose missing angular public methods", "B_clean_title": ["fix", "angularpubl", "angular", "public", "expos", "miss", "angular", "public", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis commit reverts 7617c08da69a0d447507dadd0ef41d2415462ca7 which was accidentally\nmerged into 1.5.x (by @petebacondarwin in a moment of rebase madness) despite\nit containing a breaking change.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "commit", "revert", "7617c08da69a0d447507dadd0ef41d2415462ca7", "which", "wa", "accident", "merg", "into", "by", "petebacondarwin", "moment", "rebas", "mad", "despit", "it", "contain", "break", "chang"], "B_body": "- expose lowercase, uppercase and isDate to angular public api\n- remove unnecessary extention of jqLite at an early stage\n", "B_clean_body": ["expos", "lowercas", "uppercas", "isdat", "date", "angular", "public", "api", "remov", "unnecessari", "extent", "jqlite", "jq", "lite", "at", "earli", "stage"], "title_sim": [0.03909172019605216], "body_sim": [0.03277163440312419], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1666}, {"A_title": "Scenario runner binding throw", "A_clean_title": ["scenario", "runner", "bind", "throw"], "B_title": "test(ng-non-bindable): test sibling bindings", "B_clean_title": ["test", "ng", "non", "bindabl", "test", "sibl", "bind"], "A_body": "I was wrong about throw being the same as done(error) in a DSL statement. Throw is an \"error\" and done(error) is a \"failure\".\n\nAlso, there was a test for the binding not matching before, but it tested in a condition where there were no bindings at all in the document in which case elements() in your new binding() would still throw.\n\nI added a new test that checks for bindings existing but none of them matching.\n\nI also fixed an issue where you were using contains() and checking if the return value was >= 0 but the function returns a boolean and false >= 0 is true. I'll code review more carefully next time.\n", "A_clean_body": ["wa", "wrong", "about", "throw", "be", "same", "as", "done", "error", "dsl", "statement", "throw", "error", "done", "error", "failur", "also", "there", "wa", "test", "bind", "not", "match", "befor", "but", "it", "test", "condit", "where", "there", "were", "no", "bind", "at", "all", "document", "which", "case", "element", "your", "new", "bind", "would", "still", "throw", "ad", "new", "test", "that", "check", "bind", "exist", "but", "none", "them", "match", "also", "fix", "issu", "where", "you", "were", "contain", "check", "return", "valu", "wa", "but", "function", "return", "boolean", "fals", "true", "'ll", "code", "review", "more", "care", "next", "time"], "B_body": "Ref: https://github.com/angular/angular.dart/blob/master/test/directives/ng_non_bindable_spec.dart\n", "B_clean_body": ["ref", "http", "dart", "github", "com", "angular", "angular", "non", "bindabl", "spec", "dart", "blob", "master", "test", "direct", "ng"], "title_sim": [0.4445300455197141], "body_sim": [0.14123579098596895], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.2759774833882336, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1059}, {"A_title": "docs(guide): add note about value attribute", "A_clean_title": ["doc", "guid", "add", "note", "about", "valu", "attribut"], "B_title": "fix($resource): don't use $parse for @dotted.member", "B_clean_title": ["fix", "resourc", "n't", "use", "pars", "dot", "member"], "A_body": "- Add note about value attribute for the progress tag with IE\n\nThis should address #7218.\n", "A_clean_body": ["add", "note", "about", "valu", "attribut", "progress", "tag", "ie", "thi", "address", "7218"], "B_body": "params and paramDefaults support looking up the parameter value from the\ndata object.  The syntax for that is `@nested.property.name`.\nCurrently, $resource uses $parse to do this.  This is too liberal\n(you can use values like `@a=b` or `@a | filter` and have it work -\nwhich doesn't really make sense).  It also puts up a dependency on\n$parse which is has restrictions to secure expressions used in\ntemplates.  The value here, though a string, is specified in Javascript\ncode and shouldn't have those restrictions.\n", "B_clean_body": ["param", "paramdefault", "param", "default", "support", "look", "up", "paramet", "valu", "data", "object", "syntax", "that", "nest", "properti", "name", "current", "resourc", "use", "pars", "thi", "thi", "too", "liber", "you", "use", "valu", "like", "a=b", "or", "filter", "have", "it", "work", "which", "n't", "realli", "make", "sens", "it", "also", "put", "up", "depend", "pars", "which", "ha", "restrict", "secur", "express", "use", "templat", "valu", "here", "though", "string", "specifi", "javascript", "code", "n't", "have", "those", "restrict"], "title_sim": [-0.00038233151059998305], "body_sim": [0.18844084193998992], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 945}, {"A_title": "docs(uppercase): Added an example", "A_clean_title": ["doc", "uppercas", "ad", "exampl"], "B_title": "fix($controller): remove the option to instantiate controllers from c\u2026", "B_clean_title": ["fix", "control", "remov", "option", "instanti", "control", "c\u2026"], "A_body": "I saw that the uppercase filter had no example so I decided to add a minimal example to explain how the uppercase filter works.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere is currently no example for the `uppercase` filter, so I added one.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/a\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["saw", "that", "uppercas", "filter", "had", "no", "exampl", "so", "decid", "add", "minim", "exampl", "explain", "how", "uppercas", "filter", "work", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "current", "no", "exampl", "uppercas", "filter", "so", "ad", "one", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "\u2026onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n", "B_clean_body": ["\u2026onstructor", "window", "thi", "also", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "close", "15349", "break", "chang", "option", "instanti", "control", "constructor", "global", "window", "object", "ha", "been", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "that", "could", "enabl", "thi", "behavior", "ha", "been", "remov", "thi", "behavior", "had", "been", "deprec", "sinc", "angularj", "angular", "js", "v1", "becaus", "pollut", "global", "scope", "bad", "migrat", "remov", "call", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "config", "regist", "your", "control", "via", "modul", "api", "or", "controllerprovid", "control", "provid", "angular", "modul", "'mymodul", "'mi", "modul", "control", "'mycontrol", "'mi", "control", "function", "angular", "modul", "'mymodul", "'mi", "modul", "config", "function", "controllerprovid", "control", "provid", "controllerprovid", "regist", "control", "provid", "'mycontrol", "'mi", "control", "function"], "title_sim": [-0.020871533677192237], "body_sim": [0.17692672792587152], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 34}, {"A_title": "test($log): fix up to work with Safari 9", "A_clean_title": ["test", "log", "fix", "up", "work", "safari"], "B_title": "refactor($rootScope): consistently use noop as the default $watch listener", "B_clean_title": ["refactor", "rootscop", "root", "scope", "consist", "use", "noop", "as", "default", "watch", "listen"], "A_body": "On Safari 9.0.2, you are not allowed to write to `sourceUrl` or `line`\non a native Error object.\n\nThis commit uses a custom error instead.\n", "A_clean_body": ["safari", "you", "are", "not", "allow", "write", "sourceurl", "sourc", "url", "or", "line", "nativ", "error", "object", "thi", "commit", "use", "custom", "error", "instead"], "B_body": "By doing the `isFunction(listener)` check before delegating to `$$watchDelegate` it removes that check from some `$$watchDelegate` methods.", "B_clean_body": ["by", "do", "isfunct", "function", "listen", "check", "befor", "deleg", "watchdeleg", "watch", "deleg", "it", "remov", "that", "check", "some", "watchdeleg", "watch", "deleg", "method"], "title_sim": [-0.0012453786461083484], "body_sim": [0.40726350847380377], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0014333292590750254, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 680}, {"A_title": "chore(docs.angularjs.org): allow robots in partials/ but prevent inde\u2026", "A_clean_title": ["chore", "doc", "angularj", "org", "allow", "robot", "partial", "but", "prevent", "inde\u2026"], "B_title": "docs(directive): show arguments as a subsection of the usage section", "B_clean_title": ["doc", "direct", "show", "argument", "as", "subsect", "usag", "section"], "A_body": "\u2026xing\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["\u2026xing", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreviously, on the docs of directives which include the `animation` section, `arguments` are shown as an `h3` element below the `animation` `h2` element, making it look like it's a subsection of `animations`.\r\n\r\n#15645\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit ensures that the \u00e0rgument` `h3`element is rendered correctly after the `usage` `h2` element by moving the \u00e0nimation`section to the end of the template file.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "previous", "doc", "direct", "which", "includ", "anim", "section", "argument", "are", "shown", "as", "h3", "element", "below", "anim", "h2", "element", "make", "it", "look", "like", "it", "'s", "subsect", "anim", "15645", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "ensur", "that", "\u00e0rgument", "h3", "element", "render", "correctli", "after", "usag", "h2", "element", "by", "move", "\u00e0nimat", "section", "end", "templat", "file", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.02839026361100139], "body_sim": [0.8019353037620638], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 382}, {"A_title": "fix(jqLite): Chrome specific issue for `<select required>`", "A_clean_title": ["fix", "jqlite", "jq", "lite", "chrome", "specif", "issu", "select", "requir"], "B_title": "Scenario runner element", "B_clean_title": ["scenario", "runner", "element"], "A_body": "Request Type: bug, regression\n\nHow to reproduce: Look at #6828\n\nComponent(s): jqLite\n\nImpact: medium\n\nComplexity: small\n\nThis issue is related to: regression\n\nDetailed Description:\n\nWhen using Chrome and adding a `<option selected=\"selected\">` to a `<select required>` then the new added option is not selected\n\nOther Comments:\n", "A_clean_body": ["request", "type", "bug", "regress", "how", "reproduc", "look", "at", "6828", "compon", "jqlite", "jq", "lite", "impact", "medium", "complex", "small", "thi", "issu", "relat", "regress", "detail", "descript", "when", "chrome", "ad", "option", "selected=", "select", "select", "requir", "then", "new", "ad", "option", "not", "select", "other", "comment"], "B_body": "Adds all the missing jQuery methods to element() DSL\n", "B_clean_body": ["add", "all", "miss", "jqueri", "queri", "method", "element", "dsl"], "title_sim": [-0.02447600845873851], "body_sim": [0.0686112125330932], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.04348337994365894, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1264}, {"A_title": "docs(contributing): fix indentation for proper Markdown syntax", "A_clean_title": ["doc", "contribut", "fix", "indent", "proper", "markdown", "syntax"], "B_title": "(cherry-pick) fix($browser): prevent infinite digests when clearing the hash of a url", "B_clean_title": ["cherri", "pick", "fix", "browser", "prevent", "infinit", "digest", "when", "clear", "hash", "url"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nMarkdown isn't displayed properly.\n\n**What is the new behavior (if this is a feature change)?**\nMarkdown is displayed properly.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "markdown", "n't", "display", "properli", "**what", "new", "behavior", "thi", "featur", "chang", "markdown", "display", "properli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "By using `location.hash` to update the current browser location when only\nthe hash has changed, we prevent the browser from attempting to reload.\n\nCloses #9629\nCloses #9635\nCloses #10228\nCloses #10308\n", "B_clean_body": ["by", "locat", "hash", "updat", "current", "browser", "locat", "when", "onli", "hash", "ha", "chang", "we", "prevent", "browser", "attempt", "reload", "close", "9629", "close", "9635", "close", "10228", "close", "10308"], "title_sim": [0.004371036521905197], "body_sim": [0.12482233186388111], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 600}, {"A_title": "chore(docs-app): ensure ToC links contain the path", "A_clean_title": ["chore", "doc", "app", "ensur", "toc", "link", "contain", "path"], "B_title": "feat($timeout): add $timeout service that superceeds $deferred", "B_clean_title": ["feat", "timeout", "add", "timeout", "servic", "that", "superce", "defer"], "A_body": "Without the path the browser address changes so the hash\r\nfragment is directly on the base url. Then on refresh the\r\nbrowser navigates to an invalid page.\r\n\r\nCloses #16608\r\n", "A_clean_body": ["without", "path", "browser", "address", "chang", "so", "hash", "fragment", "directli", "base", "url", "then", "refresh", "browser", "navig", "invalid", "page", "close", "16608"], "B_body": "$timeout has a better name ($defer got often confused with something related to $q) and\nis actually promise based with cancelation support.\n\nWith this commit the $defer service is deprecated and will be removed before 1.0.\n\nCloses #704, #532\n", "B_clean_body": ["timeout", "ha", "better", "name", "defer", "got", "often", "confus", "someth", "relat", "actual", "promis", "base", "cancel", "support", "thi", "commit", "defer", "servic", "deprec", "will", "remov", "befor", "close", "704", "532"], "title_sim": [0.025396013813482318], "body_sim": [0.090144091790483], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0029205038420115014, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2221}, {"A_title": "chore(travis): update iOs test browsers", "A_clean_title": ["chore", "travi", "updat", "io", "os", "test", "browser"], "B_title": "fix($compile): allow compile data to be GCed after a non-clone linking", "B_clean_title": ["fix", "compil", "allow", "compil", "data", "gced", "ced", "after", "non", "clone", "link"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This does two things:\n- nulls out some data when a non-cloning ~~transclude~~ link completes to allow mainly the ~~`boundTranscludeFn` func/closure~~ `$compileNodes`/`compositeLinkFn` to be GCed\n- throws if that ~~transclude~~ link is executed again since that would either re-link the same element or clone the linked element\n", "B_clean_body": ["thi", "two", "thing", "null", "out", "some", "data", "when", "non", "clone", "~~transclude~~", "link", "complet", "allow", "mainli", "boundtranscludefn", "bound", "transclud", "fn", "func", "closure~~", "compilenod", "compil", "node", "compositelinkfn", "composit", "link", "fn", "gced", "ced", "throw", "that", "~~transclude~~", "link", "execut", "again", "sinc", "that", "would", "either", "re", "link", "same", "element", "or", "clone", "link", "element"], "title_sim": [0.016159341322322378], "body_sim": [0.11881820381049726], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 836}, {"A_title": "Fix deprecate ngtouch", "A_clean_title": ["fix", "deprec", "ngtouch"], "B_title": "docs(animations): fix minor typo's", "B_clean_title": ["doc", "anim", "fix", "minor", "typo", "'s"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.2846147012294907], "body_sim": [0.9999999999999999], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 18}, {"A_title": "fix(docs): change plnkr form to open in same window", "A_clean_title": ["fix", "doc", "chang", "plnkr", "form", "open", "same", "window"], "B_title": "docs(api/$http): fix typo in $http API Reference", "B_clean_title": ["doc", "api", "http", "fix", "typo", "http", "api", "refer"], "A_body": "Form previously posted to target=\"_blank\", but pop-up blockers were causing this to not work.\nIf a user chose to bypass pop-up blocker one time and click the link, they would arrive at\na new default plnkr, not a plnkr with the desired template.\n\nThis fix removes the _blank target, causing the plnkr to open in the current window/tab.\n", "A_clean_body": ["form", "previous", "post", "target=", "blank", "but", "pop", "up", "blocker", "were", "caus", "thi", "not", "work", "user", "chose", "bypass", "pop", "up", "blocker", "one", "time", "click", "link", "they", "would", "arriv", "at", "new", "default", "plnkr", "not", "plnkr", "desir", "templat", "thi", "fix", "remov", "blank", "target", "caus", "plnkr", "open", "current", "window", "tab"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFix a typo in https://docs.angularjs.org/api/ng/service/$http. \n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere is a typo in https://docs.angularjs.org/api/ng/service/$http.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe typo is corrected.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\ndocs($http): fix typo in $http API Reference\n\nFix a typo in the $http API Reference\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "typo", "http", "angularj", "doc", "org", "api", "ng", "servic", "http", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "http", "angularj", "doc", "org", "api", "ng", "servic", "http", "**what", "new", "behavior", "thi", "featur", "chang", "typo", "correct", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "doc", "http", "fix", "typo", "http", "api", "refer", "fix", "typo", "http", "api", "refer"], "title_sim": [0.16300081118127377], "body_sim": [0.162435589405044], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 631}, {"A_title": "(cherry-pick) fix($browser): prevent infinite digests when clearing the hash of a url", "A_clean_title": ["cherri", "pick", "fix", "browser", "prevent", "infinit", "digest", "when", "clear", "hash", "url"], "B_title": "chore: unit test latest + latest-1 version of FF, Chrome, Edge", "B_clean_title": ["chore", "unit", "test", "latest", "latest", "version", "ff", "chrome", "edg"], "A_body": "By using `location.hash` to update the current browser location when only\nthe hash has changed, we prevent the browser from attempting to reload.\n\nCloses #9629\nCloses #9635\nCloses #10228\nCloses #10308\n", "A_clean_body": ["by", "locat", "hash", "updat", "current", "browser", "locat", "when", "onli", "hash", "ha", "chang", "we", "prevent", "browser", "attempt", "reload", "close", "9629", "close", "9635", "close", "10228", "close", "10308"], "B_body": "At the moment, we use fixed versions of these browsers to test - especially for FF and Chrome it's useful to test the latest, as they release faster.\r\nFor the future, we could also look into using  `latest-1` additionally.", "B_clean_body": ["at", "moment", "we", "use", "fix", "version", "these", "browser", "test", "especi", "ff", "chrome", "it", "'s", "use", "test", "latest", "as", "they", "releas", "faster", "futur", "we", "could", "also", "look", "into", "latest", "addit"], "title_sim": [-0.0033981177043683145], "body_sim": [0.2488145688975543], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03668854477971359, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 856}, {"A_title": "fix($controller): remove the option to instantiate controllers from c\u2026", "A_clean_title": ["fix", "control", "remov", "option", "instanti", "control", "c\u2026"], "B_title": "docs(*): ensure jsdoc type expressions are valid", "B_clean_title": ["doc", "ensur", "jsdoc", "type", "express", "are", "valid"], "A_body": "\u2026onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n", "A_clean_body": ["\u2026onstructor", "window", "thi", "also", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "close", "15349", "break", "chang", "option", "instanti", "control", "constructor", "global", "window", "object", "ha", "been", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "that", "could", "enabl", "thi", "behavior", "ha", "been", "remov", "thi", "behavior", "had", "been", "deprec", "sinc", "angularj", "angular", "js", "v1", "becaus", "pollut", "global", "scope", "bad", "migrat", "remov", "call", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "config", "regist", "your", "control", "via", "modul", "api", "or", "controllerprovid", "control", "provid", "angular", "modul", "'mymodul", "'mi", "modul", "control", "'mycontrol", "'mi", "control", "function", "angular", "modul", "'mymodul", "'mi", "modul", "config", "function", "controllerprovid", "control", "provid", "controllerprovid", "regist", "control", "provid", "'mycontrol", "'mi", "control", "function"], "B_body": "These changes are to coincide with the forthcoming change to dgeni-packages: https://github.com/angular/dgeni-packages/pull/10\n\nThere are a bunch of invalid jsdoc type expressions that will break if you use the new dgeni tagParser.  This PR will fix those.  Unfortunately, the docs will look wrong if we merge them before the new tagParser arrives.\n", "B_clean_body": ["these", "chang", "are", "coincid", "forthcom", "chang", "dgeni", "packag", "http", "packag", "pull", "10", "github", "com", "angular", "dgeni", "there", "are", "bunch", "invalid", "jsdoc", "type", "express", "that", "will", "break", "you", "use", "new", "dgeni", "tagpars", "tag", "parser", "thi", "pr", "will", "fix", "those", "unfortun", "doc", "will", "look", "wrong", "we", "merg", "them", "befor", "new", "tagpars", "tag", "parser", "arriv"], "title_sim": [0.1429511737169132], "body_sim": [0.22307517253862777], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1096}, {"A_title": "docs(component): clarify component usage", "A_clean_title": ["doc", "compon", "clarifi", "compon", "usag"], "B_title": "Docs: update $location guide info; fix some headlines", "B_clean_title": ["doc", "updat", "locat", "guid", "info", "fix", "some", "headlin"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update for issue #15042 \n\n**What is the current behavior? (You can also link to an open issue here)**\n\noutdated documentation\n\n**What is the new behavior (if this is a feature change)?**\n\nN/A\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "issu", "15042", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "outdat", "document", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.06996424854227463], "body_sim": [0.9171679717917136], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 665}, {"A_title": "fix(ngMock/$httpBackend): fail if a url is provided but is `undefined`", "A_clean_title": ["fix", "ngmock", "ng", "mock", "httpbackend", "http", "backend", "fail", "url", "provid", "but", "undefin"], "B_title": "perf(orderBy): copy array with slice instead of for loop", "B_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "A_body": "While the `url` parameter is optional for `$httpBackend.when`,\n`$httpBackend.expect` and related shortcut methods, it should not have the\nvalue of `undefined` if it has been provided.\n\nThis change ensures that an error is thrown in those cases.\n\nCloses #8442\nCloses #8462\nCloses #10934\n\nBREAKING CHANGE\n\nIt is no longer valid to explicitly pass `undefined` as the `url` argument\nto any of the `$httpBackend.when...()` and `$httpBackend.expect...()`\nmethods.\n\nWhile this argument is optional, it must have a defined value if it is\nprovided.\n\nPreviously passing an explicit `undefined` value was ignored but this\nlead to invalid tests passing unexpectedly.\n", "A_clean_body": ["while", "url", "paramet", "option", "httpbackend", "when", "http", "backend", "httpbackend", "expect", "http", "backend", "relat", "shortcut", "method", "it", "not", "have", "valu", "undefin", "it", "ha", "been", "provid", "thi", "chang", "ensur", "that", "error", "thrown", "those", "case", "close", "8442", "close", "8462", "close", "10934", "break", "chang", "it", "no", "longer", "valid", "explicitli", "pass", "undefin", "as", "url", "argument", "ani", "httpbackend", "when", "http", "backend", "httpbackend", "expect", "http", "backend", "method", "while", "thi", "argument", "option", "it", "must", "have", "defin", "valu", "it", "provid", "previous", "pass", "explicit", "undefin", "valu", "wa", "ignor", "but", "thi", "lead", "invalid", "test", "pass", "unexpectedli"], "B_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "B_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "title_sim": [0.03938314623899648], "body_sim": [0.23427739831582525], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.04605150010675279, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 296}, {"A_title": "docs($animation): fix weird spaces around colons", "A_clean_title": ["doc", "anim", "fix", "weird", "space", "around", "colon"], "B_title": "fix(jqLite): children() should only return elements", "B_clean_title": ["fix", "jqlite", "jq", "lite", "children", "onli", "return", "element"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSpacing around colons is weird.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "space", "around", "colon", "weird", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "The jQuery implementation of children only returns child nodes of the given element that are elements themselves. The previous jqLite implementation was returning all nodes except those that are text nodes. Use jQLite.contents() to get all the child nodes.\n\nThe jQuery implementation of contents returns [] if the object has no child nodes.  The previous jqLite implementation was returning undefined, causing a stack overflow in test/testabilityPatch.js when it tried to `cleanup()` a window object.\n\nThe testabilityPatch was incorrectly using children() rather than contents() inside cleanup() to iterate down through all the child nodes of the element to clean up.\n", "B_clean_body": ["jqueri", "queri", "implement", "children", "onli", "return", "child", "node", "given", "element", "that", "are", "element", "themselv", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "all", "node", "except", "those", "that", "are", "text", "node", "use", "jqlite", "content", "lite", "get", "all", "child", "node", "jqueri", "queri", "implement", "content", "return", "object", "ha", "no", "child", "node", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "undefin", "caus", "stack", "overflow", "js", "test", "testabilitypatch", "testabl", "patch", "when", "it", "tri", "cleanup", "window", "object", "testabilitypatch", "testabl", "patch", "wa", "incorrectli", "children", "rather", "than", "content", "insid", "cleanup", "iter", "down", "through", "all", "child", "node", "element", "clean", "up"], "title_sim": [0.1819679076405654], "body_sim": [0.04250450389589478], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1503}, {"A_title": "fix(input): use lowercase method to account for undefined type", "A_clean_title": ["fix", "input", "use", "lowercas", "method", "account", "undefin", "type"], "B_title": "test($http): ignore date-toJSON test if running in IE8", "B_clean_title": ["test", "http", "ignor", "date", "tojson", "json", "test", "run", "ie8"], "A_body": "This was causing some internal breakages. I verify that this fixes the problem, but I haven't yet pinned down exactly how this case/path occurred.\n", "A_clean_body": ["thi", "wa", "caus", "some", "intern", "breakag", "verifi", "that", "thi", "fix", "problem", "but", "have", "n't", "yet", "pin", "down", "exactli", "how", "thi", "case", "path", "occur"], "B_body": "IE8 does not implement Date.prototype.toISOString(), which is necessary for\nthis feature. The feature still works if this method is polyfilled, but these\ntests are not run with polyfills.\n\n/CC @IgorMinar (Please review, shouldn't take long!)\n", "B_clean_body": ["ie8", "not", "implement", "date", "prototyp", "toisostr", "iso", "string", "which", "necessari", "thi", "featur", "featur", "still", "work", "thi", "method", "polyfil", "but", "these", "test", "are", "not", "run", "polyfil", "cc", "igorminar", "igor", "minar", "pleas", "review", "n't", "take", "long"], "title_sim": [0.2626956360712192], "body_sim": [0.632528516708757], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 36}, {"A_title": "fix(ngModel, input): improve handling of built-in named parsers", "A_clean_title": ["fix", "ngmodel", "ng", "model", "input", "improv", "handl", "built", "name", "parser"], "B_title": "fix(jqLite): use getElementsByTagName for dealoc-ing elements, cz of SVG on IE", "B_clean_title": ["fix", "jqlite", "jq", "lite", "use", "getelementsbytagnam", "get", "element", "by", "tag", "name", "dealoc", "ing", "element", "cz", "svg", "ie"], "A_body": "This commit changes how input elements use the private $$parserName\r\nproperty on the ngModelController to name parse errors. Until now,\r\nthe input types (number, date etc.) would set $$parserName when\r\nthe inputs were initialized, which meant that any other parsers on\r\nthe ngModelController would also be named after that type. The\r\neffect of that was that the `$error` property and the `ng-invalid-...`\r\nclass would always be that of the built-in parser, even if the custom\r\nparser had nothing to do with it.\r\n\r\nThe new behavior is that the $$parserName is only set if the actual\r\nparser is invalid, i.e. returns `undefined`.\r\n\r\nAlso, $$parserName has been removed from input[email] and input[url],\r\nas these types do not have a built-in parser anymore.\r\n\r\nBREAKING CHANGE:\r\n\r\nCustom parsers that fail to parse on input types email, url, date, month, time,\r\ndatetime-local, week, do no longer set $error[inputType], and no longer set the class\r\n`ng-invalid-[inputType]`. Instead, they set $error.parse and `ng-invalid-parse`.\r\n\r\nCloses #14292 \r\nCloses #10076\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nThis is a general fix to https://github.com/angular/angular.js/issues/10076 and also incorporates the changes in https://github.com/angular/angular.js/pull/14292.\r\nWhile it's not a very common problem, I always found this section of the API very strange, especially since it uses an undocumented API (so if you stumble on it, it's even more difficult to find out what causes it).\r\nSince https://github.com/angular/angular.js/pull/14292 is already a very small BC I thought a general solution to this issue would be welcome.\r\nNote that I will include tests for the other input types if this implementation is approved.\r\n\r\n", "A_clean_body": ["thi", "commit", "chang", "how", "input", "element", "use", "privat", "parsernam", "parser", "name", "properti", "ngmodelcontrol", "ng", "model", "control", "name", "pars", "error", "until", "now", "input", "type", "number", "date", "etc", "would", "set", "parsernam", "parser", "name", "when", "input", "were", "initi", "which", "meant", "that", "ani", "other", "parser", "ngmodelcontrol", "ng", "model", "control", "would", "also", "name", "after", "that", "type", "effect", "that", "wa", "that", "error", "properti", "ng", "invalid", "class", "would", "alway", "that", "built", "parser", "even", "custom", "parser", "had", "noth", "it", "new", "behavior", "that", "parsernam", "parser", "name", "onli", "set", "actual", "parser", "invalid", "return", "undefin", "also", "parsernam", "parser", "name", "ha", "been", "remov", "input", "email", "input", "url", "as", "these", "type", "not", "have", "built", "parser", "anymor", "break", "chang", "custom", "parser", "that", "fail", "pars", "input", "type", "email", "url", "date", "month", "time", "datetim", "local", "week", "no", "longer", "set", "error", "inputtyp", "input", "type", "no", "longer", "set", "class", "ng", "invalid", "inputtyp", "input", "type", "instead", "they", "set", "error", "pars", "ng", "invalid", "pars", "close", "14292", "close", "10076", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "gener", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "10076", "also", "incorpor", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "while", "it", "'s", "not", "veri", "common", "problem", "alway", "found", "thi", "section", "api", "veri", "strang", "especi", "sinc", "it", "use", "undocu", "api", "so", "you", "stumbl", "it", "it", "'s", "even", "more", "difficult", "find", "out", "what", "caus", "it", "sinc", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "alreadi", "veri", "small", "bc", "thought", "gener", "solut", "thi", "issu", "would", "welcom", "note", "that", "will", "includ", "test", "other", "input", "type", "thi", "implement", "approv"], "B_body": "See comments in #8075\n", "B_clean_body": ["see", "comment", "8075"], "title_sim": [0.10217957108550733], "body_sim": [0.08688291278188282], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.008735832781457006, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1235}, {"A_title": "feat(security): explicitly whitelist URL schemes for bootstrap.", "A_clean_title": ["feat", "secur", "explicitli", "whitelist", "url", "scheme", "bootstrap"], "B_title": "[[TRAVIS POKE]] fix($location): allow numeric location setter arguments", "B_clean_title": ["travi", "poke", "fix", "locat", "allow", "numer", "locat", "setter", "argument"], "A_body": "Many browsers have some extension URL scheme. It is unclear how many of\r\nthose have the security issue of allowing parser-inserted loads of\r\nextension URLs.\r\n\r\nTo be conservative, this code whitelists the URL schemes that are known\r\nto be subject to CSP, i.e. the ones that are expected and safe.\r\n\r\nNote: there is no change in tests as behavior does not change for any known URL.", "A_clean_body": ["mani", "browser", "have", "some", "extens", "url", "scheme", "it", "unclear", "how", "mani", "those", "have", "secur", "issu", "allow", "parser", "insert", "load", "extens", "url", "ur", "ls", "conserv", "thi", "code", "whitelist", "url", "scheme", "that", "are", "known", "subject", "csp", "one", "that", "are", "expect", "safe", "note", "there", "no", "chang", "test", "as", "behavior", "not", "chang", "ani", "known", "url"], "B_body": "Dupe of #7161, with some amendments\n", "B_clean_body": ["dupe", "7161", "some", "amend"], "title_sim": [0.04425447914995197], "body_sim": [0.05135559391120198], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03780586708819417, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 811}, {"A_title": "Update fixed docs content (guide)", "A_clean_title": ["updat", "fix", "doc", "content", "guid"], "B_title": "feat(ngCookies): support sameSite option", "B_clean_title": ["feat", "ngcooki", "ng", "cooki", "support", "samesit", "same", "site", "option"], "A_body": "Couple of typos fixed:\n- indentation\n- batchLogbatchLog -> batchLog\n- start periodic checking\n- missing brace\n", "A_clean_body": ["coupl", "typo", "fix", "indent", "batchlogbatchlog", "batch", "logbatch", "log", "batchlog", "batch", "log", "start", "period", "check", "miss", "brace"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature for issue https://github.com/angular/angular.js/issues/16543\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nsupport sameSite option for ngCookie\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16543", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "support", "samesit", "same", "site", "option", "ngcooki", "ng", "cooki", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.00491346969723369], "body_sim": [0.03648728322237503], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2507}, {"A_title": "docs(contributing): fix indentation for proper Markdown syntax", "A_clean_title": ["doc", "contribut", "fix", "indent", "proper", "markdown", "syntax"], "B_title": "fix($compile): allow compile data to be GCed after a non-clone linking", "B_clean_title": ["fix", "compil", "allow", "compil", "data", "gced", "ced", "after", "non", "clone", "link"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nMarkdown isn't displayed properly.\n\n**What is the new behavior (if this is a feature change)?**\nMarkdown is displayed properly.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "markdown", "n't", "display", "properli", "**what", "new", "behavior", "thi", "featur", "chang", "markdown", "display", "properli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This does two things:\n- nulls out some data when a non-cloning ~~transclude~~ link completes to allow mainly the ~~`boundTranscludeFn` func/closure~~ `$compileNodes`/`compositeLinkFn` to be GCed\n- throws if that ~~transclude~~ link is executed again since that would either re-link the same element or clone the linked element\n", "B_clean_body": ["thi", "two", "thing", "null", "out", "some", "data", "when", "non", "clone", "~~transclude~~", "link", "complet", "allow", "mainli", "boundtranscludefn", "bound", "transclud", "fn", "func", "closure~~", "compilenod", "compil", "node", "compositelinkfn", "composit", "link", "fn", "gced", "ced", "throw", "that", "~~transclude~~", "link", "execut", "again", "sinc", "that", "would", "either", "re", "link", "same", "element", "or", "clone", "link", "element"], "title_sim": [0.006034755025685537], "body_sim": [0.12983533895592506], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 251}, {"A_title": "refactor($parse): add lgalfaso's refactors and suggestions", "A_clean_title": ["refactor", "pars", "add", "lgalfaso", "'s", "refactor", "suggest"], "B_title": "Fix $browser.xhr (JSONP)", "B_clean_title": ["fix", "browser", "xhr", "jsonp"], "A_body": "@lgalfaso's PR #7543 had two aspects of it that I didn't include in my last changes to $parse (#7552, #7555)\n- Lexer should only take care of `constant`, and the Parser should deduce that a _primary_ `constant` is also a `literal`\n- Simplify the logic of Parser.filter \n", "A_clean_body": ["lgalfaso", "'s", "pr", "7543", "had", "two", "aspect", "it", "that", "did", "n't", "includ", "my", "last", "chang", "pars", "7552", "7555", "lexer", "onli", "take", "care", "constant", "parser", "deduc", "that", "primari", "constant", "also", "liter", "simplifi", "logic", "parser", "filter"], "B_body": "Creating &lt;script&gt; tags would require a lot of extra work if we want all browsers\nto load and execute these scripts. We decided to not implement that in jqLite.\n\nSee #369 for more information.\n\nCloses #369\n", "B_clean_body": ["creat", "lt", "script", "gt", "tag", "would", "requir", "lot", "extra", "work", "we", "want", "all", "browser", "load", "execut", "these", "script", "we", "decid", "not", "implement", "that", "jqlite", "jq", "lite", "see", "369", "more", "inform", "close", "369"], "title_sim": [0.010356044662250171], "body_sim": [0.24283683005245338], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1061}, {"A_title": "fix(ngAnimate): ignore children without animation runner when closing\u2026", "A_clean_title": ["fix", "nganim", "ng", "anim", "ignor", "children", "without", "anim", "runner", "when", "closing\u2026"], "B_title": "fix(injector): allow multiple loading of function modules", "B_clean_title": ["fix", "injector", "allow", "multipl", "load", "function", "modul"], "A_body": "\u2026 them\n\nDuring parent structural animations, ongoing animations on child elements\nare closed. These children are looked up by checking the data-ng-animate\nattribute. If an element is the clone of an animating element,\nit might have this attribute, but no animation runner associated with it,\nso we need to ignore it.\n\nFixes #11992\nCloses #13423\n", "A_clean_body": ["them", "dure", "parent", "structur", "anim", "ongo", "anim", "child", "element", "are", "close", "these", "children", "are", "look", "up", "by", "check", "data", "ng", "anim", "attribut", "element", "clone", "anim", "element", "it", "might", "have", "thi", "attribut", "but", "no", "anim", "runner", "associ", "it", "so", "we", "need", "ignor", "it", "fix", "11992", "close", "13423"], "B_body": "**TEST PR** Just verifying that this passes on IE8\n\nChange HashMap to give $$hashKey also for functions so it will be possible to\nload multiple module function instances. In order to prevent problem in\nangular's test suite,  added an option to HashMap to maintain its own id\ncounter and added cleanup of $$hashKey from all module functions after each \ntest.\n\nBefore this CL, functions were added to the HashMap via toString(), which\ncould potentially return the same value for different actual instances of a\nfunction. This corrects this behaviour by ensuring that functions are mapped\nwith hashKeys, and ensuring that hashKeys are removed from functions and\nobjects at the end of tests.\n\nIn addition to these changes, the injector uses its own set of UIDs in order\nto prevent confusingly breaking tests which expect scopes or ng-repeated items\nto have specific hash keys.\n\nCloses #7255\n", "B_clean_body": ["**test", "pr**", "just", "verifi", "that", "thi", "pass", "ie8", "chang", "hashmap", "hash", "map", "give", "hashkey", "hash", "key", "also", "function", "so", "it", "will", "possibl", "load", "multipl", "modul", "function", "instanc", "order", "prevent", "problem", "angular", "'s", "test", "suit", "ad", "option", "hashmap", "hash", "map", "maintain", "it", "own", "id", "counter", "ad", "cleanup", "hashkey", "hash", "key", "all", "modul", "function", "after", "each", "test", "befor", "thi", "cl", "function", "were", "ad", "hashmap", "hash", "map", "via", "tostr", "string", "which", "could", "potenti", "return", "same", "valu", "differ", "actual", "instanc", "function", "thi", "correct", "thi", "behaviour", "by", "ensur", "that", "function", "are", "map", "hashkey", "hash", "key", "ensur", "that", "hashkey", "hash", "key", "are", "remov", "function", "object", "at", "end", "test", "addit", "these", "chang", "injector", "use", "it", "own", "set", "uid", "ui", "ds", "order", "prevent", "confusingli", "break", "test", "which", "expect", "scope", "or", "ng", "repeat", "item", "have", "specif", "hash", "key", "close", "7255"], "title_sim": [0.07683235074265564], "body_sim": [0.19260209199627332], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.006172871730061243, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 532}, {"A_title": "chore(*): bump Yarn in Jenkins init-node script", "A_clean_title": ["chore", "bump", "yarn", "jenkin", "init", "node", "script"], "B_title": "docs(*): document the breaking change introduced in e1da4be", "B_clean_title": ["doc", "document", "break", "chang", "introduc", "e1da4b"], "A_body": "Without it Jenkins builds are broken.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["without", "it", "jenkin", "build", "are", "broken", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nAlthough e1da4be introduced a breaking change, it wasn't documented as such.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe breaking change is documented.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n<sub>(In a way. \"Let me introduce you this breaking change. It has been around for 2 releases, but I don't think you've met.)\"</sub>\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "although", "e1da4b", "introduc", "break", "chang", "it", "wa", "n't", "document", "as", "such", "**what", "new", "behavior", "thi", "featur", "chang", "break", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "sub", "way", "let", "me", "introduc", "you", "thi", "break", "chang", "it", "ha", "been", "around", "releas", "but", "n't", "think", "you", "'ve", "met", "sub", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.007528944812902562], "body_sim": [0.9225484603105815], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 377}, {"A_title": "docs($compile): remove a mention of preassigning bindings in controllers", "A_clean_title": ["doc", "compil", "remov", "mention", "preassign", "bind", "control"], "B_title": "feat(filterFilter): allow overwriting the special `$` property name", "B_clean_title": ["feat", "filterfilt", "filter", "filter", "allow", "overwrit", "special", "properti", "name"], "A_body": "The deprecation warning is no longer needed as the feature has been removed\r\nin 1.7.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreassigning bindings to controllers is described as deprecated but still working. This feature has been removed so the warning is no longer needed.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["deprec", "warn", "no", "longer", "need", "as", "featur", "ha", "been", "remov", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "preassign", "bind", "control", "describ", "as", "deprec", "but", "still", "work", "thi", "featur", "ha", "been", "remov", "so", "warn", "no", "longer", "need", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Previously, the special property name that would match against any\nproperty was hard-coded to `$`.\nWith this commit, the user can specify an arbitrary property name,\nby passing a 4th argument to `filterFilter()`. E.g.:\n\n``` js\nvar items = [{foo: 'bar'}, {baz: 'qux'}];\nvar expr  =  {'%': 'bar'};\n\nconsole.log(filterFilter(items, expr, null, '%'));   // [{foo: 'bar'}]\n```\n\nFixes #13313\n", "B_clean_body": ["previous", "special", "properti", "name", "that", "would", "match", "against", "ani", "properti", "wa", "hard", "code", "thi", "commit", "user", "specifi", "arbitrari", "properti", "name", "by", "pass", "4th", "argument", "filterfilt", "filter", "filter", "js", "var", "item", "foo", "'bar", "baz", "'qux", "var", "expr", "'bar", "consol", "log", "filterfilt", "filter", "filter", "item", "expr", "null", "foo", "'bar", "fix", "13313"], "title_sim": [-0.014381450264823193], "body_sim": [0.11357735845063739], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 494}, {"A_title": "docs($rootScope.Scope): clarify $watchGroup \"oldValues\" argument", "A_clean_title": ["doc", "rootscop", "scope", "root", "scope", "clarifi", "watchgroup", "watch", "group", "oldvalu", "old", "valu", "argument"], "B_title": "docs: Clarify documentation of input[week]", "B_clean_title": ["doc", "clarifi", "document", "input", "week"], "A_body": "This should help to prevent issues such as #8671, #12452, #16004.\r\n\r\nCloses #12643\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nunclear docs\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nhopefully clearer docs :)\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "help", "prevent", "issu", "such", "as", "8671", "12452", "16004", "close", "12643", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "unclear", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "hope", "clearer", "doc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Add a note to documentation of input[week] to explicitly state that the\r\nresulting Date object's value is set to Thursday at midnight of the\r\nspecified week\r\n\r\nResolves #15883\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nhttps://github.com/angular/angular.js/issues/15883\r\nThe docs do not specify the day and time of a Date created by input[week]\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThe docs now explicitly state that the resulting Date object's value is set to Thursday at midnight of the\r\nspecified week\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nThought this looked like a nice opportunity for baby's first pull request! Hope I did everything right...\r\n", "B_clean_body": ["add", "note", "document", "input", "week", "explicitli", "state", "that", "result", "date", "object", "'s", "valu", "set", "thursday", "at", "midnight", "specifi", "week", "resolv", "15883", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "http", "github", "com", "angular", "angular", "js", "issu", "15883", "doc", "not", "specifi", "day", "time", "date", "creat", "by", "input", "week", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "now", "explicitli", "state", "that", "result", "date", "object", "'s", "valu", "set", "thursday", "at", "midnight", "specifi", "week", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thought", "thi", "look", "like", "nice", "opportun", "babi", "'s", "first", "pull", "request", "hope", "did", "everyth", "right"], "title_sim": [0.14002649446671908], "body_sim": [0.8993303312410645], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.010687056412524274, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 52}, {"A_title": "fix(date filter): default to fullDate format", "A_clean_title": ["fix", "date", "filter", "default", "fulldat", "full", "date", "format"], "B_title": "fix(ngAnimate): don't close animations when child transitions close", "B_clean_title": ["fix", "nganim", "ng", "anim", "n't", "close", "anim", "when", "child", "transit", "close"], "A_body": "The browser's behave inconsistently, so we should just stick to one format\nwhen the format is not specified by the developer\n\nCloses #605\n", "A_clean_body": ["browser", "'s", "behav", "inconsist", "so", "we", "just", "stick", "one", "format", "when", "format", "not", "specifi", "by", "develop", "close", "605"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #16210\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "16210", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.09953479598351617], "body_sim": [0.15184027162230518], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07688375122547357, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2149}, {"A_title": "feat(input): add support for input[type=range]", "A_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "B_title": "docs/chore(version stuff): fix how versions are handled in builds and docs", "B_clean_title": ["doc", "chore", "version", "stuff", "fix", "how", "version", "are", "handl", "build", "doc"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "B_body": "There are three somewhat independent commits.\n- The first is a simple bug fix in the docs\n- The second updates how the versions are managed in the docs\n- The third does the same for the build\n", "B_clean_body": ["there", "are", "three", "somewhat", "independ", "commit", "first", "simpl", "bug", "fix", "doc", "second", "updat", "how", "version", "are", "manag", "doc", "third", "same", "build"], "title_sim": [0.04149854584889772], "body_sim": [0.3298156107464893], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01950921571811889, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 847}, {"A_title": "fix(jqLite): use XHTML-compliant HTML as input for jqLite", "A_clean_title": ["fix", "jqlite", "jq", "lite", "use", "xhtml", "compliant", "html", "as", "input", "jqlite", "jq", "lite"], "B_title": "docs(input[number]): note issue with large number and step validation", "B_clean_title": ["doc", "input", "number", "note", "issu", "larg", "number", "step", "valid"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#6917\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nClosing tags are added to HTML passed to jqLite which should make it XHTML-compliant.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated (N/A)\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass (we don't test on XHTML so it can't be tested)\r\n\r\n**Other information**:\r\n\r\nFixes #6917", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "6917", "**what", "new", "behavior", "thi", "featur", "chang", "close", "tag", "are", "ad", "html", "pass", "jqlite", "jq", "lite", "which", "make", "it", "xhtml", "compliant", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "we", "n't", "test", "xhtml", "so", "it", "ca", "n't", "test", "**other", "information**", "fix", "6917"], "B_body": "Closes #16486\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["close", "16486", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.2515007311665188], "body_sim": [0.987530086336368], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 55}, {"A_title": "chore(jenkins): do not publish to code.angularjs.org snapshot", "A_clean_title": ["chore", "jenkin", "not", "publish", "code", "angularj", "org", "snapshot"], "B_title": "fix($browser/$location): single quote in url causes infinite digest in F...", "B_clean_title": ["fix", "browser", "locat", "singl", "quot", "url", "caus", "infinit", "digest"], "A_body": "While the firewall continues to block the update ports\r\nwe will not try to publish there.\r\n", "A_clean_body": ["while", "firewal", "continu", "block", "updat", "port", "we", "will", "not", "tri", "publish", "there"], "B_body": "...F\n\nThe real issue is in FF, see https://bugzilla.mozilla.org/show_bug.cgi?id=407172.\n\nFF overly encodes stuff which breaks our expectations and then we fail .url() != currentUrl.absUrl()\ncomparison unexpectidly, which leads to infinite digest.\n\nThe workaround is to correct for this inconsistency in $browser and decode any single quotes in urls.\n\nCloses #920\n", "B_clean_body": ["real", "issu", "ff", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=407172", "ff", "overli", "encod", "stuff", "which", "break", "our", "expect", "then", "we", "fail", "url", "currenturl", "absurl", "current", "url", "ab", "url", "comparison", "unexpectidli", "which", "lead", "infinit", "digest", "workaround", "correct", "thi", "inconsist", "browser", "decod", "ani", "singl", "quot", "url", "close", "920"], "title_sim": [0.07093707011657713], "body_sim": [0.1646648932653187], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06124864499806908, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1848}, {"A_title": "docs app style updates", "A_clean_title": ["doc", "app", "style", "updat"], "B_title": "fix(scenario): make browser().location() working if ng-app on other than...", "B_clean_title": ["fix", "scenario", "make", "browser", "locat", "work", "ng", "app", "other", "than"], "A_body": "This updates the docs app to the new header style found on angularjs.org.\r\n\r\nI've also taken the liberty to update the menu entries on the doc site - pending approval I'll update the org site, too (would fix https://github.com/angular/angular.js/issues/14351)\r\n\r\nAnd fixes https://github.com/angular/angular.js/issues/14963\r\n\r\nNotable differences between org / docs:\r\n- search icon\r\n- font family / weight (should we update?)\r\n- no drop shadow on navbar because there's a secondary bar on docs\r\n\r\nNotable differences between docs old / new:\r\n- mobile: the top header + search are fixed, sub header is relative (previously all relative)\r\n- mobile search close icon has moved over the search bar, because I had some problems giving it it's previous position while keeping the search results scrollable (oh my)\r\n\r\nImplementation notes:\r\n- angular-topnav.css is included as is from org site\r\n- several overrides necessary because org uses bootstrap 2 / docs uses bs 3 (oh my)\r\n- org site uses one breakpoint at 800px, docs uses one at 768 and one at 992. I tested it and it doesn't affect the common screen sizes\r\n\r\nFuture work:\r\n- clean up the css and maybe implement sass for the docs app\r\n\r\nScreens:\r\n\r\n![fireshot screen capture 014 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop dropdown open](https://cloud.githubusercontent.com/assets/1153097/22548685/f47fb29c-e947-11e6-8f41-a6ab683a4037.png)\r\n![fireshot screen capture 015 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop search](https://cloud.githubusercontent.com/assets/1153097/22548686/f481f354-e947-11e6-8ea6-735012fe9c9c.png)\r\n![fireshot screen capture 016 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone dropdown](https://cloud.githubusercontent.com/assets/1153097/22548683/f47f66ac-e947-11e6-87b3-8317404394a1.png)\r\n![fireshot screen capture 017 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone search](https://cloud.githubusercontent.com/assets/1153097/22548684/f47fad88-e947-11e6-80c6-9beb87f70c53.png)\r\n", "A_clean_body": ["thi", "updat", "doc", "app", "new", "header", "style", "found", "angularj", "org", "'ve", "also", "taken", "liberti", "updat", "menu", "entri", "doc", "site", "pend", "approv", "'ll", "updat", "org", "site", "too", "would", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14351", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14963", "notabl", "differ", "between", "org", "doc", "search", "icon", "font", "famili", "weight", "we", "updat", "no", "drop", "shadow", "navbar", "becaus", "there", "'s", "secondari", "bar", "doc", "notabl", "differ", "between", "doc", "old", "new", "mobil", "top", "header", "search", "are", "fix", "sub", "header", "rel", "previous", "all", "rel", "mobil", "search", "close", "icon", "ha", "move", "over", "search", "bar", "becaus", "had", "some", "problem", "give", "it", "it", "'s", "previou", "posit", "while", "keep", "search", "result", "scrollabl", "oh", "my", "implement", "note", "angular", "topnav", "css", "includ", "as", "org", "site", "sever", "overrid", "necessari", "becaus", "org", "use", "bootstrap", "doc", "use", "bs", "oh", "my", "org", "site", "use", "one", "breakpoint", "at", "800px", "doc", "use", "one", "at", "768", "one", "at", "992", "test", "it", "it", "n't", "affect", "common", "screen", "size", "futur", "work", "clean", "up", "css", "mayb", "implement", "sass", "doc", "app", "screen", "fireshot", "screen", "captur", "014", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "dropdown", "open", "http", "e947", "11e6", "8f41", "githubusercont", "a6ab683a4037", "png", "cloud", "com", "asset", "1153097", "22548685", "f47fb29c", "fireshot", "screen", "captur", "015", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "search", "http", "e947", "11e6", "8ea6", "githubusercont", "735012fe9c9c", "png", "cloud", "com", "asset", "1153097", "22548686", "f481f354", "fireshot", "screen", "captur", "016", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "dropdown", "http", "e947", "11e6", "87b3", "githubusercont", "8317404394a1", "png", "cloud", "com", "asset", "1153097", "22548683", "f47f66ac", "fireshot", "screen", "captur", "017", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "search", "http", "e947", "11e6", "80c6", "githubusercont", "9beb87f70c53", "png", "cloud", "com", "asset", "1153097", "22548684", "f47fad88"], "B_body": "Make browser().location().\\* methods to work even if ng-app defined on other element than html.\n- pass $injector into action\n", "B_clean_body": ["make", "browser", "locat", "method", "work", "even", "ng", "app", "defin", "other", "element", "than", "html", "pass", "injector", "into", "action"], "title_sim": [0.09464800313000872], "body_sim": [0.12554477450818052], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [4.075357241459222e-05, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1754}, {"A_title": "docs(angular.Module): improved documentation for component method", "A_clean_title": ["doc", "angular", "modul", "improv", "document", "compon", "method"], "B_title": "docs($filter): add link to built-in filters page", "B_clean_title": ["doc", "filter", "add", "link", "built", "filter", "page"], "A_body": "Copy improved documentation for component() method from $compileProvider\r\nand add missing object syntax.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDoes not mention all syntaxes, is inconsistent with other documentation.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nFixes these issues\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["copi", "improv", "document", "compon", "method", "compileprovid", "compil", "provid", "add", "miss", "object", "syntax", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "not", "mention", "all", "syntax", "inconsist", "other", "document", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "these", "issu", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "tired to seek page with built-in filters every time I go to filters\n", "B_clean_body": ["tire", "seek", "page", "built", "filter", "everi", "time", "go", "filter"], "title_sim": [0.09217214017357023], "body_sim": [-0.0018665763812146451], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.024097562141212513, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 643}, {"A_title": "docs(guide/Internet Explorer Compatibility): Include warnings for usage of 'disabled' attribute", "A_clean_title": ["doc", "guid", "internet", "explor", "compat", "includ", "warn", "usag", "'disabl", "attribut"], "B_title": "fix(markup): Make special attrs such as ng:href work even without binding", "B_clean_title": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind"], "A_body": "Setting the 'disabled' attribute on an element that has descendant elements has unexpected behavior in Internet Explorer 11.\r\n\r\n* Input elements that are descendants have the text content of the 'placeholder' attribute inserted as the value (and it is not removed when typing in the field). Changes to the field are not reflected in the model value.\r\n* Select elements that are descendants are disabled.\r\n\r\nTo avoid this issue, it is important to not set `disabled` or `ng-disabled` on an element that has descendant form elements. Normally these should only be used on actual form controls so the issue would not manifest.\r\n\r\nThe issue can also appear if a directive/component is named 'disabled' or takes an attribute named 'disabled' as an input/output attribute, so avoid these.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs do not mention IE11 bug regarding the disabled attribute on elements with descendants (though it shouldn't be used on non-form controls, this issue can prop up when making custom elements/attributes).\r\n\r\nA previous issue noticed the incorrect behavior regarding the 'placeholder' attribute on input elements but incorrectly thought the behavior to be a bug with AngularJS:\r\nhttps://github.com/angular/angular.js/issues/15700\r\n\r\nI am able to reproduce the issue in the Plunkr created by @Narretz on the aforementioned issue:\r\nhttp://plnkr.co/edit/jDJv5NtwwDSsp9hRT2rf?p=preview\r\n\r\nAlso, here's an updated version of the Plunkr showing model value is not updating due to the 'disabled' attribute:\r\nhttp://plnkr.co/edit/AHix3x3dOzySygDOcfJA?p=preview\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocs mention the bug and suggest preventative measures.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n", "A_clean_body": ["set", "'disabl", "attribut", "element", "that", "ha", "descend", "element", "ha", "unexpect", "behavior", "internet", "explor", "11", "input", "element", "that", "are", "descend", "have", "text", "content", "'placehold", "attribut", "insert", "as", "valu", "it", "not", "remov", "when", "type", "field", "chang", "field", "are", "not", "reflect", "model", "valu", "select", "element", "that", "are", "descend", "are", "disabl", "avoid", "thi", "issu", "it", "import", "not", "set", "disabl", "or", "ng", "disabl", "element", "that", "ha", "descend", "form", "element", "normal", "these", "onli", "use", "actual", "form", "control", "so", "issu", "would", "not", "manifest", "issu", "also", "appear", "direct", "compon", "name", "'disabl", "or", "take", "attribut", "name", "'disabl", "as", "input", "output", "attribut", "so", "avoid", "these", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "not", "mention", "ie11", "bug", "regard", "disabl", "attribut", "element", "descend", "though", "it", "n't", "use", "non", "form", "control", "thi", "issu", "prop", "up", "when", "make", "custom", "element", "attribut", "previou", "issu", "notic", "incorrect", "behavior", "regard", "'placehold", "attribut", "input", "element", "but", "incorrectli", "thought", "behavior", "bug", "angularj", "angular", "js", "http", "github", "com", "angular", "angular", "js", "issu", "15700", "am", "abl", "reproduc", "issu", "plunkr", "creat", "by", "narretz", "aforement", "issu", "http", "plnkr", "co", "edit", "jdjv5ntwwdssp9hrt2rf", "jv5ntww", "ssp9h", "rt2rf", "p=preview", "also", "here", "'s", "updat", "version", "plunkr", "show", "model", "valu", "not", "updat", "due", "'disabl", "attribut", "http", "plnkr", "co", "edit", "ahix3x3dozysygdocfja", "hix3x3d", "ozi", "syg", "ocf", "ja", "p=preview", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "mention", "bug", "suggest", "prevent", "measur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "fix(markup): Make special attrs such as ng:href work even without binding\n- special attrs such as ng:href, ng:check did not work as intended when\n  their values do not contain bindings. And this commit is to fix that\n\nCloses #534\n", "B_clean_body": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind", "special", "attr", "such", "as", "ng", "href", "ng", "check", "did", "not", "work", "as", "intend", "when", "their", "valu", "not", "contain", "bind", "thi", "commit", "fix", "that", "close", "534"], "title_sim": [0.16156658864301027], "body_sim": [0.32057722898574287], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2392}, {"A_title": "feat($rootScope): allow suspending and resuming watchers on scope", "A_clean_title": ["feat", "rootscop", "root", "scope", "allow", "suspend", "resum", "watcher", "scope"], "B_title": "test(ng-non-bindable): test sibling bindings", "B_clean_title": ["test", "ng", "non", "bindabl", "test", "sibl", "bind"], "A_body": "This is a rebase of @shahata's original PR at #10658.\r\nWe need to think about @lgalfaso's concerns (https://github.com/angular/angular.js/pull/10658#issuecomment-75211793 and https://github.com/angular/angular.js/pull/10658#issuecomment-78611215) before merging...", "A_clean_body": ["thi", "rebas", "shahata", "'s", "origin", "pr", "at", "10658", "we", "need", "think", "about", "lgalfaso", "'s", "concern", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "75211793", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "78611215", "befor", "merg"], "B_body": "Ref: https://github.com/angular/angular.dart/blob/master/test/directives/ng_non_bindable_spec.dart\n", "B_clean_body": ["ref", "http", "dart", "github", "com", "angular", "angular", "non", "bindabl", "spec", "dart", "blob", "master", "test", "direct", "ng"], "title_sim": [0.03958995092478923], "body_sim": [0.6249683759412025], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0377892511292172, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1501}, {"A_title": "docs($sce): grammar fix - there was a word omitted", "A_clean_title": ["doc", "sce", "grammar", "fix", "there", "wa", "word", "omit"], "B_title": "chore(docs-app): ensure ToC links contain the path", "B_clean_title": ["chore", "doc", "app", "ensur", "toc", "link", "contain", "path"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\nno change\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n...teeny letter missing.  Just a grammar change.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "teeni", "letter", "miss", "just", "grammar", "chang"], "B_body": "Without the path the browser address changes so the hash\r\nfragment is directly on the base url. Then on refresh the\r\nbrowser navigates to an invalid page.\r\n\r\nCloses #16608\r\n", "B_clean_body": ["without", "path", "browser", "address", "chang", "so", "hash", "fragment", "directli", "base", "url", "then", "refresh", "browser", "navig", "invalid", "page", "close", "16608"], "title_sim": [0.1884159271097478], "body_sim": [0.09949202032984449], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 793}, {"A_title": "docs($location): fix typo", "A_clean_title": ["doc", "locat", "fix", "typo"], "B_title": "fix($parse): unwrap promise when setting a field", "B_clean_title": ["fix", "pars", "unwrap", "promis", "when", "set", "field"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This fixes an inconsistency where you can't call the setter function\nwhen the expression resolves to a top level field name on a promise.\n\nSetting a field on an unresolved promise will throw an exception.  (This\nshouldn't really happen in your template/js code and points to a\nprogramming error.)\n\nCloses #1827\n", "B_clean_body": ["thi", "fix", "inconsist", "where", "you", "ca", "n't", "call", "setter", "function", "when", "express", "resolv", "top", "level", "field", "name", "promis", "set", "field", "unresolv", "promis", "will", "throw", "except", "thi", "n't", "realli", "happen", "your", "templat", "js", "code", "point", "program", "error", "close", "1827"], "title_sim": [0.11846423655337197], "body_sim": [0.10225776354301533], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1639}, {"A_title": "test(modules): fix module tests which got disabled by ngMobile", "A_clean_title": ["test", "modul", "fix", "modul", "test", "which", "got", "disabl", "by", "ngmobil", "ng", "mobil"], "B_title": "fix($scope): fixes multiple root element error when there is a whites\u2026", "B_clean_title": ["fix", "scope", "fix", "multipl", "root", "element", "error", "when", "there", "whites\u2026"], "A_body": "When ngMobile was merged in, we accidentaly included angular-scenario.js\nin the test file set for modules. Loading this file overrode jasmine's\n`it` and `describe` global functions which essentially disabled all of\n~200 unit tests for wrapped modules.\n\nThis change refactors the code to run the wrapped module tests.\n\nI had to extract browserTrigger from scenario runner in order to achieve\nthis without code duplication.\n", "A_clean_body": ["when", "ngmobil", "ng", "mobil", "wa", "merg", "we", "accidentali", "includ", "angular", "scenario", "js", "test", "file", "set", "modul", "load", "thi", "file", "overrod", "jasmine'", "it", "describ", "global", "function", "which", "essenti", "disabl", "all", "~200", "unit", "test", "wrap", "modul", "thi", "chang", "refactor", "code", "run", "wrap", "modul", "test", "had", "extract", "browsertrigg", "browser", "trigger", "scenario", "runner", "order", "achiev", "thi", "without", "code", "duplic"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nIf one tries to load a directive with a top-level comment angular throws an error \nError: [$compile:tplrt] Template for directive 'myDirective' must have exactly one root element\nhttps://github.com/angular/angular.js/issues/15108\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nfixes multiple root element error when there is a whitespace after a comment\n\nAdded new conditional for NODE_TYPE_TEXT inside removeComments method of $compile\nAdded corresponding unit tests.\n\nCloses #15108\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "one", "tri", "load", "direct", "top", "level", "comment", "angular", "throw", "error", "error", "compil", "tplrt", "templat", "direct", "'mydirect", "'mi", "direct", "must", "have", "exactli", "one", "root", "element", "http", "github", "com", "angular", "angular", "js", "issu", "15108", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "multipl", "root", "element", "error", "when", "there", "whitespac", "after", "comment", "ad", "new", "condit", "node", "type", "text", "insid", "removecom", "remov", "comment", "method", "compil", "ad", "correspond", "unit", "test", "close", "15108"], "title_sim": [0.025023730605554476], "body_sim": [0.2369649209737064], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.04409221863435527, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1245}, {"A_title": "refactor($parse): add lgalfaso's refactors and suggestions", "A_clean_title": ["refactor", "pars", "add", "lgalfaso", "'s", "refactor", "suggest"], "B_title": "Feat: ngRef directive to publish controllers, or elements into current scope ", "B_clean_title": ["feat", "ngref", "ng", "ref", "direct", "publish", "control", "or", "element", "into", "current", "scope"], "A_body": "@lgalfaso's PR #7543 had two aspects of it that I didn't include in my last changes to $parse (#7552, #7555)\n- Lexer should only take care of `constant`, and the Parser should deduce that a _primary_ `constant` is also a `literal`\n- Simplify the logic of Parser.filter \n", "A_clean_body": ["lgalfaso", "'s", "pr", "7543", "had", "two", "aspect", "it", "that", "did", "n't", "includ", "my", "last", "chang", "pars", "7552", "7555", "lexer", "onli", "take", "care", "constant", "parser", "deduc", "that", "primari", "constant", "also", "liter", "simplifi", "logic", "parser", "filter"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\npublish a component's or element-directive's, or jqlite wrapped DOM element into the containing scope\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThis is a rebased and updated version of https://github.com/angular/angular.js/pull/14080 with the following changes:\r\n\r\n- publish the jqlite-wrapped DOM element instead of the raw DOM element. In AngularJS, we don't deal with raw DOM elements, so this would create an inconsistency\r\n- introduce a `ngRefElement` attribute that indicates that you always want to publish the jqlite-wrapped DOM element, even if a controller exists\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "new", "behavior", "thi", "featur", "chang", "publish", "compon", "'s", "or", "element", "direct", "'s", "or", "jqlite", "wrap", "dom", "element", "into", "contain", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "rebas", "updat", "version", "http", "github", "com", "angular", "angular", "js", "pull", "14080", "follow", "chang", "publish", "jqlite", "wrap", "dom", "element", "instead", "raw", "dom", "element", "angularj", "angular", "js", "we", "n't", "deal", "raw", "dom", "element", "so", "thi", "would", "creat", "inconsist", "introduc", "ngrefel", "ng", "ref", "element", "attribut", "that", "indic", "that", "you", "alway", "want", "publish", "jqlite", "wrap", "dom", "element", "even", "control", "exist"], "title_sim": [0.014749208106283485], "body_sim": [0.2547702317099554], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.00462543464908843, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1403}, {"A_title": "docs(app): matches anchor tags to current docs theme", "A_clean_title": ["doc", "app", "match", "anchor", "tag", "current", "doc", "theme"], "B_title": "docs(component): clarify component usage", "B_clean_title": ["doc", "compon", "clarifi", "compon", "usag"], "A_body": "Updates the styles for the anchor tags to match the current docs theme.\n", "A_clean_body": ["updat", "style", "anchor", "tag", "match", "current", "doc", "theme"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update for issue #15042 \n\n**What is the current behavior? (You can also link to an open issue here)**\n\noutdated documentation\n\n**What is the new behavior (if this is a feature change)?**\n\nN/A\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "issu", "15042", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "outdat", "document", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [0.2429911620285515], "body_sim": [0.2737712948569673], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 638}, {"A_title": "docs(ChangeLog): fix typo", "A_clean_title": ["doc", "changelog", "chang", "log", "fix", "typo"], "B_title": "feat($rootScope): allow suspending and resuming watchers on scope", "B_clean_title": ["feat", "rootscop", "root", "scope", "allow", "suspend", "resum", "watcher", "scope"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs only.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "onli", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This is a rebase of @shahata's original PR at #10658.\r\nWe need to think about @lgalfaso's concerns (https://github.com/angular/angular.js/pull/10658#issuecomment-75211793 and https://github.com/angular/angular.js/pull/10658#issuecomment-78611215) before merging...", "B_clean_body": ["thi", "rebas", "shahata", "'s", "origin", "pr", "at", "10658", "we", "need", "think", "about", "lgalfaso", "'s", "concern", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "75211793", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "78611215", "befor", "merg"], "title_sim": [0.021363458596175583], "body_sim": [0.31058276765044746], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 36}, {"A_title": "fix($compile): update cloned elements if the template arrives after the ...", "A_clean_title": ["fix", "compil", "updat", "clone", "element", "templat", "arriv", "after"], "B_title": "docs(guide/Unit Testing): Changed $scope = {} to $scope = $rootScope.\u2026", "B_clean_title": ["doc", "guid", "unit", "test", "chang", "scope", "scope", "rootscop", "root", "scope"], "A_body": "...cloning\n\nIf an element has a directive whose content is loaded using `templateUrl`,\nand the element is cloned using a linking function before the template arrives,\nthe clone needs to be updated as well.\n\nThis also updates `ngIf` and `ngRepeat` to keep the connection to the clone\nof a tranclude function, so that they know about the changes a directive with\n`templateUrl` does to the element in the future.\n\nFixes to #4930.\n", "A_clean_body": ["clone", "element", "ha", "direct", "whose", "content", "load", "templateurl", "templat", "url", "element", "clone", "link", "function", "befor", "templat", "arriv", "clone", "need", "updat", "as", "well", "thi", "also", "updat", "ngif", "ng", "ngrepeat", "ng", "repeat", "keep", "connect", "clone", "tranclud", "function", "so", "that", "they", "know", "about", "chang", "direct", "templateurl", "templat", "url", "element", "futur", "fix", "4930"], "B_body": "\u2026$new()\r\n\r\n{} will just create an empty object. This will break if the module uses for example $watch or others.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["new", "will", "just", "creat", "empti", "object", "thi", "will", "break", "modul", "use", "exampl", "watch", "or", "other", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.03477433969521369], "body_sim": [0.18007858030944834], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1436}, {"A_title": "refactor($location): move repeated path normalization code into helper method", "A_clean_title": ["refactor", "locat", "move", "repeat", "path", "normal", "code", "into", "helper", "method"], "B_title": "docs(*): replace master/slave with leader/follower", "B_clean_title": ["doc", "replac", "master", "slave", "leader", "follow"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactor to reduce duplicate code\r\n\r\n**Other information**:\r\nI originally did this as part of an attempted solution in #16611, but I thought it might be worth committing on it's own.\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "reduc", "duplic", "code", "**other", "information**", "origin", "did", "thi", "as", "part", "attempt", "solut", "16611", "but", "thought", "it", "might", "worth", "commit", "it", "'s", "own"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreviously, the docs made use of `master/slave`, which is offensive.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit removes the usage of these terms and replace them with `leader/follower`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nhttps://github.com/angular/angular.js/issues/16201\r\n\r\nUpdated the docs according to the logged issue. I might have made changes which do not directly use both `master` **and** `slave`, feel free to let me know to undo those changes. I thought it wasn't bad to stay consistent.\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "previous", "doc", "made", "use", "master", "slave", "which", "offens", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "remov", "usag", "these", "term", "replac", "them", "leader", "follow", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "http", "github", "com", "angular", "angular", "js", "issu", "16201", "updat", "doc", "accord", "log", "issu", "might", "have", "made", "chang", "which", "not", "directli", "use", "both", "master", "**and**", "slave", "feel", "free", "let", "me", "know", "undo", "those", "chang", "thought", "it", "wa", "n't", "bad", "stay", "consist"], "title_sim": [-0.027507242343773577], "body_sim": [0.657255221765403], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 304}, {"A_title": "chore(doc-gen, docs-app): generate version for stable snapshot", "A_clean_title": ["chore", "doc", "gen", "doc", "app", "gener", "version", "stabl", "snapshot"], "B_title": "chore(*): update all Karma-related packages except Karma", "B_clean_title": ["chore", "updat", "all", "karma", "relat", "packag", "except", "karma"], "A_body": "The \"stable snapshot\" is based on the latest commit on the current stable\r\nbranch, i.e. a preview of the next patch version.\r\n\r\nNext thing:\r\n- update the Firebase deployment so that on the branch with distTag = latest gets deployed to docs.angularjs.org and as to gcs as snapshot-stable\r\n\r\n\r\n", "A_clean_body": ["stabl", "snapshot", "base", "latest", "commit", "current", "stabl", "branch", "preview", "next", "patch", "version", "next", "thing", "updat", "firebas", "deploy", "so", "that", "branch", "disttag", "dist", "tag", "latest", "get", "deploy", "doc", "angularj", "org", "as", "gc", "as", "snapshot", "stabl"], "B_body": "The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["updat", "karma", "chrome", "launcher", "add", "support", "chromeheadless", "chrome", "headless", "chromecanaryheadless", "chrome", "canari", "headless", "launcher", "test", "karma", "start", "karma", "jqlite", "conf", "js", "browsers=chromecanaryheadless", "browsers=chrom", "canari", "headless", "updat", "karma", "firefox", "launcher", "disabl", "multi", "process", "which", "may", "increas", "stabil", "jenkin", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.39223382566932674], "body_sim": [0.15298017705562064], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 164}, {"A_title": "fix(ngOptions): ignore comment nodes when removing 'selected' attribute", "A_clean_title": ["fix", "ngoption", "ng", "option", "ignor", "comment", "node", "when", "remov", "'select", "attribut"], "B_title": "feat($swipe): Refactor swipe logic from ngSwipe to $swipe service.", "B_clean_title": ["feat", "swipe", "refactor", "swipe", "logic", "ngswipe", "ng", "swipe", "swipe", "servic"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the \"selected\" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "regress", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "empti", "option", "ha", "ngif", "ng", "it", "ngoption", "ng", "option", "select", "ngif", "ng", "express", "fals", "then", "error", "thrown", "becaus", "we", "tri", "remov", "select", "attribut", "ngif", "ng", "comment", "node", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This new service is used by the ngSwipeLeft/Right directives, and by the\nseparate ngCarousel and swipe-to-delete directives which are under\ndevelopment.\n", "B_clean_body": ["thi", "new", "servic", "use", "by", "ngswipeleft", "right", "ng", "swipe", "left", "direct", "by", "separ", "ngcarousel", "ng", "carousel", "swipe", "delet", "direct", "which", "are", "under", "develop"], "title_sim": [0.09914140250489432], "body_sim": [0.18058390287015408], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0280003121710704, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1308}, {"A_title": "fix($compile): create new (isolate) scopes for directives on root elements", "A_clean_title": ["fix", "compil", "creat", "new", "isol", "scope", "direct", "root", "element"], "B_title": "docs: load angular from can only on production", "B_clean_title": ["doc", "load", "angular", "onli", "product"], "A_body": "previously we would not create them and it's causing all kinds of issues and accidental leaks\n\nCloses #817\n", "A_clean_body": ["previous", "we", "would", "not", "creat", "them", "it", "'s", "caus", "all", "kind", "issu", "accident", "leak", "close", "817"], "B_body": "So that when running the docs locally, eg. during e2e testing, we use the latest build version of angular, rather than the stable one from CDN.\n", "B_clean_body": ["so", "that", "when", "run", "doc", "local", "eg", "dure", "e2e", "test", "we", "use", "latest", "build", "version", "angular", "rather", "than", "stabl", "one", "cdn"], "title_sim": [0.0609135494899483], "body_sim": [0.1844016115206013], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 179}, {"A_title": "docs($sceProvider): XSS when turning of SCE", "A_clean_title": ["doc", "sceprovid", "sce", "provid", "xss", "when", "turn", "sce"], "B_title": "chore(*): normalize Vojta's email in .mailmap correctly", "B_clean_title": ["chore", "normal", "vojta", "'s", "email", "mailmap", "correctli"], "A_body": "Document that turning off SCE is very, very dangerous and should normally not be used by applications.\n", "A_clean_body": ["document", "that", "turn", "off", "sce", "veri", "veri", "danger", "normal", "not", "use", "by", "applic"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nVojta's mails are not normalized.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThey are normalized.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "vojta", "'s", "mail", "are", "not", "normal", "**what", "new", "behavior", "thi", "featur", "chang", "they", "are", "normal", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**"], "title_sim": [-0.003788002091732909], "body_sim": [0.08133091219416812], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 790}, {"A_title": "chore(travis): move docse2e tests into the unit tests vm", "A_clean_title": ["chore", "travi", "move", "docse2", "test", "into", "unit", "test", "vm"], "B_title": "chore(*): bump Yarn in Jenkins init-node script", "B_clean_title": ["chore", "bump", "yarn", "jenkin", "init", "node", "script"], "A_body": "we spend more time making getting the build ready than running the docs e2e tests.\n\nby piggy-backing on unit tests we'll finish the build faster\n", "A_clean_body": ["we", "spend", "more", "time", "make", "get", "build", "readi", "than", "run", "doc", "e2e", "test", "by", "piggi", "back", "unit", "test", "we", "'ll", "finish", "build", "faster"], "B_body": "Without it Jenkins builds are broken.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["without", "it", "jenkin", "build", "are", "broken", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.29674231609426943], "body_sim": [0.2062296452998577], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1196}, {"A_title": "fix(ngOptions): ignore comment nodes when removing 'selected' attribute", "A_clean_title": ["fix", "ngoption", "ng", "option", "ignor", "comment", "node", "when", "remov", "'select", "attribut"], "B_title": "fix($parse): do not shallow-watch inputs when wrapped in an interceptor fn", "B_clean_title": ["fix", "pars", "not", "shallow", "watch", "input", "when", "wrap", "interceptor", "fn"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the \"selected\" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n~The logic is different in master, and the bug should not be happening there.~ The same bug exists on master\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "regress", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "empti", "option", "ha", "ngif", "ng", "it", "ngoption", "ng", "option", "select", "ngif", "ng", "express", "fals", "then", "error", "thrown", "becaus", "we", "tri", "remov", "select", "attribut", "ngif", "ng", "comment", "node", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "~the", "logic", "differ", "master", "bug", "not", "happen", "there", "same", "bug", "exist", "master"], "B_body": "Fixes #15905 \r\n\r\nThis basically applies the same as b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f to interceptors.\r\n\r\nFor example normally when watching `[var]` the `var` only needs to be shallow-watched. But if that expression then gets wrapped in an interceptor such as `$parse('[var]', interceptor)` we must assume the `interceptor` is non-pure and might read state from within the `var` (just like filters/functions...).\r\n\r\nThis tries to preserve shallow watching of things behind operators such as `!` by distinguishing if an expression is pure due to an operator such as `!` (\"absolute\") or pure only if no parent operation wants to deep watch it (\"relative\").  This way when wrapped in an interceptor the \"absolute\" ones can still be shallow watched, while the \"relative\" ones that the interceptor has access to can no longer be shallow watched.\r\n\r\nThis still doesn't fully restore the 1.6.3 ng-class functionality because it still doesn't do a deep-watch for one-time bindings like 1.6.3 did. The one (famous last words...) remaining regression from 1.6.3 is demonstrated by the modified ng-class spec (objects-in-literals-with-interceptors-in-one-time bindings).  This is due to [this annoying condition](https://github.com/angular/angular.js/blob/b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f/src/ng/parse.js#L1946-L1948) which I really wish I could find a better method of doing...", "B_clean_body": ["fix", "15905", "thi", "basic", "appli", "same", "as", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "interceptor", "exampl", "normal", "when", "watch", "var", "var", "onli", "need", "shallow", "watch", "but", "that", "express", "then", "get", "wrap", "interceptor", "such", "as", "pars", "var", "interceptor", "we", "must", "assum", "interceptor", "non", "pure", "might", "read", "state", "within", "var", "just", "like", "filter", "function", "thi", "tri", "preserv", "shallow", "watch", "thing", "behind", "oper", "such", "as", "by", "distinguish", "express", "pure", "due", "oper", "such", "as", "absolut", "or", "pure", "onli", "no", "parent", "oper", "want", "deep", "watch", "it", "rel", "thi", "way", "when", "wrap", "interceptor", "absolut", "one", "still", "shallow", "watch", "while", "rel", "one", "that", "interceptor", "ha", "access", "no", "longer", "shallow", "watch", "thi", "still", "n't", "fulli", "restor", "ng", "class", "function", "becaus", "it", "still", "n't", "deep", "watch", "one", "time", "bind", "like", "did", "one", "famou", "last", "word", "remain", "regress", "demonstr", "by", "modifi", "ng", "class", "spec", "object", "liter", "interceptor", "one", "time", "bind", "thi", "due", "thi", "annoy", "condit", "http", "js", "github", "com", "angular", "angular", "js", "blob", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "src", "ng", "pars", "l1946", "l1948", "which", "realli", "wish", "could", "find", "better", "method", "do"], "title_sim": [0.11727428252294357], "body_sim": [0.18250410691958696], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0483051459003113, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 178}, {"A_title": "Google logo in AngularJS.exports to vector format.", "A_clean_title": ["googl", "logo", "angularj", "export", "angular", "js", "vector", "format"], "B_title": "fix($compile): use correct parent element when requiring on html element", "B_clean_title": ["fix", "compil", "use", "correct", "parent", "element", "when", "requir", "html", "element"], "A_body": "Browser: Other\nComponent: docs\nRegression: no\n", "A_clean_body": ["browser", "other", "compon", "doc", "regress", "no"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.03361020732327343], "body_sim": [0.2643048769634445], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1624}, {"A_title": "fix(ngMessages): create new scope for ngMessage, clean it up correctly", "A_clean_title": ["fix", "ngmessag", "ng", "messag", "creat", "new", "scope", "ngmessag", "ng", "messag", "clean", "it", "up", "correctli"], "B_title": "refactor($rootScope): consistently use noop as the default $watch listener", "B_clean_title": ["refactor", "rootscop", "root", "scope", "consist", "use", "noop", "as", "default", "watch", "listen"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n#14307\n\n**What is the new behavior (if this is a feature change)?**\nngMessage creates a child scope instead of reusing the ngMessages scope.\n\n**Does this PR introduce a breaking change?**\nPossibly. Needs investigation.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nPreviously, ngMessage elements used the same scope as ngMessages. When ngMessage\nhas interpolation in the textContent, then removing the message would not remove\nthe watcher from the scope - it would only be removed when the whole ngMessages\nelement was removed.\n\nThis commit changes the ngMessage transclude function to create a new child scope\ninstead, which can be destroyed safely when the message element is removed and\nthe message is detached\n\nFixes #14307\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "14307", "**what", "new", "behavior", "thi", "featur", "chang", "ngmessag", "ng", "messag", "creat", "child", "scope", "instead", "reus", "ngmessag", "ng", "messag", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "need", "investig", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "previous", "ngmessag", "ng", "messag", "element", "use", "same", "scope", "as", "ngmessag", "ng", "messag", "when", "ngmessag", "ng", "messag", "ha", "interpol", "textcont", "text", "content", "then", "remov", "messag", "would", "not", "remov", "watcher", "scope", "it", "would", "onli", "remov", "when", "whole", "ngmessag", "ng", "messag", "element", "wa", "remov", "thi", "commit", "chang", "ngmessag", "ng", "messag", "transclud", "function", "creat", "new", "child", "scope", "instead", "which", "destroy", "safe", "when", "messag", "element", "remov", "messag", "detach", "fix", "14307"], "B_body": "By doing the `isFunction(listener)` check before delegating to `$$watchDelegate` it removes that check from some `$$watchDelegate` methods.", "B_clean_body": ["by", "do", "isfunct", "function", "listen", "check", "befor", "deleg", "watchdeleg", "watch", "deleg", "it", "remov", "that", "check", "some", "watchdeleg", "watch", "deleg", "method"], "title_sim": [0.17353391271667484], "body_sim": [0.21235636319216536], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.002772254994121726, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 611}, {"A_title": "fix(ngMessage): make ngMessage work with ngBind", "A_clean_title": ["fix", "ngmessag", "ng", "messag", "make", "ngmessag", "ng", "messag", "work", "ngbind", "ng", "bind"], "B_title": "fix(jqLite): make removeData() not remove event handlers", "B_clean_title": ["fix", "jqlite", "jq", "lite", "make", "removedata", "remov", "data", "not", "remov", "event", "handler"], "A_body": "Fixes #8089 \n\n(I'm not actually sure why this works tbh)\n", "A_clean_body": ["fix", "8089", "'m", "not", "actual", "sure", "whi", "thi", "work", "tbh"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix but a breaking change as well.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`removeData()` invoked on an element removes its event handlers as well.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n`removeData()` removes just user-set `data`, not internal data storage used for event handling. This aligns jqLite with jQuery.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~ (the current behavior is not documented)\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nFixes #15869", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "but", "break", "chang", "as", "well", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "removedata", "remov", "data", "invok", "element", "remov", "it", "event", "handler", "as", "well", "**what", "new", "behavior", "thi", "featur", "chang", "removedata", "remov", "data", "remov", "just", "user", "set", "data", "not", "intern", "data", "storag", "use", "event", "handl", "thi", "align", "jqlite", "jq", "lite", "jqueri", "queri", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "current", "behavior", "not", "document", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "fix", "15869"], "title_sim": [0.17990641894706447], "body_sim": [0.16789345309926368], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.014339294234697661, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 897}, {"A_title": "fix($sanitize): prevent clobbered elements from freezing the browser", "A_clean_title": ["fix", "sanit", "prevent", "clobber", "element", "freez", "browser"], "B_title": "Chore travis split unit", "B_clean_title": ["chore", "travi", "split", "unit"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nbrowser can be frozen with bad HTML\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nan exception is thrown instead\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browser", "frozen", "bad", "html", "**what", "new", "behavior", "thi", "featur", "chang", "except", "thrown", "instead", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.025523543366088558], "body_sim": [0.991677799987003], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.002243201004511166, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 253}, {"A_title": "chore(npm): publish artifacts to npm", "A_clean_title": ["chore", "npm", "publish", "artifact", "npm"], "B_title": "fix($compile): throw error in $onChanges immediately", "B_clean_title": ["fix", "compil", "throw", "error", "onchang", "chang", "immedi"], "A_body": "Note that there are still a few pending tasks before this can land, namely getting permissions for all of the package names on npm:\n- ~~[angular](https://www.npmjs.org/package/angular)~~ \u2013 got it. Thanks @bclinkinbeard!\n- ~~[angular-animate](https://www.npmjs.org/package/angular-animate)~~ \u2013 got it. thanks @pitbeast!\n- ~~[angular-cookies](https://www.npmjs.org/package/angular-cookies)~~ \u2013 got it. Thanks @petermelias!\n- ~~[angular-mocks](https://www.npmjs.org/package/angular-mocks)~~ \u2013 got it. Thanks @zizzamia!\n- ~~[angular-route](https://www.npmjs.org/package/angular-route)~~ \u2013 got it. Thanks @mljsimone!\n- ~~[angular-resource](https://www.npmjs.org/package/angular-resource)~~ \u2013 got it. Thanks @roylines!\n- ~~[angular-sanitize](https://www.npmjs.org/package/angular-sanitize)~~ \u2013 got it. Thanks @akalinovski!\n\nIf you own one of these packages, you can help by adding user \"angularcore\" to the package\n### unclaimed:\n- angular-aria\n- angular-i18n\n- angular-loader\n- angular-scenario\n- angular-touch\n- angular-messages\n\n~~I also still need to add `package.json` for each `bower-angular-*` repo (since that's how we'll be publishing these artifacts).~~ done!\n\nCloses #2877 \n", "A_clean_body": ["note", "that", "there", "are", "still", "few", "pend", "task", "befor", "thi", "land", "name", "get", "permiss", "all", "packag", "name", "npm", "angular", "http", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "bclinkinbeard", "angular", "anim", "http", "anim", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "pitbeast", "angular", "cooki", "http", "cooki", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "petermelia", "angular", "mock", "http", "mock", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "zizzamia", "angular", "rout", "http", "rout", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "mljsimon", "angular", "resourc", "http", "resourc", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "roylin", "angular", "sanit", "http", "sanit", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "akalinovski", "you", "own", "one", "these", "packag", "you", "help", "by", "ad", "user", "angularcor", "packag", "unclaim", "angular", "aria", "angular", "i18n", "angular", "loader", "angular", "scenario", "angular", "touch", "angular", "messag", "~~i", "also", "still", "need", "add", "packag", "json", "each", "bower", "angular", "repo", "sinc", "that", "'s", "how", "we", "'ll", "publish", "these", "artifact", "done", "close", "2877"], "B_body": "This brings it in line with how we throw errors in a digest cycle.\r\n\r\nCloses https://github.com/angular/angular.js/issues/15578\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "bring", "it", "line", "how", "we", "throw", "error", "digest", "cycl", "close", "http", "github", "com", "angular", "angular", "js", "issu", "15578", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.004127521196208092], "body_sim": [0.5311882439718298], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1262}, {"A_title": "perf(ngModel,ngForm): change ng-model/form controllers to use prototype methods", "A_clean_title": ["perf", "ngmodel", "ng", "model", "ngform", "ng", "form", "chang", "ng", "model", "form", "control", "use", "prototyp", "method"], "B_title": "docs(guide/Forms): add labels to forms", "B_clean_title": ["doc", "guid", "form", "add", "label", "form"], "A_body": "This makes the largetable-bp ng-model benchmarks 10-15% faster (down 90-100ms for me). The actual controller instantiation doesn't change too much but the overall numbers seem consistently faster, I assume all due to reducing memory usage / gc. Specifically on creation there is ~40% less memory GCed, on destruction there is about ~25% less.\n\nLooking at the heap snapshot this is entirely from having less closures (~70k => 30k closures), other counts are all equal or very close.\n\nLooking at the chrome timeline the number of GC events is about half and the time/gc amounts roughly match the benchpress measurements.\n\nWorth the breaking change? The diff can probably be reduced or split into 2 commits if there's interest...\n", "A_clean_body": ["thi", "make", "larget", "bp", "ng", "model", "benchmark", "10", "15", "faster", "down", "90", "100m", "me", "actual", "control", "instanti", "n't", "chang", "too", "much", "but", "overal", "number", "seem", "consist", "faster", "assum", "all", "due", "reduc", "memori", "usag", "gc", "specif", "creation", "there", "~40", "less", "memori", "gced", "ced", "destruct", "there", "about", "~25", "less", "look", "at", "heap", "snapshot", "thi", "entir", "have", "less", "closur", "~70k", "30k", "closur", "other", "count", "are", "all", "equal", "or", "veri", "close", "look", "at", "chrome", "timelin", "number", "gc", "event", "about", "half", "time", "gc", "amount", "roughli", "match", "benchpress", "measur", "worth", "break", "chang", "diff", "probabl", "reduc", "or", "split", "into", "commit", "there", "'s", "interest"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nno label tags in the inputs\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nnot a feature\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\nI can add label tags to the other input fields in the docs.", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "label", "tag", "input", "**what", "new", "behavior", "thi", "featur", "chang", "not", "featur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "add", "label", "tag", "other", "input", "field", "doc"], "title_sim": [0.49878581493480006], "body_sim": [0.19094618821378131], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 373}, {"A_title": "feat(Grunt): add source maps to all min files", "A_clean_title": ["feat", "grunt", "add", "sourc", "map", "all", "min", "file"], "B_title": "fix(testabilityPatch): reset cache after memory leak detection", "B_clean_title": ["fix", "testabilitypatch", "testabl", "patch", "reset", "cach", "after", "memori", "leak", "detect"], "A_body": "Generate source map files when build step is ran and adds source map\nheaders to all min files.\n\nSource map url must be appended to the min file otherwise the line\noffsets will be off.\n\nInspired by Ryan Seddon (PR #2858)\n\nCloses #1714\n", "A_clean_body": ["gener", "sourc", "map", "file", "when", "build", "step", "ran", "add", "sourc", "map", "header", "all", "min", "file", "sourc", "map", "url", "must", "append", "min", "file", "otherwis", "line", "offset", "will", "off", "inspir", "by", "ryan", "seddon", "pr", "2858", "close", "1714"], "B_body": "When you have a test failure in the angular.js project, which also causes a memory leak, such as a failure to dealocate an element or a scope, you often get a false-negative failure for every subsequent test. This change ensures that after such an error, the cache is reset so that subsequent tests can run normally.\n", "B_clean_body": ["when", "you", "have", "test", "failur", "angular", "js", "project", "which", "also", "caus", "memori", "leak", "such", "as", "failur", "dealoc", "element", "or", "scope", "you", "often", "get", "fals", "neg", "failur", "everi", "subsequ", "test", "thi", "chang", "ensur", "that", "after", "such", "error", "cach", "reset", "so", "that", "subsequ", "test", "run", "normal"], "title_sim": [0.018512864932087737], "body_sim": [0.10300680466706448], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 850}, {"A_title": "fix(jqLite): use getElementsByTagName for dealoc-ing elements, cz of SVG on IE", "A_clean_title": ["fix", "jqlite", "jq", "lite", "use", "getelementsbytagnam", "get", "element", "by", "tag", "name", "dealoc", "ing", "element", "cz", "svg", "ie"], "B_title": "chore(travis): speed up the build", "B_clean_title": ["chore", "travi", "speed", "up", "build"], "A_body": "See comments in #8075\n", "A_clean_body": ["see", "comment", "8075"], "B_body": "Just wanna see the travis build...\n- parallelize the tasks\n- cache requests (e2e tests)\n\nThis reduces the time from ~18min to ~12min.\n\nIt makes the output little messy. We could buffer output of each task and display it once it's fully finished, nicely. I think giving instant feedback is better.\n\nConflicts:\n    Gruntfile.js\n    package.json\n", "B_clean_body": ["just", "wan", "na", "see", "travi", "build", "parallel", "task", "cach", "request", "e2e", "test", "thi", "reduc", "time", "~18min", "~12min", "it", "make", "output", "littl", "messi", "we", "could", "buffer", "output", "each", "task", "display", "it", "onc", "it", "'s", "fulli", "finish", "nice", "think", "give", "instant", "feedback", "better", "conflict", "gruntfil", "js", "packag", "json"], "title_sim": [-0.0029862971924670303], "body_sim": [0.12350677934176459], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005810625889587512, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 372}, {"A_title": "fix($parse): properly handle dots at the end of identifiers", "A_clean_title": ["fix", "pars", "properli", "handl", "dot", "at", "end", "identifi"], "B_title": "chore(jenkins): do not publish to code.angularjs.org snapshot", "B_clean_title": ["chore", "jenkin", "not", "publish", "code", "angularj", "org", "snapshot"], "A_body": "Fixes #4613\nFixes #4912\n", "A_clean_body": ["fix", "4613", "fix", "4912"], "B_body": "While the firewall continues to block the update ports\r\nwe will not try to publish there.\r\n", "B_clean_body": ["while", "firewal", "continu", "block", "updat", "port", "we", "will", "not", "tri", "publish", "there"], "title_sim": [0.013707839525123016], "body_sim": [0.026913571582151102], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1031}, {"A_title": "feat($injector): ability to load new modules after bootstrapping", "A_clean_title": ["feat", "injector", "abil", "load", "new", "modul", "after", "bootstrap"], "B_title": "test(ngMock): remove a broken jqLite cache clearing", "B_clean_title": ["test", "ngmock", "ng", "mock", "remov", "broken", "jqlite", "jq", "lite", "cach", "clear"], "A_body": "The new method `$injector.loadNewModules(modules)` will add each of the\r\ninjectables to the injector and execute all of the run blocks for each\r\nmodule passed to the method.\r\n\r\n* The application developer is responsible for loading the code containing\r\nthe modules.\r\n* Modules cannot be unloaded.\r\n* Previously compiled HTML will not be affected by newly loaded directives,\r\nfilters and components.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["new", "method", "injector", "loadnewmodul", "load", "new", "modul", "modul", "will", "add", "each", "inject", "injector", "execut", "all", "run", "block", "each", "modul", "pass", "method", "applic", "develop", "respons", "load", "code", "contain", "modul", "modul", "not", "unload", "previous", "compil", "html", "will", "not", "affect", "by", "newli", "load", "direct", "filter", "compon", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA test change.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`angular.element.cache` is reset to an empty object in one spec.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt's no longer reset at all.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nThis is blocking PR #16512.", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "angular", "element", "cach", "reset", "empti", "object", "one", "spec", "**what", "new", "behavior", "thi", "featur", "chang", "it", "'s", "no", "longer", "reset", "at", "all", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "thi", "block", "pr", "16512"], "title_sim": [0.06463087212488595], "body_sim": [0.7405006430387517], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 196}, {"A_title": "test($sanitize): exclude elclob test in Edge 17", "A_clean_title": ["test", "sanit", "exclud", "elclob", "test", "edg", "17"], "B_title": "docs(jqLite): document append doesn't work well with a multi-node object", "B_clean_title": ["doc", "jqlite", "jq", "lite", "document", "append", "n't", "work", "well", "multi", "node", "object"], "A_body": "We don't exclude Edge completely to know if the bug has been fixed\r\nin the next version\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["we", "n't", "exclud", "edg", "complet", "know", "bug", "ha", "been", "fix", "next", "version", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Contrary to jQuery jqLite's append doesn't clone elements so will not work\r\ncorrectly when invoked on a jqLite object containing more than one DOM node.\r\n\r\nRefs #11446\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#11446 (it documents the existing difference from jQuery)\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["contrari", "jqueri", "queri", "jqlite", "jq", "lite", "'s", "append", "n't", "clone", "element", "so", "will", "not", "work", "correctli", "when", "invok", "jqlite", "jq", "lite", "object", "contain", "more", "than", "one", "dom", "node", "ref", "11446", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "11446", "it", "document", "exist", "differ", "jqueri", "queri", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**"], "title_sim": [0.016292168011126557], "body_sim": [0.9183498941764746], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 36}, {"A_title": "fix($sanitize): use appropriate inert document strategy for Firefox and Safari", "A_clean_title": ["fix", "sanit", "use", "appropri", "inert", "document", "strategi", "firefox", "safari"], "B_title": "perf(ngStyleDirective): use $watchCollection", "B_clean_title": ["perf", "ngstyledirect", "ng", "style", "direct", "use", "watchcollect", "watch", "collect"], "A_body": "Both Firefox and Safari are vulnerable to XSS if we use an inert document\r\ncreated via `document.implementation.createHTMLDocument()`.\r\n\r\nNow we check for those vulnerabilities and then use a DOMParser or XHR\r\nstrategy if needed.\r\n\r\nThanks to @cure53 for the heads up on this issue.\r\n", "A_clean_body": ["both", "firefox", "safari", "are", "vulner", "xss", "we", "use", "inert", "document", "creat", "via", "document", "implement", "createhtmldocu", "creat", "html", "document", "now", "we", "check", "those", "vulner", "then", "use", "dompars", "dom", "parser", "or", "xhr", "strategi", "need", "thank", "cure53", "head", "up", "thi", "issu"], "B_body": "This re-commits https://github.com/angular/angular.js/commit/4c8d8ad5083d9dd17c0b8480339d5f95943f1b71 which was [reverted](https://github.com/angular/angular.js/commit/36fd167e1d6668ab497970f491a6d95344e97e41) (with [tests added](https://github.com/angular/angular.js/commit/da75d138b144d196fc2b397c7a86a74528c151a5)).  This is possible now because of 189461f9bf6fda18ddbd16c42f2e959cf939c3da, although note that change is currently causing #15905 so maybe we should hold off on merging this one for now?\r\n\r\nFYI @gdi2290", "B_clean_body": ["thi", "re", "commit", "http", "github", "com", "angular", "angular", "js", "commit", "4c8d8ad5083d9dd17c0b8480339d5f95943f1b71", "which", "wa", "revert", "http", "github", "com", "angular", "angular", "js", "commit", "36fd167e1d6668ab497970f491a6d95344e97e41", "test", "ad", "http", "github", "com", "angular", "angular", "js", "commit", "da75d138b144d196fc2b397c7a86a74528c151a5", "thi", "possibl", "now", "becaus", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "although", "note", "that", "chang", "current", "caus", "15905", "so", "mayb", "we", "hold", "off", "merg", "thi", "one", "now", "fyi", "gdi2290"], "title_sim": [0.1167003329124832], "body_sim": [0.23331398719474455], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0372558844876286, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 27}, {"A_title": "fix($http): Do not serialize File object", "A_clean_title": ["fix", "http", "not", "serial", "file", "object"], "B_title": "[Style] Docs gulpfile.js - Spacing Consistency", "B_clean_title": ["style", "doc", "gulpfil", "js", "space", "consist"], "A_body": "We might auto set X-File headers, when you pass a File object, but I can't find any spec on that...\n(ie X-File-Size, content-type, etc...)\n", "A_clean_body": ["we", "might", "auto", "set", "file", "header", "when", "you", "pass", "file", "object", "but", "ca", "n't", "find", "ani", "spec", "that", "ie", "file", "size", "content", "type", "etc"], "B_body": "Updated gulpfile.js in Docs so that spacing is consistency.\n", "B_clean_body": ["updat", "gulpfil", "js", "doc", "so", "that", "space", "consist"], "title_sim": [0.22260690092876972], "body_sim": [0.17713528095084438], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1300}, {"A_title": "test(orderBy): add test cases for ordering array-like objects", "A_clean_title": ["test", "orderbi", "order", "by", "add", "test", "case", "order", "array", "like", "object"], "B_title": "docs(guide/Providers): Remove redundant apology", "B_clean_title": ["doc", "guid", "provid", "remov", "redund", "apolog"], "A_body": "(Testing #9942 before merging)\n", "A_clean_body": ["test", "9942", "befor", "merg"], "B_body": "There is no longer a service called \"service\", so this is confusing.", "B_clean_body": ["there", "no", "longer", "servic", "call", "servic", "so", "thi", "confus"], "title_sim": [0.010871833885115867], "body_sim": [0.027234568030436855], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 840}, {"A_title": "Chore docs site improvements", "A_clean_title": ["chore", "doc", "site", "improv"], "B_title": "fix(testabilityPatch): reset cache after memory leak detection", "B_clean_title": ["fix", "testabilitypatch", "testabl", "patch", "reset", "cach", "after", "memori", "leak", "detect"], "A_body": "Collection of improvements for the docs app, mostly related to crawling the website.", "A_clean_body": ["collect", "improv", "doc", "app", "mostli", "relat", "crawl", "websit"], "B_body": "When you have a test failure in the angular.js project, which also causes a memory leak, such as a failure to dealocate an element or a scope, you often get a false-negative failure for every subsequent test. This change ensures that after such an error, the cache is reset so that subsequent tests can run normally.\n", "B_clean_body": ["when", "you", "have", "test", "failur", "angular", "js", "project", "which", "also", "caus", "memori", "leak", "such", "as", "failur", "dealoc", "element", "or", "scope", "you", "often", "get", "fals", "neg", "failur", "everi", "subsequ", "test", "thi", "chang", "ensur", "that", "after", "such", "error", "cach", "reset", "so", "that", "subsequ", "test", "run", "normal"], "title_sim": [0.01399808164868489], "body_sim": [0.16207044659904873], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07302086356092938, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 872}, {"A_title": "docs($resourceProvider): Correct JS syntax error", "A_clean_title": ["doc", "resourceprovid", "resourc", "provid", "correct", "js", "syntax", "error"], "B_title": "fix($sanitize): sanitize `xml:base` attributes", "B_clean_title": ["fix", "sanit", "sanit", "xml", "base", "attribut"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nExample code has a syntax error\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nExample code no longer has a syntax error\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "code", "ha", "syntax", "error", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "code", "no", "longer", "ha", "syntax", "error", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "On Firefox there is a XSS vulnerability if a malicious attacker\r\ncan write into the `xml:base` attribute on an SVG anchor.\r\n", "B_clean_body": ["firefox", "there", "xss", "vulner", "malici", "attack", "write", "into", "xml", "base", "attribut", "svg", "anchor"], "title_sim": [-0.030523555424961112], "body_sim": [0.041368079807702296], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 430}, {"A_title": "chore: upgrade grunt packages to match master", "A_clean_title": ["chore", "upgrad", "grunt", "packag", "match", "master"], "B_title": "fix(): fix scoping for transclusion directives inside replace directive", "B_clean_title": ["fix", "fix", "scope", "transclus", "direct", "insid", "replac", "direct"], "A_body": "Seems to fix Jenkins build.\n\nBroken: http://ci.angularjs.org/job/angular.js-angular-v1.0.x/lastBuild/console\n\nFixed: http://ci.angularjs.org/job/angular.js-brian/34/console\n", "A_clean_body": ["seem", "fix", "jenkin", "build", "broken", "http", "angular", "angularj", "js", "v1", "ci", "org", "job", "angular", "lastbuild", "consol", "last", "build", "fix", "http", "angularj", "js", "brian", "34", "consol", "ci", "org", "job", "angular"], "B_body": "Tweaks to the implementation of #12975\n\nCloses #12975\nCloses #12936 \n", "B_clean_body": ["tweak", "implement", "12975", "close", "12975", "close", "12936"], "title_sim": [0.010806616438498633], "body_sim": [0.0337474355971079], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 798}, {"A_title": "docs(guide/decorators): add decorator guide", "A_clean_title": ["doc", "guid", "decor", "add", "decor", "guid"], "B_title": "fix($cookies): remove the deprecated $cookieStore factory", "B_clean_title": ["fix", "cooki", "remov", "deprec", "cookiestor", "cooki", "store", "factori"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update.\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere currently is no guide for decorators.\n\n**What is the new behavior (if this is a feature change)?**\n\nAdd a guide document for decorators\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n- explain decorators and how they are implemented in angular\n- explain how different types of services can be selected\n- explain `$delegate` objects and how they differ between services\n- warn of the risks/caveats of `$delegate` modification\n- note the exposure of `decorator` through the module api\n- show an example of decorating a core service\n- show an example of decorating a core directive\n- show an example of decorating a core filter\n\ncloses #12163\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "current", "no", "guid", "decor", "**what", "new", "behavior", "thi", "featur", "chang", "add", "guid", "document", "decor", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "explain", "decor", "how", "they", "are", "implement", "angular", "explain", "how", "differ", "type", "servic", "select", "explain", "deleg", "object", "how", "they", "differ", "between", "servic", "warn", "risk", "caveat", "deleg", "modif", "note", "exposur", "decor", "through", "modul", "api", "show", "exampl", "decor", "core", "servic", "show", "exampl", "decor", "core", "direct", "show", "exampl", "decor", "core", "filter", "close", "12163"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix - a removal of a deprecated factory.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe `$cookieStore` factory exists.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt doesn't.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nBREAKING CHANGE:\r\n\r\nThe $cookieStore has been removed. Migrate to the $cookie service. For simple\r\nvalues it's enough to rename $cookieStore to $cookie; for object values you need\r\nto use the `putObject` & `getObject` methods.\r\n\r\nBefore:\r\n```js\r\n$cookieStore.put('name1', 'simple value');\r\n$cookieStore.get('name1'); // 'simple value'\r\n$cookieStore.remove('name1');\r\n$cookieStore.put('name2', {key: 'value'});\r\n$cookieStore.get('name2'); // {key: 'value'}\r\n$cookieStore.remove('name2');\r\n```\r\n\r\nAfter:\r\n```js\r\n$cookie.put('name1', 'simple value');\r\n$cookie.get('name1'); // 'simple value'\r\n$cookie.remove('name1');\r\n$cookie.putObject('name2', {key: 'value'});\r\n$cookie.getObject('name2'); // {key: 'value'}\r\n$cookie.remove('name2');\r\n```", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "remov", "deprec", "factori", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "cookiestor", "cooki", "store", "factori", "exist", "**what", "new", "behavior", "thi", "featur", "chang", "it", "n't", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "break", "chang", "cookiestor", "cooki", "store", "ha", "been", "remov", "migrat", "cooki", "servic", "simpl", "valu", "it", "'s", "enough", "renam", "cookiestor", "cooki", "store", "cooki", "object", "valu", "you", "need", "use", "putobject", "put", "object", "getobject", "get", "object", "method", "befor", "js", "cookiestor", "put", "cooki", "store", "'name1", "'simpl", "valu", "cookiestor", "get", "cooki", "store", "'name1", "'simpl", "value'", "cookiestor", "remov", "cooki", "store", "'name1", "cookiestor", "put", "cooki", "store", "'name2", "key", "'valu", "cookiestor", "get", "cooki", "store", "'name2", "key", "'valu", "cookiestor", "remov", "cooki", "store", "'name2", "after", "js", "cooki", "put", "'name1", "'simpl", "valu", "cooki", "get", "'name1", "'simpl", "value'", "cooki", "remov", "'name1", "cooki", "putobject", "put", "object", "'name2", "key", "'valu", "cooki", "getobject", "get", "object", "'name2", "key", "'valu", "cooki", "remov", "'name2"], "title_sim": [0.008882677667095027], "body_sim": [0.49620640571485347], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 688}, {"A_title": "docs(*): Add CODE_OF_CONDUCT.md", "A_clean_title": ["doc", "add", "md", "code", "conduct"], "B_title": "refactor($rootScope): simplify $emit stopPropagation handling", "B_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere is no `CODE_OF_CONDUCT.md` in the repo.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThere is `CODE_OF_CONDUCT.md` in the repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "no", "md", "code", "conduct", "repo", "**what", "new", "behavior", "thi", "featur", "chang", "there", "md", "code", "conduct", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**"], "B_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "B_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "title_sim": [0.10035745763474961], "body_sim": [0.5332743503533353], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 84}, {"A_title": "feat:$xhr: provide access to $xhr header defaults", "A_clean_title": ["feat", "xhr", "provid", "access", "xhr", "header", "default"], "B_title": "docs($location): fix examples", "B_clean_title": ["doc", "locat", "fix", "exampl"], "A_body": "$xhr header defaults are now exposed as $xhr.defaults.headers.common and\n$xhr.default.headers.<httpmethod>. This allows applications to configure\ntheir defaults as needed.\n\nThis commit doesn't allow headers to be set per request, only per\napplication. Per request change would require api change, which I tried\nto avoid _for now_.\n", "A_clean_body": ["xhr", "header", "default", "are", "now", "expos", "as", "xhr", "default", "header", "common", "xhr", "default", "header", "httpmethod", "thi", "allow", "applic", "configur", "their", "default", "as", "need", "thi", "commit", "n't", "allow", "header", "set", "per", "request", "onli", "per", "applic", "per", "request", "chang", "would", "requir", "api", "chang", "which", "tri", "avoid", "now"], "B_body": "The examples contained tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixed a HTML5 browser scenarion with a non-HTML5\r\none.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe examples contains tests with assertions in form of regular equality\r\ncomparisons which would be noops and in case of an error nothing would get\r\nreported. Also, one of the test mixes a HTML5 browser scenario with a non-HTML5\r\none.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenarion", "non", "html5", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "contain", "test", "assert", "form", "regular", "equal", "comparison", "which", "would", "noop", "case", "error", "noth", "would", "get", "report", "also", "one", "test", "mix", "html5", "browser", "scenario", "non", "html5", "one", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.0341254462500378], "body_sim": [0.13853384533637605], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2045}, {"A_title": "test($compile): fix IE specific test.", "A_clean_title": ["test", "compil", "fix", "ie", "specif", "test"], "B_title": "fix($compile): allow compile data to be GCed after a non-clone linking", "B_clean_title": ["fix", "compil", "allow", "compil", "data", "gced", "ced", "after", "non", "clone", "link"], "A_body": "For some reason, the tests pass but the build doesn't turn green on http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/ (e.g. http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/89/  )\n", "A_clean_body": ["some", "reason", "test", "pass", "but", "build", "n't", "turn", "green", "http", "angularj", "js", "chirayu", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular", "http", "angularj", "js", "chirayu", "89", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular"], "B_body": "This does two things:\n- nulls out some data when a non-cloning ~~transclude~~ link completes to allow mainly the ~~`boundTranscludeFn` func/closure~~ `$compileNodes`/`compositeLinkFn` to be GCed\n- throws if that ~~transclude~~ link is executed again since that would either re-link the same element or clone the linked element\n", "B_clean_body": ["thi", "two", "thing", "null", "out", "some", "data", "when", "non", "clone", "~~transclude~~", "link", "complet", "allow", "mainli", "boundtranscludefn", "bound", "transclud", "fn", "func", "closure~~", "compilenod", "compil", "node", "compositelinkfn", "composit", "link", "fn", "gced", "ced", "throw", "that", "~~transclude~~", "link", "execut", "again", "sinc", "that", "would", "either", "re", "link", "same", "element", "or", "clone", "link", "element"], "title_sim": [0.5467448393997084], "body_sim": [0.08831021025374848], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 890}, {"A_title": "refactor($parse): remove the support of JSON parsing mode", "A_clean_title": ["refactor", "pars", "remov", "support", "json", "pars", "mode"], "B_title": "fix(ngMessages): create new scope for ngMessage, clean it up correctly", "B_clean_title": ["fix", "ngmessag", "ng", "messag", "creat", "new", "scope", "ngmessag", "ng", "messag", "clean", "it", "up", "correctli"], "A_body": "It's a feature that isn't exposed to the public, and is no longer used internally (not even tested).\n\nSee #7540\n\nAs opposed to #7543, I considered `literal` and `constant` as two distinct concepts.\n", "A_clean_body": ["it", "'s", "featur", "that", "n't", "expos", "public", "no", "longer", "use", "intern", "not", "even", "test", "see", "7540", "as", "oppos", "7543", "consid", "liter", "constant", "as", "two", "distinct", "concept"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n#14307\n\n**What is the new behavior (if this is a feature change)?**\nngMessage creates a child scope instead of reusing the ngMessages scope.\n\n**Does this PR introduce a breaking change?**\nPossibly. Needs investigation.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nPreviously, ngMessage elements used the same scope as ngMessages. When ngMessage\nhas interpolation in the textContent, then removing the message would not remove\nthe watcher from the scope - it would only be removed when the whole ngMessages\nelement was removed.\n\nThis commit changes the ngMessage transclude function to create a new child scope\ninstead, which can be destroyed safely when the message element is removed and\nthe message is detached\n\nFixes #14307\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "14307", "**what", "new", "behavior", "thi", "featur", "chang", "ngmessag", "ng", "messag", "creat", "child", "scope", "instead", "reus", "ngmessag", "ng", "messag", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "need", "investig", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "previous", "ngmessag", "ng", "messag", "element", "use", "same", "scope", "as", "ngmessag", "ng", "messag", "when", "ngmessag", "ng", "messag", "ha", "interpol", "textcont", "text", "content", "then", "remov", "messag", "would", "not", "remov", "watcher", "scope", "it", "would", "onli", "remov", "when", "whole", "ngmessag", "ng", "messag", "element", "wa", "remov", "thi", "commit", "chang", "ngmessag", "ng", "messag", "transclud", "function", "creat", "new", "child", "scope", "instead", "which", "destroy", "safe", "when", "messag", "element", "remov", "messag", "detach", "fix", "14307"], "title_sim": [0.03432087660392363], "body_sim": [0.2712163210045945], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.004155927635137035, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 671}, {"A_title": "feat($componentController): provide isolated scope if none is passed", "A_clean_title": ["feat", "componentcontrol", "compon", "control", "provid", "isol", "scope", "none", "pass"], "B_title": "feat(form.FormController): add $getControls()", "B_clean_title": ["feat", "form", "formcontrol", "form", "control", "add", "getcontrol", "get", "control"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nfeat\n\n**What is the current behavior? (You can also link to an open issue here)**\n\none must always provide a scope for the $componentController helper, which is annoying\n\n**What is the new behavior (if this is a feature change)?**\n\nnow an isolated child of rootScope is created and used if no scope is provided\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "one", "must", "alway", "provid", "scope", "componentcontrol", "compon", "control", "helper", "which", "annoy", "**what", "new", "behavior", "thi", "featur", "chang", "now", "isol", "child", "rootscop", "root", "scope", "creat", "use", "no", "scope", "provid", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Fixes #14749\r\nCloses #14517\r\nCloses #13202\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nthere's no straight forward way to get all controls of a form\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nyou can get a shallow copy of the form controls\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nI decided against a synchronized copy (https://github.com/angular/angular.js/issues/14749#issuecomment-230451318) because I don't see the clear benefit over a simple shallow copy + is slightly more involved to implmenent.\r\n", "B_clean_body": ["fix", "14749", "close", "14517", "close", "13202", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "no", "straight", "forward", "way", "get", "all", "control", "form", "**what", "new", "behavior", "thi", "featur", "chang", "you", "get", "shallow", "copi", "form", "control", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "decid", "against", "synchron", "copi", "http", "github", "com", "angular", "angular", "js", "issu", "14749", "issuecom", "230451318", "becaus", "n't", "see", "clear", "benefit", "over", "simpl", "shallow", "copi", "slightli", "more", "involv", "implmen"], "title_sim": [0.26581463976413494], "body_sim": [0.7669174367067535], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.33411672140988685, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 794}, {"A_title": "fix($sanitize): use appropriate inert document strategy for Firefox and Safari", "A_clean_title": ["fix", "sanit", "use", "appropri", "inert", "document", "strategi", "firefox", "safari"], "B_title": "feat($resource): add support for `request` and `requestError` interceptors", "B_clean_title": ["feat", "resourc", "add", "support", "request", "requesterror", "request", "error", "interceptor"], "A_body": "Both Firefox and Safari are vulnerable to XSS if we use an inert document\r\ncreated via `document.implementation.createHTMLDocument()`.\r\n\r\nNow we check for those vulnerabilities and then use a DOMParser or XHR\r\nstrategy if needed.\r\n\r\nThanks to @cure53 for the heads up on this issue.\r\n", "A_clean_body": ["both", "firefox", "safari", "are", "vulner", "xss", "we", "use", "inert", "document", "creat", "via", "document", "implement", "createhtmldocu", "creat", "html", "document", "now", "we", "check", "those", "vulner", "then", "use", "dompars", "dom", "parser", "or", "xhr", "strategi", "need", "thank", "cure53", "head", "up", "thi", "issu"], "B_body": "Just a rebased version of #13273.", "B_clean_body": ["just", "rebas", "version", "13273"], "title_sim": [0.022126351739453414], "body_sim": [0.05456502090149471], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0361646683137447, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 110}, {"A_title": "docs($http): add a note about modifying data in transformRequest", "A_clean_title": ["doc", "http", "add", "note", "about", "modifi", "data", "transformrequest", "transform", "request"], "B_title": "docs($compile): remove a mention of preassigning bindings in controllers", "B_clean_title": ["doc", "compil", "remov", "mention", "preassign", "bind", "control"], "A_body": "- **What kind of change does this PR introduce?** (Bug fix, feature, docs update, ...)\n  docs update\n- **What is the current behavior?** (You can also link to an open issue here)\n  See #12468\n\nCloses #12468\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "12468", "close", "12468"], "B_body": "The deprecation warning is no longer needed as the feature has been removed\r\nin 1.7.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreassigning bindings to controllers is described as deprecated but still working. This feature has been removed so the warning is no longer needed.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["deprec", "warn", "no", "longer", "need", "as", "featur", "ha", "been", "remov", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "preassign", "bind", "control", "describ", "as", "deprec", "but", "still", "work", "thi", "featur", "ha", "been", "remov", "so", "warn", "no", "longer", "need", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.09122443590841217], "body_sim": [0.7248982827903883], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 399}, {"A_title": "fix($parse): do not shallow-watch computed property keys", "A_clean_title": ["fix", "pars", "not", "shallow", "watch", "comput", "properti", "key"], "B_title": "docs(ngMockE2E): add docs for $httpBackend.matchLatestDefinitionEnabl\u2026", "B_clean_title": ["doc", "ngmocke2", "ng", "mock", "e2e", "add", "doc", "httpbackend", "matchlatestdefinitionenabl\u2026", "http", "backend", "match", "latest", "definit", "enabl\u2026"], "A_body": "Fixes a case which b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f missed. ES6 computed keys can implicitly invoke `.toString()` of an object so we can't shallow-watch it.\r\n\r\nThe other option is shallow-watching `String(key)` instead, but I'm a little hesitant to watch something slightly different then how it's used in the real expression.", "A_clean_body": ["fix", "case", "which", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "miss", "es6", "comput", "key", "implicitli", "invok", "tostr", "string", "object", "so", "we", "ca", "n't", "shallow", "watch", "it", "other", "option", "shallow", "watch", "string", "key", "instead", "but", "'m", "littl", "hesit", "watch", "someth", "slightli", "differ", "then", "how", "it", "'s", "use", "real", "express"], "B_body": "\u2026ed()\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["\u2026ed", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.010479494529218997], "body_sim": [0.0388698580439494], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0821984920741944, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 312}, {"A_title": "chore(gitignore): add .agignore", "A_clean_title": ["chore", "gitignor", "add", "agignor"], "B_title": "docs(guide/Expressions): Redirection to MDN", "B_clean_title": ["doc", "guid", "express", "redirect", "mdn"], "A_body": "I use a .agignore file to skip the build directory and some other files\nwhile searching using Ag (see\nhttps://github.com/ggreer/the_silver_searcher).\n", "A_clean_body": ["use", "agignor", "file", "skip", "build", "directori", "some", "other", "file", "while", "search", "ag", "see", "http", "github", "silver", "searcher", "com", "ggreer"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nIt is better to link to the English version of MDN rather than German version\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "it", "better", "link", "english", "version", "mdn", "rather", "than", "german", "version"], "title_sim": [-0.003373069440774203], "body_sim": [0.10270010197902614], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1102}, {"A_title": "chore(*): remove manualLowercase & manualUppercase functions", "A_clean_title": ["chore", "remov", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function"], "B_title": "chore(grunt): check files in src for ddescribe/iit", "B_clean_title": ["chore", "grunt", "check", "file", "src", "ddescrib", "iit"], "A_body": "The `manualLowercase` & `manualUppercase` functions were inspired by Google Caja\r\ncode. Caja is written in Java, though, where problems with `toLowerCase`\r\nworking differently in Turkish locale are well known[1]. In JavaScript\r\n`String#toLowerCase` is defined in the ECMAScript spec and all implementations\r\nare required to lowercase I in the same way, regardless of the current locale.\r\nDifferences may (and do) happen only in `String#toLocaleLowerCase`.\r\n\r\nOther libraries doing string normalization, like jQuery or DOMPurify don't\r\napply special lowercasing logic in a Turkish environment.\r\n\r\nTherefore, the `manualLowercase` & `manualUppercase` logic is dead code in\r\nAngularJS and can be removed.\r\n\r\nAlso, the `manualLowercase` & `manualUppercase` functions are incomplete; they\r\nonly lowercase ASCII characters which is different to native\r\n`String#toLowerCase`. Since those functions are used in many places in the\r\nlibrary, they would break a lot of code. For example, the lowercase filter would\r\nnot lowercase \u03a9 to \u03c9 but leave it as \u03a9.\r\n\r\n[1] https://garygregory.wordpress.com/2015/11/03/java-lowercase-conversion-turkey/\r\n\r\nRef #11387\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDead code removal.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe `manualLowercase` & `manualUppercase` functions are defined & used if `'I'.toLowerCase() !== 'i'`.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n`String#toLowerCase` is used everywhere.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function", "were", "inspir", "by", "googl", "caja", "code", "caja", "written", "java", "though", "where", "problem", "tolowercas", "lower", "case", "work", "differ", "turkish", "local", "are", "well", "known", "javascript", "java", "script", "string", "tolowercas", "lower", "case", "defin", "ecmascript", "ecma", "script", "spec", "all", "implement", "are", "requir", "lowercas", "same", "way", "regardless", "current", "local", "differ", "may", "happen", "onli", "string", "tolocalelowercas", "local", "lower", "case", "other", "librari", "do", "string", "normal", "like", "jqueri", "queri", "or", "dompurifi", "dom", "purifi", "don't", "appli", "special", "lowercas", "logic", "turkish", "environ", "therefor", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "logic", "dead", "code", "angularj", "angular", "js", "remov", "also", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function", "are", "incomplet", "they", "onli", "lowercas", "ascii", "charact", "which", "differ", "nativ", "string", "tolowercas", "lower", "case", "sinc", "those", "function", "are", "use", "mani", "place", "librari", "they", "would", "break", "lot", "code", "exampl", "lowercas", "filter", "would", "not", "lowercas", "but", "leav", "it", "as", "http", "lowercas", "convers", "wordpress", "turkey", "garygregori", "com", "2015", "11", "03", "java", "ref", "11387", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "dead", "code", "remov", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "manuallowercas", "manual", "lowercas", "manualuppercas", "manual", "uppercas", "function", "are", "defin", "use", "i'", "tolowercas", "lower", "case", "**what", "new", "behavior", "thi", "featur", "chang", "string", "tolowercas", "lower", "case", "use", "everywher", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Previously, only files in test/ were checked. This does not capture\nend to end tests, which are in comments in src/.\n", "B_clean_body": ["previous", "onli", "file", "test", "were", "check", "thi", "not", "captur", "end", "end", "test", "which", "are", "comment", "src"], "title_sim": [0.44645437639930996], "body_sim": [0.17558319369096764], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1048}, {"A_title": "test($compile): use FQDN for img[src]", "A_clean_title": ["test", "compil", "use", "fqdn", "img", "src"], "B_title": "refactor($compile): remove unused `return` statement", "B_clean_title": ["refactor", "compil", "remov", "unus", "return", "statement"], "A_body": "img[src]=\"https://foo\" has the unfortunate problem that the browser will\nactually try retrieving the resource the non FQDN foo.  The local DNS\nmight suffix a domain to this, resolve it, and try to present a\ncertificate for the https request and prompt the user to pick a\ncertificate. This commit avoids that by making foo a FQDN.  Note that it\nmight be better to replace foo with example.com (ref\nhttp://tools.ietf.org/html/rfc2606#section-3).\n", "A_clean_body": ["img", "src", "http", "foo", "ha", "unfortun", "problem", "that", "browser", "will", "actual", "tri", "retriev", "resourc", "non", "fqdn", "foo", "local", "dn", "might", "suffix", "domain", "thi", "resolv", "it", "tri", "present", "certif", "http", "request", "prompt", "user", "pick", "certif", "thi", "commit", "avoid", "that", "by", "make", "foo", "fqdn", "note", "that", "it", "might", "better", "replac", "foo", "exampl", "com", "ref", "http", "ietf", "tool", "org", "html", "rfc2606", "section"], "B_body": "As discussed in https://github.com/angular/angular.js/commit/89447b3f2b4c6db62c24473a81fedc3b04242b85#commitcomment-10280666.\n", "B_clean_body": ["as", "discuss", "http", "github", "com", "angular", "angular", "js", "commit", "89447b3f2b4c6db62c24473a81fedc3b04242b85", "commitcom", "10280666"], "title_sim": [0.2420814637955333], "body_sim": [0.25866463662652056], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 637}, {"A_title": "Scenario runner navigate 404", "A_clean_title": ["scenario", "runner", "navig", "404"], "B_title": "docs(ngNonBindable): Document effect on attributes", "B_clean_title": ["doc", "ngnonbind", "ng", "non", "bindabl", "document", "effect", "attribut"], "A_body": "Check if the URL in navigateTo() is going to return a 2xx (success) status code. Now navigateTo() fails tests if navigating to a 404 or a 500. Also display better error messages about sandbox exceptions (cross domain or file://). Better test cases for Application sandbox error handling as well.\n\nAlso implements the http HEAD method in the nodeserver for testing.\n\nNote: This new code will behave badly if your server side code modifies state on a http HEAD request. For example, if your app used onetime URL tokens so that a URL could only be visited once the navigateTo() would fail since it would visit the URL twice. The same is true if you naviateTo('delete_something.html') and performed the actual delete on a HEAD request. No well behaved application should do this since it's entirely against the definition of the HEAD http method.\n", "A_clean_body": ["check", "url", "navigateto", "navig", "go", "return", "2xx", "success", "statu", "code", "now", "navigateto", "navig", "fail", "test", "navig", "404", "or", "500", "also", "display", "better", "error", "messag", "about", "sandbox", "except", "cross", "domain", "or", "file", "better", "test", "case", "applic", "sandbox", "error", "handl", "as", "well", "also", "implement", "http", "head", "method", "nodeserv", "test", "note", "thi", "new", "code", "will", "behav", "badli", "your", "server", "side", "code", "modifi", "state", "http", "head", "request", "exampl", "your", "app", "use", "onetim", "url", "token", "so", "that", "url", "could", "onli", "visit", "onc", "navigateto", "navig", "would", "fail", "sinc", "it", "would", "visit", "url", "twice", "same", "true", "you", "naviateto", "naviat", "html", "'delet", "someth", "perform", "actual", "delet", "head", "request", "no", "well", "behav", "applic", "thi", "sinc", "it", "'s", "entir", "against", "definit", "head", "http", "method"], "B_body": "The phrase \"contents of the current DOM element\" may be interpreted either as\r\ninclusive of the DOM element's attributes or as exclusive of the attributes.\r\nThis situation concerns markup such as:\r\n\r\n    <div ng-non-bindable ng-controller=\"MyController\"></div>\r\n\r\nIn practice, AngularJS does not compile or bind attribute values for elements\r\nwhich specify the `ng-non-bindable` directive. Extend the documentation to\r\ndefinitely describe this behavior.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["phrase", "content", "current", "dom", "element", "may", "interpret", "either", "as", "inclus", "dom", "element", "'s", "attribut", "or", "as", "exclus", "attribut", "thi", "situat", "concern", "markup", "such", "as", "div", "ng", "non", "bindabl", "ng", "controller=", "mycontrol", "my", "control", "div", "practic", "angularj", "angular", "js", "not", "compil", "or", "bind", "attribut", "valu", "element", "which", "specifi", "ng", "non", "bindabl", "direct", "extend", "document", "definit", "describ", "thi", "behavior", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.0], "body_sim": [0.25126489044676714], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.004938930111397823, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2582}, {"A_title": "Update fixed docs content (guide)", "A_clean_title": ["updat", "fix", "doc", "content", "guid"], "B_title": "fix(input): correctly handle invalid model values for `input[date/time/\u2026...", "B_clean_title": ["fix", "input", "correctli", "handl", "invalid", "model", "valu", "input", "date", "time"], "A_body": "Couple of typos fixed:\n- indentation\n- batchLogbatchLog -> batchLog\n- start periodic checking\n- missing brace\n", "A_clean_body": ["coupl", "typo", "fix", "indent", "batchlogbatchlog", "batch", "logbatch", "log", "batchlog", "batch", "log", "start", "period", "check", "miss", "brace"], "B_body": "...]`\n\nSimilar to `input[number]` Angular will throw if the model value\nfor a `input[date]` is not a `Date` object.\nFor `Invalid Date`s (dates who\u2019s `getTime()` is `NaN`) `input[date]` \nwill render an empty string.\n\nCloses #8949\n", "B_clean_body": ["similar", "input", "number", "angular", "will", "throw", "model", "valu", "input", "date", "not", "date", "object", "invalid", "date", "date", "who", "gettim", "get", "time", "nan", "na", "input", "date", "will", "render", "empti", "string", "close", "8949"], "title_sim": [0.19178771255102667], "body_sim": [-0.08611691484420798], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1199}, {"A_title": "fix(scenario): make browser().location() working if ng-app on other than...", "A_clean_title": ["fix", "scenario", "make", "browser", "locat", "work", "ng", "app", "other", "than"], "B_title": "chore(styleDirective): remove an unneccessary directive definition", "B_clean_title": ["chore", "styledirect", "style", "direct", "remov", "unneccessari", "direct", "definit"], "A_body": "Make browser().location().\\* methods to work even if ng-app defined on other element than html.\n- pass $injector into action\n", "A_clean_body": ["make", "browser", "locat", "method", "work", "even", "ng", "app", "defin", "other", "element", "than", "html", "pass", "injector", "into", "action"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nChore / Cleanup\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nSince the style directive is defined as a non-terminal element directive\nwith no behavior on link, we may as well not define anything at all.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "cleanup", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "sinc", "style", "direct", "defin", "as", "non", "termin", "element", "direct", "no", "behavior", "link", "we", "may", "as", "well", "not", "defin", "anyth", "at", "all"], "title_sim": [-0.02125473166750971], "body_sim": [0.14224325963347537], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1573}, {"A_title": "fix($compile): support transcluding multi-element directives", "A_clean_title": ["fix", "compil", "support", "transclud", "multi", "element", "direct"], "B_title": "fix($parse): support constants in computed keys", "B_clean_title": ["fix", "pars", "support", "constant", "comput", "key"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nTranscluding multi-element directives (e.g. `foo-start`/`foo-end`) is not supported on elements with multi-slot transclusion (a `uterdir` error is thrown).\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nTranscluded nodes are put into a DocumentFragment, where they can be traversed via `.nextSibling`. This way, transcluding multi-element directives on elements with multi-slot transclusion works correctly.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nFixes #15554.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "transclud", "multi", "element", "direct", "foo", "start", "foo", "end", "not", "support", "element", "multi", "slot", "transclus", "uterdir", "error", "thrown", "**what", "new", "behavior", "thi", "featur", "chang", "transclud", "node", "are", "put", "into", "documentfrag", "document", "fragment", "where", "they", "travers", "via", "nextsibl", "next", "sibl", "thi", "way", "transclud", "multi", "element", "direct", "element", "multi", "slot", "transclus", "work", "correctli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "15554"], "B_body": "Came across this while looking at computed keys. Super minor and mainly just to make the code more consistent...  Previously `$parse('{[\"key\"]: 1}').constant` would be `false`.", "B_clean_body": ["came", "across", "thi", "while", "look", "at", "comput", "key", "super", "minor", "mainli", "just", "make", "code", "more", "consist", "previous", "pars", "key", "constant", "would", "fals"], "title_sim": [0.19849981101480443], "body_sim": [0.055113285729040416], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.016190734374739266, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 200}, {"A_title": "chore(docs): don't use bower for docs dependencies", "A_clean_title": ["chore", "doc", "n't", "use", "bower", "doc", "depend"], "B_title": "Symlinking to bash in test.sh", "B_clean_title": ["symlink", "bash", "test", "sh"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nchore\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDocs app uses bower\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nNo use of bower in the docs application\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "app", "use", "bower", "**what", "new", "behavior", "thi", "featur", "chang", "no", "use", "bower", "doc", "applic", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "As discussed in \n\nhttp://groups.google.com/group/angular/browse_thread/thread/235d69ffc609e1a9#\n\nThanks in advance.\n", "B_clean_body": ["as", "discuss", "http", "googl", "group", "com", "group", "angular", "brows", "thread", "thread", "235d69ffc609e1a9", "thank", "advanc"], "title_sim": [0.11490277735458028], "body_sim": [0.09114322154334495], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2102}, {"A_title": "fix(ngOptions): don't duplicate groups with falsy values", "A_clean_title": ["fix", "ngoption", "ng", "option", "n't", "duplic", "group", "falsi", "valu"], "B_title": "docs(app): makes minor updates", "B_clean_title": ["doc", "app", "make", "minor", "updat"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbugfix\n\n**What is the current behavior? (You can also link to an open issue here)**\nsee #14781\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~~[ ]Docs have been added / updated (for bug fixes / features)~~\n\nThis happened when the options were updated, because ngOptions would fail\nto remove optgroups with falsy values\n\nRelated #14781\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14781", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "thi", "happen", "when", "option", "were", "updat", "becaus", "ngoption", "ng", "option", "would", "fail", "remov", "optgroup", "falsi", "valu", "relat", "14781"], "B_body": "Renames controller files and makes minor updates.\n", "B_clean_body": ["renam", "control", "file", "make", "minor", "updat"], "title_sim": [0.06271503248696599], "body_sim": [0.07684837363041844], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01037588329728248, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 526}, {"A_title": "benchmarks - remove no longer applicable, add $watchCollection", "A_clean_title": ["benchmark", "remov", "no", "longer", "applic", "add", "watchcollect", "watch", "collect"], "B_title": "chore(*): update all Karma-related packages except Karma", "B_clean_title": ["chore", "updat", "all", "karma", "relat", "packag", "except", "karma"], "A_body": "Removing\r\n* cases accessing `constructor` that previously had extra \"security\" applied\r\n* the `bmPeWatchLiteral` directive that was making literals `$watch`-able, now they can be watched normally\r\n\r\nAdding\r\n* some `$watchCollection` tests", "A_clean_body": ["remov", "case", "access", "constructor", "that", "previous", "had", "extra", "secur", "appli", "bmpewatchliter", "bm", "pe", "watch", "liter", "direct", "that", "wa", "make", "liter", "watch", "abl", "now", "they", "watch", "normal", "ad", "some", "watchcollect", "watch", "collect", "test"], "B_body": "The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["updat", "karma", "chrome", "launcher", "add", "support", "chromeheadless", "chrome", "headless", "chromecanaryheadless", "chrome", "canari", "headless", "launcher", "test", "karma", "start", "karma", "jqlite", "conf", "js", "browsers=chromecanaryheadless", "browsers=chrom", "canari", "headless", "updat", "karma", "firefox", "launcher", "disabl", "multi", "process", "which", "may", "increas", "stabil", "jenkin", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.010786364259427255], "body_sim": [0.0663417293450192], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 45}, {"A_title": "feat($parse): secure expressions by hiding \"private\" properties", "A_clean_title": ["feat", "pars", "secur", "express", "by", "hide", "privat", "properti"], "B_title": "fix($sanitize): use appropriate inert document strategy for Firefox and Safari", "B_clean_title": ["fix", "sanit", "use", "appropri", "inert", "document", "strategi", "firefox", "safari"], "A_body": "## BREAKING CHANGE:\n\nThis commit introduces the notion of \"private\" properties (properties\nwhose names begin and/or end with an underscore) on the scope chain.\nThese properties will not be available to Angular expressions (i.e. {{\n}} interpolation in templates and strings passed to `$parse`)  They are\nfreely available to JavaScript code (as before).\n## Motivation\n\nAngular expressions execute in a limited context.\u00a0 They do not have\ndirect access to the global scope, Window, Document or the Function\nconstructor.\u00a0 However, they have direct access to names/properties on\nthe scope chain.\u00a0 It has been a long standing best practice to keep\nsensitive APIs outside of the scope chain (in a closure or your\ncontroller.)\u00a0 That's easier said that done for two reasons: (1)\nJavaScript does not have a notion of private properties so if you need\nsomeone on the scope chain for JavaScript use, you also expose it to\nAngular expressions, and (2) the new \"controller as\" syntax that's now\nin increased usage exposes the entire controller on the scope chain\ngreatly increaing the exposed surface.\u00a0 Though Angular expressions are\nwritten and controlled by the developer, they (1) typically deal with\nuser input and (2) don't get the kind of test coverage that JavaScript\ncode would.\u00a0 This commit provides a way, via a naming convention, to\nallow publishing/restricting properties from controllers/scopes to\nAngular expressions enabling one to only expose those properties that\nare actually needed by the expressions.\n", "A_clean_body": ["break", "chang", "thi", "commit", "introduc", "notion", "privat", "properti", "properti", "whose", "name", "begin", "or", "end", "underscor", "scope", "chain", "these", "properti", "will", "not", "avail", "angular", "express", "interpol", "templat", "string", "pass", "pars", "they", "are", "freeli", "avail", "javascript", "java", "script", "code", "as", "befor", "motiv", "angular", "express", "execut", "limit", "context", "they", "not", "have", "direct", "access", "global", "scope", "window", "document", "or", "function", "constructor", "howev", "they", "have", "direct", "access", "name", "properti", "scope", "chain", "it", "ha", "been", "long", "stand", "best", "practic", "keep", "sensit", "api", "ap", "outsid", "scope", "chain", "closur", "or", "your", "control", "that", "'s", "easier", "said", "that", "done", "two", "reason", "javascript", "java", "script", "not", "have", "notion", "privat", "properti", "so", "you", "need", "someon", "scope", "chain", "javascript", "java", "script", "use", "you", "also", "expos", "it", "angular", "express", "new", "control", "as", "syntax", "that", "'s", "now", "increas", "usag", "expos", "entir", "control", "scope", "chain", "greatli", "increa", "expos", "surfac", "though", "angular", "express", "are", "written", "control", "by", "develop", "they", "typic", "deal", "user", "input", "n't", "get", "kind", "test", "coverag", "that", "javascript", "java", "script", "code", "would", "thi", "commit", "provid", "way", "via", "name", "convent", "allow", "publish", "restrict", "properti", "control", "scope", "angular", "express", "enabl", "one", "onli", "expos", "those", "properti", "that", "are", "actual", "need", "by", "express"], "B_body": "Both Firefox and Safari are vulnerable to XSS if we use an inert document\r\ncreated via `document.implementation.createHTMLDocument()`.\r\n\r\nNow we check for those vulnerabilities and then use a DOMParser or XHR\r\nstrategy if needed.\r\n\r\nThanks to @cure53 for the heads up on this issue.\r\n", "B_clean_body": ["both", "firefox", "safari", "are", "vulner", "xss", "we", "use", "inert", "document", "creat", "via", "document", "implement", "createhtmldocu", "creat", "html", "document", "now", "we", "check", "those", "vulner", "then", "use", "dompars", "dom", "parser", "or", "xhr", "strategi", "need", "thank", "cure53", "head", "up", "thi", "issu"], "title_sim": [0.05145614845676954], "body_sim": [0.38143745937287277], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02697703818900661, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1316}, {"A_title": "chore(docs): don't use bower for docs dependencies", "A_clean_title": ["chore", "doc", "n't", "use", "bower", "doc", "depend"], "B_title": "docs(CONTRIBUTING.md): Updated commit types.", "B_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nchore\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDocs app uses bower\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nNo use of bower in the docs application\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "app", "use", "bower", "**what", "new", "behavior", "thi", "featur", "chang", "no", "use", "bower", "doc", "applic", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "title_sim": [0.335893840704912], "body_sim": [0.9428219928984213], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 30}, {"A_title": "fix(ngAnimate): safe-guard against missing document", "A_clean_title": ["fix", "nganim", "ng", "anim", "safe", "guard", "against", "miss", "document"], "B_title": "fix(jenkins): reset baseUrl in protractor conf", "B_clean_title": ["fix", "jenkin", "reset", "baseurl", "base", "url", "protractor", "conf"], "A_body": "A different fix for the mocked document problem (in 1.4.x) that also fixes another possibly breaking access to the document.\n\nOne caveat: since we are now failing gracefully, and a missing document means no animations fire, tests that test animations and mock out document will not run animations, and this will be opaque to developers. However, I assume that most tests that mock document are actually very basic, as lots of other things should break when $document is mocked\n\nPlease check if the PR fulfills these requirements\n\n```\nThe commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n```\n", "A_clean_body": ["differ", "fix", "mock", "document", "problem", "that", "also", "fix", "anoth", "possibl", "break", "access", "document", "one", "caveat", "sinc", "we", "are", "now", "fail", "grace", "miss", "document", "mean", "no", "anim", "fire", "test", "that", "test", "anim", "mock", "out", "document", "will", "not", "run", "anim", "thi", "will", "opaqu", "develop", "howev", "assum", "that", "most", "test", "that", "mock", "document", "are", "actual", "veri", "basic", "as", "lot", "other", "thing", "break", "when", "document", "mock", "pleas", "check", "pr", "fulfil", "these", "requir", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "(Tested before and after fix locally and manually on ci.angularjs.org)\n\nCommit 22b817ec11f7ab1a81342a4b60acd644a3f2a8c3 changed the url\nused by protractor in all docs tests to add build/docs, which\nwas already set to the baseUrl in protractor-jenkins.conf. This\ncommit just changes the protractor config's baseUrl to adapt\nto the changes in the spec files.\n\nCloses #9783\n", "B_clean_body": ["test", "befor", "after", "fix", "local", "manual", "ci", "angularj", "org", "commit", "22b817ec11f7ab1a81342a4b60acd644a3f2a8c3", "chang", "url", "use", "by", "protractor", "all", "doc", "test", "add", "build", "doc", "which", "wa", "alreadi", "set", "baseurl", "base", "url", "protractor", "jenkin", "conf", "thi", "commit", "just", "chang", "protractor", "config", "'s", "baseurl", "base", "url", "adapt", "chang", "spec", "file", "close", "9783"], "title_sim": [0.11453799881086768], "body_sim": [0.3178643893597095], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 567}, {"A_title": "chore(*): bump Yarn in Jenkins init-node script", "A_clean_title": ["chore", "bump", "yarn", "jenkin", "init", "node", "script"], "B_title": "docs(ngComponentRouter): add note about shims needed for IE", "B_clean_title": ["doc", "ngcomponentrout", "ng", "compon", "router", "add", "note", "about", "shim", "need", "ie"], "A_body": "Without it Jenkins builds are broken.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["without", "it", "jenkin", "build", "are", "broken", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\ninfo about es6 shims is missing\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "info", "about", "es6", "shim", "miss"], "title_sim": [0.005165729793519589], "body_sim": [0.6763309153778867], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 609}, {"A_title": "fix: call $animate.on() listeners when document is hidden", "A_clean_title": ["fix", "call", "anim", "listen", "when", "document", "hidden"], "B_title": "revert: \"fix($compile): do not write @-bound properties if attribute \u2026", "B_clean_title": ["revert", "fix", "compil", "not", "write", "bound", "properti", "attribut"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRegression fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14120\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nThe first commit fixes a very rare case of callbacks being called in the wrong order, and has nothing to do with the regression (but it was found while fixing it)\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "regress", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14120", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "first", "commit", "fix", "veri", "rare", "case", "callback", "be", "call", "wrong", "order", "ha", "noth", "regress", "but", "it", "wa", "found", "while", "fix", "it"], "B_body": "\u2026is not present\"\n\nThis reverts commit 8a1eb1625c080445ce1e519762e1f2d4fd842b72.\n\nThis commit broke the tabs component on the material project,\nwhich caused internal breakages. Will open a separate issue to\nlook into the issue.\n", "B_clean_body": ["\u2026i", "not", "present", "thi", "revert", "commit", "8a1eb1625c080445ce1e519762e1f2d4fd842b72", "thi", "commit", "broke", "tab", "compon", "materi", "project", "which", "caus", "intern", "breakag", "will", "open", "separ", "issu", "look", "into", "issu"], "title_sim": [0.06074657566301556], "body_sim": [0.4376061938986446], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.014707387494692123, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 271}, {"A_title": " fix($compile): don't trim white-space in attributes", "A_clean_title": ["fix", "compil", "n't", "trim", "white", "space", "attribut"], "B_title": "chore(travis): split out the docs e2e tests into their own travis job", "B_clean_title": ["chore", "travi", "split", "out", "doc", "e2e", "test", "into", "their", "own", "travi", "job"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n$compile trims white-space from attributes when making them available to directives.\n\n**Does this PR introduce a breaking change?**\nYes. Previosuly stray white-space was trimmed, and therefore didn't impact application logic. I suspect this could have a moderate impact on existing apps - it depends on how common it is that attributes are read and used.\nI think however that not trimming white-space lets Angular work more like it is expected from HTML (which allows almost anything as an attribute value)\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compil", "trim", "white", "space", "attribut", "when", "make", "them", "avail", "direct", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "previosuli", "stray", "white", "space", "wa", "trim", "therefor", "did", "n't", "impact", "applic", "logic", "suspect", "thi", "could", "have", "moder", "impact", "exist", "app", "it", "depend", "how", "common", "it", "that", "attribut", "are", "read", "use", "think", "howev", "that", "not", "trim", "white", "space", "let", "angular", "work", "more", "like", "it", "expect", "html", "which", "allow", "almost", "anyth", "as", "attribut", "valu", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "B_body": "Previously, they were in the 'unit' job to save travis VMs, but this\nwas confusing and made it more difficult to track down errors easily.\n", "B_clean_body": ["previous", "they", "were", "'unit", "job", "save", "travi", "vm", "ms", "but", "thi", "wa", "confus", "made", "it", "more", "difficult", "track", "down", "error", "easili"], "title_sim": [0.009547176357224922], "body_sim": [0.19512021859131432], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 515}, {"A_title": "chore(ci): remove repeated tests running from Travis build", "A_clean_title": ["chore", "ci", "remov", "repeat", "test", "run", "travi", "build"], "B_title": "fix(docs): change plnkr form to open in same window", "B_clean_title": ["fix", "doc", "chang", "plnkr", "form", "open", "same", "window"], "A_body": "In b2902446eb41591f5d868846d3c5bad3a888bcba the doce2e tests were moved\ninto the 'unit' test job on Travis, but only half of this change ever made\nit into v1.2.x. This change fixes up the other half, so that the doce2e\ntests are run only once.\n", "A_clean_body": ["b2902446eb41591f5d868846d3c5bad3a888bcba", "doce2", "test", "were", "move", "into", "'unit", "test", "job", "travi", "but", "onli", "half", "thi", "chang", "ever", "made", "it", "into", "v1", "thi", "chang", "fix", "up", "other", "half", "so", "that", "doce2", "test", "are", "run", "onli", "onc"], "B_body": "Form previously posted to target=\"_blank\", but pop-up blockers were causing this to not work.\nIf a user chose to bypass pop-up blocker one time and click the link, they would arrive at\na new default plnkr, not a plnkr with the desired template.\n\nThis fix removes the _blank target, causing the plnkr to open in the current window/tab.\n", "B_clean_body": ["form", "previous", "post", "target=", "blank", "but", "pop", "up", "blocker", "were", "caus", "thi", "not", "work", "user", "chose", "bypass", "pop", "up", "blocker", "one", "time", "click", "link", "they", "would", "arriv", "at", "new", "default", "plnkr", "not", "plnkr", "desir", "templat", "thi", "fix", "remov", "blank", "target", "caus", "plnkr", "open", "current", "window", "tab"], "title_sim": [0.08396667936049702], "body_sim": [0.33974187177533693], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 66}, {"A_title": "test(input): fix date type tests with max + timezone", "A_clean_title": ["test", "input", "fix", "date", "type", "test", "max", "timezon"], "B_title": "docs(ngNonBindable): Document effect on attributes", "B_clean_title": ["doc", "ngnonbind", "ng", "non", "bindabl", "document", "effect", "attribut"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ntest update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "The phrase \"contents of the current DOM element\" may be interpreted either as\r\ninclusive of the DOM element's attributes or as exclusive of the attributes.\r\nThis situation concerns markup such as:\r\n\r\n    <div ng-non-bindable ng-controller=\"MyController\"></div>\r\n\r\nIn practice, AngularJS does not compile or bind attribute values for elements\r\nwhich specify the `ng-non-bindable` directive. Extend the documentation to\r\ndefinitely describe this behavior.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["phrase", "content", "current", "dom", "element", "may", "interpret", "either", "as", "inclus", "dom", "element", "'s", "attribut", "or", "as", "exclus", "attribut", "thi", "situat", "concern", "markup", "such", "as", "div", "ng", "non", "bindabl", "ng", "controller=", "mycontrol", "my", "control", "div", "practic", "angularj", "angular", "js", "not", "compil", "or", "bind", "attribut", "valu", "element", "which", "specifi", "ng", "non", "bindabl", "direct", "extend", "document", "definit", "describ", "thi", "behavior", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.14845570514779027], "body_sim": [0.8701666701227411], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.021744241563722042, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 139}, {"A_title": "fix($parse): fix infinite digest errors when watching objects with .valueOf in literals", "A_clean_title": ["fix", "pars", "fix", "infinit", "digest", "error", "when", "watch", "object", "valueof", "valu", "liter"], "B_title": "test(ngMock): remove a broken jqLite cache clearing", "B_clean_title": ["test", "ngmock", "ng", "mock", "remov", "broken", "jqlite", "jq", "lite", "cach", "clear"], "A_body": "I think this is an edge case of https://github.com/angular/angular.js/commit/7084deccaac5855d7148fb6d91dcb83c16b079c4 (and [1.6.x](https://github.com/angular/angular.js/commit/25f008f541d68b09efd7b428b648c6d4899e6972)) that was not handled. If those objects (in the literals) have a `.valueOf` function that returns something other then `this` it will cause an infinite digest.\r\n\r\nThis should probably also go into 1.6?", "A_clean_body": ["think", "thi", "edg", "case", "http", "github", "com", "angular", "angular", "js", "commit", "7084deccaac5855d7148fb6d91dcb83c16b079c4", "http", "github", "com", "angular", "angular", "js", "commit", "25f008f541d68b09efd7b428b648c6d4899e6972", "that", "wa", "not", "handl", "those", "object", "liter", "have", "valueof", "valu", "function", "that", "return", "someth", "other", "then", "thi", "it", "will", "caus", "infinit", "digest", "thi", "probabl", "also", "go", "into"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA test change.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`angular.element.cache` is reset to an empty object in one spec.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt's no longer reset at all.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nThis is blocking PR #16512.", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "angular", "element", "cach", "reset", "empti", "object", "one", "spec", "**what", "new", "behavior", "thi", "featur", "chang", "it", "'s", "no", "longer", "reset", "at", "all", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "thi", "block", "pr", "16512"], "title_sim": [0.1568444827719373], "body_sim": [0.6481088200454328], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 365}, {"A_title": "docs($filter): add link to built-in filters page", "A_clean_title": ["doc", "filter", "add", "link", "built", "filter", "page"], "B_title": "chore(*): add a Git .mailmap with my new name", "B_clean_title": ["chore", "add", "git", "mailmap", "my", "new", "name"], "A_body": "tired to seek page with built-in filters every time I go to filters\n", "A_clean_body": ["tire", "seek", "page", "built", "filter", "everi", "time", "go", "filter"], "B_body": "In this way my past contributions are mapped correctly.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nGit thinks I'm 2 people.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nI'm one person again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\nOutput of `git shortlog -nse | head -25` after this PR (I see we could use more `.mailmap` entries, there are lots of duplicates):\r\n```\r\n   931\tIgor Minar <igor@angularjs.org>\r\n   692\tMisko Hevery <misko@hevery.com>\r\n   677\tPeter Bacon Darwin <pete@bacondarwin.com>\r\n   503\tIgor Minar <iiminar@gmail.com>\r\n   364\tVojta Jina <vojta.jina@gmail.com>\r\n   364\tMatias Niemel\u00e4 <matias@yearofmoo.com>\r\n   259\tMartin Staffa <mjstaffa@googlemail.com>\r\n   196\tCaitlin Potter <caitpotter88@gmail.com>\r\n   192\tBrian Ford <btford@umich.edu>\r\n   169\tGeorgios Kalpakas <g.kalpakas@hotmail.com>\r\n   140\tGeorgios Kalpakas <kalpakas.g@gmail.com>\r\n   127\tPete Bacon Darwin <pete@bacondarwin.com>\r\n   108\tJason Bedard <jason+github@jbedard.ca>\r\n   108\tMartin Staffa <mjstaffa@gmail.com>\r\n    99\tTobias Bosch <tbosch1009@gmail.com>\r\n    94\tMicha\u0142 Go\u0142e\u0328biowski <m.goleb@gmail.com>\r\n    71\tLucas Galfaso <lgalfaso@gmail.com>\r\n    70\tShahar Talmi <shahar.talmi@gmail.com>\r\n    65\tJeff Cross <middlefloor@gmail.com>\r\n    52\tChirayu Krishnappa <chirayu@chirayuk.com>\r\n    50\trodyhaddad <rody@rodyhaddad.com>\r\n    47\tPawel Kozlowski <pkozlowski.opensource@gmail.com>\r\n    45\tDi Peng <pengdi@google.com>\r\n    43\tVojta Jina <vojta@gemin-i.org>\r\n    41\tLucas Mirelmann <lgalfaso@gmail.com>\r\n```", "B_clean_body": ["thi", "way", "my", "past", "contribut", "are", "map", "correctli", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "git", "think", "'m", "peopl", "**what", "new", "behavior", "thi", "featur", "chang", "'m", "one", "person", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "output", "git", "shortlog", "nse", "head", "25", "after", "thi", "pr", "see", "we", "could", "use", "more", "mailmap", "entri", "there", "are", "lot", "duplic", "931", "igor", "minar", "igor", "angularj", "org", "692", "misko", "heveri", "misko", "heveri", "com", "677", "peter", "bacon", "darwin", "pete", "bacondarwin", "com", "503", "igor", "minar", "iiminar", "gmail", "com", "364", "vojta", "jina", "vojta", "jina", "gmail", "com", "364", "matia", "niemel\u00e4", "matia", "yearofmoo", "com", "259", "martin", "staffa", "mjstaffa", "googlemail", "com", "196", "caitlin", "potter", "caitpotter88", "gmail", "com", "192", "brian", "ford", "btford", "umich", "edu", "169", "georgio", "kalpaka", "kalpaka", "hotmail", "com", "140", "georgio", "kalpaka", "kalpaka", "gmail", "com", "127", "pete", "bacon", "darwin", "pete", "bacondarwin", "com", "108", "jason", "bedard", "jason+github", "jbedard", "ca", "108", "martin", "staffa", "mjstaffa", "gmail", "com", "99", "tobia", "bosch", "tbosch1009", "gmail", "com", "94", "micha\u0142", "go\u0142e\u0328biowski", "goleb", "gmail", "com", "71", "luca", "galfaso", "lgalfaso", "gmail", "com", "70", "shahar", "talmi", "shahar", "talmi", "gmail", "com", "65", "jeff", "cross", "middlefloor", "gmail", "com", "52", "chirayu", "krishnappa", "chirayu", "chirayuk", "com", "50", "rodyhaddad", "rodi", "rodyhaddad", "com", "47", "pawel", "kozlowski", "pkozlowski", "opensourc", "gmail", "com", "45", "di", "peng", "pengdi", "googl", "com", "43", "vojta", "jina", "vojta", "gemin", "org", "41", "luca", "mirelmann", "lgalfaso", "gmail", "com"], "title_sim": [0.33319677231399464], "body_sim": [0.03422181177064745], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 433}, {"A_title": "fix($http): Do not serialize File object", "A_clean_title": ["fix", "http", "not", "serial", "file", "object"], "B_title": "feat(jqLite): make injector() and scope() work with the document object", "B_clean_title": ["feat", "jqlite", "jq", "lite", "make", "injector", "scope", "work", "document", "object"], "A_body": "We might auto set X-File headers, when you pass a File object, but I can't find any spec on that...\n(ie X-File-Size, content-type, etc...)\n", "A_clean_body": ["we", "might", "auto", "set", "file", "header", "when", "you", "pass", "file", "object", "but", "ca", "n't", "find", "ani", "spec", "that", "ie", "file", "size", "content", "type", "etc"], "B_body": "For typical app that has ng-app directive on the html element, we now can do:\n\nangular.element(document).injector() or .injector()\nangular.element(document).scope() or .scope()\n\ninstead of:\n\nangular.element(document.getElementsByTagName('html')[0]).injector()\n...\n", "B_clean_body": ["typic", "app", "that", "ha", "ng", "app", "direct", "html", "element", "we", "now", "angular", "element", "document", "injector", "or", "injector", "angular", "element", "document", "scope", "or", "scope", "instead", "angular", "element", "document", "getelementsbytagnam", "get", "element", "by", "tag", "name", "'html", "injector"], "title_sim": [0.09475438675619345], "body_sim": [0.12246560377445775], "file_list_sim": 0.16666666666666666, "overlap_files_len": 1, "code_sim": [0.05784126910084177, 0.18775159876325895], "location_sim": [0.0, 0.0], "pattern": 0, "time": 24}, {"A_title": "Add event info to animation event callbacks", "A_clean_title": ["add", "event", "info", "anim", "event", "callback"], "B_title": "feat(docs): adding the <doc:protractor> ngdoc-tag", "B_clean_title": ["feat", "doc", "ad", "doc", "protractor", "ngdoc", "tag"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nthere's no information in animation event calls\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\ninfo is added\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "no", "inform", "anim", "event", "call", "**what", "new", "behavior", "thi", "featur", "chang", "info", "ad", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This is the first step in migrating tests from doc:scenario to doc:protractor.\nIn-documentation examples with doc:protractor sections will have their contents\noutput to a tab on the docs site as well as output to a standalone test file in\nbuild/docs/ptore2e.\n", "B_clean_body": ["thi", "first", "step", "migrat", "test", "doc", "scenario", "doc", "protractor", "document", "exampl", "doc", "protractor", "section", "will", "have", "their", "content", "output", "tab", "doc", "site", "as", "well", "as", "output", "standalon", "test", "file", "build", "doc", "ptore2"], "title_sim": [0.0699448759238383], "body_sim": [0.26902066004320935], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.012592878166109173, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1636}, {"A_title": "test(Angular): remove special case for Edge", "A_clean_title": ["test", "angular", "remov", "special", "case", "edg"], "B_title": "revert: fix($compile): do not add <span> elements to root text nodes", "B_clean_title": ["revert", "fix", "compil", "not", "add", "span", "element", "root", "text", "node"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis commit reverts 7617c08da69a0d447507dadd0ef41d2415462ca7 which was accidentally\nmerged into 1.5.x (by @petebacondarwin in a moment of rebase madness) despite\nit containing a breaking change.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "commit", "revert", "7617c08da69a0d447507dadd0ef41d2415462ca7", "which", "wa", "accident", "merg", "into", "by", "petebacondarwin", "moment", "rebas", "mad", "despit", "it", "contain", "break", "chang"], "title_sim": [0.062093550418220636], "body_sim": [0.8889097654772371], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 781}, {"A_title": "fix(ngAnimate): don't close animations when child transitions close", "A_clean_title": ["fix", "nganim", "ng", "anim", "n't", "close", "anim", "when", "child", "transit", "close"], "B_title": "docs(faq): document the AngularJS/jqLite deprecation strategy", "B_clean_title": ["doc", "faq", "document", "angularj", "jqlite", "angular", "js", "jq", "lite", "deprec", "strategi"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #16210\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "16210", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe deprecation strategy is not specified.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe deprecation strategy is specified.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\nFixes #15282", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "deprec", "strategi", "not", "specifi", "**what", "new", "behavior", "thi", "featur", "chang", "deprec", "strategi", "specifi", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "fix", "15282"], "title_sim": [0.007268346514721243], "body_sim": [0.9815776896673383], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 173}, {"A_title": "WIP: Scroll to anchor", "A_clean_title": ["wip", "scroll", "anchor"], "B_title": "feat(input): add support for input[type=range]", "B_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "A_body": "We need to find a name for this service...\n\nIt's actually only the last commit, I put it on the top of Misko's branch...\n", "A_clean_body": ["we", "need", "find", "name", "thi", "servic", "it", "'s", "actual", "onli", "last", "commit", "put", "it", "top", "misko", "'s", "branch"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "title_sim": [0.04493096531032157], "body_sim": [0.12428704354195262], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.12807471801331338, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1696}, {"A_title": "Show loader in docs app", "A_clean_title": ["show", "loader", "doc", "app"], "B_title": "docs(sce,urlutils): update table to use marked syntax", "B_clean_title": ["doc", "sce", "urlutil", "updat", "tabl", "use", "mark", "syntax"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nupdate to the docs app\n\n**What is the current behavior? (You can also link to an open issue here)**\nNo loader is displayed when changing views in the docs\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "updat", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "loader", "display", "when", "chang", "view", "doc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "B_body": "Commit 258cae83dc1a03b6b878a7b4236c499288cd2624 replaced Showdown with marked.\n", "B_clean_body": ["commit", "258cae83dc1a03b6b878a7b4236c499288cd2624", "replac", "showdown", "mark"], "title_sim": [0.37779704392060554], "body_sim": [0.1927292224682854], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1153}, {"A_title": "refactor(angular): removed unnecessary parameter for slice function", "A_clean_title": ["refactor", "angular", "remov", "unnecessari", "paramet", "slice", "function"], "B_title": "chore($resource): remove obsolete API", "B_clean_title": ["chore", "resourc", "remov", "obsolet", "api"], "A_body": "- the end index for slice, if not specified, is default to the\n  end of the array it operates on.\n", "A_clean_body": ["end", "index", "slice", "not", "specifi", "default", "end", "array", "it", "oper"], "B_body": "This code has been in the $resource service since 2010, but was\r\nnever documented and can therefore be removed. It'll save precious bytes!\r\n\r\nShout-out to @gkalpak for finding this.\r\n\r\nTechnically, we don't have to remove it, but it doesn't make sense to keep it in the repository either. It leads to devs fixing bugs in undocumented APIs: https://github.com/angular/angular.js/commit/6eb4ffc085cc0fde19cbac2c3da227ff47d71e4e ;)\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nobsolete code removal\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo \ud83d\ude1b \r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been removed\r\n- ~ [ ] Docs have been added / updated (for bug fixes / features) ~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "code", "ha", "been", "resourc", "servic", "sinc", "2010", "but", "wa", "never", "document", "therefor", "remov", "it", "'ll", "save", "preciou", "byte", "shout", "out", "gkalpak", "find", "thi", "technic", "we", "n't", "have", "remov", "it", "but", "it", "n't", "make", "sens", "keep", "it", "repositori", "either", "it", "lead", "dev", "fix", "bug", "undocu", "api", "ap", "http", "github", "com", "angular", "angular", "js", "commit", "6eb4ffc085cc0fde19cbac2c3da227ff47d71e4", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "obsolet", "code", "remov", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "remov", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.12461659484350429], "body_sim": [0.01435616177473626], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2263}, {"A_title": "Fix scenario runner on IE7, IE8", "A_clean_title": ["fix", "scenario", "runner", "ie7", "ie8"], "B_title": "revert: fix($resource): allow params in `hostname` (except for IPv6 addresses)", "B_clean_title": ["revert", "fix", "resourc", "allow", "param", "hostnam", "except", "ipv6", "pv6", "address"], "A_body": "I did only remove config attribute from docs-scenario.html (`ng:scenario-output=\"json\"`) as I don't think we want this change. We could use just `html` output, as that's actually the only output being used, but using `json` output wouldn't display any result and scenario runner wouldn't work with JSTD.\n\nCouple of failing tests on both IE7, IE8 had been fixed with that commit.\nThe issue with input.enter() is fixed.\n- add ng:disabled, ng:checked, ng:multiple, ng:readonly, ng:selected\n- fetch fixed cookbook/advancedform (use ng:disabled)\n- fire keydown instead of change on input\n- remove frame when test finishes\n", "A_clean_body": ["did", "onli", "remov", "config", "attribut", "doc", "scenario", "html", "ng", "scenario", "output=", "json", "as", "n't", "think", "we", "want", "thi", "chang", "we", "could", "use", "just", "html", "output", "as", "that", "'s", "actual", "onli", "output", "be", "use", "but", "json", "output", "would", "n't", "display", "ani", "result", "scenario", "runner", "would", "n't", "work", "jstd", "coupl", "fail", "test", "both", "ie7", "ie8", "had", "been", "fix", "that", "commit", "issu", "input", "enter", "fix", "add", "ng", "disabl", "ng", "check", "ng", "multipl", "ng", "readonli", "ng", "select", "fetch", "fix", "cookbook", "advancedform", "use", "ng", "disabl", "fire", "keydown", "instead", "chang", "input", "remov", "frame", "when", "test", "finish"], "B_body": "This reverts commit 7f45b5fee79e2cb87d65bdd015d455304cec1ee4.", "B_clean_body": ["thi", "revert", "commit", "7f45b5fee79e2cb87d65bdd015d455304cec1ee4"], "title_sim": [0.22171368569103955], "body_sim": [0.32547253709897844], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2012}, {"A_title": "docs(changelog): Change for labels and style consistency", "A_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "B_title": "test(Angular): remove special case for Edge", "B_clean_title": ["test", "angular", "remov", "special", "case", "edg"], "A_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "A_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.030981528789432524], "body_sim": [0.37767066597617566], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 747}, {"A_title": "fix($parse): do not shallow-watch inputs when wrapped in an interceptor fn", "A_clean_title": ["fix", "pars", "not", "shallow", "watch", "input", "when", "wrap", "interceptor", "fn"], "B_title": "docs(app): adds border", "B_clean_title": ["doc", "app", "add", "border"], "A_body": "Fixes #15905 \r\n\r\nThis basically applies the same as b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f to interceptors.\r\n\r\nFor example normally when watching `[var]` the `var` only needs to be shallow-watched. But if that expression then gets wrapped in an interceptor such as `$parse('[var]', interceptor)` we must assume the `interceptor` is non-pure and might read state from within the `var` (just like filters/functions...).\r\n\r\nThis tries to preserve shallow watching of things behind operators such as `!` by distinguishing if an expression is pure due to an operator such as `!` (\"absolute\") or pure only if no parent operation wants to deep watch it (\"relative\").  This way when wrapped in an interceptor the \"absolute\" ones can still be shallow watched, while the \"relative\" ones that the interceptor has access to can no longer be shallow watched.\r\n\r\nThis still doesn't fully restore the 1.6.3 ng-class functionality because it still doesn't do a deep-watch for one-time bindings like 1.6.3 did. The one (famous last words...) remaining regression from 1.6.3 is demonstrated by the modified ng-class spec (objects-in-literals-with-interceptors-in-one-time bindings).  This is due to [this annoying condition](https://github.com/angular/angular.js/blob/b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f/src/ng/parse.js#L1946-L1948) which I really wish I could find a better method of doing...", "A_clean_body": ["fix", "15905", "thi", "basic", "appli", "same", "as", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "interceptor", "exampl", "normal", "when", "watch", "var", "var", "onli", "need", "shallow", "watch", "but", "that", "express", "then", "get", "wrap", "interceptor", "such", "as", "pars", "var", "interceptor", "we", "must", "assum", "interceptor", "non", "pure", "might", "read", "state", "within", "var", "just", "like", "filter", "function", "thi", "tri", "preserv", "shallow", "watch", "thing", "behind", "oper", "such", "as", "by", "distinguish", "express", "pure", "due", "oper", "such", "as", "absolut", "or", "pure", "onli", "no", "parent", "oper", "want", "deep", "watch", "it", "rel", "thi", "way", "when", "wrap", "interceptor", "absolut", "one", "still", "shallow", "watch", "while", "rel", "one", "that", "interceptor", "ha", "access", "no", "longer", "shallow", "watch", "thi", "still", "n't", "fulli", "restor", "ng", "class", "function", "becaus", "it", "still", "n't", "deep", "watch", "one", "time", "bind", "like", "did", "one", "famou", "last", "word", "remain", "regress", "demonstr", "by", "modifi", "ng", "class", "spec", "object", "liter", "interceptor", "one", "time", "bind", "thi", "due", "thi", "annoy", "condit", "http", "js", "github", "com", "angular", "angular", "js", "blob", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "src", "ng", "pars", "l1946", "l1948", "which", "realli", "wish", "could", "find", "better", "method", "do"], "B_body": "Adds a border to the top of the h2 like the current docs app.\n", "B_clean_body": ["add", "border", "top", "h2", "like", "current", "doc", "app"], "title_sim": [0.07329574849746119], "body_sim": [0.13473756465453085], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 884}, {"A_title": "fix($location): do not decode forward slashes in the path in HTML5 mode", "A_clean_title": ["fix", "locat", "not", "decod", "forward", "slash", "path", "html5", "mode"], "B_title": "test(*): run class-related tests everywhere; fix eval syntax", "B_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "A_body": "Closes #16312\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nSee #16312\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nIt depends what people expected of the location escaping...\r\nI think what we had before was buggy. So no.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["close", "16312", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "16312", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "it", "depend", "what", "peopl", "expect", "locat", "escap", "think", "what", "we", "had", "befor", "wa", "buggi", "so", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.05023257291906213], "body_sim": [0.8679988709161021], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 179}, {"A_title": "fix($compile): use correct parent element when requiring on html element", "A_clean_title": ["fix", "compil", "use", "correct", "parent", "element", "when", "requir", "html", "element"], "B_title": "fix($sanitize): use appropriate inert document strategy for Firefox and Safari", "B_clean_title": ["fix", "sanit", "use", "appropri", "inert", "document", "strategi", "firefox", "safari"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Both Firefox and Safari are vulnerable to XSS if we use an inert document\r\ncreated via `document.implementation.createHTMLDocument()`.\r\n\r\nNow we check for those vulnerabilities and then use a DOMParser or XHR\r\nstrategy if needed.\r\n\r\nThanks to @cure53 for the heads up on this issue.\r\n", "B_clean_body": ["both", "firefox", "safari", "are", "vulner", "xss", "we", "use", "inert", "document", "creat", "via", "document", "implement", "createhtmldocu", "creat", "html", "document", "now", "we", "check", "those", "vulner", "then", "use", "dompars", "dom", "parser", "or", "xhr", "strategi", "need", "thank", "cure53", "head", "up", "thi", "issu"], "title_sim": [0.07799666624098975], "body_sim": [0.17820079401993483], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.27092343939082814, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 426}, {"A_title": "fix(AngularPublic): expose missing angular public methods", "A_clean_title": ["fix", "angularpubl", "angular", "public", "expos", "miss", "angular", "public", "method"], "B_title": "minErr: link to actual url and remove url from message params", "B_clean_title": ["minerr", "min", "err", "link", "actual", "url", "remov", "url", "messag", "param"], "A_body": "- expose lowercase, uppercase and isDate to angular public api\n- remove unnecessary extention of jqLite at an early stage\n", "A_clean_body": ["expos", "lowercas", "uppercas", "isdat", "date", "angular", "public", "api", "remov", "unnecessari", "extent", "jqlite", "jq", "lite", "at", "earli", "stage"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.002506328661547825], "body_sim": [0.075656529983337], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2395}, {"A_title": "docs(input[range]): Fix erroneous examples", "A_clean_title": ["doc", "input", "rang", "fix", "erron", "exampl"], "B_title": "fix(scenario): make browser().location() working if ng-app on other than...", "B_clean_title": ["fix", "scenario", "make", "browser", "locat", "work", "ng", "app", "other", "than"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocumentation update. \n\n**What is the current behavior? (You can also link to an open issue here)**\n\nExamples of input[range] doesn't works well because it use only the `scope.min` value instead of `scope.max`\n\n**What is the new behavior (if this is a feature change)?**\n- When updating min value, it update the min only.\n- When updating max value, it update the max only.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "document", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "input", "rang", "n't", "work", "well", "becaus", "it", "use", "onli", "scope", "min", "valu", "instead", "scope", "max", "**what", "new", "behavior", "thi", "featur", "chang", "when", "updat", "min", "valu", "it", "updat", "min", "onli", "when", "updat", "max", "valu", "it", "updat", "max", "onli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Make browser().location().\\* methods to work even if ng-app defined on other element than html.\n- pass $injector into action\n", "B_clean_body": ["make", "browser", "locat", "method", "work", "even", "ng", "app", "defin", "other", "element", "than", "html", "pass", "injector", "into", "action"], "title_sim": [0.08011681178764778], "body_sim": [0.05265774859839378], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1613}, {"A_title": "fix(input[text]): composing function dosen't works properly in IE", "A_clean_title": ["fix", "input", "text", "compos", "function", "dose", "n't", "work", "properli", "ie"], "B_title": "fix(guide) broken title overflow in navlist", "B_clean_title": ["fix", "guid", "broken", "titl", "overflow", "navlist"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nComposing function dosen't works properly in IE. Please refer to https://github.com/angular/angular.js/issues/6656 and \"Other information\" below.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt works properly in IE.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nI have investigated on #6656 issue and I found composing function works differently in only IE.\r\nI confirmed this by the scenario below.\r\n - Code changes to investigate this problem(just added console.log)\r\n    ![2017-10-12 17_53_02-engineering-system - c__users_jileeon_documents_git_engineering-system - _p](https://user-images.githubusercontent.com/5166067/31534128-7aac2cba-b030-11e7-8fb6-5a4754dcb0ed.png)\r\n - Scenario\r\n  1. Just type '\uc774\uc7ac\uc775' and focusout.(in IE and Chrome)\r\n - Result(attached images show differences)\r\n   console.log in Chrome\r\n    ![2017-10-12 18_57_52-developer tools - http___127 0 0 1_8888_system_requests_2279](https://user-images.githubusercontent.com/5166067/31534418-ccd3e2d4-b031-11e7-980e-009b635d0bba.png)\r\n   console.log in IE\r\n    ![2017-10-12 18_58_43-f12](https://user-images.githubusercontent.com/5166067/31534528-39585bba-b032-11e7-9486-34f9f479b6e9.png)\r\n   It shows that last values of $viewValue are different. '\uc774\uc7ac\uc774'(IE) != '\uc774\uc7ac\uc775'(Chrome)\r\n   Because 'compositionend' event is not occurred in IE. So $viewValue is not updated with last value in the textbox. It means that IE triggers composition events('compositionstart', 'compositionupdate', 'compositionend') wrong.\r\n   So I added additional condition(ev.originalEvent.data !== undefined) on 'if (composing) return;' statement.\r\n   As you saw these console logs(IE and Chrome) above, this additional condition makes composing function works properly in IE.(by checking ev.originalEvent.data value. if its value is undefined, $viewValue going to be updated with last value in the textbox in IE. So it works like 'compositionend').\r\n   In addition, When IE fixes this wrong event triggering, It works fine without any problems. ", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compos", "function", "dose", "n't", "work", "properli", "ie", "pleas", "refer", "http", "github", "com", "angular", "angular", "js", "issu", "6656", "other", "inform", "below", "**what", "new", "behavior", "thi", "featur", "chang", "it", "work", "properli", "ie", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "have", "investig", "6656", "issu", "found", "compos", "function", "work", "differ", "onli", "ie", "confirm", "thi", "by", "scenario", "below", "code", "chang", "investig", "thi", "problem", "just", "ad", "consol", "log", "2017", "10", "12", "engin", "system", "17", "53", "02", "system", "user", "jileeon", "document", "git", "engin", "http", "7aac2cba", "b030", "11e7", "8fb6", "user", "imag", "githubusercont", "5a4754dcb0", "png", "com", "5166067", "31534128", "scenario", "just", "type", "focusout", "ie", "chrome", "result", "attach", "imag", "show", "differ", "consol", "log", "chrome", "2017", "10", "12", "develop", "18", "57", "52", "tool", "http", "127", "8888", "system", "request", "2279", "http", "ccd3e2d4", "b031", "11e7", "980e", "user", "imag", "githubusercont", "009b635d0bba", "png", "com", "5166067", "31534418", "consol", "log", "ie", "2017", "10", "12", "f12", "18", "58", "43", "http", "39585bba", "b032", "11e7", "9486", "user", "imag", "githubusercont", "34f9f479b6e9", "png", "com", "5166067", "31534528", "it", "show", "that", "last", "valu", "viewvalu", "view", "valu", "are", "differ", "ie", "chrome", "becaus", "'compositionend", "event", "not", "occur", "ie", "so", "viewvalu", "view", "valu", "not", "updat", "last", "valu", "textbox", "it", "mean", "that", "ie", "trigger", "composit", "event", "'compositionstart", "'compositionupd", "'compositionend", "wrong", "so", "ad", "addit", "condit", "ev", "originalev", "data", "origin", "event", "undefin", "'if", "compos", "return", "statement", "as", "you", "saw", "these", "consol", "log", "ie", "chrome", "abov", "thi", "addit", "condit", "make", "compos", "function", "work", "properli", "ie", "by", "check", "ev", "originalev", "data", "origin", "event", "valu", "it", "valu", "undefin", "viewvalu", "view", "valu", "go", "updat", "last", "valu", "textbox", "ie", "so", "it", "work", "like", "'compositionend", "addit", "when", "ie", "fix", "thi", "wrong", "event", "trigger", "it", "work", "fine", "without", "ani", "problem"], "B_body": "## Before\n\n![screen shot 2013-08-30 at 1 25 41 pm](https://f.cloud.github.com/assets/1016365/1060537/8829f31a-11b3-11e3-8620-9751954915f4.png)\n## After\n\n![screen shot 2013-08-30 at 1 25 31 pm](https://f.cloud.github.com/assets/1016365/1060540/8b6e9efe-11b3-11e3-8777-fa52f5236a74.png)\n", "B_clean_body": ["befor", "screen", "shot", "2013", "08", "30", "at", "25", "41", "pm", "http", "11b3", "11e3", "8620", "cloud", "github", "9751954915f4", "png", "com", "asset", "1016365", "1060537", "8829f31a", "after", "screen", "shot", "2013", "08", "30", "at", "25", "31", "pm", "http", "11b3", "11e3", "8777", "cloud", "github", "fa52f5236a74", "png", "com", "asset", "1016365", "1060540", "8b6e9ef"], "title_sim": [0.3164316049387902], "body_sim": [0.14643712351503038], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1504}, {"A_title": "fix($location): decode non-component special chars in Hashbang URLS", "A_clean_title": ["fix", "locat", "decod", "non", "compon", "special", "char", "hashbang", "url"], "B_title": "feat(Grunt): add source maps to all min files", "B_clean_title": ["feat", "grunt", "add", "sourc", "map", "all", "min", "file"], "A_body": "Fixes https://github.com/angular/angular.js/pull/16316#issuecomment-347527097\r\n", "A_clean_body": ["fix", "http", "github", "com", "angular", "angular", "js", "pull", "16316", "issuecom", "347527097"], "B_body": "Generate source map files when build step is ran and adds source map\nheaders to all min files.\n\nSource map url must be appended to the min file otherwise the line\noffsets will be off.\n\nInspired by Ryan Seddon (PR #2858)\n\nCloses #1714\n", "B_clean_body": ["gener", "sourc", "map", "file", "when", "build", "step", "ran", "add", "sourc", "map", "header", "all", "min", "file", "sourc", "map", "url", "must", "append", "min", "file", "otherwis", "line", "offset", "will", "off", "inspir", "by", "ryan", "seddon", "pr", "2858", "close", "1714"], "title_sim": [-0.03198660728915066], "body_sim": [0.07877075710734434], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.00029320106264096337, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1634}, {"A_title": "fix(orderBy): ensure correct ordering with arrays of objects and no predicate", "A_clean_title": ["fix", "orderbi", "order", "by", "ensur", "correct", "order", "array", "object", "no", "predic"], "B_title": "fix($parse): always re-evaluate filters within literals when an input is an object", "B_clean_title": ["fix", "pars", "alway", "re", "evalu", "filter", "within", "liter", "when", "input", "object"], "A_body": "This fix also considerably refactors how the `orderBy` filter works in internally.\n\nThe new algorithm precomputes the predicate values for the array being ordered. This makes the algorith easier to follow but also ensures that this computation is done a maximum of n times, whereas in the previous algorithm it could be greater. The downside is that we must temporarily store this intermediate array.\n\nThere could be performance implications, but they are as likely to be beneficial as detrimental. It could probably do with benchmarking.\n\nCloses #11866\n", "A_clean_body": ["thi", "fix", "also", "consider", "refactor", "how", "orderbi", "order", "by", "filter", "work", "intern", "new", "algorithm", "precomput", "predic", "valu", "array", "be", "order", "thi", "make", "algorith", "easier", "follow", "but", "also", "ensur", "that", "thi", "comput", "done", "maximum", "time", "wherea", "previou", "algorithm", "it", "could", "greater", "downsid", "that", "we", "must", "temporarili", "store", "thi", "intermedi", "array", "there", "could", "perform", "implic", "but", "they", "are", "as", "like", "benefici", "as", "detriment", "it", "could", "probabl", "benchmark", "close", "11866"], "B_body": "Fixes #15964 \r\n\r\nThis changes the [compareObjectIdentity](https://github.com/angular/angular.js/blob/v1.6.4/src/ng/parse.js#L1785) flag from being per-expression to per-input.  This allows inputs to filters to not compare object entity, but other inputs such as `- x` or `{x: x}` to only compare object entity.  This also expands this `compareObjectIdentity = true` beyond just object literals.", "B_clean_body": ["fix", "15964", "thi", "chang", "compareobjectident", "compar", "object", "ident", "http", "js", "github", "com", "angular", "angular", "js", "blob", "v1", "src", "ng", "pars", "l1785", "flag", "be", "per", "express", "per", "input", "thi", "allow", "input", "filter", "not", "compar", "object", "entiti", "but", "other", "input", "such", "as", "or", "onli", "compar", "object", "entiti", "thi", "also", "expand", "thi", "compareobjectident", "compar", "object", "ident", "true", "beyond", "just", "object", "liter"], "title_sim": [0.061781118576511605], "body_sim": [0.27646491372924176], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.05267095549610791, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 706}, {"A_title": "refactor($rootScope): simplify $emit stopPropagation handling", "A_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "B_title": "docs(*): Add CODE_OF_CONDUCT.md", "B_clean_title": ["doc", "add", "md", "code", "conduct"], "A_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "A_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere is no `CODE_OF_CONDUCT.md` in the repo.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThere is `CODE_OF_CONDUCT.md` in the repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "no", "md", "code", "conduct", "repo", "**what", "new", "behavior", "thi", "featur", "chang", "there", "md", "code", "conduct", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**"], "title_sim": [0.10035745763474961], "body_sim": [0.5332743503533353], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 85}, {"A_title": "chore(IE8) Remove more special code for IE8", "A_clean_title": ["chore", "ie8", "remov", "more", "special", "code", "ie8"], "B_title": "revert: fix($resource): allow params in `hostname` (except for IPv6 addresses)", "B_clean_title": ["revert", "fix", "resourc", "allow", "param", "hostnam", "except", "ipv6", "pv6", "address"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This reverts commit 7f45b5fee79e2cb87d65bdd015d455304cec1ee4.", "B_clean_body": ["thi", "revert", "commit", "7f45b5fee79e2cb87d65bdd015d455304cec1ee4"], "title_sim": [0.02395508768697483], "body_sim": [0.5804267109111131], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 251}, {"A_title": "docs(*): replace master/slave with leader/follower", "A_clean_title": ["doc", "replac", "master", "slave", "leader", "follow"], "B_title": "docs($http): correct and clarify default transforms", "B_clean_title": ["doc", "http", "correct", "clarifi", "default", "transform"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreviously, the docs made use of `master/slave`, which is offensive.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit removes the usage of these terms and replace them with `leader/follower`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nhttps://github.com/angular/angular.js/issues/16201\r\n\r\nUpdated the docs according to the logged issue. I might have made changes which do not directly use both `master` **and** `slave`, feel free to let me know to undo those changes. I thought it wasn't bad to stay consistent.\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "previous", "doc", "made", "use", "master", "slave", "which", "offens", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "remov", "usag", "these", "term", "replac", "them", "leader", "follow", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "http", "github", "com", "angular", "angular", "js", "issu", "16201", "updat", "doc", "accord", "log", "issu", "might", "have", "made", "chang", "which", "not", "directli", "use", "both", "master", "**and**", "slave", "feel", "free", "let", "me", "know", "undo", "those", "chang", "thought", "it", "wa", "n't", "bad", "stay", "consist"], "B_body": "- baddata error described incorrect http behavior, and workarounds\r\n- httpProvider defaults were missing transformResponse / transformRequest\r\n- http was not clear about JSON detection strategy\r\n\r\nCloses #15897\r\n\r\n", "B_clean_body": ["baddata", "error", "describ", "incorrect", "http", "behavior", "workaround", "httpprovid", "http", "provid", "default", "were", "miss", "transformrespons", "transform", "respons", "transformrequest", "transform", "request", "http", "wa", "not", "clear", "about", "json", "detect", "strategi", "close", "15897"], "title_sim": [0.20492192353908073], "body_sim": [0.20805691671617804], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 138}, {"A_title": "chore(Rakefile): force 32bit JVM mode only when java supports it", "A_clean_title": ["chore", "rakefil", "forc", "32bit", "jvm", "mode", "onli", "when", "java", "support", "it"], "B_title": "docs(*): Add CODE_OF_CONDUCT.md", "B_clean_title": ["doc", "add", "md", "code", "conduct"], "A_body": "Some Java installs don't have '-d32' flag (e.g. OpenJDK which is standard\nfor some Linux systems), and the closure_compile fails because of forcing\nthat flag. Test, and only run in faster 32bit mode if supported, or\nelse just run with no flag (default mode).\n", "A_clean_body": ["some", "java", "instal", "n't", "have", "d32", "flag", "openjdk", "open", "jdk", "which", "standard", "some", "linux", "system", "closur", "compil", "fail", "becaus", "forc", "that", "flag", "test", "onli", "run", "faster", "32bit", "mode", "support", "or", "just", "run", "no", "flag", "default", "mode"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere is no `CODE_OF_CONDUCT.md` in the repo.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThere is `CODE_OF_CONDUCT.md` in the repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "no", "md", "code", "conduct", "repo", "**what", "new", "behavior", "thi", "featur", "chang", "there", "md", "code", "conduct", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**"], "title_sim": [0.02725415053581892], "body_sim": [0.16967431415606204], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1855}, {"A_title": "fix(select): remove workaround for Chrome bug", "A_clean_title": ["fix", "select", "remov", "workaround", "chrome", "bug"], "B_title": "docs(guide/Unit Testing): Typo in 'focused'", "B_clean_title": ["doc", "guid", "unit", "test", "typo", "'focus"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRemoves a no-longer need workaround\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\nIn the Chrome issue (https://bugs.chromium.org/p/chromium/issues/detail?id=381459)\nI noticed that the bug can't be reproduced in Chrome 45 and the issue was\nclosed subsequently. I've also tested again with Chrome 51 and it still works.\n\nRelated: #6828\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "remov", "no", "longer", "need", "workaround", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "chrome", "issu", "http", "chromium", "bug", "org", "chromium", "issu", "detail", "id=381459", "notic", "that", "bug", "ca", "n't", "reproduc", "chrome", "45", "issu", "wa", "close", "subsequ", "'ve", "also", "test", "again", "chrome", "51", "it", "still", "work", "relat", "6828"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nN/A\n\n**What is the new behavior (if this is a feature change)?**\n\nNone\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "none", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.03836032410776694], "body_sim": [0.8702906668103848], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 39}, {"A_title": "fix(ngAnimate): let $animate.cancel() reject the runner promise", "A_clean_title": ["fix", "nganim", "ng", "anim", "let", "anim", "cancel", "reject", "runner", "promis"], "B_title": "chore(version-info): use branchPattern to check tag", "B_clean_title": ["chore", "version", "info", "use", "branchpattern", "branch", "pattern", "check", "tag"], "A_body": "<!-- General PR submission guidelines ../blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #14204\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThere is another aspect to this problem that is not fixed by this PR:\r\n2. Cancelling css animations should immediately abort the animation and set the DOM / css to its final state. This is currently broken in FF and IE11 (at least), see https://bugzilla.mozilla.org/show_bug.cgi?id=1425014. This must be tested with e2e test. Fixing this is not a BC.\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "md", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14204", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "blob", "master", "develop", "commit", "fix", "featur", "doc", "md", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "there", "anoth", "aspect", "thi", "problem", "that", "not", "fix", "by", "thi", "pr", "cancel", "css", "anim", "immedi", "abort", "anim", "set", "dom", "css", "it", "final", "state", "thi", "current", "broken", "ff", "ie11", "at", "least", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=1425014", "thi", "must", "test", "e2e", "test", "fix", "thi", "not", "bc"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nWe have two fields in package.json for checking the current version:\n- branchVersion\n- branchPattern\n\nThe `branchVersion` field is used to work out what version to use in the\ndocs application, so we should not update this to the most recent version\nuntil that version is on the Google CDN. Otherwise the docs app will break.\n\nThe `branchPattern` is used to determine what branch we are currently\nworking from and is generally used as a gate-keeper to prevent invalid\nreleases from the wrong branch.\n\nThe `getTaggedVersion()` method was using the `branchVersion` to check\nthat the tagged commit was valid but this fails when we are moving to a\nnew minor version with release candidates.\n\nThis fix avoids the problem by doing a custom comparison against the\n`branchPattern` instead.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "we", "have", "two", "field", "packag", "json", "check", "current", "version", "branchvers", "branch", "version", "branchpattern", "branch", "pattern", "branchvers", "branch", "version", "field", "use", "work", "out", "what", "version", "use", "doc", "applic", "so", "we", "not", "updat", "thi", "most", "recent", "version", "until", "that", "version", "googl", "cdn", "otherwis", "doc", "app", "will", "break", "branchpattern", "branch", "pattern", "use", "determin", "what", "branch", "we", "are", "current", "work", "gener", "use", "as", "gate", "keeper", "prevent", "invalid", "releas", "wrong", "branch", "gettaggedvers", "get", "tag", "version", "method", "wa", "branchvers", "branch", "version", "check", "that", "tag", "commit", "wa", "valid", "but", "thi", "fail", "when", "we", "are", "move", "new", "minor", "version", "releas", "candid", "thi", "fix", "avoid", "problem", "by", "do", "custom", "comparison", "against", "branchpattern", "branch", "pattern", "instead"], "title_sim": [-0.015060563740315645], "body_sim": [0.8083177424613791], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.016104217295625986, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 412}, {"A_title": "chore(travis): remove unnessecary addons", "A_clean_title": ["chore", "travi", "remov", "unnessecari", "addon"], "B_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "B_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "B_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "title_sim": [-0.016013849615101182], "body_sim": [0.025183338676354826], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1337}, {"A_title": "fix(input[radio]): use strict comparison when evaluating checked-ness", "A_clean_title": ["fix", "input", "radio", "use", "strict", "comparison", "when", "evalu", "check", "ness"], "B_title": "docs($animate): detail options object", "B_clean_title": ["doc", "anim", "detail", "option", "object"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFix\n\n**What is the current behavior? (You can also link to an open issue here)**\nWhen using input[radio], the checked status is determined by doing\na non-strict comparison between the value of the input and the ngModel.$viewValue. This can\nlead to inconsistencies when using values such as 0 and false.\n\n**Does this PR introduce a breaking change?**\nYes\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nCloses #15283\n\nBREAKING CHANGE:\n\nWhen using input[radio], the checked status is now determined by doing\na strict comparison between the value of the input and the ngModel.$viewValue.\nPreviously, this was a non-strict comparison (==).\n\nThis means in the following examples the radio is no longer checked:\n\n```\n  <!-- this.selected = 0 -->\n  <input type=\"radio\" ng-model=\"$ctrl.selected\" value=\"0\" >\n\n  <!-- this.selected = 0; this.value = false; -->\n  <input type=\"radio\" ng-model=\"$ctrl.selected\" ng-value=\"$ctrl.value\" >\n```\n\nThe migration strategy is to convert values that matched with non-strict\nconversion so that they will match with strict conversion.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "input", "radio", "check", "statu", "determin", "by", "do", "non", "strict", "comparison", "between", "valu", "input", "ngmodel", "ng", "model", "viewvalu", "view", "valu", "thi", "lead", "inconsist", "when", "valu", "such", "as", "fals", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "close", "15283", "break", "chang", "when", "input", "radio", "check", "statu", "now", "determin", "by", "do", "strict", "comparison", "between", "valu", "input", "ngmodel", "ng", "model", "viewvalu", "view", "valu", "previous", "thi", "wa", "non", "strict", "comparison", "thi", "mean", "follow", "exampl", "radio", "no", "longer", "check", "thi", "select", "input", "type=", "radio", "ng", "model=", "ctrl", "select", "value=", "thi", "select", "thi", "valu", "fals", "input", "type=", "radio", "ng", "model=", "ctrl", "select", "ng", "value=", "ctrl", "valu", "migrat", "strategi", "convert", "valu", "that", "match", "non", "strict", "convers", "so", "that", "they", "will", "match", "strict", "convers"], "B_body": "- Document options object used in various $animate methods\n\nThis should address #12645.\n", "B_clean_body": ["document", "option", "object", "use", "variou", "anim", "method", "thi", "address", "12645"], "title_sim": [-0.014559790749078094], "body_sim": [0.15107056587325704], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.011861269706694225, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 139}, {"A_title": "fix(jQuery): cooperate with other libraries monkey-patching jQuery.cleanData", "A_clean_title": ["fix", "jqueri", "queri", "cooper", "other", "librari", "monkey", "patch", "jqueri", "cleandata", "queri", "clean", "data"], "B_title": "chore(doc-gen, docs-app): create plnkr examples with correct Angular \u2026", "B_clean_title": ["chore", "doc", "gen", "doc", "app", "creat", "plnkr", "exampl", "correct", "angular"], "A_body": "Some libraries (like jQuery UI) patch jQuery.cleanData as well. This commit\nmakes Angular work correctly even if such external patching was done after\nthe Angular one.\n\nFixes #8471\n\n/cc @IgorMinar\n", "A_clean_body": ["some", "librari", "like", "jqueri", "queri", "ui", "patch", "jqueri", "cleandata", "queri", "clean", "data", "as", "well", "thi", "commit", "make", "angular", "work", "correctli", "even", "such", "extern", "patch", "wa", "done", "after", "angular", "one", "fix", "8471", "cc", "igorminar", "igor", "minar"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs-gen / app fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe plnkr examples include the latest stable Angular version instead of the snapshot version when opened from snapshot docs.\n\n**What is the new behavior (if this is a feature change)?**\nFixes the plnkr examples generated from snapshot docs\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\n\u2026version\n\nWhen the docs are based on the snapshot, the plnkr examples must use the snapshot files\nfrom code.angularjs.org\n\nFixes https://github.com/angular/angular.js/issues/15267\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "gen", "app", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "plnkr", "exampl", "includ", "latest", "stabl", "angular", "version", "instead", "snapshot", "version", "when", "open", "snapshot", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "plnkr", "exampl", "gener", "snapshot", "doc", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026version", "when", "doc", "are", "base", "snapshot", "plnkr", "exampl", "must", "use", "snapshot", "file", "code", "angularj", "org", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "15267"], "title_sim": [0.06241003349049051], "body_sim": [0.16388876196574842], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07505428045472673, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 802}, {"A_title": "feat(ngModel): provide ng-empty and ng-not-empty CSS classes", "A_clean_title": ["feat", "ngmodel", "ng", "model", "provid", "ng", "empti", "ng", "not", "empti", "css", "class"], "B_title": "fix($compile): throw error in $onChanges immediately", "B_clean_title": ["fix", "compil", "throw", "error", "onchang", "chang", "immedi"], "A_body": "I believe that this feature should be enough to fix #10050\n", "A_clean_body": ["believ", "that", "thi", "featur", "enough", "fix", "10050"], "B_body": "This brings it in line with how we throw errors in a digest cycle.\r\n\r\nCloses https://github.com/angular/angular.js/issues/15578\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "bring", "it", "line", "how", "we", "throw", "error", "digest", "cycl", "close", "http", "github", "com", "angular", "angular", "js", "issu", "15578", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.038265460608941926], "body_sim": [0.5427543910311785], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 914}, {"A_title": "chore(Rakefile): force 32bit JVM mode only when java supports it", "A_clean_title": ["chore", "rakefil", "forc", "32bit", "jvm", "mode", "onli", "when", "java", "support", "it"], "B_title": "chore(travis: fix deployment condition to include tagged commits", "B_clean_title": ["chore", "travi", "fix", "deploy", "condit", "includ", "tag", "commit"], "A_body": "Some Java installs don't have '-d32' flag (e.g. OpenJDK which is standard\nfor some Linux systems), and the closure_compile fails because of forcing\nthat flag. Test, and only run in faster 32bit mode if supported, or\nelse just run with no flag (default mode).\n", "A_clean_body": ["some", "java", "instal", "n't", "have", "d32", "flag", "openjdk", "open", "jdk", "which", "standard", "some", "linux", "system", "closur", "compil", "fail", "becaus", "forc", "that", "flag", "test", "onli", "run", "faster", "32bit", "mode", "support", "or", "just", "run", "no", "flag", "default", "mode"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.5324409771022452], "body_sim": [0.17992940273861377], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1776}, {"A_title": "wip: feat(ngModel): run formatters / setModelValue", "A_clean_title": ["wip", "feat", "ngmodel", "ng", "model", "run", "formatt", "setmodelvalu", "set", "model", "valu"], "B_title": "fix(input): use lowercase method to account for undefined type", "B_clean_title": ["fix", "input", "use", "lowercas", "method", "account", "undefin", "type"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's currently no way to manually run the model -> view pipeline / formatters\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAn API to run the whole pipeline / the formatters is introduced.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nThe PR includes both a `$format` and a `$setModelValue` function. I think only one is needed, we just need to decide which one.\r\n\r\n$format:\r\n\r\n- PRO: does the most needed thing, very straightforward: run the formatters and updates the viewValue\r\n- CON: developer must run $render manually\r\n- CON: empty classes are set even though the DOM is not updated. Could be moved to $render()\r\n- CON: no equivalent on the view -> model side (inconsistent API)\r\n\r\n$setModelValue\r\n- PRO: equivalent to $setViewValue, runs the whole pipeline\r\n- CON: unintuitive that the function argument should / must be set to the current $modelValue, so the control does not get out of sync with the scope (same behavior as $setViewValue though)\r\n- CON: only runs $render if the viewValue has actually changed.\r\n- CON: always runs the validation, even though it might not be necessary\r\n\r\nBoth methods can handle the basic case, where an app developer wants to run the formatters the view -> model pipeline has been run, see https://github.com/angular/angular.js/issues/3407 or https://github.com/angular/angular.js/pull/5221\r\n\r\nI personally tend to introduce `$format` as it has the smaller surface area and introduces fewer side effects. The full model -> view pipeline is not really needed for most cases.\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "current", "no", "way", "manual", "run", "model", "view", "pipelin", "formatt", "**what", "new", "behavior", "thi", "featur", "chang", "api", "run", "whole", "pipelin", "formatt", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "pr", "includ", "both", "format", "setmodelvalu", "set", "model", "valu", "function", "think", "onli", "one", "need", "we", "just", "need", "decid", "which", "one", "format", "pro", "most", "need", "thing", "veri", "straightforward", "run", "formatt", "updat", "viewvalu", "view", "valu", "con", "develop", "must", "run", "render", "manual", "con", "empti", "class", "are", "set", "even", "though", "dom", "not", "updat", "could", "move", "render", "con", "no", "equival", "view", "model", "side", "inconsist", "api", "setmodelvalu", "set", "model", "valu", "pro", "equival", "setviewvalu", "set", "view", "valu", "run", "whole", "pipelin", "con", "unintuit", "that", "function", "argument", "must", "set", "current", "modelvalu", "model", "valu", "so", "control", "not", "get", "out", "sync", "scope", "same", "behavior", "as", "setviewvalu", "set", "view", "valu", "though", "con", "onli", "run", "render", "viewvalu", "view", "valu", "ha", "actual", "chang", "con", "alway", "run", "valid", "even", "though", "it", "might", "not", "necessari", "both", "method", "handl", "basic", "case", "where", "app", "develop", "want", "run", "formatt", "view", "model", "pipelin", "ha", "been", "run", "see", "http", "github", "com", "angular", "angular", "js", "issu", "3407", "or", "http", "github", "com", "angular", "angular", "js", "pull", "5221", "person", "tend", "introduc", "format", "as", "it", "ha", "smaller", "surfac", "area", "introduc", "fewer", "side", "effect", "full", "model", "view", "pipelin", "not", "realli", "need", "most", "case"], "B_body": "This was causing some internal breakages. I verify that this fixes the problem, but I haven't yet pinned down exactly how this case/path occurred.\n", "B_clean_body": ["thi", "wa", "caus", "some", "intern", "breakag", "verifi", "that", "thi", "fix", "problem", "but", "have", "n't", "yet", "pin", "down", "exactli", "how", "thi", "case", "path", "occur"], "title_sim": [0.007066732668897586], "body_sim": [0.3757299845220439], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1126}, {"A_title": "perf(ngModel,ngForm): change ng-model/form controllers to use prototype methods", "A_clean_title": ["perf", "ngmodel", "ng", "model", "ngform", "ng", "form", "chang", "ng", "model", "form", "control", "use", "prototyp", "method"], "B_title": "docs(ngShow/ngHide): add note about flicker when toggling elements", "B_clean_title": ["doc", "ngshow", "nghide", "ng", "show", "ng", "hide", "add", "note", "about", "flicker", "when", "toggl", "element"], "A_body": "This makes the largetable-bp ng-model benchmarks 10-15% faster (down 90-100ms for me). The actual controller instantiation doesn't change too much but the overall numbers seem consistently faster, I assume all due to reducing memory usage / gc. Specifically on creation there is ~40% less memory GCed, on destruction there is about ~25% less.\n\nLooking at the heap snapshot this is entirely from having less closures (~70k => 30k closures), other counts are all equal or very close.\n\nLooking at the chrome timeline the number of GC events is about half and the time/gc amounts roughly match the benchpress measurements.\n\nWorth the breaking change? The diff can probably be reduced or split into 2 commits if there's interest...\n", "A_clean_body": ["thi", "make", "larget", "bp", "ng", "model", "benchmark", "10", "15", "faster", "down", "90", "100m", "me", "actual", "control", "instanti", "n't", "chang", "too", "much", "but", "overal", "number", "seem", "consist", "faster", "assum", "all", "due", "reduc", "memori", "usag", "gc", "specif", "creation", "there", "~40", "less", "memori", "gced", "ced", "destruct", "there", "about", "~25", "less", "look", "at", "heap", "snapshot", "thi", "entir", "have", "less", "closur", "~70k", "30k", "closur", "other", "count", "are", "all", "equal", "or", "veri", "close", "look", "at", "chrome", "timelin", "number", "gc", "event", "about", "half", "time", "gc", "amount", "roughli", "match", "benchpress", "measur", "worth", "break", "chang", "diff", "probabl", "reduc", "or", "split", "into", "commit", "there", "'s", "interest"], "B_body": "Related to https://github.com/angular/angular.js/issues/14015\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["relat", "http", "github", "com", "angular", "angular", "js", "issu", "14015", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.23026595857972437], "body_sim": [0.15669509932064496], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.052219210132425184, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 855}, {"A_title": "fix($browser/$location): single quote in url causes infinite digest in F...", "A_clean_title": ["fix", "browser", "locat", "singl", "quot", "url", "caus", "infinit", "digest"], "B_title": "test($rootScope): add tests clarifying $watchGroup oldValues behavior", "B_clean_title": ["test", "rootscop", "root", "scope", "add", "test", "clarifi", "watchgroup", "watch", "group", "oldvalu", "old", "valu", "behavior"], "A_body": "...F\n\nThe real issue is in FF, see https://bugzilla.mozilla.org/show_bug.cgi?id=407172.\n\nFF overly encodes stuff which breaks our expectations and then we fail .url() != currentUrl.absUrl()\ncomparison unexpectidly, which leads to infinite digest.\n\nThe workaround is to correct for this inconsistency in $browser and decode any single quotes in urls.\n\nCloses #920\n", "A_clean_body": ["real", "issu", "ff", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=407172", "ff", "overli", "encod", "stuff", "which", "break", "our", "expect", "then", "we", "fail", "url", "currenturl", "absurl", "current", "url", "ab", "url", "comparison", "unexpectidli", "which", "lead", "infinit", "digest", "workaround", "correct", "thi", "inconsist", "browser", "decod", "ani", "singl", "quot", "url", "close", "920"], "B_body": "Closes #16024\r\n\r\nThe first group seem related but have always passed.  The second group fail in v1.6.x as noted in the comments.  IMO these tests (with the notes about 1.6) show how weird the `oldValues` were before.\r\n\r\n~~Still need to add the BREAKING CHANGE message.~~", "B_clean_body": ["close", "16024", "first", "group", "seem", "relat", "but", "have", "alway", "pass", "second", "group", "fail", "v1", "as", "note", "comment", "imo", "these", "test", "note", "about", "show", "how", "weird", "oldvalu", "old", "valu", "were", "befor", "~~still", "need", "add", "break", "chang", "messag"], "title_sim": [0.02842279322846157], "body_sim": [0.20127106071691184], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.014787192818628074, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2135}, {"A_title": "test(*): run class-related tests everywhere; fix eval syntax", "A_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "B_title": "refactor($rootScope): simplify $emit stopPropagation handling", "B_clean_title": ["refactor", "rootscop", "root", "scope", "simplifi", "emit", "stoppropag", "stop", "propag", "handl"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This was mentioned in https://github.com/angular/angular.js/pull/16293#discussion_r147960028...", "B_clean_body": ["thi", "wa", "mention", "http", "github", "com", "angular", "angular", "js", "pull", "16293", "discuss", "r147960028"], "title_sim": [-0.0011138390577254734], "body_sim": [0.38713850886232326], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 200}, {"A_title": "chore($sniffer): Remove $sniffer.hashchange", "A_clean_title": ["chore", "sniffer", "remov", "sniffer", "hashchang"], "B_title": "feat(input) add ng:minlength and ng:maxlength validation support", "B_clean_title": ["feat", "input", "add", "ng", "minlength", "ng", "maxlength", "valid", "support"], "A_body": "The hashchange event is not supported only in ancient browsers like Android<2.2\nand IE<8. Angular never really supported IE7 and in 1.3 where support for IE8\nis dropped it makes even less sense to check for hashchange support.\n", "A_clean_body": ["hashchang", "event", "not", "support", "onli", "ancient", "browser", "like", "android", "ie", "angular", "never", "realli", "support", "ie7", "where", "support", "ie8", "drop", "it", "make", "even", "less", "sens", "check", "hashchang", "support"], "B_body": "notes(igor): I also e2e tests and refactorred the e2e test example to be\nmore clear about what is a variable and what is an html/framework api.\n", "B_clean_body": ["note", "igor", "also", "e2e", "test", "refactor", "e2e", "test", "exampl", "more", "clear", "about", "what", "variabl", "what", "html", "framework", "api"], "title_sim": [0.0005525701588997423], "body_sim": [0.04091359509129024], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1084}, {"A_title": "docs($compile): add more info about optional bindings", "A_clean_title": ["doc", "compil", "add", "more", "info", "about", "option", "bind"], "B_title": "docs(changelog): Change for labels and style consistency", "B_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "A_body": "This also deletes the incorrect info that a missing attribute\r\nin a non-optional binding will throw.\r\n\r\nCloses #15989\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nmissing / incorrect info\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\ninfo!\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n101% not\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "also", "delet", "incorrect", "info", "that", "miss", "attribut", "non", "option", "bind", "will", "throw", "close", "15989", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "miss", "incorrect", "info", "**what", "new", "behavior", "thi", "featur", "chang", "info", "**doe", "thi", "pr", "introduc", "break", "chang", "101", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "B_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "title_sim": [0.10407543357910048], "body_sim": [0.42323053425225593], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 405}, {"A_title": "fix(ngView): use animation promises ensure that only one leave animation...", "A_clean_title": ["fix", "ngview", "ng", "view", "use", "anim", "promis", "ensur", "that", "onli", "one", "leav", "anim"], "B_title": "Allow NgModelController to be copied", "B_clean_title": ["allow", "ngmodelcontrol", "ng", "model", "control", "copi"], "A_body": "... occurs at a time\n\nthe tracking depended on a local flag variable, which was susceptible to corruption due to\nrace conditions.\n\nCloses #9355\nCloses #7606\n", "A_clean_body": ["occur", "at", "time", "track", "depend", "local", "flag", "variabl", "which", "wa", "suscept", "corrupt", "due", "race", "condit", "close", "9355", "close", "7606"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`copy` throws when copying a `NgModelController` instance. This will occur when deep watching such as when doing `<e ref=\"[myNgModel]\">` (#15833)\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe internal `NgModelController` `$$scope` is hidden\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno, unless someone is doing something crazy that depends on `$$scope` being enumerable?\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nI've split the commit up into 3.  I think the refactor + (modified) test should go into 1.7. I don't think the actual fix should go into 1.7.  The specific test case (watched a literal containing an ng-model) will no longer fail in 1.7. If we want to prevent other cases like manually deep-watching or manually `copy`ing an ng-model I think we should do it differently in 1.7...\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "copi", "throw", "when", "copi", "ngmodelcontrol", "ng", "model", "control", "instanc", "thi", "will", "occur", "when", "deep", "watch", "such", "as", "when", "do", "ref=", "myngmodel", "my", "ng", "model", "15833", "**what", "new", "behavior", "thi", "featur", "chang", "intern", "ngmodelcontrol", "ng", "model", "control", "scope", "hidden", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "unless", "someon", "do", "someth", "crazi", "that", "depend", "scope", "be", "enumer", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "'ve", "split", "commit", "up", "into", "think", "refactor", "modifi", "test", "go", "into", "n't", "think", "actual", "fix", "go", "into", "specif", "test", "case", "watch", "liter", "contain", "ng", "model", "will", "no", "longer", "fail", "we", "want", "prevent", "other", "case", "like", "manual", "deep", "watch", "or", "manual", "copi", "ing", "ng", "model", "think", "we", "it", "differ"], "title_sim": [0.09869932035256078], "body_sim": [0.04493626791089565], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 902}, {"A_title": "docs($exceptionHandler): code snippet syntax is incorrect", "A_clean_title": ["doc", "exceptionhandl", "except", "handler", "code", "snippet", "syntax", "incorrect"], "B_title": "docs: load angular from can only on production", "B_clean_title": ["doc", "load", "angular", "onli", "product"], "A_body": "Updated the documentation on exception handler, there was an end bracket missing.\n\nSupposedly not a breaking change, it's only documentation update.\n", "A_clean_body": ["updat", "document", "except", "handler", "there", "wa", "end", "bracket", "miss", "supposedli", "not", "break", "chang", "it", "'s", "onli", "document", "updat"], "B_body": "So that when running the docs locally, eg. during e2e testing, we use the latest build version of angular, rather than the stable one from CDN.\n", "B_clean_body": ["so", "that", "when", "run", "doc", "local", "eg", "dure", "e2e", "test", "we", "use", "latest", "build", "version", "angular", "rather", "than", "stabl", "one", "cdn"], "title_sim": [0.11904015296409629], "body_sim": [0.23543583823163575], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1364}, {"A_title": "docs(guide/External Resources): describe your change...", "A_clean_title": ["doc", "guid", "extern", "resourc", "describ", "your", "chang"], "B_title": "docs(*): replace master/slave with leader/follower", "B_clean_title": ["doc", "replac", "master", "slave", "leader", "follow"], "A_body": "Deprecating content @ deleted URL\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRemoving URL \r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ X] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["deprec", "content", "delet", "url", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "remov", "url", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreviously, the docs made use of `master/slave`, which is offensive.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit removes the usage of these terms and replace them with `leader/follower`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nhttps://github.com/angular/angular.js/issues/16201\r\n\r\nUpdated the docs according to the logged issue. I might have made changes which do not directly use both `master` **and** `slave`, feel free to let me know to undo those changes. I thought it wasn't bad to stay consistent.\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "previous", "doc", "made", "use", "master", "slave", "which", "offens", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "remov", "usag", "these", "term", "replac", "them", "leader", "follow", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "http", "github", "com", "angular", "angular", "js", "issu", "16201", "updat", "doc", "accord", "log", "issu", "might", "have", "made", "chang", "which", "not", "directli", "use", "both", "master", "**and**", "slave", "feel", "free", "let", "me", "know", "undo", "those", "chang", "thought", "it", "wa", "n't", "bad", "stay", "consist"], "title_sim": [0.10078535850154074], "body_sim": [0.9085621097087729], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 136}, {"A_title": "fix(ngModelController): allow $overrideModelOptions to set updateOn", "A_clean_title": ["fix", "ngmodelcontrol", "ng", "model", "control", "allow", "overridemodelopt", "overrid", "model", "option", "set", "updateon", "updat"], "B_title": "docs(guide/Component Router): fix npm typo", "B_clean_title": ["doc", "guid", "compon", "router", "fix", "npm", "typo"], "A_body": "Also adds more docs about \"default\" events and how to override\r\nModelOptions.\r\n\r\nCloses #16351\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["also", "add", "more", "doc", "about", "default", "event", "how", "overrid", "modelopt", "model", "option", "close", "16351", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFix a npm install typo in the component router guide https://docs.angularjs.org/guide/component-router\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere is a typo for installing angular via npm in the component router guide\n\n**What is the new behavior (if this is a feature change)?**\n\nThe typo is fixed\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nFix a typo in npm install instructions\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "npm", "instal", "typo", "compon", "router", "guid", "http", "router", "angularj", "doc", "org", "guid", "compon", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "instal", "angular", "via", "npm", "compon", "router", "guid", "**what", "new", "behavior", "thi", "featur", "chang", "typo", "fix", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "typo", "npm", "instal", "instruct"], "title_sim": [0.12196450993652824], "body_sim": [0.9253479641721689], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 591}, {"A_title": "fix(jqLite): children() should only return elements", "A_clean_title": ["fix", "jqlite", "jq", "lite", "children", "onli", "return", "element"], "B_title": "Fix $browser.xhr (JSONP)", "B_clean_title": ["fix", "browser", "xhr", "jsonp"], "A_body": "The jQuery implementation of children only returns child nodes of the given element that are elements themselves. The previous jqLite implementation was returning all nodes except those that are text nodes. Use jQLite.contents() to get all the child nodes.\n\nThe jQuery implementation of contents returns [] if the object has no child nodes.  The previous jqLite implementation was returning undefined, causing a stack overflow in test/testabilityPatch.js when it tried to `cleanup()` a window object.\n\nThe testabilityPatch was incorrectly using children() rather than contents() inside cleanup() to iterate down through all the child nodes of the element to clean up.\n", "A_clean_body": ["jqueri", "queri", "implement", "children", "onli", "return", "child", "node", "given", "element", "that", "are", "element", "themselv", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "all", "node", "except", "those", "that", "are", "text", "node", "use", "jqlite", "content", "lite", "get", "all", "child", "node", "jqueri", "queri", "implement", "content", "return", "object", "ha", "no", "child", "node", "previou", "jqlite", "jq", "lite", "implement", "wa", "return", "undefin", "caus", "stack", "overflow", "js", "test", "testabilitypatch", "testabl", "patch", "when", "it", "tri", "cleanup", "window", "object", "testabilitypatch", "testabl", "patch", "wa", "incorrectli", "children", "rather", "than", "content", "insid", "cleanup", "iter", "down", "through", "all", "child", "node", "element", "clean", "up"], "B_body": "Creating &lt;script&gt; tags would require a lot of extra work if we want all browsers\nto load and execute these scripts. We decided to not implement that in jqLite.\n\nSee #369 for more information.\n\nCloses #369\n", "B_clean_body": ["creat", "lt", "script", "gt", "tag", "would", "requir", "lot", "extra", "work", "we", "want", "all", "browser", "load", "execut", "these", "script", "we", "decid", "not", "implement", "that", "jqlite", "jq", "lite", "see", "369", "more", "inform", "close", "369"], "title_sim": [-0.03958794138321056], "body_sim": [0.20658942308480815], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.015956690260450303, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 542}, {"A_title": "docs(*): ensure jsdoc type expressions are valid", "A_clean_title": ["doc", "ensur", "jsdoc", "type", "express", "are", "valid"], "B_title": "chore(code.angular): correctly remove old zip files from snapshot", "B_clean_title": ["chore", "code", "angular", "correctli", "remov", "old", "zip", "file", "snapshot"], "A_body": "These changes are to coincide with the forthcoming change to dgeni-packages: https://github.com/angular/dgeni-packages/pull/10\n\nThere are a bunch of invalid jsdoc type expressions that will break if you use the new dgeni tagParser.  This PR will fix those.  Unfortunately, the docs will look wrong if we merge them before the new tagParser arrives.\n", "A_clean_body": ["these", "chang", "are", "coincid", "forthcom", "chang", "dgeni", "packag", "http", "packag", "pull", "10", "github", "com", "angular", "dgeni", "there", "are", "bunch", "invalid", "jsdoc", "type", "express", "that", "will", "break", "you", "use", "new", "dgeni", "tagpars", "tag", "parser", "thi", "pr", "will", "fix", "those", "unfortun", "doc", "will", "look", "wrong", "we", "merg", "them", "befor", "new", "tagpars", "tag", "parser", "arriv"], "B_body": "Previously, the event would be triggered on the deletion of the previous zip files,\r\nwhich would delete the current zip file as well\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["previous", "event", "would", "trigger", "delet", "previou", "zip", "file", "which", "would", "delet", "current", "zip", "file", "as", "well", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.00701169033284362], "body_sim": [0.4466300423150225], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1261}, {"A_title": "fix($location): always resolve relative links in html5mode to `<base>` url", "A_clean_title": ["fix", "locat", "alway", "resolv", "rel", "link", "html5mode", "base", "url"], "B_title": "feat(form.FormController): add $getControls()", "B_clean_title": ["feat", "form", "formcontrol", "form", "control", "add", "getcontrol", "get", "control"], "A_body": "BREAKING CHANGE (since 1.2.0 and 1.3.0-beta.1):\n\nAngular now requires a `<base>` tag when html5 mode of `$location` is enabled. Reasoning:\nUsing html5 mode without a `<base href=\"...\">` tag makes relative links for images, links, ...\nrelative to the current url if the browser supports\nthe history API. However, if the browser does not support the history API Angular falls back to using the `#`,\nand then all links would be broken.\n\nBREAKING CHANGE (since 1.2.17 and 1.3.0-beta.10):\n\nIn html5 mode without a `<base>` tag on older browser that don't support the history API\nrelative paths were adding up. E.g. clicking on `<a href=\"page1\">` and then on `<a href=\"page2\">`\nwould produce `$location.path()==='/page1/page2'. The code that introduced this behavior was removed\nand Angular now also requires a`<base>` tag to be present when using html5 mode.\n\nCloses #8172\n", "A_clean_body": ["break", "chang", "sinc", "beta", "angular", "now", "requir", "base", "tag", "when", "html5", "mode", "locat", "enabl", "reason", "html5", "mode", "without", "base", "href=", "tag", "make", "rel", "link", "imag", "link", "rel", "current", "url", "browser", "support", "histori", "api", "howev", "browser", "not", "support", "histori", "api", "angular", "fall", "back", "then", "all", "link", "would", "broken", "break", "chang", "sinc", "17", "beta", "10", "html5", "mode", "without", "base", "tag", "older", "browser", "that", "n't", "support", "histori", "api", "rel", "path", "were", "ad", "up", "click", "href=", "page1", "then", "href=", "page2", "would", "produc", "locat", "path", "page1", "page2", "code", "that", "introduc", "thi", "behavior", "wa", "remov", "angular", "now", "also", "requir", "base", "tag", "present", "when", "html5", "mode", "close", "8172"], "B_body": "Fixes #14749\r\nCloses #14517\r\nCloses #13202\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nthere's no straight forward way to get all controls of a form\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nyou can get a shallow copy of the form controls\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nI decided against a synchronized copy (https://github.com/angular/angular.js/issues/14749#issuecomment-230451318) because I don't see the clear benefit over a simple shallow copy + is slightly more involved to implmenent.\r\n", "B_clean_body": ["fix", "14749", "close", "14517", "close", "13202", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "no", "straight", "forward", "way", "get", "all", "control", "form", "**what", "new", "behavior", "thi", "featur", "chang", "you", "get", "shallow", "copi", "form", "control", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "decid", "against", "synchron", "copi", "http", "github", "com", "angular", "angular", "js", "issu", "14749", "issuecom", "230451318", "becaus", "n't", "see", "clear", "benefit", "over", "simpl", "shallow", "copi", "slightli", "more", "involv", "implmen"], "title_sim": [-0.015078192270550985], "body_sim": [0.24025265772436644], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.033999047220176375, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1386}, {"A_title": "more important cookie service fixes", "A_clean_title": ["more", "import", "cooki", "servic", "fix"], "B_title": "refactor($rootScope): consistently use noop as the default $watch listener", "B_clean_title": ["refactor", "rootscop", "root", "scope", "consist", "use", "noop", "as", "default", "watch", "listen"], "A_body": "- preserve existing cookies\n- correctly handle cases when browser doesn't set cookies\n", "A_clean_body": ["preserv", "exist", "cooki", "correctli", "handl", "case", "when", "browser", "n't", "set", "cooki"], "B_body": "By doing the `isFunction(listener)` check before delegating to `$$watchDelegate` it removes that check from some `$$watchDelegate` methods.", "B_clean_body": ["by", "do", "isfunct", "function", "listen", "check", "befor", "deleg", "watchdeleg", "watch", "deleg", "it", "remov", "that", "check", "some", "watchdeleg", "watch", "deleg", "method"], "title_sim": [0.03568747024323617], "body_sim": [0.018501103304252753], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07208330582104577, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2615}, {"A_title": "chore(travis): speed up the build", "A_clean_title": ["chore", "travi", "speed", "up", "build"], "B_title": "feat($timeout): add $timeout service that superceeds $deferred", "B_clean_title": ["feat", "timeout", "add", "timeout", "servic", "that", "superce", "defer"], "A_body": "Just wanna see the travis build...\n- parallelize the tasks\n- cache requests (e2e tests)\n\nThis reduces the time from ~18min to ~12min.\n\nIt makes the output little messy. We could buffer output of each task and display it once it's fully finished, nicely. I think giving instant feedback is better.\n\nConflicts:\n    Gruntfile.js\n    package.json\n", "A_clean_body": ["just", "wan", "na", "see", "travi", "build", "parallel", "task", "cach", "request", "e2e", "test", "thi", "reduc", "time", "~18min", "~12min", "it", "make", "output", "littl", "messi", "we", "could", "buffer", "output", "each", "task", "display", "it", "onc", "it", "'s", "fulli", "finish", "nice", "think", "give", "instant", "feedback", "better", "conflict", "gruntfil", "js", "packag", "json"], "B_body": "$timeout has a better name ($defer got often confused with something related to $q) and\nis actually promise based with cancelation support.\n\nWith this commit the $defer service is deprecated and will be removed before 1.0.\n\nCloses #704, #532\n", "B_clean_body": ["timeout", "ha", "better", "name", "defer", "got", "often", "confus", "someth", "relat", "actual", "promis", "base", "cancel", "support", "thi", "commit", "defer", "servic", "deprec", "will", "remov", "befor", "close", "704", "532"], "title_sim": [0.016867760642210263], "body_sim": [0.2156347311141267], "file_list_sim": 0.07142857142857142, "overlap_files_len": 1, "code_sim": [0.011988620513798141, 0.0], "location_sim": [0.03524229074889868, 1.0], "pattern": 0, "time": 405}, {"A_title": "Updating the provider documentation", "A_clean_title": ["updat", "provid", "document"], "B_title": "Scenario runner element", "B_clean_title": ["scenario", "runner", "element"], "A_body": "Highlighted the Best Practices section, and took the styling from the Services doc. I also removed some superfluous wording that was in the \"Provider Recipe\"\n", "A_clean_body": ["highlight", "best", "practic", "section", "took", "style", "servic", "doc", "also", "remov", "some", "superflu", "word", "that", "wa", "provid", "recip"], "B_body": "Adds all the missing jQuery methods to element() DSL\n", "B_clean_body": ["add", "all", "miss", "jqueri", "queri", "method", "element", "dsl"], "title_sim": [0.059444039046969856], "body_sim": [-0.004603228895498423], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1362}, {"A_title": " \tdocs(ngRepeat): mention limitations of object iteration", "A_clean_title": ["doc", "ngrepeat", "ng", "repeat", "mention", "limit", "object", "iter"], "B_title": "fix($compile): update cloned elements if the template arrives after the ...", "B_clean_title": ["fix", "compil", "updat", "clone", "element", "templat", "arriv", "after"], "A_body": "Issue is tracked in issue Related #6266\n", "A_clean_body": ["issu", "track", "issu", "relat", "6266"], "B_body": "...cloning\n\nIf an element has a directive whose content is loaded using `templateUrl`,\nand the element is cloned using a linking function before the template arrives,\nthe clone needs to be updated as well.\n\nThis also updates `ngIf` and `ngRepeat` to keep the connection to the clone\nof a tranclude function, so that they know about the changes a directive with\n`templateUrl` does to the element in the future.\n\nFixes to #4930.\n", "B_clean_body": ["clone", "element", "ha", "direct", "whose", "content", "load", "templateurl", "templat", "url", "element", "clone", "link", "function", "befor", "templat", "arriv", "clone", "need", "updat", "as", "well", "thi", "also", "updat", "ngif", "ng", "ngrepeat", "ng", "repeat", "keep", "connect", "clone", "tranclud", "function", "so", "that", "they", "know", "about", "chang", "direct", "templateurl", "templat", "url", "element", "futur", "fix", "4930"], "title_sim": [0.019376628588980146], "body_sim": [0.03887558126964525], "file_list_sim": 0.14285714285714285, "overlap_files_len": 1, "code_sim": [0.04159919370859381, 0.01421743018662506], "location_sim": [0.0, 0.0], "pattern": -1, "time": 803}, {"A_title": "perf(ngOptions): prevent initial options repainting", "A_clean_title": ["perf", "ngoption", "ng", "option", "prevent", "initi", "option", "repaint"], "B_title": "docs($location): describe your change...", "B_clean_title": ["doc", "locat", "describ", "your", "chang"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nSee #15812\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "see", "15812", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\ninaccurate docs\n\n**What is the new behavior (if this is a feature change)?**\ncorrect docs\n\n**Does this PR introduce a breaking change?**\nno\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\ndocs for return of path() inaccurately describe the function\u2019s return when a value is passed in.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "inaccur", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "correct", "doc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "doc", "return", "path", "inaccur", "describ", "function", "return", "when", "valu", "pass"], "title_sim": [-0.058510849931957265], "body_sim": [0.9514448997982397], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 423}, {"A_title": "fix(ngAnimate): let $animate.cancel() reject the runner promise", "A_clean_title": ["fix", "nganim", "ng", "anim", "let", "anim", "cancel", "reject", "runner", "promis"], "B_title": "docs(*): ensure jsdoc type expressions are valid", "B_clean_title": ["doc", "ensur", "jsdoc", "type", "express", "are", "valid"], "A_body": "<!-- General PR submission guidelines ../blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #14204\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThere is another aspect to this problem that is not fixed by this PR:\r\n2. Cancelling css animations should immediately abort the animation and set the DOM / css to its final state. This is currently broken in FF and IE11 (at least), see https://bugzilla.mozilla.org/show_bug.cgi?id=1425014. This must be tested with e2e test. Fixing this is not a BC.\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "md", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14204", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "blob", "master", "develop", "commit", "fix", "featur", "doc", "md", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "there", "anoth", "aspect", "thi", "problem", "that", "not", "fix", "by", "thi", "pr", "cancel", "css", "anim", "immedi", "abort", "anim", "set", "dom", "css", "it", "final", "state", "thi", "current", "broken", "ff", "ie11", "at", "least", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=1425014", "thi", "must", "test", "e2e", "test", "fix", "thi", "not", "bc"], "B_body": "These changes are to coincide with the forthcoming change to dgeni-packages: https://github.com/angular/dgeni-packages/pull/10\n\nThere are a bunch of invalid jsdoc type expressions that will break if you use the new dgeni tagParser.  This PR will fix those.  Unfortunately, the docs will look wrong if we merge them before the new tagParser arrives.\n", "B_clean_body": ["these", "chang", "are", "coincid", "forthcom", "chang", "dgeni", "packag", "http", "packag", "pull", "10", "github", "com", "angular", "dgeni", "there", "are", "bunch", "invalid", "jsdoc", "type", "express", "that", "will", "break", "you", "use", "new", "dgeni", "tagpars", "tag", "parser", "thi", "pr", "will", "fix", "those", "unfortun", "doc", "will", "look", "wrong", "we", "merg", "them", "befor", "new", "tagpars", "tag", "parser", "arriv"], "title_sim": [-0.012797569079254287], "body_sim": [0.5305012555723982], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1384}, {"A_title": "feat: angularFilter.date: date filter can show day/mon string", "A_clean_title": ["feat", "angularfilt", "date", "angular", "filter", "date", "filter", "show", "day", "mon", "string"], "B_title": "chore(ci): disable unit testing on Firefox", "B_clean_title": ["chore", "ci", "disabl", "unit", "test", "firefox"], "A_body": "  Support new date format, specifically day of week/Month of year in string\n  e.g. {{ someDate | data:\"EEE, MMM d, yyyy\" }} -> \"Wed, Jul 10, 2011\"\nCloses #396\n", "A_clean_body": ["support", "new", "date", "format", "specif", "day", "week", "month", "year", "string", "somed", "some", "date", "data", "eee", "mmm", "yyyi", "wed", "jul", "10", "2011", "close", "396"], "B_body": "Related to https://github.com/angular/angular.js/issues/15987\r\n\r\n", "B_clean_body": ["relat", "http", "github", "com", "angular", "angular", "js", "issu", "15987"], "title_sim": [0.041746760786846256], "body_sim": [0.01678105144553517], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2153}, {"A_title": "fix($cookies): remove the deprecated $cookieStore factory", "A_clean_title": ["fix", "cooki", "remov", "deprec", "cookiestor", "cooki", "store", "factori"], "B_title": "feat($sanitize): Added support for the sftp protocol in $$ SanitizeUriProvider and linky filter", "B_clean_title": ["feat", "sanit", "ad", "support", "sftp", "protocol", "sanitizeuriprovid", "sanit", "uri", "provid", "linki", "filter"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix - a removal of a deprecated factory.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe `$cookieStore` factory exists.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt doesn't.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nBREAKING CHANGE:\r\n\r\nThe $cookieStore has been removed. Migrate to the $cookie service. For simple\r\nvalues it's enough to rename $cookieStore to $cookie; for object values you need\r\nto use the `putObject` & `getObject` methods.\r\n\r\nBefore:\r\n```js\r\n$cookieStore.put('name1', 'simple value');\r\n$cookieStore.get('name1'); // 'simple value'\r\n$cookieStore.remove('name1');\r\n$cookieStore.put('name2', {key: 'value'});\r\n$cookieStore.get('name2'); // {key: 'value'}\r\n$cookieStore.remove('name2');\r\n```\r\n\r\nAfter:\r\n```js\r\n$cookie.put('name1', 'simple value');\r\n$cookie.get('name1'); // 'simple value'\r\n$cookie.remove('name1');\r\n$cookie.putObject('name2', {key: 'value'});\r\n$cookie.getObject('name2'); // {key: 'value'}\r\n$cookie.remove('name2');\r\n```", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "remov", "deprec", "factori", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "cookiestor", "cooki", "store", "factori", "exist", "**what", "new", "behavior", "thi", "featur", "chang", "it", "n't", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "break", "chang", "cookiestor", "cooki", "store", "ha", "been", "remov", "migrat", "cooki", "servic", "simpl", "valu", "it", "'s", "enough", "renam", "cookiestor", "cooki", "store", "cooki", "object", "valu", "you", "need", "use", "putobject", "put", "object", "getobject", "get", "object", "method", "befor", "js", "cookiestor", "put", "cooki", "store", "'name1", "'simpl", "valu", "cookiestor", "get", "cooki", "store", "'name1", "'simpl", "value'", "cookiestor", "remov", "cooki", "store", "'name1", "cookiestor", "put", "cooki", "store", "'name2", "key", "'valu", "cookiestor", "get", "cooki", "store", "'name2", "key", "'valu", "cookiestor", "remov", "cooki", "store", "'name2", "after", "js", "cooki", "put", "'name1", "'simpl", "valu", "cooki", "get", "'name1", "'simpl", "value'", "cooki", "remov", "'name1", "cooki", "putobject", "put", "object", "'name2", "key", "'valu", "cooki", "getobject", "get", "object", "'name2", "key", "'valu", "cooki", "remov", "'name2"], "B_body": "\u2026 SanitizeUriProvider\r\n\r\nAdded support for the sftp protocol in $$ SanitizeUriProvider and linky filter\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsftp not suported\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nsftp suported\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["sanitizeuriprovid", "sanit", "uri", "provid", "ad", "support", "sftp", "protocol", "sanitizeuriprovid", "sanit", "uri", "provid", "linki", "filter", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "sftp", "not", "suport", "**what", "new", "behavior", "thi", "featur", "chang", "sftp", "suport", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.006581840698587794], "body_sim": [0.5345010516430926], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 224}, {"A_title": "chore(doc-gen, docs-app): generate version for stable snapshot", "A_clean_title": ["chore", "doc", "gen", "doc", "app", "gener", "version", "stabl", "snapshot"], "B_title": "fix($location): rewrite links with nested elements", "B_clean_title": ["fix", "locat", "rewrit", "link", "nest", "element"], "A_body": "The \"stable snapshot\" is based on the latest commit on the current stable\r\nbranch, i.e. a preview of the next patch version.\r\n\r\nNext thing:\r\n- update the Firebase deployment so that on the branch with distTag = latest gets deployed to docs.angularjs.org and as to gcs as snapshot-stable\r\n\r\n\r\n", "A_clean_body": ["stabl", "snapshot", "base", "latest", "commit", "current", "stabl", "branch", "preview", "next", "patch", "version", "next", "thing", "updat", "firebas", "deploy", "so", "that", "branch", "disttag", "dist", "tag", "latest", "get", "deploy", "doc", "angularj", "org", "as", "gc", "as", "snapshot", "stabl"], "B_body": "So docs is fixed now, inner links do not reload the page:\nhttp://ci.angularjs.org/job/angular.js-vojta/41/artifact/build/pkg/0.10.4-849c5365/docs-0.10.4-849c5365/index.html\n\nFor example:\n\n``` html\n<a href=\"some/link\">inner <span>text</span></a>\n```\n\nIf you click on \"text\", then the span element is event.target, so we need to traverse the DOM.\n", "B_clean_body": ["so", "doc", "fix", "now", "inner", "link", "not", "reload", "page", "http", "angularj", "js", "10", "849c5365", "doc", "10", "html", "ci", "org", "job", "angular", "vojta", "41", "artifact", "build", "pkg", "849c5365", "index", "exampl", "html", "href=", "some", "link", "inner", "span", "text", "span", "you", "click", "text", "then", "span", "element", "event", "target", "so", "we", "need", "travers", "dom"], "title_sim": [-0.004312156024671391], "body_sim": [0.34286226775718587], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06422840190713168, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2188}, {"A_title": "docs($exceptionHandler): code snippet syntax is incorrect", "A_clean_title": ["doc", "exceptionhandl", "except", "handler", "code", "snippet", "syntax", "incorrect"], "B_title": "fix($animate): allow enabled children to animate on disabled parents", "B_clean_title": ["fix", "anim", "allow", "enabl", "children", "anim", "disabl", "parent"], "A_body": "Updated the documentation on exception handler, there was an end bracket missing.\n\nSupposedly not a breaking change, it's only documentation update.\n", "A_clean_body": ["updat", "document", "except", "handler", "there", "wa", "end", "bracket", "miss", "supposedli", "not", "break", "chang", "it", "'s", "onli", "document", "updat"], "B_body": "Prior to this fix if a parent container disabled animations for\nitself then no children could be enabled explicity via\n`$animate.enabled`. This patch allows for that to work.\n\nCloses #13179\nCloses #13695\n", "B_clean_body": ["prior", "thi", "fix", "parent", "contain", "disabl", "anim", "itself", "then", "no", "children", "could", "enabl", "explic", "via", "anim", "enabl", "thi", "patch", "allow", "that", "work", "close", "13179", "close", "13695"], "title_sim": [0.01690675309490956], "body_sim": [0.05381691817910009], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 155}, {"A_title": "Allow NgModelController to be copied", "A_clean_title": ["allow", "ngmodelcontrol", "ng", "model", "control", "copi"], "B_title": "fix($compile): Allow literals in isolate scope references", "B_clean_title": ["fix", "compil", "allow", "liter", "isol", "scope", "refer"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`copy` throws when copying a `NgModelController` instance. This will occur when deep watching such as when doing `<e ref=\"[myNgModel]\">` (#15833)\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe internal `NgModelController` `$$scope` is hidden\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno, unless someone is doing something crazy that depends on `$$scope` being enumerable?\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nI've split the commit up into 3.  I think the refactor + (modified) test should go into 1.7. I don't think the actual fix should go into 1.7.  The specific test case (watched a literal containing an ng-model) will no longer fail in 1.7. If we want to prevent other cases like manually deep-watching or manually `copy`ing an ng-model I think we should do it differently in 1.7...\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "copi", "throw", "when", "copi", "ngmodelcontrol", "ng", "model", "control", "instanc", "thi", "will", "occur", "when", "deep", "watch", "such", "as", "when", "do", "ref=", "myngmodel", "my", "ng", "model", "15833", "**what", "new", "behavior", "thi", "featur", "chang", "intern", "ngmodelcontrol", "ng", "model", "control", "scope", "hidden", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "unless", "someon", "do", "someth", "crazi", "that", "depend", "scope", "be", "enumer", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "'ve", "split", "commit", "up", "into", "think", "refactor", "modifi", "test", "go", "into", "n't", "think", "actual", "fix", "go", "into", "specif", "test", "case", "watch", "liter", "contain", "ng", "model", "will", "no", "longer", "fail", "we", "want", "prevent", "other", "case", "like", "manual", "deep", "watch", "or", "manual", "copi", "ing", "ng", "model", "think", "we", "it", "differ"], "B_body": "When a component uses an isolate scope reference\nand the the component is used with an object literal\na new object is created on every evaluation.\nTherefore the compiler needs to compare\nthe values of the parent and the isolate scope\nusing object equality and not object reference\nequality.\n\nFixes #5296.\n", "B_clean_body": ["when", "compon", "use", "isol", "scope", "refer", "compon", "use", "object", "liter", "new", "object", "creat", "everi", "evalu", "therefor", "compil", "need", "compar", "valu", "parent", "isol", "scope", "object", "equal", "not", "object", "refer", "equal", "fix", "5296"], "title_sim": [0.2487577979203397], "body_sim": [0.2076566469160443], "file_list_sim": 0.3333333333333333, "overlap_files_len": 1, "code_sim": [0.41360252058186536, 0.5305073613347515], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1194}, {"A_title": "feat(input): added drop event support", "A_clean_title": ["feat", "input", "ad", "drop", "event", "support"], "B_title": "test(*): run class-related tests everywhere; fix eval syntax", "B_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\ndrop event not support\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nadded drop event support \r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "drop", "event", "not", "support", "**what", "new", "behavior", "thi", "featur", "chang", "ad", "drop", "event", "support", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.011219489640642451], "body_sim": [0.7966703297474828], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 264}, {"A_title": "WIP: even-more-perf-rebased", "A_clean_title": ["wip", "even", "more", "perf", "rebas"], "B_title": "refactor(angular): removed unnecessary parameter for slice function", "B_clean_title": ["refactor", "angular", "remov", "unnecessari", "paramet", "slice", "function"], "A_body": "ignore this pr, it's here just for CI testing\n", "A_clean_body": ["ignor", "thi", "pr", "it", "'s", "here", "just", "ci", "test"], "B_body": "- the end index for slice, if not specified, is default to the\n  end of the array it operates on.\n", "B_clean_body": ["end", "index", "slice", "not", "specifi", "default", "end", "array", "it", "oper"], "title_sim": [-0.0997402763640638], "body_sim": [0.016108770132051503], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1110}, {"A_title": "Scenario runner binding throw", "A_clean_title": ["scenario", "runner", "bind", "throw"], "B_title": "chore(*): update all Karma-related packages except Karma", "B_clean_title": ["chore", "updat", "all", "karma", "relat", "packag", "except", "karma"], "A_body": "I was wrong about throw being the same as done(error) in a DSL statement. Throw is an \"error\" and done(error) is a \"failure\".\n\nAlso, there was a test for the binding not matching before, but it tested in a condition where there were no bindings at all in the document in which case elements() in your new binding() would still throw.\n\nI added a new test that checks for bindings existing but none of them matching.\n\nI also fixed an issue where you were using contains() and checking if the return value was >= 0 but the function returns a boolean and false >= 0 is true. I'll code review more carefully next time.\n", "A_clean_body": ["wa", "wrong", "about", "throw", "be", "same", "as", "done", "error", "dsl", "statement", "throw", "error", "done", "error", "failur", "also", "there", "wa", "test", "bind", "not", "match", "befor", "but", "it", "test", "condit", "where", "there", "were", "no", "bind", "at", "all", "document", "which", "case", "element", "your", "new", "bind", "would", "still", "throw", "ad", "new", "test", "that", "check", "bind", "exist", "but", "none", "them", "match", "also", "fix", "issu", "where", "you", "were", "contain", "check", "return", "valu", "wa", "but", "function", "return", "boolean", "fals", "true", "'ll", "code", "review", "more", "care", "next", "time"], "B_body": "The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["updat", "karma", "chrome", "launcher", "add", "support", "chromeheadless", "chrome", "headless", "chromecanaryheadless", "chrome", "canari", "headless", "launcher", "test", "karma", "start", "karma", "jqlite", "conf", "js", "browsers=chromecanaryheadless", "browsers=chrom", "canari", "headless", "updat", "karma", "firefox", "launcher", "disabl", "multi", "process", "which", "may", "increas", "stabil", "jenkin", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.040495238281130976], "body_sim": [0.20467849282723374], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2382}, {"A_title": "docs($interpolateProvider): document XSS in $interpolate", "A_clean_title": ["doc", "interpolateprovid", "interpol", "provid", "document", "xss", "interpol"], "B_title": "docs(CONTRIBUTING.md): Updated commit types.", "B_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "A_body": "`$interpolateProvider.startSymbol` & friends are often used dangerously, to embed Angular templating in other templating languages. This change documents that that is a very dangerous practice.\n", "A_clean_body": ["interpolateprovid", "startsymbol", "interpol", "provid", "start", "symbol", "friend", "are", "often", "use", "danger", "emb", "angular", "templat", "other", "templat", "languag", "thi", "chang", "document", "that", "that", "veri", "danger", "practic"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "title_sim": [0.14255614940255423], "body_sim": [0.25560203503889356], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0049434335958394625, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 403}, {"A_title": "fix(ngOptions): ignore comment nodes when removing 'selected' attribute", "A_clean_title": ["fix", "ngoption", "ng", "option", "ignor", "comment", "node", "when", "remov", "'select", "attribut"], "B_title": "perf(ngModel,ngForm): change ng-model/form controllers to use prototype methods", "B_clean_title": ["perf", "ngmodel", "ng", "model", "ngform", "ng", "form", "chang", "ng", "model", "form", "control", "use", "prototyp", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the \"selected\" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "regress", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "empti", "option", "ha", "ngif", "ng", "it", "ngoption", "ng", "option", "select", "ngif", "ng", "express", "fals", "then", "error", "thrown", "becaus", "we", "tri", "remov", "select", "attribut", "ngif", "ng", "comment", "node", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This makes the largetable-bp ng-model benchmarks 10-15% faster (down 90-100ms for me). The actual controller instantiation doesn't change too much but the overall numbers seem consistently faster, I assume all due to reducing memory usage / gc. Specifically on creation there is ~40% less memory GCed, on destruction there is about ~25% less.\n\nLooking at the heap snapshot this is entirely from having less closures (~70k => 30k closures), other counts are all equal or very close.\n\nLooking at the chrome timeline the number of GC events is about half and the time/gc amounts roughly match the benchpress measurements.\n\nWorth the breaking change? The diff can probably be reduced or split into 2 commits if there's interest...\n", "B_clean_body": ["thi", "make", "larget", "bp", "ng", "model", "benchmark", "10", "15", "faster", "down", "90", "100m", "me", "actual", "control", "instanti", "n't", "chang", "too", "much", "but", "overal", "number", "seem", "consist", "faster", "assum", "all", "due", "reduc", "memori", "usag", "gc", "specif", "creation", "there", "~40", "less", "memori", "gced", "ced", "destruct", "there", "about", "~25", "less", "look", "at", "heap", "snapshot", "thi", "entir", "have", "less", "closur", "~70k", "30k", "closur", "other", "count", "are", "all", "equal", "or", "veri", "close", "look", "at", "chrome", "timelin", "number", "gc", "event", "about", "half", "time", "gc", "amount", "roughli", "match", "benchpress", "measur", "worth", "break", "chang", "diff", "probabl", "reduc", "or", "split", "into", "commit", "there", "'s", "interest"], "title_sim": [0.0796168284838015], "body_sim": [0.22932947514482743], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.017167173701903033, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 387}, {"A_title": "chore(grunt): check files in src for ddescribe/iit", "A_clean_title": ["chore", "grunt", "check", "file", "src", "ddescrib", "iit"], "B_title": "docs(angular.Module): improved documentation for component method", "B_clean_title": ["doc", "angular", "modul", "improv", "document", "compon", "method"], "A_body": "Previously, only files in test/ were checked. This does not capture\nend to end tests, which are in comments in src/.\n", "A_clean_body": ["previous", "onli", "file", "test", "were", "check", "thi", "not", "captur", "end", "end", "test", "which", "are", "comment", "src"], "B_body": "Copy improved documentation for component() method from $compileProvider\r\nand add missing object syntax.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDoes not mention all syntaxes, is inconsistent with other documentation.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nFixes these issues\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["copi", "improv", "document", "compon", "method", "compileprovid", "compil", "provid", "add", "miss", "object", "syntax", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "not", "mention", "all", "syntax", "inconsist", "other", "document", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "these", "issu", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.013260646084004738], "body_sim": [0.1480448942551455], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1442}, {"A_title": "fix($sanitize): prevent clobbered elements from freezing the browser", "A_clean_title": ["fix", "sanit", "prevent", "clobber", "element", "freez", "browser"], "B_title": "perf($rootScope): do not mark $watchCollectionInterceptor as $stateful", "B_clean_title": ["perf", "rootscop", "root", "scope", "not", "mark", "watchcollectioninterceptor", "watch", "collect", "interceptor", "as", "state"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nbrowser can be frozen with bad HTML\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nan exception is thrown instead\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browser", "frozen", "bad", "html", "**what", "new", "behavior", "thi", "featur", "chang", "except", "thrown", "instead", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "I think this was a mistake [from the start](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa?diff=unified#diff-44d3307b66bf51b52e110307fa57e196R518).  This interceptor doesn't actually store any state, it just reads the inner/complex state of its input. EDIT: actually it had a purpose originally, although may no longer be as significant, see https://github.com/angular/angular.js/pull/16009#issuecomment-311543600\r\n\r\nRemoving the `$stateful` flag will allow some expressions (those with `inputs` such as array/object literals) to avoid invoking `$watchCollectionInterceptor` and avoid creating the literals etc. on each digest.", "B_clean_body": ["think", "thi", "wa", "mistak", "start", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff=unifi", "diff", "44d3307b66bf51b52e110307fa57e196r518", "thi", "interceptor", "n't", "actual", "store", "ani", "state", "it", "just", "read", "inner", "complex", "state", "it", "input", "edit", "actual", "it", "had", "purpos", "origin", "although", "may", "no", "longer", "as", "signific", "see", "http", "github", "com", "angular", "angular", "js", "pull", "16009", "issuecom", "311543600", "remov", "state", "flag", "will", "allow", "some", "express", "those", "input", "such", "as", "array", "object", "liter", "avoid", "invok", "watchcollectioninterceptor", "watch", "collect", "interceptor", "avoid", "creat", "liter", "etc", "each", "digest"], "title_sim": [0.00039366731118413916], "body_sim": [0.23405958003720678], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07407695146406156, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 104}, {"A_title": "feat($compile): support directive virtual groups", "A_clean_title": ["feat", "compil", "support", "direct", "virtual", "group"], "B_title": "chore(*): add a Git .mailmap with my new name", "B_clean_title": ["chore", "add", "git", "mailmap", "my", "new", "name"], "A_body": "By appending  X-start and X-end to a directive it is now possible\nto have the directive act on a group of elements.\n\nIt is now possible to iterate over multiple elements like so:\n\n```\n<table>\n  <tr ng-repeat-start=\"item in list\">I get repeated</tr>\n  <tr ng-repeat-end>I also get repeated</tr>\n</table>\n```\n", "A_clean_body": ["by", "append", "start", "end", "direct", "it", "now", "possibl", "have", "direct", "act", "group", "element", "it", "now", "possibl", "iter", "over", "multipl", "element", "like", "so", "tabl", "tr", "ng", "repeat", "start=", "item", "list", "get", "repeat", "tr", "tr", "ng", "repeat", "end", "also", "get", "repeat", "tr", "tabl"], "B_body": "In this way my past contributions are mapped correctly.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nGit thinks I'm 2 people.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nI'm one person again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\nOutput of `git shortlog -nse | head -25` after this PR (I see we could use more `.mailmap` entries, there are lots of duplicates):\r\n```\r\n   931\tIgor Minar <igor@angularjs.org>\r\n   692\tMisko Hevery <misko@hevery.com>\r\n   677\tPeter Bacon Darwin <pete@bacondarwin.com>\r\n   503\tIgor Minar <iiminar@gmail.com>\r\n   364\tVojta Jina <vojta.jina@gmail.com>\r\n   364\tMatias Niemel\u00e4 <matias@yearofmoo.com>\r\n   259\tMartin Staffa <mjstaffa@googlemail.com>\r\n   196\tCaitlin Potter <caitpotter88@gmail.com>\r\n   192\tBrian Ford <btford@umich.edu>\r\n   169\tGeorgios Kalpakas <g.kalpakas@hotmail.com>\r\n   140\tGeorgios Kalpakas <kalpakas.g@gmail.com>\r\n   127\tPete Bacon Darwin <pete@bacondarwin.com>\r\n   108\tJason Bedard <jason+github@jbedard.ca>\r\n   108\tMartin Staffa <mjstaffa@gmail.com>\r\n    99\tTobias Bosch <tbosch1009@gmail.com>\r\n    94\tMicha\u0142 Go\u0142e\u0328biowski <m.goleb@gmail.com>\r\n    71\tLucas Galfaso <lgalfaso@gmail.com>\r\n    70\tShahar Talmi <shahar.talmi@gmail.com>\r\n    65\tJeff Cross <middlefloor@gmail.com>\r\n    52\tChirayu Krishnappa <chirayu@chirayuk.com>\r\n    50\trodyhaddad <rody@rodyhaddad.com>\r\n    47\tPawel Kozlowski <pkozlowski.opensource@gmail.com>\r\n    45\tDi Peng <pengdi@google.com>\r\n    43\tVojta Jina <vojta@gemin-i.org>\r\n    41\tLucas Mirelmann <lgalfaso@gmail.com>\r\n```", "B_clean_body": ["thi", "way", "my", "past", "contribut", "are", "map", "correctli", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "git", "think", "'m", "peopl", "**what", "new", "behavior", "thi", "featur", "chang", "'m", "one", "person", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "output", "git", "shortlog", "nse", "head", "25", "after", "thi", "pr", "see", "we", "could", "use", "more", "mailmap", "entri", "there", "are", "lot", "duplic", "931", "igor", "minar", "igor", "angularj", "org", "692", "misko", "heveri", "misko", "heveri", "com", "677", "peter", "bacon", "darwin", "pete", "bacondarwin", "com", "503", "igor", "minar", "iiminar", "gmail", "com", "364", "vojta", "jina", "vojta", "jina", "gmail", "com", "364", "matia", "niemel\u00e4", "matia", "yearofmoo", "com", "259", "martin", "staffa", "mjstaffa", "googlemail", "com", "196", "caitlin", "potter", "caitpotter88", "gmail", "com", "192", "brian", "ford", "btford", "umich", "edu", "169", "georgio", "kalpaka", "kalpaka", "hotmail", "com", "140", "georgio", "kalpaka", "kalpaka", "gmail", "com", "127", "pete", "bacon", "darwin", "pete", "bacondarwin", "com", "108", "jason", "bedard", "jason+github", "jbedard", "ca", "108", "martin", "staffa", "mjstaffa", "gmail", "com", "99", "tobia", "bosch", "tbosch1009", "gmail", "com", "94", "micha\u0142", "go\u0142e\u0328biowski", "goleb", "gmail", "com", "71", "luca", "galfaso", "lgalfaso", "gmail", "com", "70", "shahar", "talmi", "shahar", "talmi", "gmail", "com", "65", "jeff", "cross", "middlefloor", "gmail", "com", "52", "chirayu", "krishnappa", "chirayu", "chirayuk", "com", "50", "rodyhaddad", "rodi", "rodyhaddad", "com", "47", "pawel", "kozlowski", "pkozlowski", "opensourc", "gmail", "com", "45", "di", "peng", "pengdi", "googl", "com", "43", "vojta", "jina", "vojta", "gemin", "org", "41", "luca", "mirelmann", "lgalfaso", "gmail", "com"], "title_sim": [0.008244166316918518], "body_sim": [0.10585547037845636], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1594}, {"A_title": "test(Angular): remove special case for Edge", "A_clean_title": ["test", "angular", "remov", "special", "case", "edg"], "B_title": "docs($animate): detail options object", "B_clean_title": ["doc", "anim", "detail", "option", "object"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "- Document options object used in various $animate methods\n\nThis should address #12645.\n", "B_clean_body": ["document", "option", "object", "use", "variou", "anim", "method", "thi", "address", "12645"], "title_sim": [0.03793925171592286], "body_sim": [0.09184567472296455], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 705}, {"A_title": "docs($log): describe your change...", "A_clean_title": ["doc", "log", "describ", "your", "chang"], "B_title": "docs(tutorial): fix typo in step_00", "B_clean_title": ["doc", "tutori", "fix", "typo", "step", "00"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocument update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe documentation for $log doesn't mention blackboxing, by which a developer can see the originating line of calls to $log.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nA brief, browser-agnostic mention of blackboxing was added to the page.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "document", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "document", "log", "n't", "mention", "blackbox", "by", "which", "develop", "see", "origin", "line", "call", "log", "**what", "new", "behavior", "thi", "featur", "chang", "brief", "browser", "agnost", "mention", "blackbox", "wa", "ad", "page", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Just removed an extra comma. No big deal.\n", "B_clean_body": ["just", "remov", "extra", "comma", "no", "big", "deal"], "title_sim": [0.09807762564993858], "body_sim": [0.09767833912653527], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1601}, {"A_title": "fix(select): auto-select new option that is marked as selected", "A_clean_title": ["fix", "select", "auto", "select", "new", "option", "that", "mark", "as", "select"], "B_title": "fix($httpBackend): Ignore multiple calls to onreadystatechange with read...", "B_clean_title": ["fix", "httpbackend", "http", "backend", "ignor", "multipl", "call", "onreadystatechang", "read"], "A_body": "When adding a new <option> element, if the DOM of this option element\nstates that the element is marked as `selected`, then select the new\n<option> element\n\nCloses #6828\n\nThis is a new PR based on a wrong merge done at #7136\n", "A_clean_body": ["when", "ad", "new", "option", "element", "dom", "thi", "option", "element", "state", "that", "element", "mark", "as", "select", "then", "select", "new", "option", "element", "close", "6828", "thi", "new", "pr", "base", "wrong", "merg", "done", "at", "7136"], "B_body": "...yState=4\n\nOn mobile webkit `onreadystatechange` might by called multiple times\nwith `readyState===4`  caused by xhrs that are resolved while the app is\nin the background.\n\n Fixes #5426.\n", "B_clean_body": ["ystate=4", "state=4", "mobil", "webkit", "onreadystatechang", "might", "by", "call", "multipl", "time", "readystate===4", "readi", "state===4", "caus", "by", "xhr", "that", "are", "resolv", "while", "app", "background", "fix", "5426"], "title_sim": [0.031239449048711652], "body_sim": [0.10552396215270946], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 186}, {"A_title": "fix(date): parse string input as local time unless TZ is specified", "A_clean_title": ["fix", "date", "pars", "string", "input", "as", "local", "time", "unless", "tz", "specifi"], "B_title": "chore($sniffer): Remove $sniffer.hashchange", "B_clean_title": ["chore", "sniffer", "remov", "sniffer", "hashchang"], "A_body": "previously we were always parsing the string input as UTC which cased issues like:\n\n{{ '2012-04-01' | date:'d MMM yyyy' }} renders as 31 Mar 2012\n\nBREAKING CHANGE: string input without timezone info is now parsed as local time/date\n\nCloses #847\n", "A_clean_body": ["previous", "we", "were", "alway", "pars", "string", "input", "as", "utc", "which", "case", "issu", "like", "'2012", "04", "01", "date", "'d", "mmm", "yyyi", "render", "as", "31", "mar", "2012", "break", "chang", "string", "input", "without", "timezon", "info", "now", "pars", "as", "local", "time", "date", "close", "847"], "B_body": "The hashchange event is not supported only in ancient browsers like Android<2.2\nand IE<8. Angular never really supported IE7 and in 1.3 where support for IE8\nis dropped it makes even less sense to check for hashchange support.\n", "B_clean_body": ["hashchang", "event", "not", "support", "onli", "ancient", "browser", "like", "android", "ie", "angular", "never", "realli", "support", "ie7", "where", "support", "ie8", "drop", "it", "make", "even", "less", "sens", "check", "hashchang", "support"], "title_sim": [0.0009797890327791043], "body_sim": [0.06716343730841162], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 637}, {"A_title": "docs(ngComponentRouter): add note about shims needed for IE", "A_clean_title": ["doc", "ngcomponentrout", "ng", "compon", "router", "add", "note", "about", "shim", "need", "ie"], "B_title": "docs($sceProvider): XSS when turning of SCE", "B_clean_title": ["doc", "sceprovid", "sce", "provid", "xss", "when", "turn", "sce"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\ninfo about es6 shims is missing\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "info", "about", "es6", "shim", "miss"], "B_body": "Document that turning off SCE is very, very dangerous and should normally not be used by applications.\n", "B_clean_body": ["document", "that", "turn", "off", "sce", "veri", "veri", "danger", "normal", "not", "use", "by", "applic"], "title_sim": [0.16757798760770692], "body_sim": [0.03371956681534345], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.25797253283854993, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 195}, {"A_title": "refactor($parse): remove the support of JSON parsing mode", "A_clean_title": ["refactor", "pars", "remov", "support", "json", "pars", "mode"], "B_title": "docs(app): increments year", "B_clean_title": ["doc", "app", "increment", "year"], "A_body": "It's a feature that isn't exposed to the public, and is no longer used internally (not even tested).\n\nSee #7540\n\nAs opposed to #7543, I considered `literal` and `constant` as two distinct concepts.\n", "A_clean_body": ["it", "'s", "featur", "that", "n't", "expos", "public", "no", "longer", "use", "intern", "not", "even", "test", "see", "7540", "as", "oppos", "7543", "consid", "liter", "constant", "as", "two", "distinct", "concept"], "B_body": "Increments the year from 2014 to 2015.\n", "B_clean_body": ["increment", "year", "2014", "2015"], "title_sim": [-0.048220398477920555], "body_sim": [-0.036928233183686], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 234}, {"A_title": "docs(guide/Components): snake -> kebab", "A_clean_title": ["doc", "guid", "compon", "snake", "kebab"], "B_title": "chore(doc-gen): render @example tag for ngdoc @method", "B_clean_title": ["chore", "doc", "gen", "render", "exampl", "tag", "ngdoc", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDoc correction.\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nDocs mention `snake_case`.\n\n**What is the new behavior (if this is a feature change)?**\n\nExample given is actually `kebab-case`.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example given is not in snake_case, it is in kebab-case.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "correct", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "mention", "snake", "case", "**what", "new", "behavior", "thi", "featur", "chang", "exampl", "given", "actual", "kebab", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "given", "not", "snake", "case", "it", "kebab", "case"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat / fix to the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`@example` in  `@method` is not rendered\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "fix", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "method", "not", "render", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "title_sim": [0.24257235177769995], "body_sim": [0.9446020873615374], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 225}, {"A_title": "fix(ngMessages): create new scope for ngMessage, clean it up correctly", "A_clean_title": ["fix", "ngmessag", "ng", "messag", "creat", "new", "scope", "ngmessag", "ng", "messag", "clean", "it", "up", "correctli"], "B_title": "fix(injector): allow multiple loading of function modules", "B_clean_title": ["fix", "injector", "allow", "multipl", "load", "function", "modul"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n#14307\n\n**What is the new behavior (if this is a feature change)?**\nngMessage creates a child scope instead of reusing the ngMessages scope.\n\n**Does this PR introduce a breaking change?**\nPossibly. Needs investigation.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nPreviously, ngMessage elements used the same scope as ngMessages. When ngMessage\nhas interpolation in the textContent, then removing the message would not remove\nthe watcher from the scope - it would only be removed when the whole ngMessages\nelement was removed.\n\nThis commit changes the ngMessage transclude function to create a new child scope\ninstead, which can be destroyed safely when the message element is removed and\nthe message is detached\n\nFixes #14307\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "14307", "**what", "new", "behavior", "thi", "featur", "chang", "ngmessag", "ng", "messag", "creat", "child", "scope", "instead", "reus", "ngmessag", "ng", "messag", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "possibl", "need", "investig", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "previous", "ngmessag", "ng", "messag", "element", "use", "same", "scope", "as", "ngmessag", "ng", "messag", "when", "ngmessag", "ng", "messag", "ha", "interpol", "textcont", "text", "content", "then", "remov", "messag", "would", "not", "remov", "watcher", "scope", "it", "would", "onli", "remov", "when", "whole", "ngmessag", "ng", "messag", "element", "wa", "remov", "thi", "commit", "chang", "ngmessag", "ng", "messag", "transclud", "function", "creat", "new", "child", "scope", "instead", "which", "destroy", "safe", "when", "messag", "element", "remov", "messag", "detach", "fix", "14307"], "B_body": "**TEST PR** Just verifying that this passes on IE8\n\nChange HashMap to give $$hashKey also for functions so it will be possible to\nload multiple module function instances. In order to prevent problem in\nangular's test suite,  added an option to HashMap to maintain its own id\ncounter and added cleanup of $$hashKey from all module functions after each \ntest.\n\nBefore this CL, functions were added to the HashMap via toString(), which\ncould potentially return the same value for different actual instances of a\nfunction. This corrects this behaviour by ensuring that functions are mapped\nwith hashKeys, and ensuring that hashKeys are removed from functions and\nobjects at the end of tests.\n\nIn addition to these changes, the injector uses its own set of UIDs in order\nto prevent confusingly breaking tests which expect scopes or ng-repeated items\nto have specific hash keys.\n\nCloses #7255\n", "B_clean_body": ["**test", "pr**", "just", "verifi", "that", "thi", "pass", "ie8", "chang", "hashmap", "hash", "map", "give", "hashkey", "hash", "key", "also", "function", "so", "it", "will", "possibl", "load", "multipl", "modul", "function", "instanc", "order", "prevent", "problem", "angular", "'s", "test", "suit", "ad", "option", "hashmap", "hash", "map", "maintain", "it", "own", "id", "counter", "ad", "cleanup", "hashkey", "hash", "key", "all", "modul", "function", "after", "each", "test", "befor", "thi", "cl", "function", "were", "ad", "hashmap", "hash", "map", "via", "tostr", "string", "which", "could", "potenti", "return", "same", "valu", "differ", "actual", "instanc", "function", "thi", "correct", "thi", "behaviour", "by", "ensur", "that", "function", "are", "map", "hashkey", "hash", "key", "ensur", "that", "hashkey", "hash", "key", "are", "remov", "function", "object", "at", "end", "test", "addit", "these", "chang", "injector", "use", "it", "own", "set", "uid", "ui", "ds", "order", "prevent", "confusingli", "break", "test", "which", "expect", "scope", "or", "ng", "repeat", "item", "have", "specif", "hash", "key", "close", "7255"], "title_sim": [0.053627752572863605], "body_sim": [0.32790754653364523], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02251512827144951, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 645}, {"A_title": "docs(CONTRIBUTING): centralize, update, improve", "A_clean_title": ["doc", "contribut", "central", "updat", "improv"], "B_title": "fix(css): ng:form should always be a block element", "B_clean_title": ["fix", "css", "ng", "form", "alway", "block", "element"], "A_body": "- remove outdated info\r\n- move info about writing docs from Wiki to contribute.md + updates\r\n- move info about development setup from docs/contribute to contribute.md\r\n- add info about running tests on Saucelabs / Browserstack\r\n- add info about specific core code topics\r\n- add link to contributing.md to Contribung page\r\n- add link to changelog.md to nav in docs\r\n\r\nCloses #7303\r\nCloses #9444\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["remov", "outdat", "info", "move", "info", "about", "write", "doc", "wiki", "contribut", "md", "updat", "move", "info", "about", "develop", "setup", "doc", "contribut", "contribut", "md", "add", "info", "about", "run", "test", "saucelab", "browserstack", "add", "info", "about", "specif", "core", "code", "topic", "add", "link", "contribut", "md", "contribung", "page", "add", "link", "changelog", "md", "nav", "doc", "close", "7303", "close", "9444", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "fix for: http://jsfiddle.net/agamennon12345/twcvt/\n", "B_clean_body": ["fix", "http", "jsfiddl", "net", "agamennon12345", "twcvt"], "title_sim": [0.05670501306584384], "body_sim": [0.1424261859611966], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03768495383728816, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2187}, {"A_title": "refactor($animate): use CSS3 transition/animation events instead of $timeouts to track ongoing animations", "A_clean_title": ["refactor", "anim", "use", "css3", "transit", "anim", "event", "instead", "timeout", "track", "ongo", "anim"], "B_title": "fix(): fix scoping for transclusion directives inside replace directive", "B_clean_title": ["fix", "fix", "scope", "transclus", "direct", "insid", "replac", "direct"], "A_body": "Closes #3629\nCloses #3874\n", "A_clean_body": ["close", "3629", "close", "3874"], "B_body": "Tweaks to the implementation of #12975\n\nCloses #12975\nCloses #12936 \n", "B_clean_body": ["tweak", "implement", "12975", "close", "12975", "close", "12936"], "title_sim": [0.02584463522398867], "body_sim": [0.9199371790627183], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03298471886519046, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 790}, {"A_title": "Fix deprecate ngtouch", "A_clean_title": ["fix", "deprec", "ngtouch"], "B_title": "fix(guide) broken title overflow in navlist", "B_clean_title": ["fix", "guid", "broken", "titl", "overflow", "navlist"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "## Before\n\n![screen shot 2013-08-30 at 1 25 41 pm](https://f.cloud.github.com/assets/1016365/1060537/8829f31a-11b3-11e3-8620-9751954915f4.png)\n## After\n\n![screen shot 2013-08-30 at 1 25 31 pm](https://f.cloud.github.com/assets/1016365/1060540/8b6e9efe-11b3-11e3-8777-fa52f5236a74.png)\n", "B_clean_body": ["befor", "screen", "shot", "2013", "08", "30", "at", "25", "41", "pm", "http", "11b3", "11e3", "8620", "cloud", "github", "9751954915f4", "png", "com", "asset", "1016365", "1060537", "8829f31a", "after", "screen", "shot", "2013", "08", "30", "at", "25", "31", "pm", "http", "11b3", "11e3", "8777", "cloud", "github", "fa52f5236a74", "png", "com", "asset", "1016365", "1060540", "8b6e9ef"], "title_sim": [0.7441536208843542], "body_sim": [0.27327834708422666], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1614}, {"A_title": "fix($timeout/$interval): do not trigger a digest when cancelling a $timeout/$interval", "A_clean_title": ["fix", "timeout", "interv", "not", "trigger", "digest", "when", "cancel", "timeout", "interv"], "B_title": "fix($scope): fixes multiple root element error when there is a whites\u2026", "B_clean_title": ["fix", "scope", "fix", "multipl", "root", "element", "error", "when", "there", "whites\u2026"], "A_body": "Previously `.catch(noop)` was used on the rejected timeout/interval to prevent an unhandled rejection error. However this would schedule a deferred task to run the `noop`. If the cancelling was outside a digest this could cause a new digest such as with the ng-model `debounce` option.\r\n\r\nFixes #16057", "A_clean_body": ["previous", "catch", "noop", "wa", "use", "reject", "timeout", "interv", "prevent", "unhandl", "reject", "error", "howev", "thi", "would", "schedul", "defer", "task", "run", "noop", "cancel", "wa", "outsid", "digest", "thi", "could", "caus", "new", "digest", "such", "as", "ng", "model", "debounc", "option", "fix", "16057"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nIf one tries to load a directive with a top-level comment angular throws an error \nError: [$compile:tplrt] Template for directive 'myDirective' must have exactly one root element\nhttps://github.com/angular/angular.js/issues/15108\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nfixes multiple root element error when there is a whitespace after a comment\n\nAdded new conditional for NODE_TYPE_TEXT inside removeComments method of $compile\nAdded corresponding unit tests.\n\nCloses #15108\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "one", "tri", "load", "direct", "top", "level", "comment", "angular", "throw", "error", "error", "compil", "tplrt", "templat", "direct", "'mydirect", "'mi", "direct", "must", "have", "exactli", "one", "root", "element", "http", "github", "com", "angular", "angular", "js", "issu", "15108", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "multipl", "root", "element", "error", "when", "there", "whitespac", "after", "comment", "ad", "new", "condit", "node", "type", "text", "insid", "removecom", "remov", "comment", "method", "compil", "ad", "correspond", "unit", "test", "close", "15108"], "title_sim": [0.2202418365420667], "body_sim": [0.15668978373980635], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07238899387909602, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 280}, {"A_title": "test($http): ensure json deserialization errors are forwarded to erro\u2026", "A_clean_title": ["test", "http", "ensur", "json", "deseri", "error", "are", "forward", "erro\u2026"], "B_title": "fix(ngMockE2E): ensure that mocked $httpBackend uses correct $browser", "B_clean_title": ["fix", "ngmocke2", "ng", "mock", "e2e", "ensur", "that", "mock", "httpbackend", "http", "backend", "use", "correct", "browser"], "A_body": "\u2026r handler\r\n\r\nSince https://github.com/angular/angular.js/commit/e13eeabd7e34a78becec06cfbe72c23f2dcb85f9,\r\nerrors thrown from onFulfilled and onRejected handlers are passed to the regular http\r\nerror handlers. Before this, JSON deserialization errors lead to hard application errors, and could\r\nnot be handled by application code. This behavior was introduced in https://github.com/angular/angular.js/commit/7b6c1d08aceba6704a40302f373400aed9ed0e0b, and originally, a malformed JSON string was forwarded\r\nas the data to the http success response handler.\r\n\r\nThis commit adds a specifc test case, even though the behavior is unlikely to break in the future without\r\na change in the $q rejection handling.\r\n\r\nRelated #11433\r\n\r\n", "A_clean_body": ["\u2026r", "handler", "sinc", "http", "github", "com", "angular", "angular", "js", "commit", "e13eeabd7e34a78becec06cfbe72c23f2dcb85f9", "error", "thrown", "onfulfil", "fulfil", "onreject", "reject", "handler", "are", "pass", "regular", "http", "error", "handler", "befor", "thi", "json", "deseri", "error", "lead", "hard", "applic", "error", "could", "not", "handl", "by", "applic", "code", "thi", "behavior", "wa", "introduc", "http", "github", "com", "angular", "angular", "js", "commit", "7b6c1d08aceba6704a40302f373400aed9ed0e0b", "origin", "malform", "json", "string", "wa", "forward", "as", "data", "http", "success", "respons", "handler", "thi", "commit", "add", "specifc", "test", "case", "even", "though", "behavior", "unlik", "break", "futur", "without", "chang", "reject", "handl", "relat", "11433"], "B_body": "The fix from #13124 enabled ngMock and ngMockE2E to work together but\r\ndid it in a way that meant that the \"real\" `$httpBackend` service that\r\nwas used in pass-through depended upon a different `$browser` service\r\nto the rest of the app.\r\n\r\nThis broke Protractor since it watches the `$browser` for outstanding\r\nrequests and the pass through requests were being tracked by the wrong\r\n`$browser` instance.\r\n\r\nCloses #15593\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["fix", "13124", "enabl", "ngmock", "ng", "mock", "ngmocke2", "ng", "mock", "e2e", "work", "togeth", "but", "did", "it", "way", "that", "meant", "that", "real", "httpbackend", "http", "backend", "servic", "that", "wa", "use", "pass", "through", "depend", "upon", "differ", "browser", "servic", "rest", "app", "thi", "broke", "protractor", "sinc", "it", "watch", "browser", "outstand", "request", "pass", "through", "request", "were", "be", "track", "by", "wrong", "browser", "instanc", "close", "15593", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.3314556016702523], "body_sim": [0.4550891105724401], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.2780068669040509, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 27}, {"A_title": "refactor($compile): reuse shared simpleCompare method", "A_clean_title": ["refactor", "compil", "reus", "share", "simplecompar", "simpl", "compar", "method"], "B_title": "docs($compile): remove a mention of preassigning bindings in controllers", "B_clean_title": ["doc", "compil", "remov", "mention", "preassign", "bind", "control"], "A_body": "I think this could be used in some other places as well once it's available...", "A_clean_body": ["think", "thi", "could", "use", "some", "other", "place", "as", "well", "onc", "it", "'s", "avail"], "B_body": "The deprecation warning is no longer needed as the feature has been removed\r\nin 1.7.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreassigning bindings to controllers is described as deprecated but still working. This feature has been removed so the warning is no longer needed.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["deprec", "warn", "no", "longer", "need", "as", "featur", "ha", "been", "remov", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "preassign", "bind", "control", "describ", "as", "deprec", "but", "still", "work", "thi", "featur", "ha", "been", "remov", "so", "warn", "no", "longer", "need", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.40468778507451925], "body_sim": [0.149671303271421], "file_list_sim": 0.3333333333333333, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 8}, {"A_title": "Allow NgModelController to be copied", "A_clean_title": ["allow", "ngmodelcontrol", "ng", "model", "control", "copi"], "B_title": "feat(ngModelOptions): allow to debounce 'default' only, and add catch\u2026", "B_clean_title": ["feat", "ngmodelopt", "ng", "model", "option", "allow", "debounc", "'default", "onli", "add", "catch\u2026"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`copy` throws when copying a `NgModelController` instance. This will occur when deep watching such as when doing `<e ref=\"[myNgModel]\">` (#15833)\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe internal `NgModelController` `$$scope` is hidden\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno, unless someone is doing something crazy that depends on `$$scope` being enumerable?\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nI've split the commit up into 3.  I think the refactor + (modified) test should go into 1.7. I don't think the actual fix should go into 1.7.  The specific test case (watched a literal containing an ng-model) will no longer fail in 1.7. If we want to prevent other cases like manually deep-watching or manually `copy`ing an ng-model I think we should do it differently in 1.7...\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "copi", "throw", "when", "copi", "ngmodelcontrol", "ng", "model", "control", "instanc", "thi", "will", "occur", "when", "deep", "watch", "such", "as", "when", "do", "ref=", "myngmodel", "my", "ng", "model", "15833", "**what", "new", "behavior", "thi", "featur", "chang", "intern", "ngmodelcontrol", "ng", "model", "control", "scope", "hidden", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "unless", "someon", "do", "someth", "crazi", "that", "depend", "scope", "be", "enumer", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "'ve", "split", "commit", "up", "into", "think", "refactor", "modifi", "test", "go", "into", "n't", "think", "actual", "fix", "go", "into", "specif", "test", "case", "watch", "liter", "contain", "ng", "model", "will", "no", "longer", "fail", "we", "want", "prevent", "other", "case", "like", "manual", "deep", "watch", "or", "manual", "copi", "ing", "ng", "model", "think", "we", "it", "differ"], "B_body": "\u2026-all\r\n\r\nBREAKING CHANGE:\r\n\r\nthe 'default' key in 'debounce' now only debounces the default event, i.e. the event\r\nthat is added as an update trigger by the different input directives automatically.\r\n\r\nPreviously, it also applied to other update triggers defined in 'updateOn' that\r\ndid not have a corresponding key in the 'debounce'.\r\n\r\nThis behavior is now supported via a special wildcard / catch-all key: '*'.\r\n\r\nSee the following example:\r\n\r\nPre-1.7:\r\n'mouseup' is debounced by 500 milliseconds because 'default' is applied.\r\n```\r\nng-model-options=\"{\r\n  updateOn: 'default blur mouseup',\r\n  debounce: { 'default': 500, 'blur': 0 }\r\n}\r\n```\r\n\r\n1.7:\r\n'mouseup' is debounced by 1000 milliseconds because '*' is applied.\r\n```\r\nng-model-options=\"{\r\n  updateOn: 'default blur mouseup',\r\n  debounce: { 'default': 500, 'blur': 0, '*': 1000 }\r\n}\r\n```\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsee #15411\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nsee above\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYES, see above\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["all", "break", "chang", "'default", "key", "'debounc", "now", "onli", "debounc", "default", "event", "event", "that", "ad", "as", "updat", "trigger", "by", "differ", "input", "direct", "automat", "previous", "it", "also", "appli", "other", "updat", "trigger", "defin", "'updateon", "'updat", "that", "did", "not", "have", "correspond", "key", "'debounc", "thi", "behavior", "now", "support", "via", "special", "wildcard", "catch", "all", "key", "see", "follow", "exampl", "pre", "'mouseup", "debounc", "by", "500", "millisecond", "becaus", "'default", "appli", "ng", "model", "options=", "updateon", "updat", "'default", "blur", "mouseup", "debounc", "'default", "500", "'blur", "'mouseup", "debounc", "by", "1000", "millisecond", "becaus", "appli", "ng", "model", "options=", "updateon", "updat", "'default", "blur", "mouseup", "debounc", "'default", "500", "'blur", "1000", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "15411", "**what", "new", "behavior", "thi", "featur", "chang", "see", "abov", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "see", "abov", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.5070775933292175], "body_sim": [0.7850197026070815], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.16061933980983972, 0.0], "location_sim": [0.0, 0.0], "pattern": 1, "time": 246}, {"A_title": "perf($rootScope): do not mark $watchCollectionInterceptor as $stateful", "A_clean_title": ["perf", "rootscop", "root", "scope", "not", "mark", "watchcollectioninterceptor", "watch", "collect", "interceptor", "as", "state"], "B_title": "fix($controller): remove the option to instantiate controllers from c\u2026", "B_clean_title": ["fix", "control", "remov", "option", "instanti", "control", "c\u2026"], "A_body": "I think this was a mistake [from the start](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa?diff=unified#diff-44d3307b66bf51b52e110307fa57e196R518).  This interceptor doesn't actually store any state, it just reads the inner/complex state of its input. EDIT: actually it had a purpose originally, although may no longer be as significant, see https://github.com/angular/angular.js/pull/16009#issuecomment-311543600\r\n\r\nRemoving the `$stateful` flag will allow some expressions (those with `inputs` such as array/object literals) to avoid invoking `$watchCollectionInterceptor` and avoid creating the literals etc. on each digest.", "A_clean_body": ["think", "thi", "wa", "mistak", "start", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff=unifi", "diff", "44d3307b66bf51b52e110307fa57e196r518", "thi", "interceptor", "n't", "actual", "store", "ani", "state", "it", "just", "read", "inner", "complex", "state", "it", "input", "edit", "actual", "it", "had", "purpos", "origin", "although", "may", "no", "longer", "as", "signific", "see", "http", "github", "com", "angular", "angular", "js", "pull", "16009", "issuecom", "311543600", "remov", "state", "flag", "will", "allow", "some", "express", "those", "input", "such", "as", "array", "object", "liter", "avoid", "invok", "watchcollectioninterceptor", "watch", "collect", "interceptor", "avoid", "creat", "liter", "etc", "each", "digest"], "B_body": "\u2026onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n", "B_clean_body": ["\u2026onstructor", "window", "thi", "also", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "close", "15349", "break", "chang", "option", "instanti", "control", "constructor", "global", "window", "object", "ha", "been", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "that", "could", "enabl", "thi", "behavior", "ha", "been", "remov", "thi", "behavior", "had", "been", "deprec", "sinc", "angularj", "angular", "js", "v1", "becaus", "pollut", "global", "scope", "bad", "migrat", "remov", "call", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "config", "regist", "your", "control", "via", "modul", "api", "or", "controllerprovid", "control", "provid", "angular", "modul", "'mymodul", "'mi", "modul", "control", "'mycontrol", "'mi", "control", "function", "angular", "modul", "'mymodul", "'mi", "modul", "config", "function", "controllerprovid", "control", "provid", "controllerprovid", "regist", "control", "provid", "'mycontrol", "'mi", "control", "function"], "title_sim": [-0.07539182097935783], "body_sim": [0.2191111225992954], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 85}, {"A_title": "fix($parse): do not shallow-watch inputs to one-time intercepted expressions", "A_clean_title": ["fix", "pars", "not", "shallow", "watch", "input", "one", "time", "intercept", "express"], "B_title": "docs(CONTRIBUTING.md): Updated commit types.", "B_clean_title": ["doc", "contribut", "md", "updat", "commit", "type"], "A_body": "This was missed in aac5623247a86681cbe0e1c8179617b816394c1d\r\n\r\nDepends on #15958, will be fixed in master by #16015 (I've added the test there as well).", "A_clean_body": ["thi", "wa", "miss", "aac5623247a86681cbe0e1c8179617b816394c1d", "depend", "15958", "will", "fix", "master", "by", "16015", "'ve", "ad", "test", "there", "as", "well"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe commit types went out of sync with https://github.com/angular/angular/blob/master/CONTRIBUTING.md#type\r\nWhat prompted me to do this fix is that there wasn't 100% clear that test fixes (e.g. for flaky tests) should come in the \"test\" commits.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nCommit types are the same as in Angular repo.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nExpanded \"test\" to also mean test fixes, added \"build\" and \"ci\".\r\nThis is to mirror the documentation in Angular (without JS) repo.", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "commit", "type", "went", "out", "sync", "http", "md", "github", "com", "angular", "angular", "blob", "master", "contribut", "type", "what", "prompt", "me", "thi", "fix", "that", "there", "wa", "n't", "100", "clear", "that", "test", "fix", "flaki", "test", "come", "test", "commit", "**what", "new", "behavior", "thi", "featur", "chang", "commit", "type", "are", "same", "as", "angular", "repo", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "expand", "test", "also", "mean", "test", "fix", "ad", "build", "ci", "thi", "mirror", "document", "angular", "without", "js", "repo"], "title_sim": [-0.00979620195818113], "body_sim": [0.3853251523521351], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 227}, {"A_title": "feat($timeout): add $timeout service that superceeds $deferred", "A_clean_title": ["feat", "timeout", "add", "timeout", "servic", "that", "superce", "defer"], "B_title": "refactor($injector): remove the Chrome stringification hack", "B_clean_title": ["refactor", "injector", "remov", "chrome", "stringif", "hack"], "A_body": "$timeout has a better name ($defer got often confused with something related to $q) and\nis actually promise based with cancelation support.\n\nWith this commit the $defer service is deprecated and will be removed before 1.0.\n\nCloses #704, #532\n", "A_clean_body": ["timeout", "ha", "better", "name", "defer", "got", "often", "confus", "someth", "relat", "actual", "promis", "base", "cancel", "support", "thi", "commit", "defer", "servic", "deprec", "will", "remov", "befor", "close", "704", "532"], "B_body": "The Chrome stringification hack added in afcedff34c8a44dda0d558d9d6337962f5f03d7b\r\nis no longer needed. I verified that both of the commented out tests pass\r\non Chrome 56.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's a workaround in place for Chrome 50-51. Current stable version is 56.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["chrome", "stringif", "hack", "ad", "afcedff34c8a44dda0d558d9d6337962f5f03d7b", "no", "longer", "need", "verifi", "that", "both", "comment", "out", "test", "pass", "chrome", "56", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "workaround", "place", "chrome", "50", "51", "current", "stabl", "version", "56", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.003545784553841357], "body_sim": [0.13259902900208573], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1716}, {"A_title": "fix(scenario): make browser().location() working if ng-app on other than...", "A_clean_title": ["fix", "scenario", "make", "browser", "locat", "work", "ng", "app", "other", "than"], "B_title": "fix(css): ng:form should always be a block element", "B_clean_title": ["fix", "css", "ng", "form", "alway", "block", "element"], "A_body": "Make browser().location().\\* methods to work even if ng-app defined on other element than html.\n- pass $injector into action\n", "A_clean_body": ["make", "browser", "locat", "method", "work", "even", "ng", "app", "defin", "other", "element", "than", "html", "pass", "injector", "into", "action"], "B_body": "fix for: http://jsfiddle.net/agamennon12345/twcvt/\n", "B_clean_body": ["fix", "http", "jsfiddl", "net", "agamennon12345", "twcvt"], "title_sim": [0.14252659099171391], "body_sim": [0.029577978773763437], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 168}, {"A_title": "feat(scope): add listener deregistration fn for $watch and $on", "A_clean_title": ["feat", "scope", "add", "listen", "deregistr", "fn", "watch"], "B_title": "fix($location): always resolve relative links in html5mode to `<base>` url", "B_clean_title": ["fix", "locat", "alway", "resolv", "rel", "link", "html5mode", "base", "url"], "A_body": "- both $watch and $on now return a function which when called\n  deregisters the listener\n- $removeListener was removed and replaced with the above\n- added more tests for $watch and $on\n\nCloses #542\n", "A_clean_body": ["both", "watch", "now", "return", "function", "which", "when", "call", "deregist", "listen", "removelisten", "remov", "listen", "wa", "remov", "replac", "abov", "ad", "more", "test", "watch", "close", "542"], "B_body": "BREAKING CHANGE (since 1.2.0 and 1.3.0-beta.1):\n\nAngular now requires a `<base>` tag when html5 mode of `$location` is enabled. Reasoning:\nUsing html5 mode without a `<base href=\"...\">` tag makes relative links for images, links, ...\nrelative to the current url if the browser supports\nthe history API. However, if the browser does not support the history API Angular falls back to using the `#`,\nand then all links would be broken.\n\nBREAKING CHANGE (since 1.2.17 and 1.3.0-beta.10):\n\nIn html5 mode without a `<base>` tag on older browser that don't support the history API\nrelative paths were adding up. E.g. clicking on `<a href=\"page1\">` and then on `<a href=\"page2\">`\nwould produce `$location.path()==='/page1/page2'. The code that introduced this behavior was removed\nand Angular now also requires a`<base>` tag to be present when using html5 mode.\n\nCloses #8172\n", "B_clean_body": ["break", "chang", "sinc", "beta", "angular", "now", "requir", "base", "tag", "when", "html5", "mode", "locat", "enabl", "reason", "html5", "mode", "without", "base", "href=", "tag", "make", "rel", "link", "imag", "link", "rel", "current", "url", "browser", "support", "histori", "api", "howev", "browser", "not", "support", "histori", "api", "angular", "fall", "back", "then", "all", "link", "would", "broken", "break", "chang", "sinc", "17", "beta", "10", "html5", "mode", "without", "base", "tag", "older", "browser", "that", "n't", "support", "histori", "api", "rel", "path", "were", "ad", "up", "click", "href=", "page1", "then", "href=", "page2", "would", "produc", "locat", "path", "page1", "page2", "code", "that", "introduc", "thi", "behavior", "wa", "remov", "angular", "now", "also", "requir", "base", "tag", "present", "when", "html5", "mode", "close", "8172"], "title_sim": [0.031775192183375704], "body_sim": [0.17207748135775094], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.022631804276974667, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1094}, {"A_title": "docs($log): describe your change...", "A_clean_title": ["doc", "log", "describ", "your", "chang"], "B_title": "fix($parse): do not pass scope/locals to interceptors of one-time bindings", "B_clean_title": ["fix", "pars", "not", "pass", "scope", "local", "interceptor", "one", "time", "bind"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocument update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe documentation for $log doesn't mention blackboxing, by which a developer can see the originating line of calls to $log.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nA brief, browser-agnostic mention of blackboxing was added to the page.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "document", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "document", "log", "n't", "mention", "blackbox", "by", "which", "develop", "see", "origin", "line", "call", "log", "**what", "new", "behavior", "thi", "featur", "chang", "brief", "browser", "agnost", "mention", "blackbox", "wa", "ad", "page", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "2ee5033967d5f87a516bad137686b0592e25d26b should not have added these args (see 529550d0da3d88514ce9efb038fb935fbf90f971 which dropped them elsewhere)", "B_clean_body": ["2ee5033967d5f87a516bad137686b0592e25d26b", "not", "have", "ad", "these", "arg", "see", "529550d0da3d88514ce9efb038fb935fbf90f971", "which", "drop", "them", "elsewher"], "title_sim": [0.032124421268221945], "body_sim": [0.3526612440252226], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 191}, {"A_title": "chore(styleDirective): remove an unneccessary directive definition", "A_clean_title": ["chore", "styledirect", "style", "direct", "remov", "unneccessari", "direct", "definit"], "B_title": "fix(formatNumber): better corner case handling", "B_clean_title": ["fix", "formatnumb", "format", "number", "better", "corner", "case", "handl"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nChore / Cleanup\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nSince the style directive is defined as a non-terminal element directive\nwith no behavior on link, we may as well not define anything at all.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "cleanup", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "sinc", "style", "direct", "defin", "as", "non", "termin", "element", "direct", "no", "behavior", "link", "we", "may", "as", "well", "not", "defin", "anyth", "at", "all"], "B_body": "The idea here is that we actually parse the input number ourselves and then do the rounding ourselves manually. This allows us more control and reliability on the output for corner case numbers.\n\nCloses #8674\nCloses #12709 \nCloses #8705 \nCloses #12707 \nCloses #10246\nCloses #10252\n", "B_clean_body": ["idea", "here", "that", "we", "actual", "pars", "input", "number", "ourselv", "then", "round", "ourselv", "manual", "thi", "allow", "us", "more", "control", "reliabl", "output", "corner", "case", "number", "close", "8674", "close", "12709", "close", "8705", "close", "12707", "close", "10246", "close", "10252"], "title_sim": [0.0768783815997796], "body_sim": [0.0891219805451853], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 250}, {"A_title": "docs(currency): Add missing line break", "A_clean_title": ["doc", "currenc", "add", "miss", "line", "break"], "B_title": "Test on latest 2 Safari versions", "B_clean_title": ["test", "latest", "safari", "version"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nInsert missing line break between currency examples\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "insert", "miss", "line", "break", "between", "currenc", "exampl"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.0682561597854307], "body_sim": [0.8924767666362946], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 496}, {"A_title": "chore(gitignore): add .agignore", "A_clean_title": ["chore", "gitignor", "add", "agignor"], "B_title": "chore(*): normalize Vojta's email in .mailmap correctly", "B_clean_title": ["chore", "normal", "vojta", "'s", "email", "mailmap", "correctli"], "A_body": "I use a .agignore file to skip the build directory and some other files\nwhile searching using Ag (see\nhttps://github.com/ggreer/the_silver_searcher).\n", "A_clean_body": ["use", "agignor", "file", "skip", "build", "directori", "some", "other", "file", "while", "search", "ag", "see", "http", "github", "silver", "searcher", "com", "ggreer"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nVojta's mails are not normalized.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThey are normalized.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "vojta", "'s", "mail", "are", "not", "normal", "**what", "new", "behavior", "thi", "featur", "chang", "they", "are", "normal", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**"], "title_sim": [0.4198212723252519], "body_sim": [0.11894785493244048], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1608}, {"A_title": "fixed opera date.toISOString issue", "A_clean_title": ["fix", "opera", "date", "toisostr", "iso", "string", "issu"], "B_title": "docs(*): remove usage of global grunt-cli", "B_clean_title": ["doc", "remov", "usag", "global", "grunt", "cli"], "A_body": "opera did not implement date.toISOString correctly according to Javascript guideline. \nSo we have to change the toString method of angularDate at line 766 of src/apis.js. \n", "A_clean_body": ["opera", "did", "not", "implement", "date", "toisostr", "iso", "string", "correctli", "accord", "javascript", "guidelin", "so", "we", "have", "chang", "tostr", "string", "method", "angulard", "angular", "date", "at", "line", "766", "js", "src", "api"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nCurrently, the contributing docs tell people to globally install grunt and build angularjs using the `grunt` cli command.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit ensures grunt is not required globally by updating all the commands to use `yarn grunt` instead of `grunt`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "current", "contribut", "doc", "tell", "peopl", "global", "instal", "grunt", "build", "angularj", "grunt", "cli", "command", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "ensur", "grunt", "not", "requir", "global", "by", "updat", "all", "command", "use", "yarn", "grunt", "instead", "grunt", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.005345585826918875], "body_sim": [0.17063537351757185], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2325}, {"A_title": "test($http): ensure json deserialization errors are forwarded to erro\u2026", "A_clean_title": ["test", "http", "ensur", "json", "deseri", "error", "are", "forward", "erro\u2026"], "B_title": "fix(ng-bind-html): watch string value instead of wrapper", "B_clean_title": ["fix", "ng", "bind", "html", "watch", "string", "valu", "instead", "wrapper"], "A_body": "\u2026r handler\r\n\r\nSince https://github.com/angular/angular.js/commit/e13eeabd7e34a78becec06cfbe72c23f2dcb85f9,\r\nerrors thrown from onFulfilled and onRejected handlers are passed to the regular http\r\nerror handlers. Before this, JSON deserialization errors lead to hard application errors, and could\r\nnot be handled by application code. This behavior was introduced in https://github.com/angular/angular.js/commit/7b6c1d08aceba6704a40302f373400aed9ed0e0b, and originally, a malformed JSON string was forwarded\r\nas the data to the http success response handler.\r\n\r\nThis commit adds a specifc test case, even though the behavior is unlikely to break in the future without\r\na change in the $q rejection handling.\r\n\r\nRelated #11433\r\n\r\n", "A_clean_body": ["\u2026r", "handler", "sinc", "http", "github", "com", "angular", "angular", "js", "commit", "e13eeabd7e34a78becec06cfbe72c23f2dcb85f9", "error", "thrown", "onfulfil", "fulfil", "onreject", "reject", "handler", "are", "pass", "regular", "http", "error", "handler", "befor", "thi", "json", "deseri", "error", "lead", "hard", "applic", "error", "could", "not", "handl", "by", "applic", "code", "thi", "behavior", "wa", "introduc", "http", "github", "com", "angular", "angular", "js", "commit", "7b6c1d08aceba6704a40302f373400aed9ed0e0b", "origin", "malform", "json", "string", "wa", "forward", "as", "data", "http", "success", "respons", "handler", "thi", "commit", "add", "specifc", "test", "case", "even", "though", "behavior", "unlik", "break", "futur", "without", "chang", "reject", "handl", "relat", "11433"], "B_body": "Ref: https://github.com/angular/angular.js/pull/4045\n\nI have this sinking feeling that support this use case sort of\nencourages binding to function that blindly trust some html.  For now,\nI'm fixing the issue while I think about the use cases some more.\n\nIn the case of a function that performs any non-trivial work before\nwrapping the value (e.g. the showdown filter in issue #3980, or the\nbinding to a simply wrapper function in issue #3932 if it did anything\nmeaty), this fix makes it \"work\" - but performance is going to suck -\nyou should bind to some other thing on scope that watches the actual\nsource and adjusts itself when that changes (e.g. the showdown filter.)\nFor the case of the wrapper in #3932, if one isn't performing\nsanitization or some such thing - then you the developer has insight\ninto why that value is safe in that particular context - and it should\nbe available simply by name and not as a result of a function taking any\narbitrary input to make auditing of security a little saner.\n\nCloses #3932, #3980\n", "B_clean_body": ["ref", "http", "github", "com", "angular", "angular", "js", "pull", "4045", "have", "thi", "sink", "feel", "that", "support", "thi", "use", "case", "sort", "encourag", "bind", "function", "that", "blindli", "trust", "some", "html", "now", "'m", "fix", "issu", "while", "think", "about", "use", "case", "some", "more", "case", "function", "that", "perform", "ani", "non", "trivial", "work", "befor", "wrap", "valu", "showdown", "filter", "issu", "3980", "or", "bind", "simpli", "wrapper", "function", "issu", "3932", "it", "did", "anyth", "meati", "thi", "fix", "make", "it", "work", "but", "perform", "go", "suck", "you", "bind", "some", "other", "thing", "scope", "that", "watch", "actual", "sourc", "adjust", "itself", "when", "that", "chang", "showdown", "filter", "case", "wrapper", "3932", "one", "n't", "perform", "sanit", "or", "some", "such", "thing", "then", "you", "develop", "ha", "insight", "into", "whi", "that", "valu", "safe", "that", "particular", "context", "it", "avail", "simpli", "by", "name", "not", "as", "result", "function", "take", "ani", "arbitrari", "input", "make", "audit", "secur", "littl", "saner", "close", "3932", "3980"], "title_sim": [-0.0009740771821525673], "body_sim": [0.4455500804932042], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02891187969598471, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1236}, {"A_title": "fix(docsApp): show correct version number in api index", "A_clean_title": ["fix", "docsapp", "doc", "app", "show", "correct", "version", "number", "api", "index"], "B_title": "fix(markup): Make special attrs such as ng:href work even without binding", "B_clean_title": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfix in the docs app\n\n**What is the current behavior? (You can also link to an open issue here)**\nOn https://docs.angularjs.org/api, the text currently says \n\n> These pages contain the AngularJS reference materials for version 1.5.8 arbitrary-fallbacks.\n\nbut the default docs are for the master / snapshot version. \n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n\nPreviously, the index would show the version of Angular that runs on\nthe page, not the version for which the docs are. This meant that in\nthat snapshot docs the stable version was displayed.\n\nThe `$scope.docsVersion` value was used in the plnkr opening code, but\nhas not been used since https://github.com/angular/angular.js/commit/bdec35cebc89e0d80a04eeffbd71ad999fc7e61a.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "http", "angularj", "doc", "org", "api", "text", "current", "say", "these", "page", "contain", "angularj", "angular", "js", "refer", "materi", "version", "arbitrari", "fallback", "but", "default", "doc", "are", "master", "snapshot", "version", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "previous", "index", "would", "show", "version", "angular", "that", "run", "page", "not", "version", "which", "doc", "are", "thi", "meant", "that", "that", "snapshot", "doc", "stabl", "version", "wa", "display", "scope", "docsvers", "doc", "version", "valu", "wa", "use", "plnkr", "open", "code", "but", "ha", "not", "been", "use", "sinc", "http", "github", "com", "angular", "angular", "js", "commit", "bdec35cebc89e0d80a04eeffbd71ad999fc7e61a"], "B_body": "fix(markup): Make special attrs such as ng:href work even without binding\n- special attrs such as ng:href, ng:check did not work as intended when\n  their values do not contain bindings. And this commit is to fix that\n\nCloses #534\n", "B_clean_body": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind", "special", "attr", "such", "as", "ng", "href", "ng", "check", "did", "not", "work", "as", "intend", "when", "their", "valu", "not", "contain", "bind", "thi", "commit", "fix", "that", "close", "534"], "title_sim": [0.13663325424728645], "body_sim": [0.21904256202378627], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.16012383054872906, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1876}, {"A_title": "fix(date filter): default to fullDate format", "A_clean_title": ["fix", "date", "filter", "default", "fulldat", "full", "date", "format"], "B_title": "chore(docs): update to lunr-0.5.12", "B_clean_title": ["chore", "doc", "updat", "lunr", "12"], "A_body": "The browser's behave inconsistently, so we should just stick to one format\nwhen the format is not specified by the developer\n\nCloses #605\n", "A_clean_body": ["browser", "'s", "behav", "inconsist", "so", "we", "just", "stick", "one", "format", "when", "format", "not", "specifi", "by", "develop", "close", "605"], "B_body": "This improves the search results for certain terms. Compare the results for **scope**:\nCurrently:\n![search-scope-current](https://cloud.githubusercontent.com/assets/1153097/10083876/adc9c410-6300-11e5-8781-73cb2046f548.PNG)\n\nAfter the update:\n![search-scope-new](https://cloud.githubusercontent.com/assets/1153097/10083878/b0bf0ff4-6300-11e5-8b9a-7e2c87920a73.PNG)\n", "B_clean_body": ["thi", "improv", "search", "result", "certain", "term", "compar", "result", "**scope**", "current", "search", "scope", "current", "http", "6300", "11e5", "8781", "githubusercont", "73cb2046f548", "png", "cloud", "com", "asset", "1153097", "10083876", "adc9c410", "after", "updat", "search", "scope", "new", "http", "6300", "11e5", "8b9a", "githubusercont", "7e2c87920a73", "png", "cloud", "com", "asset", "1153097", "10083878", "b0bf0ff4"], "title_sim": [-0.008515322733965663], "body_sim": [0.12685736810723658], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1437}, {"A_title": "test($resource): check we do not throw if response.data is the resour\u2026", "A_clean_title": ["test", "resourc", "check", "we", "not", "throw", "respons", "data", "resour\u2026"], "B_title": "fix(jQuery): cooperate with other libraries monkey-patching jQuery.cleanData", "B_clean_title": ["fix", "jqueri", "queri", "cooper", "other", "librari", "monkey", "patch", "jqueri", "cleandata", "queri", "clean", "data"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n\u2026ce object\n\nCloses #4508\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026ce", "object", "close", "4508"], "B_body": "Some libraries (like jQuery UI) patch jQuery.cleanData as well. This commit\nmakes Angular work correctly even if such external patching was done after\nthe Angular one.\n\nFixes #8471\n\n/cc @IgorMinar\n", "B_clean_body": ["some", "librari", "like", "jqueri", "queri", "ui", "patch", "jqueri", "cleandata", "queri", "clean", "data", "as", "well", "thi", "commit", "make", "angular", "work", "correctli", "even", "such", "extern", "patch", "wa", "done", "after", "angular", "one", "fix", "8471", "cc", "igorminar", "igor", "minar"], "title_sim": [0.03388079052682967], "body_sim": [0.12099777111985163], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.12076203428578494, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 671}, {"A_title": "docs($resourceProvider): include '$'", "A_clean_title": ["doc", "resourceprovid", "resourc", "provid", "includ"], "B_title": "fix($httpBackend): Ignore multiple calls to onreadystatechange with read...", "B_clean_title": ["fix", "httpbackend", "http", "backend", "ignor", "multipl", "call", "onreadystatechang", "read"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n**What is the current behavior? (You can also link to an open issue here)**\nincorrect code in the examples\n**What is the new behavior (if this is a feature change)?**\ncode is copy-paste-ready\n**Does this PR introduce a breaking change?**\nno\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nInclude the '$' in the injection argument of the two examples.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "incorrect", "code", "exampl", "**what", "new", "behavior", "thi", "featur", "chang", "code", "copi", "past", "readi", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "includ", "inject", "argument", "two", "exampl"], "B_body": "...yState=4\n\nOn mobile webkit `onreadystatechange` might by called multiple times\nwith `readyState===4`  caused by xhrs that are resolved while the app is\nin the background.\n\n Fixes #5426.\n", "B_clean_body": ["ystate=4", "state=4", "mobil", "webkit", "onreadystatechang", "might", "by", "call", "multipl", "time", "readystate===4", "readi", "state===4", "caus", "by", "xhr", "that", "are", "resolv", "while", "app", "background", "fix", "5426"], "title_sim": [-0.09193275060117159], "body_sim": [0.052307093699511746], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 978}, {"A_title": "perf(ngStyleDirective): use $watchCollection", "A_clean_title": ["perf", "ngstyledirect", "ng", "style", "direct", "use", "watchcollect", "watch", "collect"], "B_title": "refactor($interpolate): remove unnecessary else", "B_clean_title": ["refactor", "interpol", "remov", "unnecessari"], "A_body": "This re-commits https://github.com/angular/angular.js/commit/4c8d8ad5083d9dd17c0b8480339d5f95943f1b71 which was [reverted](https://github.com/angular/angular.js/commit/36fd167e1d6668ab497970f491a6d95344e97e41) (with [tests added](https://github.com/angular/angular.js/commit/da75d138b144d196fc2b397c7a86a74528c151a5)).  This is possible now because of 189461f9bf6fda18ddbd16c42f2e959cf939c3da, although note that change is currently causing #15905 so maybe we should hold off on merging this one for now?\r\n\r\nFYI @gdi2290", "A_clean_body": ["thi", "re", "commit", "http", "github", "com", "angular", "angular", "js", "commit", "4c8d8ad5083d9dd17c0b8480339d5f95943f1b71", "which", "wa", "revert", "http", "github", "com", "angular", "angular", "js", "commit", "36fd167e1d6668ab497970f491a6d95344e97e41", "test", "ad", "http", "github", "com", "angular", "angular", "js", "commit", "da75d138b144d196fc2b397c7a86a74528c151a5", "thi", "possibl", "now", "becaus", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "although", "note", "that", "chang", "current", "caus", "15905", "so", "mayb", "we", "hold", "off", "merg", "thi", "one", "now", "fyi", "gdi2290"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nCleaner code.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "cleaner", "code", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.027668842899808626], "body_sim": [0.47751637761619325], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 113}, {"A_title": "Fixed spelling error for word 'standalone'", "A_clean_title": ["fix", "spell", "error", "word", "'standalon"], "B_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "B_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "B_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "title_sim": [-0.07082520877017141], "body_sim": [0.025183338676354826], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 950}, {"A_title": "feat: angularFilter.date: date filter can show day/mon string", "A_clean_title": ["feat", "angularfilt", "date", "angular", "filter", "date", "filter", "show", "day", "mon", "string"], "B_title": "wip: feat(ngModel): run formatters / setModelValue", "B_clean_title": ["wip", "feat", "ngmodel", "ng", "model", "run", "formatt", "setmodelvalu", "set", "model", "valu"], "A_body": "  Support new date format, specifically day of week/Month of year in string\n  e.g. {{ someDate | data:\"EEE, MMM d, yyyy\" }} -> \"Wed, Jul 10, 2011\"\nCloses #396\n", "A_clean_body": ["support", "new", "date", "format", "specif", "day", "week", "month", "year", "string", "somed", "some", "date", "data", "eee", "mmm", "yyyi", "wed", "jul", "10", "2011", "close", "396"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's currently no way to manually run the model -> view pipeline / formatters\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAn API to run the whole pipeline / the formatters is introduced.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nThe PR includes both a `$format` and a `$setModelValue` function. I think only one is needed, we just need to decide which one.\r\n\r\n$format:\r\n\r\n- PRO: does the most needed thing, very straightforward: run the formatters and updates the viewValue\r\n- CON: developer must run $render manually\r\n- CON: empty classes are set even though the DOM is not updated. Could be moved to $render()\r\n- CON: no equivalent on the view -> model side (inconsistent API)\r\n\r\n$setModelValue\r\n- PRO: equivalent to $setViewValue, runs the whole pipeline\r\n- CON: unintuitive that the function argument should / must be set to the current $modelValue, so the control does not get out of sync with the scope (same behavior as $setViewValue though)\r\n- CON: only runs $render if the viewValue has actually changed.\r\n- CON: always runs the validation, even though it might not be necessary\r\n\r\nBoth methods can handle the basic case, where an app developer wants to run the formatters the view -> model pipeline has been run, see https://github.com/angular/angular.js/issues/3407 or https://github.com/angular/angular.js/pull/5221\r\n\r\nI personally tend to introduce `$format` as it has the smaller surface area and introduces fewer side effects. The full model -> view pipeline is not really needed for most cases.\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "current", "no", "way", "manual", "run", "model", "view", "pipelin", "formatt", "**what", "new", "behavior", "thi", "featur", "chang", "api", "run", "whole", "pipelin", "formatt", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "pr", "includ", "both", "format", "setmodelvalu", "set", "model", "valu", "function", "think", "onli", "one", "need", "we", "just", "need", "decid", "which", "one", "format", "pro", "most", "need", "thing", "veri", "straightforward", "run", "formatt", "updat", "viewvalu", "view", "valu", "con", "develop", "must", "run", "render", "manual", "con", "empti", "class", "are", "set", "even", "though", "dom", "not", "updat", "could", "move", "render", "con", "no", "equival", "view", "model", "side", "inconsist", "api", "setmodelvalu", "set", "model", "valu", "pro", "equival", "setviewvalu", "set", "view", "valu", "run", "whole", "pipelin", "con", "unintuit", "that", "function", "argument", "must", "set", "current", "modelvalu", "model", "valu", "so", "control", "not", "get", "out", "sync", "scope", "same", "behavior", "as", "setviewvalu", "set", "view", "valu", "though", "con", "onli", "run", "render", "viewvalu", "view", "valu", "ha", "actual", "chang", "con", "alway", "run", "valid", "even", "though", "it", "might", "not", "necessari", "both", "method", "handl", "basic", "case", "where", "app", "develop", "want", "run", "formatt", "view", "model", "pipelin", "ha", "been", "run", "see", "http", "github", "com", "angular", "angular", "js", "issu", "3407", "or", "http", "github", "com", "angular", "angular", "js", "pull", "5221", "person", "tend", "introduc", "format", "as", "it", "ha", "smaller", "surfac", "area", "introduc", "fewer", "side", "effect", "full", "model", "view", "pipelin", "not", "realli", "need", "most", "case"], "title_sim": [0.04608813354249887], "body_sim": [0.05113177933746104], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.05137917948780269, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2282}, {"A_title": "feat($componentController): provide isolated scope if none is passed", "A_clean_title": ["feat", "componentcontrol", "compon", "control", "provid", "isol", "scope", "none", "pass"], "B_title": "test(modules): fix module tests which got disabled by ngMobile", "B_clean_title": ["test", "modul", "fix", "modul", "test", "which", "got", "disabl", "by", "ngmobil", "ng", "mobil"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nfeat\n\n**What is the current behavior? (You can also link to an open issue here)**\n\none must always provide a scope for the $componentController helper, which is annoying\n\n**What is the new behavior (if this is a feature change)?**\n\nnow an isolated child of rootScope is created and used if no scope is provided\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "one", "must", "alway", "provid", "scope", "componentcontrol", "compon", "control", "helper", "which", "annoy", "**what", "new", "behavior", "thi", "featur", "chang", "now", "isol", "child", "rootscop", "root", "scope", "creat", "use", "no", "scope", "provid", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "When ngMobile was merged in, we accidentaly included angular-scenario.js\nin the test file set for modules. Loading this file overrode jasmine's\n`it` and `describe` global functions which essentially disabled all of\n~200 unit tests for wrapped modules.\n\nThis change refactors the code to run the wrapped module tests.\n\nI had to extract browserTrigger from scenario runner in order to achieve\nthis without code duplication.\n", "B_clean_body": ["when", "ngmobil", "ng", "mobil", "wa", "merg", "we", "accidentali", "includ", "angular", "scenario", "js", "test", "file", "set", "modul", "load", "thi", "file", "overrod", "jasmine'", "it", "describ", "global", "function", "which", "essenti", "disabl", "all", "~200", "unit", "test", "wrap", "modul", "thi", "chang", "refactor", "code", "run", "wrap", "modul", "test", "had", "extract", "browsertrigg", "browser", "trigger", "scenario", "runner", "order", "achiev", "thi", "without", "code", "duplic"], "title_sim": [0.02768526167773686], "body_sim": [0.14426972152586748], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.028768584722364824, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1090}, {"A_title": "docs(input[number]): note issue with large number and step validation", "A_clean_title": ["doc", "input", "number", "note", "issu", "larg", "number", "step", "valid"], "B_title": "refactor($browser): remove workaround for old ff bug", "B_clean_title": ["refactor", "browser", "remov", "workaround", "old", "ff", "bug"], "A_body": "Closes #16486\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["close", "16486", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "- https://bugzilla.mozilla.org/show_bug.cgi?id=407172 was fixed in ff 40\r\n\r\nFF 40 is probably old enough we can remove this?", "B_clean_body": ["http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=407172", "wa", "fix", "ff", "40", "ff", "40", "probabl", "old", "enough", "we", "remov", "thi"], "title_sim": [0.02154895679076672], "body_sim": [0.3441062201009177], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 335}, {"A_title": "chore(karma): use dots reporter by default", "A_clean_title": ["chore", "karma", "use", "dot", "report", "by", "default"], "B_title": "fix(AngularPublic): expose missing angular public methods", "B_clean_title": ["fix", "angularpubl", "angular", "public", "expos", "miss", "angular", "public", "method"], "A_body": "dots is nicer for local testing, as you usually don't run a\r\nton of test suites, and it's also more readable if you skip\r\nmany tests (i.e. run isolated tests)\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["dot", "nicer", "local", "test", "as", "you", "usual", "n't", "run", "ton", "test", "suit", "it", "'s", "also", "more", "readabl", "you", "skip", "mani", "test", "run", "isol", "test", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "- expose lowercase, uppercase and isDate to angular public api\n- remove unnecessary extention of jqLite at an early stage\n", "B_clean_body": ["expos", "lowercas", "uppercas", "isdat", "date", "angular", "public", "api", "remov", "unnecessari", "extent", "jqlite", "jq", "lite", "at", "earli", "stage"], "title_sim": [0.021432217468569426], "body_sim": [0.04117939322729675], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2178}, {"A_title": "[Style] Docs gulpfile.js - Spacing Consistency", "A_clean_title": ["style", "doc", "gulpfil", "js", "space", "consist"], "B_title": "Fix: set $submitted on child forms when form is submitted", "B_clean_title": ["fix", "set", "submit", "child", "form", "when", "form", "submit"], "A_body": "Updated gulpfile.js in Docs so that spacing is consistency.\n", "A_clean_body": ["updat", "gulpfil", "js", "doc", "so", "that", "space", "consist"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen submitting a form, $submitted is not set on child forms\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI don't think so.\r\nNo one in #10071 said that his might be breaking.\r\nAngularJS doesn't have nested form isolation, and ngForm is only for grouping sub-forms. I think that it's expected that a submission event will affect all sub-forms.\r\nProbably: https://github.com/angular/angular.js/pull/11023#issuecomment-143162373\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\nFollow up to https://github.com/angular/angular.js/pull/11023", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "submit", "form", "submit", "not", "set", "child", "form", "**doe", "thi", "pr", "introduc", "break", "chang", "n't", "think", "so", "no", "one", "10071", "said", "that", "hi", "might", "break", "angularj", "angular", "js", "n't", "have", "nest", "form", "isol", "ngform", "ng", "form", "onli", "group", "sub", "form", "think", "that", "it", "'s", "expect", "that", "submiss", "event", "will", "affect", "all", "sub", "form", "probabl", "http", "github", "com", "angular", "angular", "js", "pull", "11023", "issuecom", "143162373", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "follow", "up", "http", "github", "com", "angular", "angular", "js", "pull", "11023"], "title_sim": [-0.022061271374999792], "body_sim": [0.3849442736590828], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 534}, {"A_title": "chore(doc-gen, docs-app): generate version for stable snapshot", "A_clean_title": ["chore", "doc", "gen", "doc", "app", "gener", "version", "stabl", "snapshot"], "B_title": "fix($parse): always re-evaluate filters within literals when an input is an object", "B_clean_title": ["fix", "pars", "alway", "re", "evalu", "filter", "within", "liter", "when", "input", "object"], "A_body": "The \"stable snapshot\" is based on the latest commit on the current stable\r\nbranch, i.e. a preview of the next patch version.\r\n\r\nNext thing:\r\n- update the Firebase deployment so that on the branch with distTag = latest gets deployed to docs.angularjs.org and as to gcs as snapshot-stable\r\n\r\n\r\n", "A_clean_body": ["stabl", "snapshot", "base", "latest", "commit", "current", "stabl", "branch", "preview", "next", "patch", "version", "next", "thing", "updat", "firebas", "deploy", "so", "that", "branch", "disttag", "dist", "tag", "latest", "get", "deploy", "doc", "angularj", "org", "as", "gc", "as", "snapshot", "stabl"], "B_body": "Fixes #15964 \r\n\r\nThis changes the [compareObjectIdentity](https://github.com/angular/angular.js/blob/v1.6.4/src/ng/parse.js#L1785) flag from being per-expression to per-input.  This allows inputs to filters to not compare object entity, but other inputs such as `- x` or `{x: x}` to only compare object entity.  This also expands this `compareObjectIdentity = true` beyond just object literals.", "B_clean_body": ["fix", "15964", "thi", "chang", "compareobjectident", "compar", "object", "ident", "http", "js", "github", "com", "angular", "angular", "js", "blob", "v1", "src", "ng", "pars", "l1785", "flag", "be", "per", "express", "per", "input", "thi", "allow", "input", "filter", "not", "compar", "object", "entiti", "but", "other", "input", "such", "as", "or", "onli", "compar", "object", "entiti", "thi", "also", "expand", "thi", "compareobjectident", "compar", "object", "ident", "true", "beyond", "just", "object", "liter"], "title_sim": [-0.002549447967552031], "body_sim": [0.1269973577393141], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02980448275289346, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 153}, {"A_title": "fix(guide) broken title overflow in navlist", "A_clean_title": ["fix", "guid", "broken", "titl", "overflow", "navlist"], "B_title": "fix($sniffer): report history false on Android < 4", "B_clean_title": ["fix", "sniffer", "report", "histori", "fals", "android"], "A_body": "## Before\n\n![screen shot 2013-08-30 at 1 25 41 pm](https://f.cloud.github.com/assets/1016365/1060537/8829f31a-11b3-11e3-8620-9751954915f4.png)\n## After\n\n![screen shot 2013-08-30 at 1 25 31 pm](https://f.cloud.github.com/assets/1016365/1060540/8b6e9efe-11b3-11e3-8777-fa52f5236a74.png)\n", "A_clean_body": ["befor", "screen", "shot", "2013", "08", "30", "at", "25", "41", "pm", "http", "11b3", "11e3", "8620", "cloud", "github", "9751954915f4", "png", "com", "asset", "1016365", "1060537", "8829f31a", "after", "screen", "shot", "2013", "08", "30", "at", "25", "31", "pm", "http", "11b3", "11e3", "8777", "cloud", "github", "fa52f5236a74", "png", "com", "asset", "1016365", "1060540", "8b6e9ef"], "B_body": "Android has history.pushState, but it does not update the location correctly:\nhttp://code.google.com/p/android/issues/detail?id=17471\n\nCloses #904\n", "B_clean_body": ["android", "ha", "histori", "pushstat", "push", "state", "but", "it", "not", "updat", "locat", "correctli", "http", "googl", "code", "com", "android", "issu", "detail", "id=17471", "close", "904"], "title_sim": [-0.06791744412783501], "body_sim": [0.11743427071038091], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 472}, {"A_title": "test(orderBy): add test cases for ordering array-like objects", "A_clean_title": ["test", "orderbi", "order", "by", "add", "test", "case", "order", "array", "like", "object"], "B_title": "chore(travis: fix deployment condition to include tagged commits", "B_clean_title": ["chore", "travi", "fix", "deploy", "condit", "includ", "tag", "commit"], "A_body": "(Testing #9942 before merging)\n", "A_clean_body": ["test", "9942", "befor", "merg"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.07471643131258952], "body_sim": [0.14651024526181405], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1109}, {"A_title": "fix($sanitize): prevent clobbered elements from freezing the browser", "A_clean_title": ["fix", "sanit", "prevent", "clobber", "element", "freez", "browser"], "B_title": "docs($location): describe your change...", "B_clean_title": ["doc", "locat", "describ", "your", "chang"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nbrowser can be frozen with bad HTML\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nan exception is thrown instead\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browser", "frozen", "bad", "html", "**what", "new", "behavior", "thi", "featur", "chang", "except", "thrown", "instead", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\ninaccurate docs\n\n**What is the new behavior (if this is a feature change)?**\ncorrect docs\n\n**Does this PR introduce a breaking change?**\nno\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\ndocs for return of path() inaccurately describe the function\u2019s return when a value is passed in.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "inaccur", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "correct", "doc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "doc", "return", "path", "inaccur", "describ", "function", "return", "when", "valu", "pass"], "title_sim": [-0.022885435247035884], "body_sim": [0.9722151387765494], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.013958649158684415, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 286}, {"A_title": "wip: feat(ngModel): run formatters / setModelValue", "A_clean_title": ["wip", "feat", "ngmodel", "ng", "model", "run", "formatt", "setmodelvalu", "set", "model", "valu"], "B_title": "fix(jqLite): Chrome specific issue for `<select required>`", "B_clean_title": ["fix", "jqlite", "jq", "lite", "chrome", "specif", "issu", "select", "requir"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's currently no way to manually run the model -> view pipeline / formatters\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAn API to run the whole pipeline / the formatters is introduced.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nThe PR includes both a `$format` and a `$setModelValue` function. I think only one is needed, we just need to decide which one.\r\n\r\n$format:\r\n\r\n- PRO: does the most needed thing, very straightforward: run the formatters and updates the viewValue\r\n- CON: developer must run $render manually\r\n- CON: empty classes are set even though the DOM is not updated. Could be moved to $render()\r\n- CON: no equivalent on the view -> model side (inconsistent API)\r\n\r\n$setModelValue\r\n- PRO: equivalent to $setViewValue, runs the whole pipeline\r\n- CON: unintuitive that the function argument should / must be set to the current $modelValue, so the control does not get out of sync with the scope (same behavior as $setViewValue though)\r\n- CON: only runs $render if the viewValue has actually changed.\r\n- CON: always runs the validation, even though it might not be necessary\r\n\r\nBoth methods can handle the basic case, where an app developer wants to run the formatters the view -> model pipeline has been run, see https://github.com/angular/angular.js/issues/3407 or https://github.com/angular/angular.js/pull/5221\r\n\r\nI personally tend to introduce `$format` as it has the smaller surface area and introduces fewer side effects. The full model -> view pipeline is not really needed for most cases.\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "current", "no", "way", "manual", "run", "model", "view", "pipelin", "formatt", "**what", "new", "behavior", "thi", "featur", "chang", "api", "run", "whole", "pipelin", "formatt", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "pr", "includ", "both", "format", "setmodelvalu", "set", "model", "valu", "function", "think", "onli", "one", "need", "we", "just", "need", "decid", "which", "one", "format", "pro", "most", "need", "thing", "veri", "straightforward", "run", "formatt", "updat", "viewvalu", "view", "valu", "con", "develop", "must", "run", "render", "manual", "con", "empti", "class", "are", "set", "even", "though", "dom", "not", "updat", "could", "move", "render", "con", "no", "equival", "view", "model", "side", "inconsist", "api", "setmodelvalu", "set", "model", "valu", "pro", "equival", "setviewvalu", "set", "view", "valu", "run", "whole", "pipelin", "con", "unintuit", "that", "function", "argument", "must", "set", "current", "modelvalu", "model", "valu", "so", "control", "not", "get", "out", "sync", "scope", "same", "behavior", "as", "setviewvalu", "set", "view", "valu", "though", "con", "onli", "run", "render", "viewvalu", "view", "valu", "ha", "actual", "chang", "con", "alway", "run", "valid", "even", "though", "it", "might", "not", "necessari", "both", "method", "handl", "basic", "case", "where", "app", "develop", "want", "run", "formatt", "view", "model", "pipelin", "ha", "been", "run", "see", "http", "github", "com", "angular", "angular", "js", "issu", "3407", "or", "http", "github", "com", "angular", "angular", "js", "pull", "5221", "person", "tend", "introduc", "format", "as", "it", "ha", "smaller", "surfac", "area", "introduc", "fewer", "side", "effect", "full", "model", "view", "pipelin", "not", "realli", "need", "most", "case"], "B_body": "Request Type: bug, regression\n\nHow to reproduce: Look at #6828\n\nComponent(s): jqLite\n\nImpact: medium\n\nComplexity: small\n\nThis issue is related to: regression\n\nDetailed Description:\n\nWhen using Chrome and adding a `<option selected=\"selected\">` to a `<select required>` then the new added option is not selected\n\nOther Comments:\n", "B_clean_body": ["request", "type", "bug", "regress", "how", "reproduc", "look", "at", "6828", "compon", "jqlite", "jq", "lite", "impact", "medium", "complex", "small", "thi", "issu", "relat", "regress", "detail", "descript", "when", "chrome", "ad", "option", "selected=", "select", "select", "requir", "then", "new", "ad", "option", "not", "select", "other", "comment"], "title_sim": [0.01727413343402709], "body_sim": [0.1693974656452482], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0629860379030345, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1253}, {"A_title": "fix(ngOptions): override select option registration", "A_clean_title": ["fix", "ngoption", "ng", "option", "overrid", "select", "option", "registr"], "B_title": "docs(guide/Conceptual Overview): fix external api example", "B_clean_title": ["doc", "guid", "conceptu", "overview", "fix", "extern", "api", "exampl"], "A_body": "When ngOptions is present on a select, the option directive should not be able to\nregister options on the selectCtrl since this may cause errors during the\nngOptions lifecycle.\n\nThis can happen in the following cases:\n- there is a blank option below the select element, an ngModel\n  directive, an ngOptions directive and some other directive on the select\n  element, which compiles the children of the select\n  (i.e. the option elements) before ngOptions is has finished linking.\n- there is a blank option below the select element, an ngModel\n  directive, an ngOptions directive and another directive, which uses\n  templateUrl and replace:true.\n\nWhat happens is:\n- the option directive is compiled and adds an element `$destroy` listener\n  that will call `ngModel.$render` when the option element is removed.\n- when `ngOptions` processes the option, it removes the element, and\n  triggers the `$destroy` listener on the option.\n- the registered `$destroy` listener calls `$render` on `ngModel`.\n- $render calls `selectCtrl.writeValue()`, which accesses the `options`\n  object in the `ngOptions` directive.\n- Since `ngOptions` has not yet completed linking the `options` has not\n  yet been defined and we get an error.\n\nThis fix moves the registration code for the `option` directive into the\n`SelectController`, which can then be easily overridden by the `ngOptions`\ndirective as a `noop`.\n\nFixes #11685\nCloses #12972\nCloses #12968\n", "A_clean_body": ["when", "ngoption", "ng", "option", "present", "select", "option", "direct", "not", "abl", "regist", "option", "selectctrl", "select", "ctrl", "sinc", "thi", "may", "caus", "error", "dure", "ngoption", "ng", "option", "lifecycl", "thi", "happen", "follow", "case", "there", "blank", "option", "below", "select", "element", "ngmodel", "ng", "model", "direct", "ngoption", "ng", "option", "direct", "some", "other", "direct", "select", "element", "which", "compil", "children", "select", "option", "element", "befor", "ngoption", "ng", "option", "ha", "finish", "link", "there", "blank", "option", "below", "select", "element", "ngmodel", "ng", "model", "direct", "ngoption", "ng", "option", "direct", "anoth", "direct", "which", "use", "templateurl", "templat", "url", "replac", "true", "what", "happen", "option", "direct", "compil", "add", "element", "destroy", "listen", "that", "will", "call", "ngmodel", "ng", "model", "render", "when", "option", "element", "remov", "when", "ngoption", "ng", "option", "process", "option", "it", "remov", "element", "trigger", "destroy", "listen", "option", "regist", "destroy", "listen", "call", "render", "ngmodel", "ng", "model", "render", "call", "selectctrl", "writevalu", "select", "ctrl", "write", "valu", "which", "access", "option", "object", "ngoption", "ng", "option", "direct", "sinc", "ngoption", "ng", "option", "ha", "not", "yet", "complet", "link", "option", "ha", "not", "yet", "been", "defin", "we", "get", "error", "thi", "fix", "move", "registr", "code", "option", "direct", "into", "selectcontrol", "select", "control", "which", "then", "easili", "overridden", "by", "ngoption", "ng", "option", "direct", "as", "noop", "fix", "11685", "close", "12972", "close", "12968"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nExample is broken in the snapshot because of changes to JSONP\n\n**Other information**:\n\nThe example will still be broken when opened in a plnkr, because they use the stable version instead of the snapshot.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "broken", "snapshot", "becaus", "chang", "jsonp", "**other", "information**", "exampl", "will", "still", "broken", "when", "open", "plnkr", "becaus", "they", "use", "stabl", "version", "instead", "snapshot"], "title_sim": [0.0013623803498337879], "body_sim": [0.07523703341805053], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 391}, {"A_title": "Updating the provider documentation", "A_clean_title": ["updat", "provid", "document"], "B_title": "Hosting: fix robots issues", "B_clean_title": ["host", "fix", "robot", "issu"], "A_body": "Highlighted the Best Practices section, and took the styling from the Services doc. I also removed some superfluous wording that was in the \"Provider Recipe\"\n", "A_clean_body": ["highlight", "best", "practic", "section", "took", "style", "servic", "doc", "also", "remov", "some", "superflu", "word", "that", "wa", "provid", "recip"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.06077528210010488], "body_sim": [0.11292329215768157], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1293}, {"A_title": "fix:SiteMap(docs) in SiteMap.js: SiteMap.xml was wrongly generated", "A_clean_title": ["fix", "sitemap", "site", "map", "doc", "sitemap", "js", "site", "map", "sitemap", "xml", "site", "map", "wa", "wrongli", "gener"], "B_title": "feat(ngCookies): support sameSite option", "B_clean_title": ["feat", "ngcooki", "ng", "cooki", "support", "samesit", "same", "site", "option"], "A_body": "doc.id should be used instead of doc.name, otherwise links are wrongly\ngenerated\n", "A_clean_body": ["doc", "id", "use", "instead", "doc", "name", "otherwis", "link", "are", "wrongli", "gener"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature for issue https://github.com/angular/angular.js/issues/16543\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nsupport sameSite option for ngCookie\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16543", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "support", "samesit", "same", "site", "option", "ngcooki", "ng", "cooki", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.03289468110003407], "body_sim": [0.24121696259644945], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2503}, {"A_title": "docs(guide): add note about value attribute", "A_clean_title": ["doc", "guid", "add", "note", "about", "valu", "attribut"], "B_title": "build(*): update Node from 6 to 8, update Yarn", "B_clean_title": ["build", "updat", "node", "updat", "yarn"], "A_body": "- Add note about value attribute for the progress tag with IE\n\nThis should address #7218.\n", "A_clean_body": ["add", "note", "about", "valu", "attribut", "progress", "tag", "ie", "thi", "address", "7218"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBuild-related.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nWe use Node 6 & an old Yarn version.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nWe use Node 8 & a new Yarn version.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\nAngular (2+) switched to Node 8 and so should we.\r\n\r\nRef angular/angular#20807\r\nRef angular/angular#20832\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "build", "relat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "use", "node", "old", "yarn", "version", "**what", "new", "behavior", "thi", "featur", "chang", "we", "use", "node", "new", "yarn", "version", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**", "angular", "2+", "switch", "node", "so", "we", "ref", "angular", "angular", "20807", "ref", "angular", "angular", "20832"], "title_sim": [0.09155529168833992], "body_sim": [0.04848195707505294], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 544}, {"A_title": "test(ng-non-bindable): test sibling bindings", "A_clean_title": ["test", "ng", "non", "bindabl", "test", "sibl", "bind"], "B_title": "refactor($parse): remove the support of JSON parsing mode", "B_clean_title": ["refactor", "pars", "remov", "support", "json", "pars", "mode"], "A_body": "Ref: https://github.com/angular/angular.dart/blob/master/test/directives/ng_non_bindable_spec.dart\n", "A_clean_body": ["ref", "http", "dart", "github", "com", "angular", "angular", "non", "bindabl", "spec", "dart", "blob", "master", "test", "direct", "ng"], "B_body": "It's a feature that isn't exposed to the public, and is no longer used internally (not even tested).\n\nSee #7540\n\nAs opposed to #7543, I considered `literal` and `constant` as two distinct concepts.\n", "B_clean_body": ["it", "'s", "featur", "that", "n't", "expos", "public", "no", "longer", "use", "intern", "not", "even", "test", "see", "7540", "as", "oppos", "7543", "consid", "liter", "constant", "as", "two", "distinct", "concept"], "title_sim": [0.029826312689453852], "body_sim": [0.12821274374258054], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 244}, {"A_title": "The Angular Docs do not show the restrictions", "A_clean_title": ["angular", "doc", "not", "show", "restrict"], "B_title": "refactor(fromJson): Remove error() and just throw", "B_clean_title": ["refactor", "fromjson", "json", "remov", "error", "just", "throw"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe Directive ng-require does not show the correct restrictions in the USAGE section.\n\n**What is the new behavior (if this is a feature change)?**\n\nIn the USAGE section it will show up as an attribute.\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [X] Tests for the changes have been added (for bug fixes / features)\n- [X] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nAdded  \\* @restrict A so it will show the correct restrictions in the docs\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "direct", "ng", "requir", "not", "show", "correct", "restrict", "usag", "section", "**what", "new", "behavior", "thi", "featur", "chang", "usag", "section", "it", "will", "show", "up", "as", "attribut", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "ad", "restrict", "so", "it", "will", "show", "correct", "restrict", "doc"], "B_body": "It's more likely you are using angular.fromJson() inside Angular world, which means you get proper\nexception handling by $exceptionHandler.\n\nThere is no point to explicitly push it to console and it causes memory leaks on most browsers \n(tried Chrome stable/canary, Safari, FF).\n", "B_clean_body": ["it", "'s", "more", "like", "you", "are", "angular", "fromjson", "json", "insid", "angular", "world", "which", "mean", "you", "get", "proper", "except", "handl", "by", "exceptionhandl", "except", "handler", "there", "no", "point", "explicitli", "push", "it", "consol", "it", "caus", "memori", "leak", "most", "browser", "tri", "chrome", "stabl", "canari", "safari", "ff"], "title_sim": [0.013644133906737296], "body_sim": [0.20565528885019171], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1513}, {"A_title": "docs(app): adding a mobile first breadcrumb solution", "A_clean_title": ["doc", "app", "ad", "mobil", "first", "breadcrumb", "solut"], "B_title": "fix($parse): unwrap promise when setting a field", "B_clean_title": ["fix", "pars", "unwrap", "promis", "when", "set", "field"], "A_body": "- added a simple breadcrumb solution that works with all mobile devices.\n  - just a back to next highest level of api documentation\n  - could add in some way to show normal breadcrumbs if on desktop, if needed or wanted.\n- added in the old version picker to the top of the left sidebar. No styling just yet. Was going to mess with the left sidebar, but wanted to see if you all like it how it is? I think it should be pinned open all the time, unless on mobile which is default for angular-material, from what I have seen.\n", "A_clean_body": ["ad", "simpl", "breadcrumb", "solut", "that", "work", "all", "mobil", "devic", "just", "back", "next", "highest", "level", "api", "document", "could", "add", "some", "way", "show", "normal", "breadcrumb", "desktop", "need", "or", "want", "ad", "old", "version", "picker", "top", "left", "sidebar", "no", "style", "just", "yet", "wa", "go", "mess", "left", "sidebar", "but", "want", "see", "you", "all", "like", "it", "how", "it", "think", "it", "pin", "open", "all", "time", "unless", "mobil", "which", "default", "angular", "materi", "what", "have", "seen"], "B_body": "This fixes an inconsistency where you can't call the setter function\nwhen the expression resolves to a top level field name on a promise.\n\nSetting a field on an unresolved promise will throw an exception.  (This\nshouldn't really happen in your template/js code and points to a\nprogramming error.)\n\nCloses #1827\n", "B_clean_body": ["thi", "fix", "inconsist", "where", "you", "ca", "n't", "call", "setter", "function", "when", "express", "resolv", "top", "level", "field", "name", "promis", "set", "field", "unresolv", "promis", "will", "throw", "except", "thi", "n't", "realli", "happen", "your", "templat", "js", "code", "point", "program", "error", "close", "1827"], "title_sim": [-0.001155271053285343], "body_sim": [0.2111367841529674], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 509}, {"A_title": "feat($swipe): Refactor swipe logic from ngSwipe to $swipe service.", "A_clean_title": ["feat", "swipe", "refactor", "swipe", "logic", "ngswipe", "ng", "swipe", "swipe", "servic"], "B_title": "refactor($injector): remove the Chrome stringification hack", "B_clean_title": ["refactor", "injector", "remov", "chrome", "stringif", "hack"], "A_body": "This new service is used by the ngSwipeLeft/Right directives, and by the\nseparate ngCarousel and swipe-to-delete directives which are under\ndevelopment.\n", "A_clean_body": ["thi", "new", "servic", "use", "by", "ngswipeleft", "right", "ng", "swipe", "left", "direct", "by", "separ", "ngcarousel", "ng", "carousel", "swipe", "delet", "direct", "which", "are", "under", "develop"], "B_body": "The Chrome stringification hack added in afcedff34c8a44dda0d558d9d6337962f5f03d7b\r\nis no longer needed. I verified that both of the commented out tests pass\r\non Chrome 56.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's a workaround in place for Chrome 50-51. Current stable version is 56.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["chrome", "stringif", "hack", "ad", "afcedff34c8a44dda0d558d9d6337962f5f03d7b", "no", "longer", "need", "verifi", "that", "both", "comment", "out", "test", "pass", "chrome", "56", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "workaround", "place", "chrome", "50", "51", "current", "stabl", "version", "56", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.4835250958301939], "body_sim": [0.13653096301462558], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1371}, {"A_title": "fix(date): parse string input as local time unless TZ is specified", "A_clean_title": ["fix", "date", "pars", "string", "input", "as", "local", "time", "unless", "tz", "specifi"], "B_title": "chore(docs): update to lunr-0.5.12", "B_clean_title": ["chore", "doc", "updat", "lunr", "12"], "A_body": "previously we were always parsing the string input as UTC which cased issues like:\n\n{{ '2012-04-01' | date:'d MMM yyyy' }} renders as 31 Mar 2012\n\nBREAKING CHANGE: string input without timezone info is now parsed as local time/date\n\nCloses #847\n", "A_clean_body": ["previous", "we", "were", "alway", "pars", "string", "input", "as", "utc", "which", "case", "issu", "like", "'2012", "04", "01", "date", "'d", "mmm", "yyyi", "render", "as", "31", "mar", "2012", "break", "chang", "string", "input", "without", "timezon", "info", "now", "pars", "as", "local", "time", "date", "close", "847"], "B_body": "This improves the search results for certain terms. Compare the results for **scope**:\nCurrently:\n![search-scope-current](https://cloud.githubusercontent.com/assets/1153097/10083876/adc9c410-6300-11e5-8781-73cb2046f548.PNG)\n\nAfter the update:\n![search-scope-new](https://cloud.githubusercontent.com/assets/1153097/10083878/b0bf0ff4-6300-11e5-8b9a-7e2c87920a73.PNG)\n", "B_clean_body": ["thi", "improv", "search", "result", "certain", "term", "compar", "result", "**scope**", "current", "search", "scope", "current", "http", "6300", "11e5", "8781", "githubusercont", "73cb2046f548", "png", "cloud", "com", "asset", "1153097", "10083876", "adc9c410", "after", "updat", "search", "scope", "new", "http", "6300", "11e5", "8b9a", "githubusercont", "7e2c87920a73", "png", "cloud", "com", "asset", "1153097", "10083878", "b0bf0ff4"], "title_sim": [0.0508785378061043], "body_sim": [0.011792853567848214], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 989}, {"A_title": "fix(ngAnimate): let $animate.cancel() reject the runner promise", "A_clean_title": ["fix", "nganim", "ng", "anim", "let", "anim", "cancel", "reject", "runner", "promis"], "B_title": "docs(guide/External Resources): describe your change...", "B_clean_title": ["doc", "guid", "extern", "resourc", "describ", "your", "chang"], "A_body": "<!-- General PR submission guidelines ../blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #14204\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThere is another aspect to this problem that is not fixed by this PR:\r\n2. Cancelling css animations should immediately abort the animation and set the DOM / css to its final state. This is currently broken in FF and IE11 (at least), see https://bugzilla.mozilla.org/show_bug.cgi?id=1425014. This must be tested with e2e test. Fixing this is not a BC.\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "md", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14204", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "blob", "master", "develop", "commit", "fix", "featur", "doc", "md", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "there", "anoth", "aspect", "thi", "problem", "that", "not", "fix", "by", "thi", "pr", "cancel", "css", "anim", "immedi", "abort", "anim", "set", "dom", "css", "it", "final", "state", "thi", "current", "broken", "ff", "ie11", "at", "least", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=1425014", "thi", "must", "test", "e2e", "test", "fix", "thi", "not", "bc"], "B_body": "Deprecating content @ deleted URL\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRemoving URL \r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ X] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["deprec", "content", "delet", "url", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "remov", "url", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.005108020532113322], "body_sim": [0.878782613701536], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 28}, {"A_title": "chore(*): update protractor", "A_clean_title": ["chore", "updat", "protractor"], "B_title": "fix($parse): unwrap promise when setting a field", "B_clean_title": ["fix", "pars", "unwrap", "promis", "when", "set", "field"], "A_body": "Update protractor to latest 5.1.2 to make it work with Chrome 58 on Jenkins.\r\nThis version is not compatible with FF 53 and directConnect, but this should be irrelevant as protractor on Travis does not use directConnect and we don't test FF on Jenkins.", "A_clean_body": ["updat", "protractor", "latest", "make", "it", "work", "chrome", "58", "jenkin", "thi", "version", "not", "compat", "ff", "53", "directconnect", "direct", "connect", "but", "thi", "irrelev", "as", "protractor", "travi", "not", "use", "directconnect", "direct", "connect", "we", "n't", "test", "ff", "jenkin"], "B_body": "This fixes an inconsistency where you can't call the setter function\nwhen the expression resolves to a top level field name on a promise.\n\nSetting a field on an unresolved promise will throw an exception.  (This\nshouldn't really happen in your template/js code and points to a\nprogramming error.)\n\nCloses #1827\n", "B_clean_body": ["thi", "fix", "inconsist", "where", "you", "ca", "n't", "call", "setter", "function", "when", "express", "resolv", "top", "level", "field", "name", "promis", "set", "field", "unresolv", "promis", "will", "throw", "except", "thi", "n't", "realli", "happen", "your", "templat", "js", "code", "point", "program", "error", "close", "1827"], "title_sim": [0.02502217213036287], "body_sim": [0.23076904089505845], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1397}, {"A_title": "docs(faq): document the AngularJS/jqLite deprecation strategy", "A_clean_title": ["doc", "faq", "document", "angularj", "jqlite", "angular", "js", "jq", "lite", "deprec", "strategi"], "B_title": "Add event info to animation event callbacks", "B_clean_title": ["add", "event", "info", "anim", "event", "callback"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe deprecation strategy is not specified.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe deprecation strategy is specified.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\nFixes #15282", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "deprec", "strategi", "not", "specifi", "**what", "new", "behavior", "thi", "featur", "chang", "deprec", "strategi", "specifi", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "fix", "15282"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nthere's no information in animation event calls\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\ninfo is added\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "no", "inform", "anim", "event", "call", "**what", "new", "behavior", "thi", "featur", "chang", "info", "ad", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.0044863439641956455], "body_sim": [0.9006808457152521], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 476}, {"A_title": "feat(ngModel): provide ng-empty and ng-not-empty CSS classes", "A_clean_title": ["feat", "ngmodel", "ng", "model", "provid", "ng", "empti", "ng", "not", "empti", "css", "class"], "B_title": "chore(doc-gen, docs-app): generate version for stable snapshot", "B_clean_title": ["chore", "doc", "gen", "doc", "app", "gener", "version", "stabl", "snapshot"], "A_body": "I believe that this feature should be enough to fix #10050\n", "A_clean_body": ["believ", "that", "thi", "featur", "enough", "fix", "10050"], "B_body": "The \"stable snapshot\" is based on the latest commit on the current stable\r\nbranch, i.e. a preview of the next patch version.\r\n\r\nNext thing:\r\n- update the Firebase deployment so that on the branch with distTag = latest gets deployed to docs.angularjs.org and as to gcs as snapshot-stable\r\n\r\n\r\n", "B_clean_body": ["stabl", "snapshot", "base", "latest", "commit", "current", "stabl", "branch", "preview", "next", "patch", "version", "next", "thing", "updat", "firebas", "deploy", "so", "that", "branch", "disttag", "dist", "tag", "latest", "get", "deploy", "doc", "angularj", "org", "as", "gc", "as", "snapshot", "stabl"], "title_sim": [0.08951859474405402], "body_sim": [0.17386515625815274], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.009997529140136416, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 764}, {"A_title": "docs(contributing): fix indentation for proper Markdown syntax", "A_clean_title": ["doc", "contribut", "fix", "indent", "proper", "markdown", "syntax"], "B_title": "fix($sce): do not assume $document[0] exists", "B_clean_title": ["fix", "sce", "not", "assum", "document", "exist"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nMarkdown isn't displayed properly.\n\n**What is the new behavior (if this is a feature change)?**\nMarkdown is displayed properly.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "markdown", "n't", "display", "properli", "**what", "new", "behavior", "thi", "featur", "chang", "markdown", "display", "properli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "this is important so that people can mock $window without having to add stuff that angular uses internally into it\n\nCloses #9661\n", "B_clean_body": ["thi", "import", "so", "that", "peopl", "mock", "window", "without", "have", "add", "stuff", "that", "angular", "use", "intern", "into", "it", "close", "9661"], "title_sim": [0.03840719751142269], "body_sim": [0.18881373872076748], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 661}, {"A_title": "fix(ngModel): use keydown/change events on IE9 instead of input", "A_clean_title": ["fix", "ngmodel", "ng", "model", "use", "keydown", "chang", "event", "ie9", "instead", "input"], "B_title": "docs(guide/Developer Guide): Update twitter handle", "B_clean_title": ["doc", "guid", "develop", "guid", "updat", "twitter", "handl"], "A_body": "On IE9 the input event is not fired when backspace or delete key are pressed or when\ncut is performed. This makes listening on the input event unreliable and therefore\nit's better for us to just use keydown/change events instead.\n\nCloses #879\n", "A_clean_body": ["ie9", "input", "event", "not", "fire", "when", "backspac", "or", "delet", "key", "are", "press", "or", "when", "cut", "perform", "thi", "make", "listen", "input", "event", "unreli", "therefor", "it", "'s", "better", "us", "just", "use", "keydown", "chang", "event", "instead", "close", "879"], "B_body": "Replaced the old Angular twitter handle with the new one.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["replac", "old", "angular", "twitter", "handl", "new", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.13704872543096297], "body_sim": [0.0819075236470286], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1798}, {"A_title": "Chore travis split unit", "A_clean_title": ["chore", "travi", "split", "unit"], "B_title": "fix(input): correctly handle invalid model values for `input[date/time/\u2026...", "B_clean_title": ["fix", "input", "correctli", "handl", "invalid", "model", "valu", "input", "date", "time"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "...]`\n\nSimilar to `input[number]` Angular will throw if the model value\nfor a `input[date]` is not a `Date` object.\nFor `Invalid Date`s (dates who\u2019s `getTime()` is `NaN`) `input[date]` \nwill render an empty string.\n\nCloses #8949\n", "B_clean_body": ["similar", "input", "number", "angular", "will", "throw", "model", "valu", "input", "date", "not", "date", "object", "invalid", "date", "date", "who", "gettim", "get", "time", "nan", "na", "input", "date", "will", "render", "empti", "string", "close", "8949"], "title_sim": [-0.01474772438527552], "body_sim": [0.01926416882312423], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.006815614203991397, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1114}, {"A_title": "fix(ngModel): don't run parsers when executing $validate", "A_clean_title": ["fix", "ngmodel", "ng", "model", "n't", "run", "parser", "when", "execut", "valid"], "B_title": "fix($parse): Allow property names that collide with native object proper...", "B_clean_title": ["fix", "pars", "allow", "properti", "name", "that", "collid", "nativ", "object", "proper"], "A_body": "Previously, $validate would execute the parsers to obtain a\nmodelValue for validation. This was necessary, because a validator\nthat is called outside of model / view update (e.g. from an observer)\notherwise might only an undefined modelValue, because a previous\nview update has found a validation $error and set the model\nto undefined (as is tradition in angular)\n\nThis is problematic as validators that are run immediately after\nthe ngModelController initializes would parse the modelValue\nand replace the model, even though there had been no user input.\n\nThe solution is to go back to an older design: the ngModelController\nwill now internally record the $$rawModelValue. This means a model\nor view update will store the set / parsed modelValue regardless\nof validity, that is, it will never set it to undefined because of\nvalidation errors.\n\nWhen $validate is called, the $$rawModelValue will passed to the\nvalidators. If the validity has changed, the usual behavior is kept:\nif it became invalid, set the model to undefined, if valid,\nrestore the last available modelValue - the $$rawModelValue.\n\nAdditionally, $validate will only update the model when the validity\nchanged. This is to prevent setting initially invalid models other\nthan undefined to undefined (see #9063)\n\nFixes: #9063\nFixes: #9959\nFixes: #9996\nFixes: #10025\n\nCloses: #9890\nCloses: #9913\nCloses: #9997 \n\nBonus: the commit which introduced parsing when validating (I actually wanted $$invalidModelValue to be removed, oh well): https://github.com/angular/angular.js/commit/9ad7d745ab5f6f8f43b51cacd7a238df9562246f\n\n@caitp @petebacondarwin @lgalfaso \n", "A_clean_body": ["previous", "valid", "would", "execut", "parser", "obtain", "modelvalu", "model", "valu", "valid", "thi", "wa", "necessari", "becaus", "valid", "that", "call", "outsid", "model", "view", "updat", "observ", "otherwis", "might", "onli", "undefin", "modelvalu", "model", "valu", "becaus", "previou", "view", "updat", "ha", "found", "valid", "error", "set", "model", "undefin", "as", "tradit", "angular", "thi", "problemat", "as", "valid", "that", "are", "run", "immedi", "after", "ngmodelcontrol", "ng", "model", "control", "initi", "would", "pars", "modelvalu", "model", "valu", "replac", "model", "even", "though", "there", "had", "been", "no", "user", "input", "solut", "go", "back", "older", "design", "ngmodelcontrol", "ng", "model", "control", "will", "now", "intern", "record", "rawmodelvalu", "raw", "model", "valu", "thi", "mean", "model", "or", "view", "updat", "will", "store", "set", "pars", "modelvalu", "model", "valu", "regardless", "valid", "that", "it", "will", "never", "set", "it", "undefin", "becaus", "valid", "error", "when", "valid", "call", "rawmodelvalu", "raw", "model", "valu", "will", "pass", "valid", "valid", "ha", "chang", "usual", "behavior", "kept", "it", "becam", "invalid", "set", "model", "undefin", "valid", "restor", "last", "avail", "modelvalu", "model", "valu", "rawmodelvalu", "raw", "model", "valu", "addit", "valid", "will", "onli", "updat", "model", "when", "valid", "chang", "thi", "prevent", "set", "initi", "invalid", "model", "other", "than", "undefin", "undefin", "see", "9063", "fix", "9063", "fix", "9959", "fix", "9996", "fix", "10025", "close", "9890", "close", "9913", "close", "9997", "bonu", "commit", "which", "introduc", "pars", "when", "valid", "actual", "want", "invalidmodelvalu", "invalid", "model", "valu", "remov", "oh", "well", "http", "github", "com", "angular", "angular", "js", "commit", "9ad7d745ab5f6f8f43b51cacd7a238df9562246f", "caitp", "petebacondarwin", "lgalfaso"], "B_body": "...ties\n\nI.e. constructor, toString, or watch on FF\n(https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/watch)\n- optimize parser a bit to not create getter function for operators\n", "B_clean_body": ["tie", "constructor", "tostr", "string", "or", "watch", "ff", "http", "mozilla", "develop", "org", "en", "javascript", "refer", "global", "object", "object", "watch", "java", "script", "optim", "parser", "bit", "not", "creat", "getter", "function", "oper"], "title_sim": [0.011504711966610832], "body_sim": [0.11206593233240779], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03589635135715989, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 980}, {"A_title": "fix(jqLite): make removeData() not remove event handlers", "A_clean_title": ["fix", "jqlite", "jq", "lite", "make", "removedata", "remov", "data", "not", "remov", "event", "handler"], "B_title": "chore(travis): turn on caching for node_modules and bower_components directories", "B_clean_title": ["chore", "travi", "turn", "cach", "node", "modul", "bower", "compon", "directori"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix but a breaking change as well.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`removeData()` invoked on an element removes its event handlers as well.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n`removeData()` removes just user-set `data`, not internal data storage used for event handling. This aligns jqLite with jQuery.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~ (the current behavior is not documented)\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nFixes #15869", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "but", "break", "chang", "as", "well", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "removedata", "remov", "data", "invok", "element", "remov", "it", "event", "handler", "as", "well", "**what", "new", "behavior", "thi", "featur", "chang", "removedata", "remov", "data", "remov", "just", "user", "set", "data", "not", "intern", "data", "storag", "use", "event", "handl", "thi", "align", "jqlite", "jq", "lite", "jqueri", "queri", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "current", "behavior", "not", "document", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "fix", "15869"], "B_body": "The cache behavior is documented at http://docs.travis-ci.com/user/caching/\n\nThis commit also disabled our custom caching via npm-bundler-deps.sh\n", "B_clean_body": ["cach", "behavior", "document", "at", "http", "travi", "ci", "doc", "com", "user", "cach", "thi", "commit", "also", "disabl", "our", "custom", "cach", "via", "npm", "bundler", "dep", "sh"], "title_sim": [0.011071488414071623], "body_sim": [0.34148159839075026], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1131}, {"A_title": "fix($animateCss): consider options.delay value for closing timeout", "A_clean_title": ["fix", "animatecss", "anim", "css", "consid", "option", "delay", "valu", "close", "timeout"], "B_title": "fix(sanitizeUri): sanitize URIs that contain IDEOGRAPHIC SPACE chars", "B_clean_title": ["fix", "sanitizeuri", "sanit", "uri", "sanit", "uri", "ur", "that", "contain", "ideograph", "space", "char"], "A_body": "Previously, options.delay was only considered when a class added an\nextra transition style, because that leads to style recalculation.\n\nFixes #13355\n", "A_clean_body": ["previous", "option", "delay", "wa", "onli", "consid", "when", "class", "ad", "extra", "transit", "style", "becaus", "that", "lead", "style", "recalcul", "fix", "13355"], "B_body": "Chrome 62 was not sanitizing dangerous URLs containing\r\nJavaScript, if they started with these \"whitespace\" characters.\r\n\r\nCloses #16288\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#16288\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nURIs are sanitized correctly on Chrome 62\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["chrome", "62", "wa", "not", "sanit", "danger", "url", "ur", "ls", "contain", "javascript", "java", "script", "they", "start", "these", "whitespac", "charact", "close", "16288", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "16288", "**what", "new", "behavior", "thi", "featur", "chang", "uri", "ur", "are", "sanit", "correctli", "chrome", "62", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.013204709639777145], "body_sim": [0.09208688012148734], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 709}, {"A_title": "Scenario runner binding throw", "A_clean_title": ["scenario", "runner", "bind", "throw"], "B_title": "fix(ngView): use animation promises ensure that only one leave animation...", "B_clean_title": ["fix", "ngview", "ng", "view", "use", "anim", "promis", "ensur", "that", "onli", "one", "leav", "anim"], "A_body": "I was wrong about throw being the same as done(error) in a DSL statement. Throw is an \"error\" and done(error) is a \"failure\".\n\nAlso, there was a test for the binding not matching before, but it tested in a condition where there were no bindings at all in the document in which case elements() in your new binding() would still throw.\n\nI added a new test that checks for bindings existing but none of them matching.\n\nI also fixed an issue where you were using contains() and checking if the return value was >= 0 but the function returns a boolean and false >= 0 is true. I'll code review more carefully next time.\n", "A_clean_body": ["wa", "wrong", "about", "throw", "be", "same", "as", "done", "error", "dsl", "statement", "throw", "error", "done", "error", "failur", "also", "there", "wa", "test", "bind", "not", "match", "befor", "but", "it", "test", "condit", "where", "there", "were", "no", "bind", "at", "all", "document", "which", "case", "element", "your", "new", "bind", "would", "still", "throw", "ad", "new", "test", "that", "check", "bind", "exist", "but", "none", "them", "match", "also", "fix", "issu", "where", "you", "were", "contain", "check", "return", "valu", "wa", "but", "function", "return", "boolean", "fals", "true", "'ll", "code", "review", "more", "care", "next", "time"], "B_body": "... occurs at a time\n\nthe tracking depended on a local flag variable, which was susceptible to corruption due to\nrace conditions.\n\nCloses #9355\nCloses #7606\n", "B_clean_body": ["occur", "at", "time", "track", "depend", "local", "flag", "variabl", "which", "wa", "suscept", "corrupt", "due", "race", "condit", "close", "9355", "close", "7606"], "title_sim": [0.053317728170792805], "body_sim": [0.3661480075784665], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1435}, {"A_title": "feat($timeout): add $timeout service that superceeds $deferred", "A_clean_title": ["feat", "timeout", "add", "timeout", "servic", "that", "superce", "defer"], "B_title": "docs(app): matches anchor tags to current docs theme", "B_clean_title": ["doc", "app", "match", "anchor", "tag", "current", "doc", "theme"], "A_body": "$timeout has a better name ($defer got often confused with something related to $q) and\nis actually promise based with cancelation support.\n\nWith this commit the $defer service is deprecated and will be removed before 1.0.\n\nCloses #704, #532\n", "A_clean_body": ["timeout", "ha", "better", "name", "defer", "got", "often", "confus", "someth", "relat", "actual", "promis", "base", "cancel", "support", "thi", "commit", "defer", "servic", "deprec", "will", "remov", "befor", "close", "704", "532"], "B_body": "Updates the styles for the anchor tags to match the current docs theme.\n", "B_clean_body": ["updat", "style", "anchor", "tag", "match", "current", "doc", "theme"], "title_sim": [-0.012181401117742083], "body_sim": [-0.0151978069790683], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.011396614579886886, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 931}, {"A_title": "docs($http): add a note about modifying data in transformRequest", "A_clean_title": ["doc", "http", "add", "note", "about", "modifi", "data", "transformrequest", "transform", "request"], "B_title": "fix($location): url rewriting if element was removed", "B_clean_title": ["fix", "locat", "url", "rewrit", "element", "wa", "remov"], "A_body": "- **What kind of change does this PR introduce?** (Bug fix, feature, docs update, ...)\n  docs update\n- **What is the current behavior?** (You can also link to an open issue here)\n  See #12468\n\nCloses #12468\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "12468", "close", "12468"], "B_body": "When user clicks a link, $location needs to intercept this event.  The <a> doesn't have to be target element of the DOM event, so it needs to traverse the DOM, to find first <a> parent.\n\nIf the target element was removed from DOM, during the same event, it would throw an exception. This fixes the issue.\n\nCloses #1058\n", "B_clean_body": ["when", "user", "click", "link", "locat", "need", "intercept", "thi", "event", "n't", "have", "target", "element", "dom", "event", "so", "it", "need", "travers", "dom", "find", "first", "parent", "target", "element", "wa", "remov", "dom", "dure", "same", "event", "it", "would", "throw", "except", "thi", "fix", "issu", "close", "1058"], "title_sim": [-0.018746625602179254], "body_sim": [0.1111301210581358], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.03230821646179818, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1347}, {"A_title": "refactor(jqLite): stop patching individual jQuery methods", "A_clean_title": ["refactor", "jqlite", "jq", "lite", "stop", "patch", "individu", "jqueri", "queri", "method"], "B_title": "fix(ngAnimate): let $animate.cancel() reject the runner promise", "B_clean_title": ["fix", "nganim", "ng", "anim", "let", "anim", "cancel", "reject", "runner", "promis"], "A_body": "Currently Angular monkey-patches a few jQuery methods that remove elements\nfrom the DOM. Since methods like .remove() have multiple signatures\nthat can change what's actually removed, Angular needs to carefully\nrepeat them in its patching or it can break apps using jQuery correctly.\nSuch a strategy is also not future-safe.\n\nInstead of patching individual methods on the prototype, it's better to\nhook into jQuery.cleanData and trigger custom events there. This should be\nsafe as e.g. jQuery UI needs it and uses it. It'll also be future-safe.\n\nThe only drawback is that $destroy is no longer triggered when using $detach\nbut:\n1. Angular doesn't use this method, jqLite doesn't implement it.\n2. Detached elements can be re-attached keeping all their events & data\n    so it makes sense that $destroy is not triggered on them.\n3. The approach from this commit is so much safer that any issues with\n    .detach() working differently are outweighed by the robustness of the code.\n\nBREAKING CHANGE: the $destroy event is no longer triggered when using the\njQuery detach() method. If you want to destroy Angular data attached to the\nelement, use remove().\n\ncc @caitp\n", "A_clean_body": ["current", "angular", "monkey", "patch", "few", "jqueri", "queri", "method", "that", "remov", "element", "dom", "sinc", "method", "like", "remov", "have", "multipl", "signatur", "that", "chang", "what", "'s", "actual", "remov", "angular", "need", "care", "repeat", "them", "it", "patch", "or", "it", "break", "app", "jqueri", "queri", "correctli", "such", "strategi", "also", "not", "futur", "safe", "instead", "patch", "individu", "method", "prototyp", "it", "'s", "better", "hook", "into", "jqueri", "cleandata", "queri", "clean", "data", "trigger", "custom", "event", "there", "thi", "safe", "as", "jqueri", "queri", "ui", "need", "it", "use", "it", "it", "'ll", "also", "futur", "safe", "onli", "drawback", "that", "destroy", "no", "longer", "trigger", "when", "detach", "but", "angular", "n't", "use", "thi", "method", "jqlite", "jq", "lite", "n't", "implement", "it", "detach", "element", "re", "attach", "keep", "all", "their", "event", "data", "so", "it", "make", "sens", "that", "destroy", "not", "trigger", "them", "approach", "thi", "commit", "so", "much", "safer", "that", "ani", "issu", "detach", "work", "differ", "are", "outweigh", "by", "robust", "code", "break", "chang", "destroy", "event", "no", "longer", "trigger", "when", "jqueri", "queri", "detach", "method", "you", "want", "destroy", "angular", "data", "attach", "element", "use", "remov", "cc", "caitp"], "B_body": "<!-- General PR submission guidelines ../blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #14204\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThere is another aspect to this problem that is not fixed by this PR:\r\n2. Cancelling css animations should immediately abort the animation and set the DOM / css to its final state. This is currently broken in FF and IE11 (at least), see https://bugzilla.mozilla.org/show_bug.cgi?id=1425014. This must be tested with e2e test. Fixing this is not a BC.\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "md", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14204", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "blob", "master", "develop", "commit", "fix", "featur", "doc", "md", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "there", "anoth", "aspect", "thi", "problem", "that", "not", "fix", "by", "thi", "pr", "cancel", "css", "anim", "immedi", "abort", "anim", "set", "dom", "css", "it", "final", "state", "thi", "current", "broken", "ff", "ie11", "at", "least", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=1425014", "thi", "must", "test", "e2e", "test", "fix", "thi", "not", "bc"], "title_sim": [-0.0010770713954057851], "body_sim": [0.19798177984670165], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1325}, {"A_title": "refactor(fromJson): Remove error() and just throw", "A_clean_title": ["refactor", "fromjson", "json", "remov", "error", "just", "throw"], "B_title": "fix($compile): correctly handle `null`/`undefined` href `attrs.$set()`", "B_clean_title": ["fix", "compil", "correctli", "handl", "null", "undefin", "href", "attr", "set"], "A_body": "It's more likely you are using angular.fromJson() inside Angular world, which means you get proper\nexception handling by $exceptionHandler.\n\nThere is no point to explicitly push it to console and it causes memory leaks on most browsers \n(tried Chrome stable/canary, Safari, FF).\n", "A_clean_body": ["it", "'s", "more", "like", "you", "are", "angular", "fromjson", "json", "insid", "angular", "world", "which", "mean", "you", "get", "proper", "except", "handl", "by", "exceptionhandl", "except", "handler", "there", "no", "point", "explicitli", "push", "it", "consol", "it", "caus", "memori", "leak", "most", "browser", "tri", "chrome", "stabl", "canari", "safari", "ff"], "B_body": "Accidentally broken while backporting #14890.\r\n\r\nSince #14890, `$$sanitizeUri()` can no longer handle `null`/`undefined` values.\r\nIn 1.7.x, there are no such calls.\r\nIn 1.6.x, there is still one such calls inside `Attributes.$set()`, so it needs to be adjusted accordingly.", "B_clean_body": ["accident", "broken", "while", "backport", "14890", "sinc", "14890", "sanitizeuri", "sanit", "uri", "no", "longer", "handl", "null", "undefin", "valu", "there", "are", "no", "such", "call", "there", "still", "one", "such", "call", "insid", "attribut", "set", "so", "it", "need", "adjust", "accordingli"], "title_sim": [0.05482619903879906], "body_sim": [0.24170029259701345], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2220}, {"A_title": "refactor($parse): remove unnecessary .constant if when collecting inputs", "A_clean_title": ["refactor", "pars", "remov", "unnecessari", "constant", "when", "collect", "input"], "B_title": "refactor(compileSpec): make tests consistent", "B_clean_title": ["refactor", "compilespec", "compil", "spec", "make", "test", "consist"], "A_body": "The `if`s are unnecessary because the calculation of `ast.toWatch` should have taken constants into account already.", "A_clean_body": ["are", "unnecessari", "becaus", "calcul", "ast", "towatch", "watch", "have", "taken", "constant", "into", "account", "alreadi"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nrefactor\n\n**What is the current behavior? (You can also link to an open issue here)**\nTests are duplicated and have non-optimal expects\n\n**What is the new behavior (if this is a feature change)?**\nTests use they and have been moved to one place\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "test", "are", "duplic", "have", "non", "optim", "expect", "**what", "new", "behavior", "thi", "featur", "chang", "test", "use", "they", "have", "been", "move", "one", "place"], "title_sim": [0.3918294673118643], "body_sim": [0.03530984527642614], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 304}, {"A_title": "docs ($compile): add error documentation for noslot error in $compile", "A_clean_title": ["doc", "compil", "add", "error", "document", "noslot", "error", "compil"], "B_title": "docs(app): adding a mobile first breadcrumb solution", "B_clean_title": ["doc", "app", "ad", "mobil", "first", "breadcrumb", "solut"], "A_body": "there was no error page for the $compile:noslot error\r\n\r\nthis resolves #15790\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["there", "wa", "no", "error", "page", "compil", "noslot", "error", "thi", "resolv", "15790", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "- added a simple breadcrumb solution that works with all mobile devices.\n  - just a back to next highest level of api documentation\n  - could add in some way to show normal breadcrumbs if on desktop, if needed or wanted.\n- added in the old version picker to the top of the left sidebar. No styling just yet. Was going to mess with the left sidebar, but wanted to see if you all like it how it is? I think it should be pinned open all the time, unless on mobile which is default for angular-material, from what I have seen.\n", "B_clean_body": ["ad", "simpl", "breadcrumb", "solut", "that", "work", "all", "mobil", "devic", "just", "back", "next", "highest", "level", "api", "document", "could", "add", "some", "way", "show", "normal", "breadcrumb", "desktop", "need", "or", "want", "ad", "old", "version", "picker", "top", "left", "sidebar", "no", "style", "just", "yet", "wa", "go", "mess", "left", "sidebar", "but", "want", "see", "you", "all", "like", "it", "how", "it", "think", "it", "pin", "open", "all", "time", "unless", "mobil", "which", "default", "angular", "materi", "what", "have", "seen"], "title_sim": [0.05061573194269154], "body_sim": [0.2037323439798498], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 828}, {"A_title": "docs($location): fix typo", "A_clean_title": ["doc", "locat", "fix", "typo"], "B_title": "chore: update jasmine-core to 2.5.2", "B_clean_title": ["chore", "updat", "jasmin", "core"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This might resolve a Firefox test issue.\r\nLatest jasmine (2.6.2) has problems with some browsers, see here:\r\nhttps://github.com/jasmine/jasmine/issues/1327\r\n", "B_clean_body": ["thi", "might", "resolv", "firefox", "test", "issu", "latest", "jasmin", "ha", "problem", "some", "browser", "see", "here", "http", "github", "com", "jasmin", "jasmin", "issu", "1327"], "title_sim": [0.05823265951412433], "body_sim": [0.4635326072617782], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 247}, {"A_title": "docs(guide/Unit Testing): Typo in 'focused'", "A_clean_title": ["doc", "guid", "unit", "test", "typo", "'focus"], "B_title": "fix(input[radio]): use non-strict comparison for checkedness", "B_clean_title": ["fix", "input", "radio", "use", "non", "strict", "comparison", "checked"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nN/A\n\n**What is the new behavior (if this is a feature change)?**\n\nNone\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "none", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nReverting a Breaking Change\n\n**What is the current behavior? (You can also link to an open issue here)**\nCheckedness is determined by comparing $viewValue and value strictly.\n\n**What is the new behavior (if this is a feature change)?**\nCheckedness is determined by comparing $viewValue and value non-strictly.\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\nThis was introduced during the switch to ESLint, but it is a breaking change.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "revert", "break", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "checked", "determin", "by", "compar", "viewvalu", "view", "valu", "valu", "strictli", "**what", "new", "behavior", "thi", "featur", "chang", "checked", "determin", "by", "compar", "viewvalu", "view", "valu", "valu", "non", "strictli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "wa", "introduc", "dure", "switch", "eslint", "es", "lint", "but", "it", "break", "chang"], "title_sim": [-0.01388301535268451], "body_sim": [0.8963117700351393], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 178}, {"A_title": "chore(doc-gen): render @example tag for ngdoc @method", "A_clean_title": ["chore", "doc", "gen", "render", "exampl", "tag", "ngdoc", "method"], "B_title": "docs(developers.md): update node version as specified in package.json", "B_clean_title": ["doc", "develop", "md", "updat", "node", "version", "as", "specifi", "packag", "json"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat / fix to the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`@example` in  `@method` is not rendered\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "fix", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "method", "not", "render", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`DEVELOPERS.MD` contains different node version from package.json. `Yarn install` works with 8.9.1+ only and doesn't work with 6.x as specified in docs.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nDocs are updated in accordance with package.json.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNot.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nSorry, this might be a very small and not significant fix, but I guess still requires some attention.\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "develop", "md", "contain", "differ", "node", "version", "packag", "json", "yarn", "instal", "work", "1+", "onli", "n't", "work", "as", "specifi", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "are", "updat", "accord", "packag", "json", "**doe", "thi", "pr", "introduc", "break", "chang", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "sorri", "thi", "might", "veri", "small", "not", "signific", "fix", "but", "guess", "still", "requir", "some", "attent"], "title_sim": [0.19424856933742177], "body_sim": [0.916554067252906], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 392}, {"A_title": "docs($location): fix typo", "A_clean_title": ["doc", "locat", "fix", "typo"], "B_title": "chore(*): bump Yarn in Jenkins init-node script", "B_clean_title": ["chore", "bump", "yarn", "jenkin", "init", "node", "script"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Without it Jenkins builds are broken.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["without", "it", "jenkin", "build", "are", "broken", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.005188595987783201], "body_sim": [0.9354953753573034], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 36}, {"A_title": "docs ($compile): add error documentation for noslot error in $compile", "A_clean_title": ["doc", "compil", "add", "error", "document", "noslot", "error", "compil"], "B_title": "chore(travis): fix deploy conditions", "B_clean_title": ["chore", "travi", "fix", "deploy", "condit"], "A_body": "there was no error page for the $compile:noslot error\r\n\r\nthis resolves #15790\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["there", "wa", "no", "error", "page", "compil", "noslot", "error", "thi", "resolv", "15790", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.05147754980090267], "body_sim": [0.9828335917506669], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 221}, {"A_title": "chore(doc-gen, docs-app): create plnkr examples with correct Angular \u2026", "A_clean_title": ["chore", "doc", "gen", "doc", "app", "creat", "plnkr", "exampl", "correct", "angular"], "B_title": "test(*): run class-related tests everywhere; fix eval syntax", "B_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs-gen / app fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe plnkr examples include the latest stable Angular version instead of the snapshot version when opened from snapshot docs.\n\n**What is the new behavior (if this is a feature change)?**\nFixes the plnkr examples generated from snapshot docs\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\n\u2026version\n\nWhen the docs are based on the snapshot, the plnkr examples must use the snapshot files\nfrom code.angularjs.org\n\nFixes https://github.com/angular/angular.js/issues/15267\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "gen", "app", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "plnkr", "exampl", "includ", "latest", "stabl", "angular", "version", "instead", "snapshot", "version", "when", "open", "snapshot", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "plnkr", "exampl", "gener", "snapshot", "doc", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026version", "when", "doc", "are", "base", "snapshot", "plnkr", "exampl", "must", "use", "snapshot", "file", "code", "angularj", "org", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "15267"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.01655633962894475], "body_sim": [0.8183673252403929], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 205}, {"A_title": "fix(ngTransclude): remove terminal: true", "A_clean_title": ["fix", "ngtransclud", "ng", "transclud", "remov", "termin", "true"], "B_title": "docs(changelog): Change for labels and style consistency", "B_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "A_body": "This was introduced in commit 2adaff083f309bd324c466edd781f3edbf0aff89,\r\nbut made obsolete in 41f3269bfbd90a8d48e62639bb43f3020617bc57.\r\n\r\nFixes #16411\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "wa", "introduc", "commit", "2adaff083f309bd324c466edd781f3edbf0aff89", "but", "made", "obsolet", "41f3269bfbd90a8d48e62639bb43f3020617bc57", "fix", "16411", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "B_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "title_sim": [0.024903781356953595], "body_sim": [0.38983500063901944], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 634}, {"A_title": "docs(app): increments year", "A_clean_title": ["doc", "app", "increment", "year"], "B_title": "fix($location): support urls with any protocol", "B_clean_title": ["fix", "locat", "support", "url", "ani", "protocol"], "A_body": "Increments the year from 2014 to 2015.\n", "A_clean_body": ["increment", "year", "2014", "2015"], "B_body": "The url used for location parsing was quite strict and did not support\ncustom url schemes like \"chrome-extension://\". With this change the only\nrequirement for scheme is that it doesn't contain \":\" character.\n", "B_clean_body": ["url", "use", "locat", "pars", "wa", "quit", "strict", "did", "not", "support", "custom", "url", "scheme", "like", "chrome", "extens", "thi", "chang", "onli", "requir", "scheme", "that", "it", "n't", "contain", "charact"], "title_sim": [0.007622456740968138], "body_sim": [0.08007676395097084], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 974}, {"A_title": "chore(browserstack): Update browserstacktunnel-wrapper, fix options", "A_clean_title": ["chore", "browserstack", "updat", "browserstacktunnel", "wrapper", "fix", "option"], "B_title": "chore(docs.angularjs.org): allow robots in partials/ but prevent inde\u2026", "B_clean_title": ["chore", "doc", "angularj", "org", "allow", "robot", "partial", "but", "prevent", "inde\u2026"], "A_body": "Only the latest version of the package works correctly (the backend for it at\r\nBrowserStack is not versioned) and the options have changed in the new version\r\nof the package.\r\n\r\nAlso, iOS 8.0 is no longer available on BrowserStack, only 8.3 is. Instead,\r\nthis commit changes it to 9.3 as we shouldn't be testing on 8 anymore anyway.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix in the testing infrastructure.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe Browserstack wrapper doesn't set the local identified correctly, old wrapper is used that uses incorrect parameter names.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nPackage got updated, params are fine again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["onli", "latest", "version", "packag", "work", "correctli", "backend", "it", "at", "browserstack", "browser", "stack", "not", "version", "option", "have", "chang", "new", "version", "packag", "also", "io", "os", "no", "longer", "avail", "browserstack", "browser", "stack", "onli", "instead", "thi", "commit", "chang", "it", "as", "we", "n't", "test", "anymor", "anyway", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "test", "infrastructur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "browserstack", "wrapper", "n't", "set", "local", "identifi", "correctli", "old", "wrapper", "use", "that", "use", "incorrect", "paramet", "name", "**what", "new", "behavior", "thi", "featur", "chang", "packag", "got", "updat", "param", "are", "fine", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "\u2026xing\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["\u2026xing", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.39140978203395427], "body_sim": [0.862213436460934], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 316}, {"A_title": "chore(doc-gen): insert current tagged version if missing from list of\u2026", "A_clean_title": ["chore", "doc", "gen", "insert", "current", "tag", "version", "miss", "list", "of\u2026"], "B_title": "fix($parse): properly handle dots at the end of identifiers", "B_clean_title": ["fix", "pars", "properli", "handl", "dot", "at", "end", "identifi"], "A_body": "\u2026 all versions\r\n\r\nIn commit ce49edc08b3d642f3768f4282d391062d2f83037, we switched to npm info (now yarn info)\r\ninstead of the local git repository information to get the list of currently available versions for\r\nthe docs app. This means that during a release the version that is currently tagged is not yet\r\navailable on npm, and therefore our list of available versions is incomplete.\r\n\r\nWe now simply add the current build version (read from build/version.json) to the list of all\r\nversions if it fulfills the following conditions:\r\n\r\n- it is not a snapshot build\r\n- it is not already part of the list of all versions (i.e. if you are building locally)\r\n\r\nCloses #15741\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsee above\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["all", "version", "commit", "ce49edc08b3d642f3768f4282d391062d2f83037", "we", "switch", "npm", "info", "now", "yarn", "info", "instead", "local", "git", "repositori", "inform", "get", "list", "current", "avail", "version", "doc", "app", "thi", "mean", "that", "dure", "releas", "version", "that", "current", "tag", "not", "yet", "avail", "npm", "therefor", "our", "list", "avail", "version", "incomplet", "we", "now", "simpli", "add", "current", "build", "version", "read", "json", "build", "version", "list", "all", "version", "it", "fulfil", "follow", "condit", "it", "not", "snapshot", "build", "it", "not", "alreadi", "part", "list", "all", "version", "you", "are", "build", "local", "close", "15741", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "abov", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "B_body": "Fixes #4613\nFixes #4912\n", "B_clean_body": ["fix", "4613", "fix", "4912"], "title_sim": [0.06705829490007784], "body_sim": [0.2102267742954617], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.003363097893416349, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1066}, {"A_title": "docs($interpolateProvider): document XSS in $interpolate", "A_clean_title": ["doc", "interpolateprovid", "interpol", "provid", "document", "xss", "interpol"], "B_title": "fix(ngTransclude): remove terminal: true", "B_clean_title": ["fix", "ngtransclud", "ng", "transclud", "remov", "termin", "true"], "A_body": "`$interpolateProvider.startSymbol` & friends are often used dangerously, to embed Angular templating in other templating languages. This change documents that that is a very dangerous practice.\n", "A_clean_body": ["interpolateprovid", "startsymbol", "interpol", "provid", "start", "symbol", "friend", "are", "often", "use", "danger", "emb", "angular", "templat", "other", "templat", "languag", "thi", "chang", "document", "that", "that", "veri", "danger", "practic"], "B_body": "This was introduced in commit 2adaff083f309bd324c466edd781f3edbf0aff89,\r\nbut made obsolete in 41f3269bfbd90a8d48e62639bb43f3020617bc57.\r\n\r\nFixes #16411\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "wa", "introduc", "commit", "2adaff083f309bd324c466edd781f3edbf0aff89", "but", "made", "obsolet", "41f3269bfbd90a8d48e62639bb43f3020617bc57", "fix", "16411", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.040036072915458784], "body_sim": [0.24863060981763596], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.08034762014962314, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 844}, {"A_title": "fix($sniffer): report history false on Android < 4", "A_clean_title": ["fix", "sniffer", "report", "histori", "fals", "android"], "B_title": "docs(CONTRIBUTING.md): add note about scope wildcard", "B_clean_title": ["doc", "contribut", "md", "add", "note", "about", "scope", "wildcard"], "A_body": "Android has history.pushState, but it does not update the location correctly:\nhttp://code.google.com/p/android/issues/detail?id=17471\n\nCloses #904\n", "A_clean_body": ["android", "ha", "histori", "pushstat", "push", "state", "but", "it", "not", "updat", "locat", "correctli", "http", "googl", "code", "com", "android", "issu", "detail", "id=17471", "close", "904"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nno hint that `*` is a valid scope -- it hints you could omit the `(...)` bit, but most commits of late don't\n\n**What is the new behavior (if this is a feature change)?**\n\ndocumentation of `*`\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "hint", "that", "valid", "scope", "it", "hint", "you", "could", "omit", "bit", "but", "most", "commit", "late", "don't", "**what", "new", "behavior", "thi", "featur", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [0.023851636110869726], "body_sim": [0.20288289914400737], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.016285134315507526, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1628}, {"A_title": "fix($parse): always re-evaluate filters within literals when an input is an object", "A_clean_title": ["fix", "pars", "alway", "re", "evalu", "filter", "within", "liter", "when", "input", "object"], "B_title": "docs(ngNonBindable): Document effect on attributes", "B_clean_title": ["doc", "ngnonbind", "ng", "non", "bindabl", "document", "effect", "attribut"], "A_body": "Fixes #15964 \r\n\r\nThis changes the [compareObjectIdentity](https://github.com/angular/angular.js/blob/v1.6.4/src/ng/parse.js#L1785) flag from being per-expression to per-input.  This allows inputs to filters to not compare object entity, but other inputs such as `- x` or `{x: x}` to only compare object entity.  This also expands this `compareObjectIdentity = true` beyond just object literals.", "A_clean_body": ["fix", "15964", "thi", "chang", "compareobjectident", "compar", "object", "ident", "http", "js", "github", "com", "angular", "angular", "js", "blob", "v1", "src", "ng", "pars", "l1785", "flag", "be", "per", "express", "per", "input", "thi", "allow", "input", "filter", "not", "compar", "object", "entiti", "but", "other", "input", "such", "as", "or", "onli", "compar", "object", "entiti", "thi", "also", "expand", "thi", "compareobjectident", "compar", "object", "ident", "true", "beyond", "just", "object", "liter"], "B_body": "The phrase \"contents of the current DOM element\" may be interpreted either as\r\ninclusive of the DOM element's attributes or as exclusive of the attributes.\r\nThis situation concerns markup such as:\r\n\r\n    <div ng-non-bindable ng-controller=\"MyController\"></div>\r\n\r\nIn practice, AngularJS does not compile or bind attribute values for elements\r\nwhich specify the `ng-non-bindable` directive. Extend the documentation to\r\ndefinitely describe this behavior.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["phrase", "content", "current", "dom", "element", "may", "interpret", "either", "as", "inclus", "dom", "element", "'s", "attribut", "or", "as", "exclus", "attribut", "thi", "situat", "concern", "markup", "such", "as", "div", "ng", "non", "bindabl", "ng", "controller=", "mycontrol", "my", "control", "div", "practic", "angularj", "angular", "js", "not", "compil", "or", "bind", "attribut", "valu", "element", "which", "specifi", "ng", "non", "bindabl", "direct", "extend", "document", "definit", "describ", "thi", "behavior", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.14798939712327763], "body_sim": [0.3205996975464077], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005749281680231937, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 190}, {"A_title": "Fix failing unit tests in IE7 (Binder, select widget)", "A_clean_title": ["fix", "fail", "unit", "test", "ie7", "binder", "select", "widget"], "B_title": "feat(ngCookies): support sameSite option", "B_clean_title": ["feat", "ngcooki", "ng", "cooki", "support", "samesit", "same", "site", "option"], "A_body": "The fix does not change any production code, we only need to ignore couple of attributes that IE7 should not display:\n- value attribute for LI\n- selected attribut for SELECT\n\nSimplified condition in compiler test, this should have been part of f9f0905f4ad7b1d0bb9b606a6d25fb1f88354a78\n", "A_clean_body": ["fix", "not", "chang", "ani", "product", "code", "we", "onli", "need", "ignor", "coupl", "attribut", "that", "ie7", "not", "display", "valu", "attribut", "li", "select", "attribut", "select", "simplifi", "condit", "compil", "test", "thi", "have", "been", "part", "f9f0905f4ad7b1d0bb9b606a6d25fb1f88354a78"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature for issue https://github.com/angular/angular.js/issues/16543\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nsupport sameSite option for ngCookie\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16543", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "support", "samesit", "same", "site", "option", "ngcooki", "ng", "cooki", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.049289654007446254], "body_sim": [0.22453582476721815], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.11920074321108234, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2510}, {"A_title": "docs(CONTRIBUTING): centralize, update, improve", "A_clean_title": ["doc", "contribut", "central", "updat", "improv"], "B_title": "docs(app): adding a mobile first breadcrumb solution", "B_clean_title": ["doc", "app", "ad", "mobil", "first", "breadcrumb", "solut"], "A_body": "- remove outdated info\r\n- move info about writing docs from Wiki to contribute.md + updates\r\n- move info about development setup from docs/contribute to contribute.md\r\n- add info about running tests on Saucelabs / Browserstack\r\n- add info about specific core code topics\r\n- add link to contributing.md to Contribung page\r\n- add link to changelog.md to nav in docs\r\n\r\nCloses #7303\r\nCloses #9444\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["remov", "outdat", "info", "move", "info", "about", "write", "doc", "wiki", "contribut", "md", "updat", "move", "info", "about", "develop", "setup", "doc", "contribut", "contribut", "md", "add", "info", "about", "run", "test", "saucelab", "browserstack", "add", "info", "about", "specif", "core", "code", "topic", "add", "link", "contribut", "md", "contribung", "page", "add", "link", "changelog", "md", "nav", "doc", "close", "7303", "close", "9444", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "- added a simple breadcrumb solution that works with all mobile devices.\n  - just a back to next highest level of api documentation\n  - could add in some way to show normal breadcrumbs if on desktop, if needed or wanted.\n- added in the old version picker to the top of the left sidebar. No styling just yet. Was going to mess with the left sidebar, but wanted to see if you all like it how it is? I think it should be pinned open all the time, unless on mobile which is default for angular-material, from what I have seen.\n", "B_clean_body": ["ad", "simpl", "breadcrumb", "solut", "that", "work", "all", "mobil", "devic", "just", "back", "next", "highest", "level", "api", "document", "could", "add", "some", "way", "show", "normal", "breadcrumb", "desktop", "need", "or", "want", "ad", "old", "version", "picker", "top", "left", "sidebar", "no", "style", "just", "yet", "wa", "go", "mess", "left", "sidebar", "but", "want", "see", "you", "all", "like", "it", "how", "it", "think", "it", "pin", "open", "all", "time", "unless", "mobil", "which", "default", "angular", "materi", "what", "have", "seen"], "title_sim": [0.3571402377577335], "body_sim": [0.19325631481544514], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.031725353512606774, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1049}, {"A_title": "fix(date): parse string input as local time unless TZ is specified", "A_clean_title": ["fix", "date", "pars", "string", "input", "as", "local", "time", "unless", "tz", "specifi"], "B_title": "chore(grunt): check files in src for ddescribe/iit", "B_clean_title": ["chore", "grunt", "check", "file", "src", "ddescrib", "iit"], "A_body": "previously we were always parsing the string input as UTC which cased issues like:\n\n{{ '2012-04-01' | date:'d MMM yyyy' }} renders as 31 Mar 2012\n\nBREAKING CHANGE: string input without timezone info is now parsed as local time/date\n\nCloses #847\n", "A_clean_body": ["previous", "we", "were", "alway", "pars", "string", "input", "as", "utc", "which", "case", "issu", "like", "'2012", "04", "01", "date", "'d", "mmm", "yyyi", "render", "as", "31", "mar", "2012", "break", "chang", "string", "input", "without", "timezon", "info", "now", "pars", "as", "local", "time", "date", "close", "847"], "B_body": "Previously, only files in test/ were checked. This does not capture\nend to end tests, which are in comments in src/.\n", "B_clean_body": ["previous", "onli", "file", "test", "were", "check", "thi", "not", "captur", "end", "end", "test", "which", "are", "comment", "src"], "title_sim": [0.006119391152254138], "body_sim": [0.1824729300747143], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 499}, {"A_title": "docs(app): matches anchor tags to current docs theme", "A_clean_title": ["doc", "app", "match", "anchor", "tag", "current", "doc", "theme"], "B_title": "chore(travis): fix deploy conditions", "B_clean_title": ["chore", "travi", "fix", "deploy", "condit"], "A_body": "Updates the styles for the anchor tags to match the current docs theme.\n", "A_clean_body": ["updat", "style", "anchor", "tag", "match", "current", "doc", "theme"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.018848286818051174], "body_sim": [0.2466463413442366], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1050}, {"A_title": "docs(guide/Components): add link to documentation for component method", "A_clean_title": ["doc", "guid", "compon", "add", "link", "document", "compon", "method"], "B_title": "docs(changelog): Change for labels and style consistency", "B_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDoes not link to API of method which shows all syntaxes\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nLinks to API of method\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "not", "link", "api", "method", "which", "show", "all", "syntax", "**what", "new", "behavior", "thi", "featur", "chang", "link", "api", "method", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "B_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "title_sim": [0.08823310840829407], "body_sim": [0.37710763161091854], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 742}, {"A_title": "perf(orderBy): copy array with slice instead of for loop", "A_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "B_title": "docs(ngRepeat): improve info about tracking", "B_clean_title": ["doc", "ngrepeat", "ng", "repeat", "improv", "info", "about", "track"], "A_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "A_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "B_body": "This is a follow-up to #16334 because I came to the conclusions that the relevant docs needed a bigger overhaul.\r\n\r\n- deduplicate info between docs section and arguments\r\n- don't draw too much attention to track by  ...\r\n- ... but highlight its drawbacks when used with one-time bindings\r\n- add example to show how tracking affects collection updates\r\n- clarify duplicates support for specific tracking expressions\r\n\r\nCloses #16332\r\nCloses #16334\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "follow", "up", "16334", "becaus", "came", "conclus", "that", "relev", "doc", "need", "bigger", "overhaul", "dedupl", "info", "between", "doc", "section", "argument", "n't", "draw", "too", "much", "attent", "track", "by", "but", "highlight", "it", "drawback", "when", "use", "one", "time", "bind", "add", "exampl", "show", "how", "track", "affect", "collect", "updat", "clarifi", "duplic", "support", "specif", "track", "express", "close", "16332", "close", "16334", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.009137358484714917], "body_sim": [0.2060985284504006], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.010241119785737766, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1153}, {"A_title": "chore(npm): publish artifacts to npm", "A_clean_title": ["chore", "npm", "publish", "artifact", "npm"], "B_title": "fix($compile): correctly handle `null`/`undefined` href `attrs.$set()`", "B_clean_title": ["fix", "compil", "correctli", "handl", "null", "undefin", "href", "attr", "set"], "A_body": "Note that there are still a few pending tasks before this can land, namely getting permissions for all of the package names on npm:\n- ~~[angular](https://www.npmjs.org/package/angular)~~ \u2013 got it. Thanks @bclinkinbeard!\n- ~~[angular-animate](https://www.npmjs.org/package/angular-animate)~~ \u2013 got it. thanks @pitbeast!\n- ~~[angular-cookies](https://www.npmjs.org/package/angular-cookies)~~ \u2013 got it. Thanks @petermelias!\n- ~~[angular-mocks](https://www.npmjs.org/package/angular-mocks)~~ \u2013 got it. Thanks @zizzamia!\n- ~~[angular-route](https://www.npmjs.org/package/angular-route)~~ \u2013 got it. Thanks @mljsimone!\n- ~~[angular-resource](https://www.npmjs.org/package/angular-resource)~~ \u2013 got it. Thanks @roylines!\n- ~~[angular-sanitize](https://www.npmjs.org/package/angular-sanitize)~~ \u2013 got it. Thanks @akalinovski!\n\nIf you own one of these packages, you can help by adding user \"angularcore\" to the package\n### unclaimed:\n- angular-aria\n- angular-i18n\n- angular-loader\n- angular-scenario\n- angular-touch\n- angular-messages\n\n~~I also still need to add `package.json` for each `bower-angular-*` repo (since that's how we'll be publishing these artifacts).~~ done!\n\nCloses #2877 \n", "A_clean_body": ["note", "that", "there", "are", "still", "few", "pend", "task", "befor", "thi", "land", "name", "get", "permiss", "all", "packag", "name", "npm", "angular", "http", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "bclinkinbeard", "angular", "anim", "http", "anim", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "pitbeast", "angular", "cooki", "http", "cooki", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "petermelia", "angular", "mock", "http", "mock", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "zizzamia", "angular", "rout", "http", "rout", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "mljsimon", "angular", "resourc", "http", "resourc", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "roylin", "angular", "sanit", "http", "sanit", "npmj", "www", "org", "packag", "angular", "got", "it", "thank", "akalinovski", "you", "own", "one", "these", "packag", "you", "help", "by", "ad", "user", "angularcor", "packag", "unclaim", "angular", "aria", "angular", "i18n", "angular", "loader", "angular", "scenario", "angular", "touch", "angular", "messag", "~~i", "also", "still", "need", "add", "packag", "json", "each", "bower", "angular", "repo", "sinc", "that", "'s", "how", "we", "'ll", "publish", "these", "artifact", "done", "close", "2877"], "B_body": "Accidentally broken while backporting #14890.\r\n\r\nSince #14890, `$$sanitizeUri()` can no longer handle `null`/`undefined` values.\r\nIn 1.7.x, there are no such calls.\r\nIn 1.6.x, there is still one such calls inside `Attributes.$set()`, so it needs to be adjusted accordingly.", "B_clean_body": ["accident", "broken", "while", "backport", "14890", "sinc", "14890", "sanitizeuri", "sanit", "uri", "no", "longer", "handl", "null", "undefin", "valu", "there", "are", "no", "such", "call", "there", "still", "one", "such", "call", "insid", "attribut", "set", "so", "it", "need", "adjust", "accordingli"], "title_sim": [-0.003555427346638312], "body_sim": [0.24121644992139185], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1282}, {"A_title": "feat($compile): support directive virtual groups", "A_clean_title": ["feat", "compil", "support", "direct", "virtual", "group"], "B_title": "fix(ngAria): do not set aria attributes on input[type=\"hidden\"]", "B_clean_title": ["fix", "ngaria", "ng", "aria", "not", "set", "aria", "attribut", "input", "type=", "hidden"], "A_body": "By appending  X-start and X-end to a directive it is now possible\nto have the directive act on a group of elements.\n\nIt is now possible to iterate over multiple elements like so:\n\n```\n<table>\n  <tr ng-repeat-start=\"item in list\">I get repeated</tr>\n  <tr ng-repeat-end>I also get repeated</tr>\n</table>\n```\n", "A_clean_body": ["by", "append", "start", "end", "direct", "it", "now", "possibl", "have", "direct", "act", "group", "element", "it", "now", "possibl", "iter", "over", "multipl", "element", "like", "so", "tabl", "tr", "ng", "repeat", "start=", "item", "list", "get", "repeat", "tr", "tr", "ng", "repeat", "end", "also", "get", "repeat", "tr", "tabl"], "B_body": "This fixes a error found by @edclements  using the Google Accessibility Developer Tools audit.\r\nInput fields of type hidden shouldn't have aria attributes.\r\nhttps://www.w3.org/TR/html-aria/#allowed-aria-roles-states-and-properties-1\r\n\r\nCloses #15113\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\naria attributes added to input type hidden\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nNot anymore.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI would say not actually, because the previous behavior didnt follow the spec and I can'T see why anyone would rely on this behavior. It was marked as breaking change in https://github.com/angular/angular.js/pull/15113, though\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nRebased and updated version of https://github.com/angular/angular.js/pull/15113\r\n", "B_clean_body": ["thi", "fix", "error", "found", "by", "edclement", "googl", "access", "develop", "tool", "audit", "input", "field", "type", "hidden", "n't", "have", "aria", "attribut", "http", "w3", "aria", "www", "org", "tr", "html", "allow", "aria", "role", "state", "properti", "close", "15113", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "aria", "attribut", "ad", "input", "type", "hidden", "**what", "new", "behavior", "thi", "featur", "chang", "not", "anymor", "**doe", "thi", "pr", "introduc", "break", "chang", "would", "say", "not", "actual", "becaus", "previou", "behavior", "didnt", "follow", "spec", "can't", "see", "whi", "anyon", "would", "reli", "thi", "behavior", "it", "wa", "mark", "as", "break", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "15113", "though", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "rebas", "updat", "version", "http", "github", "com", "angular", "angular", "js", "pull", "15113"], "title_sim": [0.053093438516094264], "body_sim": [0.07298121423959597], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.1850246400628541, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1659}, {"A_title": "chore(gitignore): add .agignore", "A_clean_title": ["chore", "gitignor", "add", "agignor"], "B_title": "feat(security): explicitly whitelist URL schemes for bootstrap.", "B_clean_title": ["feat", "secur", "explicitli", "whitelist", "url", "scheme", "bootstrap"], "A_body": "I use a .agignore file to skip the build directory and some other files\nwhile searching using Ag (see\nhttps://github.com/ggreer/the_silver_searcher).\n", "A_clean_body": ["use", "agignor", "file", "skip", "build", "directori", "some", "other", "file", "while", "search", "ag", "see", "http", "github", "silver", "searcher", "com", "ggreer"], "B_body": "Many browsers have some extension URL scheme. It is unclear how many of\r\nthose have the security issue of allowing parser-inserted loads of\r\nextension URLs.\r\n\r\nTo be conservative, this code whitelists the URL schemes that are known\r\nto be subject to CSP, i.e. the ones that are expected and safe.\r\n\r\nNote: there is no change in tests as behavior does not change for any known URL.", "B_clean_body": ["mani", "browser", "have", "some", "extens", "url", "scheme", "it", "unclear", "how", "mani", "those", "have", "secur", "issu", "allow", "parser", "insert", "load", "extens", "url", "ur", "ls", "conserv", "thi", "code", "whitelist", "url", "scheme", "that", "are", "known", "subject", "csp", "one", "that", "are", "expect", "safe", "note", "there", "no", "chang", "test", "as", "behavior", "not", "chang", "ani", "known", "url"], "title_sim": [0.03146646078448896], "body_sim": [0.0895442139076605], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1245}, {"A_title": "fix($resource): properly call error callback when resource is called with", "A_clean_title": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call"], "B_title": "fix($parse): properly handle dots at the end of identifiers", "B_clean_title": ["fix", "pars", "properli", "handl", "dot", "at", "end", "identifi"], "A_body": "fix($resource): properly call error callback when resource is called with two arguments\n", "A_clean_body": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call", "two", "argument"], "B_body": "Fixes #4613\nFixes #4912\n", "B_clean_body": ["fix", "4613", "fix", "4912"], "title_sim": [0.0075685705655130645], "body_sim": [0.09565783876577277], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02670443805439205, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1088}, {"A_title": "test($rootScope): add $watch/$watchCollection tests", "A_clean_title": ["test", "rootscop", "root", "scope", "add", "watch", "watchcollect", "watch", "collect", "test"], "B_title": "fix($sce): do not assume $document[0] exists", "B_clean_title": ["fix", "sce", "not", "assum", "document", "exist"], "A_body": "These are various cases that I felt were missing tests, mainly around constant/literal/one-time $watch/$watchCollection.", "A_clean_body": ["these", "are", "variou", "case", "that", "felt", "were", "miss", "test", "mainli", "around", "time", "constant", "liter", "one", "watch", "watchcollect", "watch", "collect"], "B_body": "this is important so that people can mock $window without having to add stuff that angular uses internally into it\n\nCloses #9661\n", "B_clean_body": ["thi", "import", "so", "that", "peopl", "mock", "window", "without", "have", "add", "stuff", "that", "angular", "use", "intern", "into", "it", "close", "9661"], "title_sim": [0.0062387348977703], "body_sim": [0.17164430449414303], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0100562867316061, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 924}, {"A_title": "fix($compile): correctly handle `null`/`undefined` href `attrs.$set()`", "A_clean_title": ["fix", "compil", "correctli", "handl", "null", "undefin", "href", "attr", "set"], "B_title": "docs($compile): add known issues with replace:true", "B_clean_title": ["doc", "compil", "add", "known", "issu", "replac", "true"], "A_body": "Accidentally broken while backporting #14890.\r\n\r\nSince #14890, `$$sanitizeUri()` can no longer handle `null`/`undefined` values.\r\nIn 1.7.x, there are no such calls.\r\nIn 1.6.x, there is still one such calls inside `Attributes.$set()`, so it needs to be adjusted accordingly.", "A_clean_body": ["accident", "broken", "while", "backport", "14890", "sinc", "14890", "sanitizeuri", "sanit", "uri", "no", "longer", "handl", "null", "undefin", "valu", "there", "are", "no", "such", "call", "there", "still", "one", "such", "call", "insid", "attribut", "set", "so", "it", "need", "adjust", "accordingli"], "B_body": "An old PR that I had lying around.\r\nTheoretically we could also close the issues that are referenced in the docs, because they are very unlikel to get fixed - especially the directive deduplication and the attribute merging are basically wontfixes.", "B_clean_body": ["old", "pr", "that", "had", "lie", "around", "theoret", "we", "could", "also", "close", "issu", "that", "are", "referenc", "doc", "becaus", "they", "are", "veri", "unlikel", "get", "fix", "especi", "direct", "dedupl", "attribut", "merg", "are", "basic", "wontfix"], "title_sim": [0.3055029439845894], "body_sim": [0.2065130048164253], "file_list_sim": 1.0, "overlap_files_len": 1, "code_sim": [0.0075261727238510765, 0.0075261727238510765], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2}, {"A_title": "chore(*): add a Git .mailmap with my new name", "A_clean_title": ["chore", "add", "git", "mailmap", "my", "new", "name"], "B_title": "feat($compile): add more lifecycle hooks to directive controllers", "B_clean_title": ["feat", "compil", "add", "more", "lifecycl", "hook", "direct", "control"], "A_body": "In this way my past contributions are mapped correctly.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nGit thinks I'm 2 people.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nI'm one person again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\nOutput of `git shortlog -nse | head -25` after this PR (I see we could use more `.mailmap` entries, there are lots of duplicates):\r\n```\r\n   931\tIgor Minar <igor@angularjs.org>\r\n   692\tMisko Hevery <misko@hevery.com>\r\n   677\tPeter Bacon Darwin <pete@bacondarwin.com>\r\n   503\tIgor Minar <iiminar@gmail.com>\r\n   364\tVojta Jina <vojta.jina@gmail.com>\r\n   364\tMatias Niemel\u00e4 <matias@yearofmoo.com>\r\n   259\tMartin Staffa <mjstaffa@googlemail.com>\r\n   196\tCaitlin Potter <caitpotter88@gmail.com>\r\n   192\tBrian Ford <btford@umich.edu>\r\n   169\tGeorgios Kalpakas <g.kalpakas@hotmail.com>\r\n   140\tGeorgios Kalpakas <kalpakas.g@gmail.com>\r\n   127\tPete Bacon Darwin <pete@bacondarwin.com>\r\n   108\tJason Bedard <jason+github@jbedard.ca>\r\n   108\tMartin Staffa <mjstaffa@gmail.com>\r\n    99\tTobias Bosch <tbosch1009@gmail.com>\r\n    94\tMicha\u0142 Go\u0142e\u0328biowski <m.goleb@gmail.com>\r\n    71\tLucas Galfaso <lgalfaso@gmail.com>\r\n    70\tShahar Talmi <shahar.talmi@gmail.com>\r\n    65\tJeff Cross <middlefloor@gmail.com>\r\n    52\tChirayu Krishnappa <chirayu@chirayuk.com>\r\n    50\trodyhaddad <rody@rodyhaddad.com>\r\n    47\tPawel Kozlowski <pkozlowski.opensource@gmail.com>\r\n    45\tDi Peng <pengdi@google.com>\r\n    43\tVojta Jina <vojta@gemin-i.org>\r\n    41\tLucas Mirelmann <lgalfaso@gmail.com>\r\n```", "A_clean_body": ["thi", "way", "my", "past", "contribut", "are", "map", "correctli", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "git", "think", "'m", "peopl", "**what", "new", "behavior", "thi", "featur", "chang", "'m", "one", "person", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "output", "git", "shortlog", "nse", "head", "25", "after", "thi", "pr", "see", "we", "could", "use", "more", "mailmap", "entri", "there", "are", "lot", "duplic", "931", "igor", "minar", "igor", "angularj", "org", "692", "misko", "heveri", "misko", "heveri", "com", "677", "peter", "bacon", "darwin", "pete", "bacondarwin", "com", "503", "igor", "minar", "iiminar", "gmail", "com", "364", "vojta", "jina", "vojta", "jina", "gmail", "com", "364", "matia", "niemel\u00e4", "matia", "yearofmoo", "com", "259", "martin", "staffa", "mjstaffa", "googlemail", "com", "196", "caitlin", "potter", "caitpotter88", "gmail", "com", "192", "brian", "ford", "btford", "umich", "edu", "169", "georgio", "kalpaka", "kalpaka", "hotmail", "com", "140", "georgio", "kalpaka", "kalpaka", "gmail", "com", "127", "pete", "bacon", "darwin", "pete", "bacondarwin", "com", "108", "jason", "bedard", "jason+github", "jbedard", "ca", "108", "martin", "staffa", "mjstaffa", "gmail", "com", "99", "tobia", "bosch", "tbosch1009", "gmail", "com", "94", "micha\u0142", "go\u0142e\u0328biowski", "goleb", "gmail", "com", "71", "luca", "galfaso", "lgalfaso", "gmail", "com", "70", "shahar", "talmi", "shahar", "talmi", "gmail", "com", "65", "jeff", "cross", "middlefloor", "gmail", "com", "52", "chirayu", "krishnappa", "chirayu", "chirayuk", "com", "50", "rodyhaddad", "rodi", "rodyhaddad", "com", "47", "pawel", "kozlowski", "pkozlowski", "opensourc", "gmail", "com", "45", "di", "peng", "pengdi", "googl", "com", "43", "vojta", "jina", "vojta", "gemin", "org", "41", "luca", "mirelmann", "lgalfaso", "gmail", "com"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFeature\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nMissing lifecycle hooks for directive controllers\n\n**What is the new behavior (if this is a feature change)?**\n\nAdd these lifecycle hooks\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis change adds in the following new lifecycle hooks, which map in some\nway to those in Angular 2:\n- `$onChanges(changesObj)` - Called whenever one-way bindings are updated. The `changesObj` is a hash whose keys\n  are the names of the bound properties that have changed, and the values are an object of the form\n  `{ currentValue: ..., previousValue: ... }`. Use this hook to trigger updates within a component such as\n  cloning the bound value to prevent accidental mutation of the outer value.\n- `$onDestroy` - Called on a controller when its containing scope is destroyed. Use this hook for releasing\n  external resources, watches and event handlers.\n- `$afterViewInit` - Called after this controller's element and its children been linked. Similar to the post-link\n  function this hook can be used to set up DOM event handlers and do direct DOM manipulation.\n  Note that child elements that contain `templateUrl` directives will not have been compiled and linked since\n  they are waiting for their template to load asynchronously and their own compilation and linking has been\n  suspended until that occurs.\n\nCloses #14127\nCloses #14030\nCloses #14020\nCloses #13991\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "miss", "lifecycl", "hook", "direct", "control", "**what", "new", "behavior", "thi", "featur", "chang", "add", "these", "lifecycl", "hook", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "chang", "add", "follow", "new", "lifecycl", "hook", "which", "map", "some", "way", "those", "angular", "onchang", "chang", "changesobj", "chang", "obj", "call", "whenev", "one", "way", "bind", "are", "updat", "changesobj", "chang", "obj", "hash", "whose", "key", "are", "name", "bound", "properti", "that", "have", "chang", "valu", "are", "object", "form", "currentvalu", "current", "valu", "previousvalu", "previou", "valu", "use", "thi", "hook", "trigger", "updat", "within", "compon", "such", "as", "clone", "bound", "valu", "prevent", "accident", "mutat", "outer", "valu", "ondestroy", "destroy", "call", "control", "when", "it", "contain", "scope", "destroy", "use", "thi", "hook", "releas", "extern", "resourc", "watch", "event", "handler", "afterviewinit", "after", "view", "init", "call", "after", "thi", "control", "'s", "element", "it", "children", "been", "link", "similar", "post", "link", "function", "thi", "hook", "use", "set", "up", "dom", "event", "handler", "direct", "dom", "manipul", "note", "that", "child", "element", "that", "contain", "templateurl", "templat", "url", "direct", "will", "not", "have", "been", "compil", "link", "sinc", "they", "are", "wait", "their", "templat", "load", "asynchron", "their", "own", "compil", "link", "ha", "been", "suspend", "until", "that", "occur", "close", "14127", "close", "14030", "close", "14020", "close", "13991"], "title_sim": [0.12771025200309694], "body_sim": [0.7281082522113008], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 560}, {"A_title": "fix(injector): allow multiple loading of function modules", "A_clean_title": ["fix", "injector", "allow", "multipl", "load", "function", "modul"], "B_title": "feat(input): add support for input[type=range]", "B_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "A_body": "**TEST PR** Just verifying that this passes on IE8\n\nChange HashMap to give $$hashKey also for functions so it will be possible to\nload multiple module function instances. In order to prevent problem in\nangular's test suite,  added an option to HashMap to maintain its own id\ncounter and added cleanup of $$hashKey from all module functions after each \ntest.\n\nBefore this CL, functions were added to the HashMap via toString(), which\ncould potentially return the same value for different actual instances of a\nfunction. This corrects this behaviour by ensuring that functions are mapped\nwith hashKeys, and ensuring that hashKeys are removed from functions and\nobjects at the end of tests.\n\nIn addition to these changes, the injector uses its own set of UIDs in order\nto prevent confusingly breaking tests which expect scopes or ng-repeated items\nto have specific hash keys.\n\nCloses #7255\n", "A_clean_body": ["**test", "pr**", "just", "verifi", "that", "thi", "pass", "ie8", "chang", "hashmap", "hash", "map", "give", "hashkey", "hash", "key", "also", "function", "so", "it", "will", "possibl", "load", "multipl", "modul", "function", "instanc", "order", "prevent", "problem", "angular", "'s", "test", "suit", "ad", "option", "hashmap", "hash", "map", "maintain", "it", "own", "id", "counter", "ad", "cleanup", "hashkey", "hash", "key", "all", "modul", "function", "after", "each", "test", "befor", "thi", "cl", "function", "were", "ad", "hashmap", "hash", "map", "via", "tostr", "string", "which", "could", "potenti", "return", "same", "valu", "differ", "actual", "instanc", "function", "thi", "correct", "thi", "behaviour", "by", "ensur", "that", "function", "are", "map", "hashkey", "hash", "key", "ensur", "that", "hashkey", "hash", "key", "are", "remov", "function", "object", "at", "end", "test", "addit", "these", "chang", "injector", "use", "it", "own", "set", "uid", "ui", "ds", "order", "prevent", "confusingli", "break", "test", "which", "expect", "scope", "or", "ng", "repeat", "item", "have", "specif", "hash", "key", "close", "7255"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "title_sim": [0.14612351267203055], "body_sim": [0.2055926597061277], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.01996711880646993, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 750}, {"A_title": "fix($location): support urls with any protocol", "A_clean_title": ["fix", "locat", "support", "url", "ani", "protocol"], "B_title": "docs($compileProvider): improve strictComponentBindingsEnabled info", "B_clean_title": ["doc", "compileprovid", "compil", "provid", "improv", "strictcomponentbindingsen", "strict", "compon", "bind", "enabl", "info"], "A_body": "The url used for location parsing was quite strict and did not support\ncustom url schemes like \"chrome-extension://\". With this change the only\nrequirement for scheme is that it doesn't contain \":\" character.\n", "A_clean_body": ["url", "use", "locat", "pars", "wa", "quit", "strict", "did", "not", "support", "custom", "url", "scheme", "like", "chrome", "extens", "thi", "chang", "onli", "requir", "scheme", "that", "it", "n't", "contain", "charact"], "B_body": "Related to #16303\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs are too unspecific.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["relat", "16303", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "are", "too", "unspecif", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.00885488473317827], "body_sim": [0.09679780044406956], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1998}, {"A_title": "perf(ngOptions): prevent initial options repainting", "A_clean_title": ["perf", "ngoption", "ng", "option", "prevent", "initi", "option", "repaint"], "B_title": "fix($parse): do not shallow-watch inputs when wrapped in an interceptor fn", "B_clean_title": ["fix", "pars", "not", "shallow", "watch", "input", "when", "wrap", "interceptor", "fn"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nSee #15812\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "see", "15812", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Fixes #15905 \r\n\r\nThis basically applies the same as b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f to interceptors.\r\n\r\nFor example normally when watching `[var]` the `var` only needs to be shallow-watched. But if that expression then gets wrapped in an interceptor such as `$parse('[var]', interceptor)` we must assume the `interceptor` is non-pure and might read state from within the `var` (just like filters/functions...).\r\n\r\nThis tries to preserve shallow watching of things behind operators such as `!` by distinguishing if an expression is pure due to an operator such as `!` (\"absolute\") or pure only if no parent operation wants to deep watch it (\"relative\").  This way when wrapped in an interceptor the \"absolute\" ones can still be shallow watched, while the \"relative\" ones that the interceptor has access to can no longer be shallow watched.\r\n\r\nThis still doesn't fully restore the 1.6.3 ng-class functionality because it still doesn't do a deep-watch for one-time bindings like 1.6.3 did. The one (famous last words...) remaining regression from 1.6.3 is demonstrated by the modified ng-class spec (objects-in-literals-with-interceptors-in-one-time bindings).  This is due to [this annoying condition](https://github.com/angular/angular.js/blob/b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f/src/ng/parse.js#L1946-L1948) which I really wish I could find a better method of doing...", "B_clean_body": ["fix", "15905", "thi", "basic", "appli", "same", "as", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "interceptor", "exampl", "normal", "when", "watch", "var", "var", "onli", "need", "shallow", "watch", "but", "that", "express", "then", "get", "wrap", "interceptor", "such", "as", "pars", "var", "interceptor", "we", "must", "assum", "interceptor", "non", "pure", "might", "read", "state", "within", "var", "just", "like", "filter", "function", "thi", "tri", "preserv", "shallow", "watch", "thing", "behind", "oper", "such", "as", "by", "distinguish", "express", "pure", "due", "oper", "such", "as", "absolut", "or", "pure", "onli", "no", "parent", "oper", "want", "deep", "watch", "it", "rel", "thi", "way", "when", "wrap", "interceptor", "absolut", "one", "still", "shallow", "watch", "while", "rel", "one", "that", "interceptor", "ha", "access", "no", "longer", "shallow", "watch", "thi", "still", "n't", "fulli", "restor", "ng", "class", "function", "becaus", "it", "still", "n't", "deep", "watch", "one", "time", "bind", "like", "did", "one", "famou", "last", "word", "remain", "regress", "demonstr", "by", "modifi", "ng", "class", "spec", "object", "liter", "interceptor", "one", "time", "bind", "thi", "due", "thi", "annoy", "condit", "http", "js", "github", "com", "angular", "angular", "js", "blob", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "src", "ng", "pars", "l1946", "l1948", "which", "realli", "wish", "could", "find", "better", "method", "do"], "title_sim": [-0.04345385528971909], "body_sim": [0.11785637283605754], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02391880386588108, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 31}, {"A_title": "chore(travis): speed up the build", "A_clean_title": ["chore", "travi", "speed", "up", "build"], "B_title": "feat(ngCookies): support sameSite option", "B_clean_title": ["feat", "ngcooki", "ng", "cooki", "support", "samesit", "same", "site", "option"], "A_body": "Just wanna see the travis build...\n- parallelize the tasks\n- cache requests (e2e tests)\n\nThis reduces the time from ~18min to ~12min.\n\nIt makes the output little messy. We could buffer output of each task and display it once it's fully finished, nicely. I think giving instant feedback is better.\n\nConflicts:\n    Gruntfile.js\n    package.json\n", "A_clean_body": ["just", "wan", "na", "see", "travi", "build", "parallel", "task", "cach", "request", "e2e", "test", "thi", "reduc", "time", "~18min", "~12min", "it", "make", "output", "littl", "messi", "we", "could", "buffer", "output", "each", "task", "display", "it", "onc", "it", "'s", "fulli", "finish", "nice", "think", "give", "instant", "feedback", "better", "conflict", "gruntfil", "js", "packag", "json"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature for issue https://github.com/angular/angular.js/issues/16543\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nsupport sameSite option for ngCookie\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16543", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "support", "samesit", "same", "site", "option", "ngcooki", "ng", "cooki", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.011732741056833237], "body_sim": [0.1138045456036174], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.11530905651776026, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1764}, {"A_title": "test(Angular): remove special case for Edge", "A_clean_title": ["test", "angular", "remov", "special", "case", "edg"], "B_title": "docs(app): adds border", "B_clean_title": ["doc", "app", "add", "border"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Adds a border to the top of the h2 like the current docs app.\n", "B_clean_body": ["add", "border", "top", "h2", "like", "current", "doc", "app"], "title_sim": [0.027534737246578733], "body_sim": [0.16593461357684292], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1229}, {"A_title": "docs(ngShow/ngHide): add note about flicker when toggling elements", "A_clean_title": ["doc", "ngshow", "nghide", "ng", "show", "ng", "hide", "add", "note", "about", "flicker", "when", "toggl", "element"], "B_title": "refactor($parse): move duplicate $parse interpreter/compiler logic into common location", "B_clean_title": ["refactor", "pars", "move", "duplic", "pars", "interpret", "compil", "logic", "into", "common", "locat"], "A_body": "Related to https://github.com/angular/angular.js/issues/14015\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["relat", "http", "github", "com", "angular", "angular", "js", "issu", "14015", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "... and deleted a couple other unused things.", "B_clean_body": ["delet", "coupl", "other", "unus", "thing"], "title_sim": [-0.01952384565120969], "body_sim": [-0.000995028283010698], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 356}, {"A_title": "chore(build): fix bower install", "A_clean_title": ["chore", "build", "fix", "bower", "instal"], "B_title": "docs ($compile): add error documentation for noslot error in $compile", "B_clean_title": ["doc", "compil", "add", "error", "document", "noslot", "error", "compil"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "there was no error page for the $compile:noslot error\r\n\r\nthis resolves #15790\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["there", "wa", "no", "error", "page", "compil", "noslot", "error", "thi", "resolv", "15790", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.023317438638635956], "body_sim": [0.9828335917506669], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 117}, {"A_title": "feat(input): add support for input[type=range]", "A_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "B_title": "fix($location): decode non-component special chars in Hashbang URLS", "B_clean_title": ["fix", "locat", "decod", "non", "compon", "special", "char", "hashbang", "url"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "B_body": "Fixes https://github.com/angular/angular.js/pull/16316#issuecomment-347527097\r\n", "B_clean_body": ["fix", "http", "github", "com", "angular", "angular", "js", "pull", "16316", "issuecom", "347527097"], "title_sim": [-0.011716416686138478], "body_sim": [0.33727374465968707], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005139066799897766, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 511}, {"A_title": "feat:$xhr: provide access to $xhr header defaults", "A_clean_title": ["feat", "xhr", "provid", "access", "xhr", "header", "default"], "B_title": "docs(ngRepeat): improve info about tracking", "B_clean_title": ["doc", "ngrepeat", "ng", "repeat", "improv", "info", "about", "track"], "A_body": "$xhr header defaults are now exposed as $xhr.defaults.headers.common and\n$xhr.default.headers.<httpmethod>. This allows applications to configure\ntheir defaults as needed.\n\nThis commit doesn't allow headers to be set per request, only per\napplication. Per request change would require api change, which I tried\nto avoid _for now_.\n", "A_clean_body": ["xhr", "header", "default", "are", "now", "expos", "as", "xhr", "default", "header", "common", "xhr", "default", "header", "httpmethod", "thi", "allow", "applic", "configur", "their", "default", "as", "need", "thi", "commit", "n't", "allow", "header", "set", "per", "request", "onli", "per", "applic", "per", "request", "chang", "would", "requir", "api", "chang", "which", "tri", "avoid", "now"], "B_body": "This is a follow-up to #16334 because I came to the conclusions that the relevant docs needed a bigger overhaul.\r\n\r\n- deduplicate info between docs section and arguments\r\n- don't draw too much attention to track by  ...\r\n- ... but highlight its drawbacks when used with one-time bindings\r\n- add example to show how tracking affects collection updates\r\n- clarify duplicates support for specific tracking expressions\r\n\r\nCloses #16332\r\nCloses #16334\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "follow", "up", "16334", "becaus", "came", "conclus", "that", "relev", "doc", "need", "bigger", "overhaul", "dedupl", "info", "between", "doc", "section", "argument", "n't", "draw", "too", "much", "attent", "track", "by", "but", "highlight", "it", "drawback", "when", "use", "one", "time", "bind", "add", "exampl", "show", "how", "track", "affect", "collect", "updat", "clarifi", "duplic", "support", "specif", "track", "express", "close", "16332", "close", "16334", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.10484821095008669], "body_sim": [0.12553586665401129], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02194762436050012, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2387}, {"A_title": "fix($compile): throw error in $onChanges immediately", "A_clean_title": ["fix", "compil", "throw", "error", "onchang", "chang", "immedi"], "B_title": "docs(faq): document the AngularJS/jqLite deprecation strategy", "B_clean_title": ["doc", "faq", "document", "angularj", "jqlite", "angular", "js", "jq", "lite", "deprec", "strategi"], "A_body": "This brings it in line with how we throw errors in a digest cycle.\r\n\r\nCloses https://github.com/angular/angular.js/issues/15578\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "bring", "it", "line", "how", "we", "throw", "error", "digest", "cycl", "close", "http", "github", "com", "angular", "angular", "js", "issu", "15578", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe deprecation strategy is not specified.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe deprecation strategy is specified.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\nFixes #15282", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "deprec", "strategi", "not", "specifi", "**what", "new", "behavior", "thi", "featur", "chang", "deprec", "strategi", "specifi", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "fix", "15282"], "title_sim": [0.04562402590133703], "body_sim": [0.8765932642999398], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 365}, {"A_title": "wip: feat(ngModel): run formatters / setModelValue", "A_clean_title": ["wip", "feat", "ngmodel", "ng", "model", "run", "formatt", "setmodelvalu", "set", "model", "valu"], "B_title": "fix($parse): do not shallow-watch computed property keys", "B_clean_title": ["fix", "pars", "not", "shallow", "watch", "comput", "properti", "key"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere's currently no way to manually run the model -> view pipeline / formatters\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAn API to run the whole pipeline / the formatters is introduced.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nThe PR includes both a `$format` and a `$setModelValue` function. I think only one is needed, we just need to decide which one.\r\n\r\n$format:\r\n\r\n- PRO: does the most needed thing, very straightforward: run the formatters and updates the viewValue\r\n- CON: developer must run $render manually\r\n- CON: empty classes are set even though the DOM is not updated. Could be moved to $render()\r\n- CON: no equivalent on the view -> model side (inconsistent API)\r\n\r\n$setModelValue\r\n- PRO: equivalent to $setViewValue, runs the whole pipeline\r\n- CON: unintuitive that the function argument should / must be set to the current $modelValue, so the control does not get out of sync with the scope (same behavior as $setViewValue though)\r\n- CON: only runs $render if the viewValue has actually changed.\r\n- CON: always runs the validation, even though it might not be necessary\r\n\r\nBoth methods can handle the basic case, where an app developer wants to run the formatters the view -> model pipeline has been run, see https://github.com/angular/angular.js/issues/3407 or https://github.com/angular/angular.js/pull/5221\r\n\r\nI personally tend to introduce `$format` as it has the smaller surface area and introduces fewer side effects. The full model -> view pipeline is not really needed for most cases.\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "'s", "current", "no", "way", "manual", "run", "model", "view", "pipelin", "formatt", "**what", "new", "behavior", "thi", "featur", "chang", "api", "run", "whole", "pipelin", "formatt", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "pr", "includ", "both", "format", "setmodelvalu", "set", "model", "valu", "function", "think", "onli", "one", "need", "we", "just", "need", "decid", "which", "one", "format", "pro", "most", "need", "thing", "veri", "straightforward", "run", "formatt", "updat", "viewvalu", "view", "valu", "con", "develop", "must", "run", "render", "manual", "con", "empti", "class", "are", "set", "even", "though", "dom", "not", "updat", "could", "move", "render", "con", "no", "equival", "view", "model", "side", "inconsist", "api", "setmodelvalu", "set", "model", "valu", "pro", "equival", "setviewvalu", "set", "view", "valu", "run", "whole", "pipelin", "con", "unintuit", "that", "function", "argument", "must", "set", "current", "modelvalu", "model", "valu", "so", "control", "not", "get", "out", "sync", "scope", "same", "behavior", "as", "setviewvalu", "set", "view", "valu", "though", "con", "onli", "run", "render", "viewvalu", "view", "valu", "ha", "actual", "chang", "con", "alway", "run", "valid", "even", "though", "it", "might", "not", "necessari", "both", "method", "handl", "basic", "case", "where", "app", "develop", "want", "run", "formatt", "view", "model", "pipelin", "ha", "been", "run", "see", "http", "github", "com", "angular", "angular", "js", "issu", "3407", "or", "http", "github", "com", "angular", "angular", "js", "pull", "5221", "person", "tend", "introduc", "format", "as", "it", "ha", "smaller", "surfac", "area", "introduc", "fewer", "side", "effect", "full", "model", "view", "pipelin", "not", "realli", "need", "most", "case"], "B_body": "Fixes a case which b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f missed. ES6 computed keys can implicitly invoke `.toString()` of an object so we can't shallow-watch it.\r\n\r\nThe other option is shallow-watching `String(key)` instead, but I'm a little hesitant to watch something slightly different then how it's used in the real expression.", "B_clean_body": ["fix", "case", "which", "b5118ac6a9e0a327b31094b3fdcdc0432b23ad2f", "miss", "es6", "comput", "key", "implicitli", "invok", "tostr", "string", "object", "so", "we", "ca", "n't", "shallow", "watch", "it", "other", "option", "shallow", "watch", "string", "key", "instead", "but", "'m", "littl", "hesit", "watch", "someth", "slightli", "differ", "then", "how", "it", "'s", "use", "real", "express"], "title_sim": [-0.02615687747110562], "body_sim": [0.0869411030988722], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06086493856945094, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 66}, {"A_title": "WIP: Scroll to anchor", "A_clean_title": ["wip", "scroll", "anchor"], "B_title": "chore: upgrade grunt packages to match master", "B_clean_title": ["chore", "upgrad", "grunt", "packag", "match", "master"], "A_body": "We need to find a name for this service...\n\nIt's actually only the last commit, I put it on the top of Misko's branch...\n", "A_clean_body": ["we", "need", "find", "name", "thi", "servic", "it", "'s", "actual", "onli", "last", "commit", "put", "it", "top", "misko", "'s", "branch"], "B_body": "Seems to fix Jenkins build.\n\nBroken: http://ci.angularjs.org/job/angular.js-angular-v1.0.x/lastBuild/console\n\nFixed: http://ci.angularjs.org/job/angular.js-brian/34/console\n", "B_clean_body": ["seem", "fix", "jenkin", "build", "broken", "http", "angular", "angularj", "js", "v1", "ci", "org", "job", "angular", "lastbuild", "consol", "last", "build", "fix", "http", "angularj", "js", "brian", "34", "consol", "ci", "org", "job", "angular"], "title_sim": [-0.0038858454985302875], "body_sim": [0.09109702727801551], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 654}, {"A_title": "fix(select): remove workaround for Chrome bug", "A_clean_title": ["fix", "select", "remov", "workaround", "chrome", "bug"], "B_title": "refactor(jqLite): stop patching individual jQuery methods", "B_clean_title": ["refactor", "jqlite", "jq", "lite", "stop", "patch", "individu", "jqueri", "queri", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRemoves a no-longer need workaround\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\nIn the Chrome issue (https://bugs.chromium.org/p/chromium/issues/detail?id=381459)\nI noticed that the bug can't be reproduced in Chrome 45 and the issue was\nclosed subsequently. I've also tested again with Chrome 51 and it still works.\n\nRelated: #6828\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "remov", "no", "longer", "need", "workaround", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "chrome", "issu", "http", "chromium", "bug", "org", "chromium", "issu", "detail", "id=381459", "notic", "that", "bug", "ca", "n't", "reproduc", "chrome", "45", "issu", "wa", "close", "subsequ", "'ve", "also", "test", "again", "chrome", "51", "it", "still", "work", "relat", "6828"], "B_body": "Currently Angular monkey-patches a few jQuery methods that remove elements\nfrom the DOM. Since methods like .remove() have multiple signatures\nthat can change what's actually removed, Angular needs to carefully\nrepeat them in its patching or it can break apps using jQuery correctly.\nSuch a strategy is also not future-safe.\n\nInstead of patching individual methods on the prototype, it's better to\nhook into jQuery.cleanData and trigger custom events there. This should be\nsafe as e.g. jQuery UI needs it and uses it. It'll also be future-safe.\n\nThe only drawback is that $destroy is no longer triggered when using $detach\nbut:\n1. Angular doesn't use this method, jqLite doesn't implement it.\n2. Detached elements can be re-attached keeping all their events & data\n    so it makes sense that $destroy is not triggered on them.\n3. The approach from this commit is so much safer that any issues with\n    .detach() working differently are outweighed by the robustness of the code.\n\nBREAKING CHANGE: the $destroy event is no longer triggered when using the\njQuery detach() method. If you want to destroy Angular data attached to the\nelement, use remove().\n\ncc @caitp\n", "B_clean_body": ["current", "angular", "monkey", "patch", "few", "jqueri", "queri", "method", "that", "remov", "element", "dom", "sinc", "method", "like", "remov", "have", "multipl", "signatur", "that", "chang", "what", "'s", "actual", "remov", "angular", "need", "care", "repeat", "them", "it", "patch", "or", "it", "break", "app", "jqueri", "queri", "correctli", "such", "strategi", "also", "not", "futur", "safe", "instead", "patch", "individu", "method", "prototyp", "it", "'s", "better", "hook", "into", "jqueri", "cleandata", "queri", "clean", "data", "trigger", "custom", "event", "there", "thi", "safe", "as", "jqueri", "queri", "ui", "need", "it", "use", "it", "it", "'ll", "also", "futur", "safe", "onli", "drawback", "that", "destroy", "no", "longer", "trigger", "when", "detach", "but", "angular", "n't", "use", "thi", "method", "jqlite", "jq", "lite", "n't", "implement", "it", "detach", "element", "re", "attach", "keep", "all", "their", "event", "data", "so", "it", "make", "sens", "that", "destroy", "not", "trigger", "them", "approach", "thi", "commit", "so", "much", "safer", "that", "ani", "issu", "detach", "work", "differ", "are", "outweigh", "by", "robust", "code", "break", "chang", "destroy", "event", "no", "longer", "trigger", "when", "jqueri", "queri", "detach", "method", "you", "want", "destroy", "angular", "data", "attach", "element", "use", "remov", "cc", "caitp"], "title_sim": [-0.009598104490634193], "body_sim": [0.29316620446874114], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 765}, {"A_title": "chore(*): stop testing on Edge 15 due to its instability", "A_clean_title": ["chore", "stop", "test", "edg", "15", "due", "it", "instabl"], "B_title": "docs(ngAria): fix markdown spacing for headers", "B_clean_title": ["doc", "ngaria", "ng", "aria", "fix", "markdown", "space", "header"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nChore.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nEdge 15 & 16 are tested.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nOnly Edge 16 is tested.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nEdge 15 disconnects from Karma frequently causing extreme build instability.\r\nWe are testing on Edge 16 & Edge 17 should be released soon anyway.", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "edg", "15", "16", "are", "test", "**what", "new", "behavior", "thi", "featur", "chang", "onli", "edg", "16", "test", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "edg", "15", "disconnect", "karma", "frequent", "caus", "extrem", "build", "instabl", "we", "are", "test", "edg", "16", "edg", "17", "releas", "soon", "anyway"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "title_sim": [0.1620822084491489], "body_sim": [0.9087122587873273], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 706}, {"A_title": "doc:$route: Fix $route example and couple of typos in docs", "A_clean_title": ["doc", "rout", "fix", "rout", "exampl", "coupl", "typo", "doc"], "B_title": "chore(*): add a Git .mailmap with my new name", "B_clean_title": ["chore", "add", "git", "mailmap", "my", "new", "name"], "A_body": "Rewrite $route example a bit, as it required $location and $route services\nto be eager published in the root scope.\n\nAdd missing partials (move them to docs/examples directory)\n\nFix small typos in formatter and ng:options docs.\n", "A_clean_body": ["rewrit", "rout", "exampl", "bit", "as", "it", "requir", "locat", "rout", "servic", "eager", "publish", "root", "scope", "add", "miss", "partial", "move", "them", "doc", "exampl", "directori", "fix", "small", "typo", "formatt", "ng", "option", "doc"], "B_body": "In this way my past contributions are mapped correctly.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nGit thinks I'm 2 people.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nI'm one person again.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\nOutput of `git shortlog -nse | head -25` after this PR (I see we could use more `.mailmap` entries, there are lots of duplicates):\r\n```\r\n   931\tIgor Minar <igor@angularjs.org>\r\n   692\tMisko Hevery <misko@hevery.com>\r\n   677\tPeter Bacon Darwin <pete@bacondarwin.com>\r\n   503\tIgor Minar <iiminar@gmail.com>\r\n   364\tVojta Jina <vojta.jina@gmail.com>\r\n   364\tMatias Niemel\u00e4 <matias@yearofmoo.com>\r\n   259\tMartin Staffa <mjstaffa@googlemail.com>\r\n   196\tCaitlin Potter <caitpotter88@gmail.com>\r\n   192\tBrian Ford <btford@umich.edu>\r\n   169\tGeorgios Kalpakas <g.kalpakas@hotmail.com>\r\n   140\tGeorgios Kalpakas <kalpakas.g@gmail.com>\r\n   127\tPete Bacon Darwin <pete@bacondarwin.com>\r\n   108\tJason Bedard <jason+github@jbedard.ca>\r\n   108\tMartin Staffa <mjstaffa@gmail.com>\r\n    99\tTobias Bosch <tbosch1009@gmail.com>\r\n    94\tMicha\u0142 Go\u0142e\u0328biowski <m.goleb@gmail.com>\r\n    71\tLucas Galfaso <lgalfaso@gmail.com>\r\n    70\tShahar Talmi <shahar.talmi@gmail.com>\r\n    65\tJeff Cross <middlefloor@gmail.com>\r\n    52\tChirayu Krishnappa <chirayu@chirayuk.com>\r\n    50\trodyhaddad <rody@rodyhaddad.com>\r\n    47\tPawel Kozlowski <pkozlowski.opensource@gmail.com>\r\n    45\tDi Peng <pengdi@google.com>\r\n    43\tVojta Jina <vojta@gemin-i.org>\r\n    41\tLucas Mirelmann <lgalfaso@gmail.com>\r\n```", "B_clean_body": ["thi", "way", "my", "past", "contribut", "are", "map", "correctli", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "git", "think", "'m", "peopl", "**what", "new", "behavior", "thi", "featur", "chang", "'m", "one", "person", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "output", "git", "shortlog", "nse", "head", "25", "after", "thi", "pr", "see", "we", "could", "use", "more", "mailmap", "entri", "there", "are", "lot", "duplic", "931", "igor", "minar", "igor", "angularj", "org", "692", "misko", "heveri", "misko", "heveri", "com", "677", "peter", "bacon", "darwin", "pete", "bacondarwin", "com", "503", "igor", "minar", "iiminar", "gmail", "com", "364", "vojta", "jina", "vojta", "jina", "gmail", "com", "364", "matia", "niemel\u00e4", "matia", "yearofmoo", "com", "259", "martin", "staffa", "mjstaffa", "googlemail", "com", "196", "caitlin", "potter", "caitpotter88", "gmail", "com", "192", "brian", "ford", "btford", "umich", "edu", "169", "georgio", "kalpaka", "kalpaka", "hotmail", "com", "140", "georgio", "kalpaka", "kalpaka", "gmail", "com", "127", "pete", "bacon", "darwin", "pete", "bacondarwin", "com", "108", "jason", "bedard", "jason+github", "jbedard", "ca", "108", "martin", "staffa", "mjstaffa", "gmail", "com", "99", "tobia", "bosch", "tbosch1009", "gmail", "com", "94", "micha\u0142", "go\u0142e\u0328biowski", "goleb", "gmail", "com", "71", "luca", "galfaso", "lgalfaso", "gmail", "com", "70", "shahar", "talmi", "shahar", "talmi", "gmail", "com", "65", "jeff", "cross", "middlefloor", "gmail", "com", "52", "chirayu", "krishnappa", "chirayu", "chirayuk", "com", "50", "rodyhaddad", "rodi", "rodyhaddad", "com", "47", "pawel", "kozlowski", "pkozlowski", "opensourc", "gmail", "com", "45", "di", "peng", "pengdi", "googl", "com", "43", "vojta", "jina", "vojta", "gemin", "org", "41", "luca", "mirelmann", "lgalfaso", "gmail", "com"], "title_sim": [0.030296078946801235], "body_sim": [0.07051528839018124], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2287}, {"A_title": "Update fixed docs content (guide)", "A_clean_title": ["updat", "fix", "doc", "content", "guid"], "B_title": "docs(guide/Internet Explorer Compatibility): Include warnings for usage of 'disabled' attribute", "B_clean_title": ["doc", "guid", "internet", "explor", "compat", "includ", "warn", "usag", "'disabl", "attribut"], "A_body": "Couple of typos fixed:\n- indentation\n- batchLogbatchLog -> batchLog\n- start periodic checking\n- missing brace\n", "A_clean_body": ["coupl", "typo", "fix", "indent", "batchlogbatchlog", "batch", "logbatch", "log", "batchlog", "batch", "log", "start", "period", "check", "miss", "brace"], "B_body": "Setting the 'disabled' attribute on an element that has descendant elements has unexpected behavior in Internet Explorer 11.\r\n\r\n* Input elements that are descendants have the text content of the 'placeholder' attribute inserted as the value (and it is not removed when typing in the field). Changes to the field are not reflected in the model value.\r\n* Select elements that are descendants are disabled.\r\n\r\nTo avoid this issue, it is important to not set `disabled` or `ng-disabled` on an element that has descendant form elements. Normally these should only be used on actual form controls so the issue would not manifest.\r\n\r\nThe issue can also appear if a directive/component is named 'disabled' or takes an attribute named 'disabled' as an input/output attribute, so avoid these.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nDocs do not mention IE11 bug regarding the disabled attribute on elements with descendants (though it shouldn't be used on non-form controls, this issue can prop up when making custom elements/attributes).\r\n\r\nA previous issue noticed the incorrect behavior regarding the 'placeholder' attribute on input elements but incorrectly thought the behavior to be a bug with AngularJS:\r\nhttps://github.com/angular/angular.js/issues/15700\r\n\r\nI am able to reproduce the issue in the Plunkr created by @Narretz on the aforementioned issue:\r\nhttp://plnkr.co/edit/jDJv5NtwwDSsp9hRT2rf?p=preview\r\n\r\nAlso, here's an updated version of the Plunkr showing model value is not updating due to the 'disabled' attribute:\r\nhttp://plnkr.co/edit/AHix3x3dOzySygDOcfJA?p=preview\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocs mention the bug and suggest preventative measures.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n", "B_clean_body": ["set", "'disabl", "attribut", "element", "that", "ha", "descend", "element", "ha", "unexpect", "behavior", "internet", "explor", "11", "input", "element", "that", "are", "descend", "have", "text", "content", "'placehold", "attribut", "insert", "as", "valu", "it", "not", "remov", "when", "type", "field", "chang", "field", "are", "not", "reflect", "model", "valu", "select", "element", "that", "are", "descend", "are", "disabl", "avoid", "thi", "issu", "it", "import", "not", "set", "disabl", "or", "ng", "disabl", "element", "that", "ha", "descend", "form", "element", "normal", "these", "onli", "use", "actual", "form", "control", "so", "issu", "would", "not", "manifest", "issu", "also", "appear", "direct", "compon", "name", "'disabl", "or", "take", "attribut", "name", "'disabl", "as", "input", "output", "attribut", "so", "avoid", "these", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "not", "mention", "ie11", "bug", "regard", "disabl", "attribut", "element", "descend", "though", "it", "n't", "use", "non", "form", "control", "thi", "issu", "prop", "up", "when", "make", "custom", "element", "attribut", "previou", "issu", "notic", "incorrect", "behavior", "regard", "'placehold", "attribut", "input", "element", "but", "incorrectli", "thought", "behavior", "bug", "angularj", "angular", "js", "http", "github", "com", "angular", "angular", "js", "issu", "15700", "am", "abl", "reproduc", "issu", "plunkr", "creat", "by", "narretz", "aforement", "issu", "http", "plnkr", "co", "edit", "jdjv5ntwwdssp9hrt2rf", "jv5ntww", "ssp9h", "rt2rf", "p=preview", "also", "here", "'s", "updat", "version", "plunkr", "show", "model", "valu", "not", "updat", "due", "'disabl", "attribut", "http", "plnkr", "co", "edit", "ahix3x3dozysygdocfja", "hix3x3d", "ozi", "syg", "ocf", "ja", "p=preview", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "mention", "bug", "suggest", "prevent", "measur", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.6306148395154751], "body_sim": [0.06456100817413093], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2459}, {"A_title": "refactor($compile): remove workaround for chrome bug fixed in v50", "A_clean_title": ["refactor", "compil", "remov", "workaround", "chrome", "bug", "fix", "v50"], "B_title": "chore(ci): disable unit testing on Firefox", "B_clean_title": ["chore", "ci", "disabl", "unit", "test", "firefox"], "A_body": "Based on the comments this shouldn't be needed anymore?", "A_clean_body": ["base", "comment", "thi", "n't", "need", "anymor"], "B_body": "Related to https://github.com/angular/angular.js/issues/15987\r\n\r\n", "B_clean_body": ["relat", "http", "github", "com", "angular", "angular", "js", "issu", "15987"], "title_sim": [-0.006226216045025422], "body_sim": [0.034512099100448675], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 353}, {"A_title": "docs(sce,urlutils): update table to use marked syntax", "A_clean_title": ["doc", "sce", "urlutil", "updat", "tabl", "use", "mark", "syntax"], "B_title": "fix($httpBackend): Ignore multiple calls to onreadystatechange with read...", "B_clean_title": ["fix", "httpbackend", "http", "backend", "ignor", "multipl", "call", "onreadystatechang", "read"], "A_body": "Commit 258cae83dc1a03b6b878a7b4236c499288cd2624 replaced Showdown with marked.\n", "A_clean_body": ["commit", "258cae83dc1a03b6b878a7b4236c499288cd2624", "replac", "showdown", "mark"], "B_body": "...yState=4\n\nOn mobile webkit `onreadystatechange` might by called multiple times\nwith `readyState===4`  caused by xhrs that are resolved while the app is\nin the background.\n\n Fixes #5426.\n", "B_clean_body": ["ystate=4", "state=4", "mobil", "webkit", "onreadystatechang", "might", "by", "call", "multipl", "time", "readystate===4", "readi", "state===4", "caus", "by", "xhr", "that", "are", "resolv", "while", "app", "background", "fix", "5426"], "title_sim": [0.09310824555863237], "body_sim": [0.014494015749029017], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 136}, {"A_title": "docs(guide/Component Router): fix npm typo", "A_clean_title": ["doc", "guid", "compon", "router", "fix", "npm", "typo"], "B_title": "Revert \"fix($parse): standardize one-time literal vs non-literal and interceptors\"", "B_clean_title": ["revert", "fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFix a npm install typo in the component router guide https://docs.angularjs.org/guide/component-router\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere is a typo for installing angular via npm in the component router guide\n\n**What is the new behavior (if this is a feature change)?**\n\nThe typo is fixed\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nFix a typo in npm install instructions\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "npm", "instal", "typo", "compon", "router", "guid", "http", "router", "angularj", "doc", "org", "guid", "compon", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "instal", "angular", "via", "npm", "compon", "router", "guid", "**what", "new", "behavior", "thi", "featur", "chang", "typo", "fix", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "typo", "npm", "instal", "instruct"], "B_body": "Reverts 60394a9d91dad8932fa900af7c8529837f1d4557 to fix #15905 in 1.6. Currently plan is to NOT revert in 1.7.\r\n\r\nFixes #15905 ", "B_clean_body": ["revert", "60394a9d91dad8932fa900af7c8529837f1d4557", "fix", "15905", "current", "plan", "not", "revert", "fix", "15905"], "title_sim": [0.10475167206465977], "body_sim": [0.2944510899119146], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 381}, {"A_title": "chore($sniffer): Remove $sniffer.hashchange", "A_clean_title": ["chore", "sniffer", "remov", "sniffer", "hashchang"], "B_title": "fix($httpBackend): use ActiveX XHR when making PATCH requests on IE8", "B_clean_title": ["fix", "httpbackend", "http", "backend", "use", "activex", "activ", "xhr", "when", "make", "patch", "request", "ie8"], "A_body": "The hashchange event is not supported only in ancient browsers like Android<2.2\nand IE<8. Angular never really supported IE7 and in 1.3 where support for IE8\nis dropped it makes even less sense to check for hashchange support.\n", "A_clean_body": ["hashchang", "event", "not", "support", "onli", "ancient", "browser", "like", "android", "ie", "angular", "never", "realli", "support", "ie7", "where", "support", "ie8", "drop", "it", "make", "even", "less", "sens", "check", "hashchang", "support"], "B_body": "IE8's native XHR doesn't support PATCH requests, but the ActiveX one does.\n\nCloses #2518\nCloses #5043\n", "B_clean_body": ["ie8", "'s", "nativ", "xhr", "n't", "support", "patch", "request", "but", "activex", "activ", "one", "close", "2518", "close", "5043"], "title_sim": [0.024011327467178177], "body_sim": [0.34474311159724835], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 299}, {"A_title": "Revert ng style regression for 1.3.x", "A_clean_title": ["revert", "ng", "style", "regress"], "B_title": "chore(*): update all Karma-related packages except Karma", "B_clean_title": ["chore", "updat", "all", "karma", "relat", "packag", "except", "karma"], "A_body": "I know, 1.4 is around the corner, but this should be handled nevertheless.\n", "A_clean_body": ["know", "around", "corner", "but", "thi", "handl", "nevertheless"], "B_body": "The updated karma-chrome-launcher adds support for ChromeHeadless &\r\nChromeCanaryHeadless launchers; test with:\r\n\r\n    karma start karma-jqlite.conf.js --browsers=ChromeCanaryHeadless\r\n\r\nThe updated karma-firefox-launcher disables multi-process which may increase\r\nstability on Jenkins.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nN/A\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["updat", "karma", "chrome", "launcher", "add", "support", "chromeheadless", "chrome", "headless", "chromecanaryheadless", "chrome", "canari", "headless", "launcher", "test", "karma", "start", "karma", "jqlite", "conf", "js", "browsers=chromecanaryheadless", "browsers=chrom", "canari", "headless", "updat", "karma", "firefox", "launcher", "disabl", "multi", "process", "which", "may", "increas", "stabil", "jenkin", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.022319489675241784], "body_sim": [0.15262848505319784], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 728}, {"A_title": "docs(ngAria): fix markdown spacing for headers", "A_clean_title": ["doc", "ngaria", "ng", "aria", "fix", "markdown", "space", "header"], "B_title": "chore($sniffer): Remove $sniffer.hashchange", "B_clean_title": ["chore", "sniffer", "remov", "sniffer", "hashchang"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "B_body": "The hashchange event is not supported only in ancient browsers like Android<2.2\nand IE<8. Angular never really supported IE7 and in 1.3 where support for IE8\nis dropped it makes even less sense to check for hashchange support.\n", "B_clean_body": ["hashchang", "event", "not", "support", "onli", "ancient", "browser", "like", "android", "ie", "angular", "never", "realli", "support", "ie7", "where", "support", "ie8", "drop", "it", "make", "even", "less", "sens", "check", "hashchang", "support"], "title_sim": [0.1645084147151025], "body_sim": [0.08868550745653678], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 560}, {"A_title": "docs(angular.Module): improved documentation for component method", "A_clean_title": ["doc", "angular", "modul", "improv", "document", "compon", "method"], "B_title": "fix(ngModel, input): improve handling of built-in named parsers", "B_clean_title": ["fix", "ngmodel", "ng", "model", "input", "improv", "handl", "built", "name", "parser"], "A_body": "Copy improved documentation for component() method from $compileProvider\r\nand add missing object syntax.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDoes not mention all syntaxes, is inconsistent with other documentation.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nFixes these issues\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["copi", "improv", "document", "compon", "method", "compileprovid", "compil", "provid", "add", "miss", "object", "syntax", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "not", "mention", "all", "syntax", "inconsist", "other", "document", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "these", "issu", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This commit changes how input elements use the private $$parserName\r\nproperty on the ngModelController to name parse errors. Until now,\r\nthe input types (number, date etc.) would set $$parserName when\r\nthe inputs were initialized, which meant that any other parsers on\r\nthe ngModelController would also be named after that type. The\r\neffect of that was that the `$error` property and the `ng-invalid-...`\r\nclass would always be that of the built-in parser, even if the custom\r\nparser had nothing to do with it.\r\n\r\nThe new behavior is that the $$parserName is only set if the actual\r\nparser is invalid, i.e. returns `undefined`.\r\n\r\nAlso, $$parserName has been removed from input[email] and input[url],\r\nas these types do not have a built-in parser anymore.\r\n\r\nBREAKING CHANGE:\r\n\r\nCustom parsers that fail to parse on input types email, url, date, month, time,\r\ndatetime-local, week, do no longer set $error[inputType], and no longer set the class\r\n`ng-invalid-[inputType]`. Instead, they set $error.parse and `ng-invalid-parse`.\r\n\r\nCloses #14292 \r\nCloses #10076\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nThis is a general fix to https://github.com/angular/angular.js/issues/10076 and also incorporates the changes in https://github.com/angular/angular.js/pull/14292.\r\nWhile it's not a very common problem, I always found this section of the API very strange, especially since it uses an undocumented API (so if you stumble on it, it's even more difficult to find out what causes it).\r\nSince https://github.com/angular/angular.js/pull/14292 is already a very small BC I thought a general solution to this issue would be welcome.\r\nNote that I will include tests for the other input types if this implementation is approved.\r\n\r\n", "B_clean_body": ["thi", "commit", "chang", "how", "input", "element", "use", "privat", "parsernam", "parser", "name", "properti", "ngmodelcontrol", "ng", "model", "control", "name", "pars", "error", "until", "now", "input", "type", "number", "date", "etc", "would", "set", "parsernam", "parser", "name", "when", "input", "were", "initi", "which", "meant", "that", "ani", "other", "parser", "ngmodelcontrol", "ng", "model", "control", "would", "also", "name", "after", "that", "type", "effect", "that", "wa", "that", "error", "properti", "ng", "invalid", "class", "would", "alway", "that", "built", "parser", "even", "custom", "parser", "had", "noth", "it", "new", "behavior", "that", "parsernam", "parser", "name", "onli", "set", "actual", "parser", "invalid", "return", "undefin", "also", "parsernam", "parser", "name", "ha", "been", "remov", "input", "email", "input", "url", "as", "these", "type", "not", "have", "built", "parser", "anymor", "break", "chang", "custom", "parser", "that", "fail", "pars", "input", "type", "email", "url", "date", "month", "time", "datetim", "local", "week", "no", "longer", "set", "error", "inputtyp", "input", "type", "no", "longer", "set", "class", "ng", "invalid", "inputtyp", "input", "type", "instead", "they", "set", "error", "pars", "ng", "invalid", "pars", "close", "14292", "close", "10076", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "gener", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "10076", "also", "incorpor", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "while", "it", "'s", "not", "veri", "common", "problem", "alway", "found", "thi", "section", "api", "veri", "strang", "especi", "sinc", "it", "use", "undocu", "api", "so", "you", "stumbl", "it", "it", "'s", "even", "more", "difficult", "find", "out", "what", "caus", "it", "sinc", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "alreadi", "veri", "small", "bc", "thought", "gener", "solut", "thi", "issu", "would", "welcom", "note", "that", "will", "includ", "test", "other", "input", "type", "thi", "implement", "approv"], "title_sim": [0.05802517520677641], "body_sim": [0.6775462900994724], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005852225436877325, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 156}, {"A_title": "fix($compile): don't run unnecessary update to one-way bindings", "A_clean_title": ["fix", "compil", "n't", "run", "unnecessari", "updat", "one", "way", "bind"], "B_title": "docs(input[number]): note issue with large number and step validation", "B_clean_title": ["doc", "input", "number", "note", "issu", "larg", "number", "step", "valid"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nBug Fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe watch handler was triggering on its first invocation, even though\nits change had already been dealt with when setting up the binding.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe handler does not trigger an update on its first invocation\n\n**Does this PR introduce a breaking change?**\n\nNope - I don't think so. Although I had to modify a bunch of tests to ensure that a digest occurred between compilation and the first checks.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n  ~~\\- [ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nCloses #14546\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "watch", "handler", "wa", "trigger", "it", "first", "invoc", "even", "though", "it", "chang", "had", "alreadi", "been", "dealt", "when", "set", "up", "bind", "**what", "new", "behavior", "thi", "featur", "chang", "handler", "not", "trigger", "updat", "it", "first", "invoc", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "n't", "think", "so", "although", "had", "modifi", "bunch", "test", "ensur", "that", "digest", "occur", "between", "compil", "first", "check", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "close", "14546"], "B_body": "Closes #16486\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["close", "16486", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.020216159449615353], "body_sim": [0.8331960689266896], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.04936127351954898, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 742}, {"A_title": "fix(date filter): default to fullDate format", "A_clean_title": ["fix", "date", "filter", "default", "fulldat", "full", "date", "format"], "B_title": "fix($parse): properly handle dots at the end of identifiers", "B_clean_title": ["fix", "pars", "properli", "handl", "dot", "at", "end", "identifi"], "A_body": "The browser's behave inconsistently, so we should just stick to one format\nwhen the format is not specified by the developer\n\nCloses #605\n", "A_clean_body": ["browser", "'s", "behav", "inconsist", "so", "we", "just", "stick", "one", "format", "when", "format", "not", "specifi", "by", "develop", "close", "605"], "B_body": "Fixes #4613\nFixes #4912\n", "B_clean_body": ["fix", "4613", "fix", "4912"], "title_sim": [-0.07438773070797167], "body_sim": [0.015627419722849797], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1027}, {"A_title": "refactor($browser): remove workaround for old ff bug", "A_clean_title": ["refactor", "browser", "remov", "workaround", "old", "ff", "bug"], "B_title": "feat(scope): add listener deregistration fn for $watch and $on", "B_clean_title": ["feat", "scope", "add", "listen", "deregistr", "fn", "watch"], "A_body": "- https://bugzilla.mozilla.org/show_bug.cgi?id=407172 was fixed in ff 40\r\n\r\nFF 40 is probably old enough we can remove this?", "A_clean_body": ["http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=407172", "wa", "fix", "ff", "40", "ff", "40", "probabl", "old", "enough", "we", "remov", "thi"], "B_body": "- both $watch and $on now return a function which when called\n  deregisters the listener\n- $removeListener was removed and replaced with the above\n- added more tests for $watch and $on\n\nCloses #542\n", "B_clean_body": ["both", "watch", "now", "return", "function", "which", "when", "call", "deregist", "listen", "removelisten", "remov", "listen", "wa", "remov", "replac", "abov", "ad", "more", "test", "watch", "close", "542"], "title_sim": [0.12016277061271961], "body_sim": [0.21760708611008797], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2119}, {"A_title": "fix($sanitize): sanitize `xml:base` attributes", "A_clean_title": ["fix", "sanit", "sanit", "xml", "base", "attribut"], "B_title": "test($parse): add one-time/interceptor tests", "B_clean_title": ["test", "pars", "add", "one", "time", "interceptor", "test"], "A_body": "On Firefox there is a XSS vulnerability if a malicious attacker\r\ncan write into the `xml:base` attribute on an SVG anchor.\r\n", "A_clean_body": ["firefox", "there", "xss", "vulner", "malici", "attack", "write", "into", "xml", "base", "attribut", "svg", "anchor"], "B_body": "I realized that https://github.com/angular/angular.js/commit/189461f9bf6fda18ddbd16c42f2e959cf939c3da changed this a little - previously the second test failed for two reasons\r\n1. one-time literals [did not use .inputs](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) unlike the normal [one-time delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1856), so the `identity` interceptor would throw an infdig because the literal recreated each digest was being watched\r\n2. one-time literals with interceptors [only check `isDefined`](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1933) to determine when the one time is \"done\" which is unlike [the one-time watch delegate](https://github.com/angular/angular.js/blob/93879b3c721f4c0273c90e9bfeb368425b0078c4/src/ng/parse.js#L1881) that checks all the values in the literal, so the interceptor thought the \"one-time\" was done right away for literals\r\n\r\nI think both of these changes are correct and want to make sure we don't revert them. This should probably only go into 1.7 since this change will [probably be reverted](https://github.com/angular/angular.js/pull/15958) in 1.6.", "B_clean_body": ["realiz", "that", "http", "github", "com", "angular", "angular", "js", "commit", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "chang", "thi", "littl", "previous", "second", "test", "fail", "two", "reason", "one", "time", "liter", "did", "not", "use", "input", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "unlik", "normal", "one", "time", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1856", "so", "ident", "interceptor", "would", "throw", "infdig", "becaus", "liter", "recreat", "each", "digest", "wa", "be", "watch", "one", "time", "liter", "interceptor", "onli", "check", "isdefin", "defin", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1933", "determin", "when", "one", "time", "done", "which", "unlik", "one", "time", "watch", "deleg", "http", "js", "github", "com", "angular", "angular", "js", "blob", "93879b3c721f4c0273c90e9bfeb368425b0078c4", "src", "ng", "pars", "l1881", "that", "check", "all", "valu", "liter", "so", "interceptor", "thought", "one", "time", "wa", "done", "right", "away", "liter", "think", "both", "these", "chang", "are", "correct", "want", "make", "sure", "we", "n't", "revert", "them", "thi", "probabl", "onli", "go", "into", "sinc", "thi", "chang", "will", "probabl", "revert", "http", "github", "com", "angular", "angular", "js", "pull", "15958"], "title_sim": [0.04893046337202692], "body_sim": [0.14189563923242152], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0009426107094663637, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 211}, {"A_title": "fix(select): keep original selection when using shift to add options \u2026", "A_clean_title": ["fix", "select", "keep", "origin", "select", "when", "shift", "add", "option"], "B_title": "docs($sanitizeProvider): fix param comment for enableSvg", "B_clean_title": ["doc", "sanitizeprovid", "sanit", "provid", "fix", "param", "comment", "enablesvg", "enabl", "svg"], "A_body": "\u2026in IE/Edge\r\n\r\nIn IE9-11 + Edge, the selected options were previously incorrect under the following\r\ncircumstances:\r\n- at least two options are selected\r\n- shift+click or shift+down/up is used to add to the selection (any number of options)\r\n\r\nIn these cases, only the last of the previously selected options and the newly selected\r\noptions would be selected.\r\n\r\nThe problems seems to be that the render engine gets confused when an option that\r\nalready has selected = true gets selected = true set again.\r\n\r\nNote that this is not testable via unit test because it's not possible to simulate\r\nclick / keyboard events on option elements (the events are delegated to the select element\r\nchange event).\r\n\r\nFixes #15675\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #15675\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~[ ] Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["\u2026in", "ie", "edg", "ie9", "11", "edg", "select", "option", "were", "previous", "incorrect", "under", "follow", "circumst", "at", "least", "two", "option", "are", "select", "shift+click", "or", "shift+down", "up", "use", "add", "select", "ani", "number", "option", "these", "case", "onli", "last", "previous", "select", "option", "newli", "select", "option", "would", "select", "problem", "seem", "that", "render", "engin", "get", "confus", "when", "option", "that", "alreadi", "ha", "select", "true", "get", "select", "true", "set", "again", "note", "that", "thi", "not", "testabl", "via", "unit", "test", "becaus", "it", "'s", "not", "possibl", "simul", "click", "keyboard", "event", "option", "element", "event", "are", "deleg", "select", "element", "chang", "event", "fix", "15675", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "15675", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe param is listed as type boolean, but has an erroneous comment describing it as a regex. (Maybe from a much earlier version of Angular?)\n\n**What is the new behavior (if this is a feature change)?**\n\nNo behavior change. Fixes the doc comment.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nI submitted a pull request for this previously, but the commit had the wrong email address so it didn't catch my CLA, so I'm resubmitting now.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "param", "list", "as", "type", "boolean", "but", "ha", "erron", "comment", "describ", "it", "as", "regex", "mayb", "much", "earlier", "version", "angular", "**what", "new", "behavior", "thi", "featur", "chang", "no", "behavior", "chang", "fix", "doc", "comment", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "submit", "pull", "request", "thi", "previous", "but", "commit", "had", "wrong", "email", "address", "so", "it", "did", "n't", "catch", "my", "cla", "so", "'m", "resubmit", "now"], "title_sim": [0.022840390438901206], "body_sim": [0.6593566690985919], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005166003035568089, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 279}, {"A_title": "fixed opera date.toISOString issue", "A_clean_title": ["fix", "opera", "date", "toisostr", "iso", "string", "issu"], "B_title": "Remove angular.uppercase/lowercase", "B_clean_title": ["remov", "angular", "uppercas", "lowercas"], "A_body": "opera did not implement date.toISOString correctly according to Javascript guideline. \nSo we have to change the toString method of angularDate at line 766 of src/apis.js. \n", "A_clean_body": ["opera", "did", "not", "implement", "date", "toisostr", "iso", "string", "correctli", "accord", "javascript", "guidelin", "so", "we", "have", "chang", "tostr", "string", "method", "angulard", "angular", "date", "at", "line", "766", "js", "src", "api"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix/refactor\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nwe expose lowercase/uppercase on the public angular object\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nyes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "expos", "lowercas", "uppercas", "public", "angular", "object", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.03406919692408827], "body_sim": [0.25456970237338206], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2006}, {"A_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "A_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "B_title": "fix(select): don't register options when select has no ngModel", "B_clean_title": ["fix", "select", "n't", "regist", "option", "when", "select", "ha", "no", "ngmodel", "ng", "model"], "A_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "A_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nOptions are added even if select has no ngModel. ngValue replaces the value attribute of the element with a hashed value, and this might break tests (it does in angular material)\n\n**What is the new behavior (if this is a feature change)?**\nOptions are not added to select\n\n**Does this PR introduce a breaking change?**\n?\nI can't think of a valid use case where you'd want registerning options without ngModel integration. If you don't have model binding, then you don't need to store the options internally. You can actually use ngOptions without ngModel to render a list of options - but you don't need to register the options for that.\n\nThe registerOption function is also not documented, so this is an implementation detail from the perspective of the user\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nWhen option elements use ngValue, value or interpolated text simply to set\nthe option value, i.e. when the parent select doesn't have an ngModel,\nthere is no necessity in registering the options with the select controller.\nThis was previously no problem, as the ngModelController is set to a noop controller,\nso that all further interactions are aborted ($render etc)\n\nHowever, ngValue sets a hashed value inside the option value (to support arbitrary object types).\nThis can cause issues with tests that expect unhashed values.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "option", "are", "ad", "even", "select", "ha", "no", "ngmodel", "ng", "model", "ngvalu", "ng", "valu", "replac", "valu", "attribut", "element", "hash", "valu", "thi", "might", "break", "test", "it", "angular", "materi", "**what", "new", "behavior", "thi", "featur", "chang", "option", "are", "not", "ad", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ca", "n't", "think", "valid", "use", "case", "where", "you", "'d", "want", "registern", "option", "without", "ngmodel", "ng", "model", "integr", "you", "n't", "have", "model", "bind", "then", "you", "n't", "need", "store", "option", "intern", "you", "actual", "use", "ngoption", "ng", "option", "without", "ngmodel", "ng", "model", "render", "list", "option", "but", "you", "n't", "need", "regist", "option", "that", "registeropt", "regist", "option", "function", "also", "not", "document", "so", "thi", "implement", "detail", "perspect", "user", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "when", "option", "element", "use", "ngvalu", "ng", "valu", "valu", "or", "interpol", "text", "simpli", "set", "option", "valu", "when", "parent", "select", "n't", "have", "ngmodel", "ng", "model", "there", "no", "necess", "regist", "option", "select", "control", "thi", "wa", "previous", "no", "problem", "as", "ngmodelcontrol", "ng", "model", "control", "set", "noop", "control", "so", "that", "all", "further", "interact", "are", "abort", "render", "etc", "howev", "ngvalu", "ng", "valu", "set", "hash", "valu", "insid", "option", "valu", "support", "arbitrari", "object", "type", "thi", "caus", "issu", "test", "that", "expect", "unhash", "valu"], "title_sim": [0.14148594393773964], "body_sim": [0.13882253695912414], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 867}, {"A_title": "Update badjsonp.ngdoc", "A_clean_title": ["updat", "badjsonp", "ngdoc"], "B_title": "feat($parse): secure expressions by hiding \"private\" properties", "B_clean_title": ["feat", "pars", "secur", "express", "by", "hide", "privat", "properti"], "A_body": "\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nThis is docs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere is a typo in badjsonp.ngdoc\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocumentation is now correct.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "thi", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "badjsonp", "ngdoc", "**what", "new", "behavior", "thi", "featur", "chang", "document", "now", "correct", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "## BREAKING CHANGE:\n\nThis commit introduces the notion of \"private\" properties (properties\nwhose names begin and/or end with an underscore) on the scope chain.\nThese properties will not be available to Angular expressions (i.e. {{\n}} interpolation in templates and strings passed to `$parse`)  They are\nfreely available to JavaScript code (as before).\n## Motivation\n\nAngular expressions execute in a limited context.\u00a0 They do not have\ndirect access to the global scope, Window, Document or the Function\nconstructor.\u00a0 However, they have direct access to names/properties on\nthe scope chain.\u00a0 It has been a long standing best practice to keep\nsensitive APIs outside of the scope chain (in a closure or your\ncontroller.)\u00a0 That's easier said that done for two reasons: (1)\nJavaScript does not have a notion of private properties so if you need\nsomeone on the scope chain for JavaScript use, you also expose it to\nAngular expressions, and (2) the new \"controller as\" syntax that's now\nin increased usage exposes the entire controller on the scope chain\ngreatly increaing the exposed surface.\u00a0 Though Angular expressions are\nwritten and controlled by the developer, they (1) typically deal with\nuser input and (2) don't get the kind of test coverage that JavaScript\ncode would.\u00a0 This commit provides a way, via a naming convention, to\nallow publishing/restricting properties from controllers/scopes to\nAngular expressions enabling one to only expose those properties that\nare actually needed by the expressions.\n", "B_clean_body": ["break", "chang", "thi", "commit", "introduc", "notion", "privat", "properti", "properti", "whose", "name", "begin", "or", "end", "underscor", "scope", "chain", "these", "properti", "will", "not", "avail", "angular", "express", "interpol", "templat", "string", "pass", "pars", "they", "are", "freeli", "avail", "javascript", "java", "script", "code", "as", "befor", "motiv", "angular", "express", "execut", "limit", "context", "they", "not", "have", "direct", "access", "global", "scope", "window", "document", "or", "function", "constructor", "howev", "they", "have", "direct", "access", "name", "properti", "scope", "chain", "it", "ha", "been", "long", "stand", "best", "practic", "keep", "sensit", "api", "ap", "outsid", "scope", "chain", "closur", "or", "your", "control", "that", "'s", "easier", "said", "that", "done", "two", "reason", "javascript", "java", "script", "not", "have", "notion", "privat", "properti", "so", "you", "need", "someon", "scope", "chain", "javascript", "java", "script", "use", "you", "also", "expos", "it", "angular", "express", "new", "control", "as", "syntax", "that", "'s", "now", "increas", "usag", "expos", "entir", "control", "scope", "chain", "greatli", "increa", "expos", "surfac", "though", "angular", "express", "are", "written", "control", "by", "develop", "they", "typic", "deal", "user", "input", "n't", "get", "kind", "test", "coverag", "that", "javascript", "java", "script", "code", "would", "thi", "commit", "provid", "way", "via", "name", "convent", "allow", "publish", "restrict", "properti", "control", "scope", "angular", "express", "enabl", "one", "onli", "expos", "those", "properti", "that", "are", "actual", "need", "by", "express"], "title_sim": [0.09704301493815509], "body_sim": [0.21908250072862345], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1299}, {"A_title": "docs app style updates", "A_clean_title": ["doc", "app", "style", "updat"], "B_title": "perf($rootScope): do not mark $watchCollectionInterceptor as $stateful", "B_clean_title": ["perf", "rootscop", "root", "scope", "not", "mark", "watchcollectioninterceptor", "watch", "collect", "interceptor", "as", "state"], "A_body": "This updates the docs app to the new header style found on angularjs.org.\r\n\r\nI've also taken the liberty to update the menu entries on the doc site - pending approval I'll update the org site, too (would fix https://github.com/angular/angular.js/issues/14351)\r\n\r\nAnd fixes https://github.com/angular/angular.js/issues/14963\r\n\r\nNotable differences between org / docs:\r\n- search icon\r\n- font family / weight (should we update?)\r\n- no drop shadow on navbar because there's a secondary bar on docs\r\n\r\nNotable differences between docs old / new:\r\n- mobile: the top header + search are fixed, sub header is relative (previously all relative)\r\n- mobile search close icon has moved over the search bar, because I had some problems giving it it's previous position while keeping the search results scrollable (oh my)\r\n\r\nImplementation notes:\r\n- angular-topnav.css is included as is from org site\r\n- several overrides necessary because org uses bootstrap 2 / docs uses bs 3 (oh my)\r\n- org site uses one breakpoint at 800px, docs uses one at 768 and one at 992. I tested it and it doesn't affect the common screen sizes\r\n\r\nFuture work:\r\n- clean up the css and maybe implement sass for the docs app\r\n\r\nScreens:\r\n\r\n![fireshot screen capture 014 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop dropdown open](https://cloud.githubusercontent.com/assets/1153097/22548685/f47fb29c-e947-11e6-8f41-a6ab683a4037.png)\r\n![fireshot screen capture 015 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop search](https://cloud.githubusercontent.com/assets/1153097/22548686/f481f354-e947-11e6-8ea6-735012fe9c9c.png)\r\n![fireshot screen capture 016 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone dropdown](https://cloud.githubusercontent.com/assets/1153097/22548683/f47f66ac-e947-11e6-87b3-8317404394a1.png)\r\n![fireshot screen capture 017 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone search](https://cloud.githubusercontent.com/assets/1153097/22548684/f47fad88-e947-11e6-80c6-9beb87f70c53.png)\r\n", "A_clean_body": ["thi", "updat", "doc", "app", "new", "header", "style", "found", "angularj", "org", "'ve", "also", "taken", "liberti", "updat", "menu", "entri", "doc", "site", "pend", "approv", "'ll", "updat", "org", "site", "too", "would", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14351", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14963", "notabl", "differ", "between", "org", "doc", "search", "icon", "font", "famili", "weight", "we", "updat", "no", "drop", "shadow", "navbar", "becaus", "there", "'s", "secondari", "bar", "doc", "notabl", "differ", "between", "doc", "old", "new", "mobil", "top", "header", "search", "are", "fix", "sub", "header", "rel", "previous", "all", "rel", "mobil", "search", "close", "icon", "ha", "move", "over", "search", "bar", "becaus", "had", "some", "problem", "give", "it", "it", "'s", "previou", "posit", "while", "keep", "search", "result", "scrollabl", "oh", "my", "implement", "note", "angular", "topnav", "css", "includ", "as", "org", "site", "sever", "overrid", "necessari", "becaus", "org", "use", "bootstrap", "doc", "use", "bs", "oh", "my", "org", "site", "use", "one", "breakpoint", "at", "800px", "doc", "use", "one", "at", "768", "one", "at", "992", "test", "it", "it", "n't", "affect", "common", "screen", "size", "futur", "work", "clean", "up", "css", "mayb", "implement", "sass", "doc", "app", "screen", "fireshot", "screen", "captur", "014", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "dropdown", "open", "http", "e947", "11e6", "8f41", "githubusercont", "a6ab683a4037", "png", "cloud", "com", "asset", "1153097", "22548685", "f47fb29c", "fireshot", "screen", "captur", "015", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "search", "http", "e947", "11e6", "8ea6", "githubusercont", "735012fe9c9c", "png", "cloud", "com", "asset", "1153097", "22548686", "f481f354", "fireshot", "screen", "captur", "016", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "dropdown", "http", "e947", "11e6", "87b3", "githubusercont", "8317404394a1", "png", "cloud", "com", "asset", "1153097", "22548683", "f47f66ac", "fireshot", "screen", "captur", "017", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "search", "http", "e947", "11e6", "80c6", "githubusercont", "9beb87f70c53", "png", "cloud", "com", "asset", "1153097", "22548684", "f47fad88"], "B_body": "I think this was a mistake [from the start](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa?diff=unified#diff-44d3307b66bf51b52e110307fa57e196R518).  This interceptor doesn't actually store any state, it just reads the inner/complex state of its input. EDIT: actually it had a purpose originally, although may no longer be as significant, see https://github.com/angular/angular.js/pull/16009#issuecomment-311543600\r\n\r\nRemoving the `$stateful` flag will allow some expressions (those with `inputs` such as array/object literals) to avoid invoking `$watchCollectionInterceptor` and avoid creating the literals etc. on each digest.", "B_clean_body": ["think", "thi", "wa", "mistak", "start", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff=unifi", "diff", "44d3307b66bf51b52e110307fa57e196r518", "thi", "interceptor", "n't", "actual", "store", "ani", "state", "it", "just", "read", "inner", "complex", "state", "it", "input", "edit", "actual", "it", "had", "purpos", "origin", "although", "may", "no", "longer", "as", "signific", "see", "http", "github", "com", "angular", "angular", "js", "pull", "16009", "issuecom", "311543600", "remov", "state", "flag", "will", "allow", "some", "express", "those", "input", "such", "as", "array", "object", "liter", "avoid", "invok", "watchcollectioninterceptor", "watch", "collect", "interceptor", "avoid", "creat", "liter", "etc", "each", "digest"], "title_sim": [-0.03397152829387773], "body_sim": [0.31089540401661997], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.007206738740762767, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 112}, {"A_title": "docs(contributing): fix indentation for proper Markdown syntax", "A_clean_title": ["doc", "contribut", "fix", "indent", "proper", "markdown", "syntax"], "B_title": "docs($q): fixup dgeni ngdoc annotations for $q methods", "B_clean_title": ["doc", "fixup", "dgeni", "ngdoc", "annot", "method"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nMarkdown isn't displayed properly.\n\n**What is the new behavior (if this is a feature change)?**\nMarkdown is displayed properly.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "markdown", "n't", "display", "properli", "**what", "new", "behavior", "thi", "featur", "chang", "markdown", "display", "properli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Just a tiny fixup, that's all.\n\nCloses #6317\n", "B_clean_body": ["just", "tini", "fixup", "that", "'s", "all", "close", "6317"], "title_sim": [0.14914369485875675], "body_sim": [0.029019113800740685], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 902}, {"A_title": "fix(input): correctly handle invalid model values for `input[date/time/\u2026...", "A_clean_title": ["fix", "input", "correctli", "handl", "invalid", "model", "valu", "input", "date", "time"], "B_title": "docs(guide/Conceptual Overview): fix external api example", "B_clean_title": ["doc", "guid", "conceptu", "overview", "fix", "extern", "api", "exampl"], "A_body": "...]`\n\nSimilar to `input[number]` Angular will throw if the model value\nfor a `input[date]` is not a `Date` object.\nFor `Invalid Date`s (dates who\u2019s `getTime()` is `NaN`) `input[date]` \nwill render an empty string.\n\nCloses #8949\n", "A_clean_body": ["similar", "input", "number", "angular", "will", "throw", "model", "valu", "input", "date", "not", "date", "object", "invalid", "date", "date", "who", "gettim", "get", "time", "nan", "na", "input", "date", "will", "render", "empti", "string", "close", "8949"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nExample is broken in the snapshot because of changes to JSONP\n\n**Other information**:\n\nThe example will still be broken when opened in a plnkr, because they use the stable version instead of the snapshot.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "broken", "snapshot", "becaus", "chang", "jsonp", "**other", "information**", "exampl", "will", "still", "broken", "when", "open", "plnkr", "becaus", "they", "use", "stabl", "version", "instead", "snapshot"], "title_sim": [0.06239081578036886], "body_sim": [0.030685650882094902], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 759}, {"A_title": "chore(*): normalize Vojta's email in .mailmap correctly", "A_clean_title": ["chore", "normal", "vojta", "'s", "email", "mailmap", "correctli"], "B_title": "fix($httpBackend): use ActiveX XHR when making PATCH requests on IE8", "B_clean_title": ["fix", "httpbackend", "http", "backend", "use", "activex", "activ", "xhr", "when", "make", "patch", "request", "ie8"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nVojta's mails are not normalized.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThey are normalized.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "vojta", "'s", "mail", "are", "not", "normal", "**what", "new", "behavior", "thi", "featur", "chang", "they", "are", "normal", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**"], "B_body": "IE8's native XHR doesn't support PATCH requests, but the ActiveX one does.\n\nCloses #2518\nCloses #5043\n", "B_clean_body": ["ie8", "'s", "nativ", "xhr", "n't", "support", "patch", "request", "but", "activex", "activ", "one", "close", "2518", "close", "5043"], "title_sim": [0.026174892608404502], "body_sim": [0.030134844905846593], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1440}, {"A_title": "test(modules): fix module tests which got disabled by ngMobile", "A_clean_title": ["test", "modul", "fix", "modul", "test", "which", "got", "disabl", "by", "ngmobil", "ng", "mobil"], "B_title": "refactor($parse): remove unnecessary .constant if when collecting inputs", "B_clean_title": ["refactor", "pars", "remov", "unnecessari", "constant", "when", "collect", "input"], "A_body": "When ngMobile was merged in, we accidentaly included angular-scenario.js\nin the test file set for modules. Loading this file overrode jasmine's\n`it` and `describe` global functions which essentially disabled all of\n~200 unit tests for wrapped modules.\n\nThis change refactors the code to run the wrapped module tests.\n\nI had to extract browserTrigger from scenario runner in order to achieve\nthis without code duplication.\n", "A_clean_body": ["when", "ngmobil", "ng", "mobil", "wa", "merg", "we", "accidentali", "includ", "angular", "scenario", "js", "test", "file", "set", "modul", "load", "thi", "file", "overrod", "jasmine'", "it", "describ", "global", "function", "which", "essenti", "disabl", "all", "~200", "unit", "test", "wrap", "modul", "thi", "chang", "refactor", "code", "run", "wrap", "modul", "test", "had", "extract", "browsertrigg", "browser", "trigger", "scenario", "runner", "order", "achiev", "thi", "without", "code", "duplic"], "B_body": "The `if`s are unnecessary because the calculation of `ast.toWatch` should have taken constants into account already.", "B_clean_body": ["are", "unnecessari", "becaus", "calcul", "ast", "towatch", "watch", "have", "taken", "constant", "into", "account", "alreadi"], "title_sim": [0.013697892382290657], "body_sim": [0.08590127983757159], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1551}, {"A_title": "Fixed spelling error for word 'standalone'", "A_clean_title": ["fix", "spell", "error", "word", "'standalon"], "B_title": "fix:bootstrap: Fix bootstrap on IE<8", "B_clean_title": ["fix", "bootstrap", "fix", "bootstrap", "ie"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "No reason for including ie-compat in bootstrap, it's included during angularInit.\n\nFix including ie-compat even for production.\n", "B_clean_body": ["no", "reason", "includ", "ie", "compat", "bootstrap", "it", "'s", "includ", "dure", "angularinit", "angular", "init", "fix", "includ", "ie", "compat", "even", "product"], "title_sim": [0.22118176384435526], "body_sim": [0.10087130065749578], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1906}, {"A_title": "test(*): run class-related tests everywhere; fix eval syntax", "A_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "B_title": "fix($compile): reject multi-expression interpolations for src attribute", "B_clean_title": ["fix", "compil", "reject", "multi", "express", "interpol", "src", "attribut"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "BREAKING CHANGE: Concatenating expressions makes it hard to reason about\n    whether some combination of concatenated values are unsafe to use\n    and could easily lead to XSS.  By requiring that a single expression\n    be used for *[src/ng-src] such as iframe[src], object[src], etc.\n    (but not img[src/ng-src] since that value is sanitized), we ensure that the value\n    that's used is assigned or constructed by some JS code somewhere\n    that is more testable or make it obvious that you bound the value to\n    some user controlled value.  This helps reduce the load when\n    auditing for XSS issues.\n\n```\nTo migrate your code, follow the example below:\n\n    Before:\n        JS:\n            scope.baseUrl = 'page';\n            scope.a = 1;\n            scope.b = 2;\n        HTML:\n            <!-- Are a and b properly escaped here? Is baseUrl\n                 controlled by user? -->\n            <iframe src=\"{{baseUrl}}?a={{a}&b={{b}}\">\n\n    After:\n        JS:\n            var baseUrl = \"page\";\n            scope.getIframeSrc = function() {\n              // There are obviously better ways to do this.  The\n              // key point is that one will think about this and do\n              // it the right way.\n              var qs = [\"a\", \"b\"].map(function(value, name) {\n                  return encodeURIComponent(name) + \"=\" +\n                         encodeURIComponent(value);\n                }).join(\"&\");\n              // baseUrl isn't on scope so it isn't bound to a user\n              // controlled value.\n              return baseUrl + \"?\" + qs;\n            }\n        HTML: <iframe src=\"{{getIframeSrc()}}\">\n```\n", "B_clean_body": ["break", "chang", "concaten", "express", "make", "it", "hard", "reason", "about", "whether", "some", "combin", "concaten", "valu", "are", "unsaf", "use", "could", "easili", "lead", "xss", "by", "requir", "that", "singl", "express", "use", "src", "src", "ng", "such", "as", "ifram", "src", "object", "src", "etc", "but", "not", "img", "src", "src", "ng", "sinc", "that", "valu", "sanit", "we", "ensur", "that", "valu", "that", "'s", "use", "assign", "or", "construct", "by", "some", "js", "code", "somewher", "that", "more", "testabl", "or", "make", "it", "obviou", "that", "you", "bound", "valu", "some", "user", "control", "valu", "thi", "help", "reduc", "load", "when", "audit", "xss", "issu", "migrat", "your", "code", "follow", "exampl", "below", "befor", "js", "scope", "baseurl", "base", "url", "'page", "scope", "scope", "html", "are", "properli", "escap", "here", "baseurl", "base", "url", "control", "by", "user", "ifram", "src=", "baseurl", "base", "url", "a=", "b=", "after", "js", "var", "baseurl", "base", "url", "page", "scope", "getiframesrc", "get", "ifram", "src", "function", "there", "are", "obvious", "better", "way", "thi", "key", "point", "that", "one", "will", "think", "about", "thi", "it", "right", "way", "var", "qs", "map", "function", "valu", "name", "return", "encodeuricompon", "encod", "uri", "compon", "name", "encodeuricompon", "encod", "uri", "compon", "valu", "join", "baseurl", "base", "url", "n't", "scope", "so", "it", "n't", "bound", "user", "control", "valu", "return", "baseurl", "base", "url", "qs", "html", "ifram", "src=", "getiframesrc", "get", "ifram", "src"], "title_sim": [0.010482864203608706], "body_sim": [0.20732724264804148], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.006557347427259291, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1414}, {"A_title": "chore(doc-gen, docs-app): generate version for stable snapshot", "A_clean_title": ["chore", "doc", "gen", "doc", "app", "gener", "version", "stabl", "snapshot"], "B_title": "fix(markup): Make special attrs such as ng:href work even without binding", "B_clean_title": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind"], "A_body": "The \"stable snapshot\" is based on the latest commit on the current stable\r\nbranch, i.e. a preview of the next patch version.\r\n\r\nNext thing:\r\n- update the Firebase deployment so that on the branch with distTag = latest gets deployed to docs.angularjs.org and as to gcs as snapshot-stable\r\n\r\n\r\n", "A_clean_body": ["stabl", "snapshot", "base", "latest", "commit", "current", "stabl", "branch", "preview", "next", "patch", "version", "next", "thing", "updat", "firebas", "deploy", "so", "that", "branch", "disttag", "dist", "tag", "latest", "get", "deploy", "doc", "angularj", "org", "as", "gc", "as", "snapshot", "stabl"], "B_body": "fix(markup): Make special attrs such as ng:href work even without binding\n- special attrs such as ng:href, ng:check did not work as intended when\n  their values do not contain bindings. And this commit is to fix that\n\nCloses #534\n", "B_clean_body": ["fix", "markup", "make", "special", "attr", "such", "as", "ng", "href", "work", "even", "without", "bind", "special", "attr", "such", "as", "ng", "href", "ng", "check", "did", "not", "work", "as", "intend", "when", "their", "valu", "not", "contain", "bind", "thi", "commit", "fix", "that", "close", "534"], "title_sim": [0.06275097347291936], "body_sim": [0.11918370904098739], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.006130623508707134, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2243}, {"A_title": "fix($location): support urls with any protocol", "A_clean_title": ["fix", "locat", "support", "url", "ani", "protocol"], "B_title": "fix(testabilityPatch): reset cache after memory leak detection", "B_clean_title": ["fix", "testabilitypatch", "testabl", "patch", "reset", "cach", "after", "memori", "leak", "detect"], "A_body": "The url used for location parsing was quite strict and did not support\ncustom url schemes like \"chrome-extension://\". With this change the only\nrequirement for scheme is that it doesn't contain \":\" character.\n", "A_clean_body": ["url", "use", "locat", "pars", "wa", "quit", "strict", "did", "not", "support", "custom", "url", "scheme", "like", "chrome", "extens", "thi", "chang", "onli", "requir", "scheme", "that", "it", "n't", "contain", "charact"], "B_body": "When you have a test failure in the angular.js project, which also causes a memory leak, such as a failure to dealocate an element or a scope, you often get a false-negative failure for every subsequent test. This change ensures that after such an error, the cache is reset so that subsequent tests can run normally.\n", "B_clean_body": ["when", "you", "have", "test", "failur", "angular", "js", "project", "which", "also", "caus", "memori", "leak", "such", "as", "failur", "dealoc", "element", "or", "scope", "you", "often", "get", "fals", "neg", "failur", "everi", "subsequ", "test", "thi", "chang", "ensur", "that", "after", "such", "error", "cach", "reset", "so", "that", "subsequ", "test", "run", "normal"], "title_sim": [0.033100921767718464], "body_sim": [0.14310463331115006], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1242}, {"A_title": "fix(select): auto-select new option that is marked as selected", "A_clean_title": ["fix", "select", "auto", "select", "new", "option", "that", "mark", "as", "select"], "B_title": "docs(PULL_REQUEST_TEMPLATE.md): fix broken links in PR template", "B_clean_title": ["doc", "md", "pull", "request", "templat", "fix", "broken", "link", "pr", "templat"], "A_body": "When adding a new <option> element, if the DOM of this option element\nstates that the element is marked as `selected`, then select the new\n<option> element\n\nCloses #6828\n\nThis is a new PR based on a wrong merge done at #7136\n", "A_clean_body": ["when", "ad", "new", "option", "element", "dom", "thi", "option", "element", "state", "that", "element", "mark", "as", "select", "then", "select", "new", "option", "element", "close", "6828", "thi", "new", "pr", "base", "wrong", "merg", "done", "at", "7136"], "B_body": "fix broken links in PR template", "B_clean_body": ["fix", "broken", "link", "pr", "templat"], "title_sim": [0.07883765358997563], "body_sim": [0.17966254953832222], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.08591936719885326, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1260}, {"A_title": "chore(docs.angularjs.org): allow robots in partials/ but prevent inde\u2026", "A_clean_title": ["chore", "doc", "angularj", "org", "allow", "robot", "partial", "but", "prevent", "inde\u2026"], "B_title": "fix:bootstrap: Fix bootstrap on IE<8", "B_clean_title": ["fix", "bootstrap", "fix", "bootstrap", "ie"], "A_body": "\u2026xing\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["\u2026xing", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "No reason for including ie-compat in bootstrap, it's included during angularInit.\n\nFix including ie-compat even for production.\n", "B_clean_body": ["no", "reason", "includ", "ie", "compat", "bootstrap", "it", "'s", "includ", "dure", "angularinit", "angular", "init", "fix", "includ", "ie", "compat", "even", "product"], "title_sim": [0.02085155065210246], "body_sim": [0.12609703818941626], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2413}, {"A_title": "fix($location): always resolve relative links in html5mode to `<base>` url", "A_clean_title": ["fix", "locat", "alway", "resolv", "rel", "link", "html5mode", "base", "url"], "B_title": "fix(ngOptions): select disabled option when set from model", "B_clean_title": ["fix", "ngoption", "ng", "option", "select", "disabl", "option", "when", "set", "model"], "A_body": "BREAKING CHANGE (since 1.2.0 and 1.3.0-beta.1):\n\nAngular now requires a `<base>` tag when html5 mode of `$location` is enabled. Reasoning:\nUsing html5 mode without a `<base href=\"...\">` tag makes relative links for images, links, ...\nrelative to the current url if the browser supports\nthe history API. However, if the browser does not support the history API Angular falls back to using the `#`,\nand then all links would be broken.\n\nBREAKING CHANGE (since 1.2.17 and 1.3.0-beta.10):\n\nIn html5 mode without a `<base>` tag on older browser that don't support the history API\nrelative paths were adding up. E.g. clicking on `<a href=\"page1\">` and then on `<a href=\"page2\">`\nwould produce `$location.path()==='/page1/page2'. The code that introduced this behavior was removed\nand Angular now also requires a`<base>` tag to be present when using html5 mode.\n\nCloses #8172\n", "A_clean_body": ["break", "chang", "sinc", "beta", "angular", "now", "requir", "base", "tag", "when", "html5", "mode", "locat", "enabl", "reason", "html5", "mode", "without", "base", "href=", "tag", "make", "rel", "link", "imag", "link", "rel", "current", "url", "browser", "support", "histori", "api", "howev", "browser", "not", "support", "histori", "api", "angular", "fall", "back", "then", "all", "link", "would", "broken", "break", "chang", "sinc", "17", "beta", "10", "html5", "mode", "without", "base", "tag", "older", "browser", "that", "n't", "support", "histori", "api", "rel", "path", "were", "ad", "up", "click", "href=", "page1", "then", "href=", "page2", "would", "produc", "locat", "path", "page1", "page2", "code", "that", "introduc", "thi", "behavior", "wa", "remov", "angular", "now", "also", "requir", "base", "tag", "present", "when", "html5", "mode", "close", "8172"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #12756\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\nProbably not, when we understand it as a bug fix.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nWhen a disabled option is set as the ngModel, ngOptions will now select the option\nin the select element, which will set select.val() to the option hash value and visually\nshow the option value / label as selected in the select box. Previously, disabled\noptions forced the unknown value.\nThe previous behavior is inconsistent with both default HTML behavior and select with\nngModel but without ngOptions. Both allow disabled values to be selected programmatically.\n\nCommon use cases for this behavior include options that where previously valid, but have\nbeen disabled, and cannot be selected again.\n\nFixes #12756\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "12756", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "probabl", "not", "when", "we", "understand", "it", "as", "bug", "fix", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "when", "disabl", "option", "set", "as", "ngmodel", "ng", "model", "ngoption", "ng", "option", "will", "now", "select", "option", "select", "element", "which", "will", "set", "select", "val", "option", "hash", "valu", "visual", "show", "option", "valu", "label", "as", "select", "select", "box", "previous", "disabl", "option", "forc", "unknown", "valu", "previou", "behavior", "inconsist", "both", "default", "html", "behavior", "select", "ngmodel", "ng", "model", "but", "without", "ngoption", "ng", "option", "both", "allow", "disabl", "valu", "select", "programmat", "common", "use", "case", "thi", "behavior", "includ", "option", "that", "where", "previous", "valid", "but", "have", "been", "disabl", "not", "select", "again", "fix", "12756"], "title_sim": [0.08503022164595249], "body_sim": [0.16990629230554213], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.004609681698748732, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 563}, {"A_title": "fix(select): auto-select new option that is marked as selected", "A_clean_title": ["fix", "select", "auto", "select", "new", "option", "that", "mark", "as", "select"], "B_title": "chore(*): update protractor", "B_clean_title": ["chore", "updat", "protractor"], "A_body": "When adding a new <option> element, if the DOM of this option element\nstates that the element is marked as `selected`, then select the new\n<option> element\n\nCloses #6828\n\nThis is a new PR based on a wrong merge done at #7136\n", "A_clean_body": ["when", "ad", "new", "option", "element", "dom", "thi", "option", "element", "state", "that", "element", "mark", "as", "select", "then", "select", "new", "option", "element", "close", "6828", "thi", "new", "pr", "base", "wrong", "merg", "done", "at", "7136"], "B_body": "Update protractor to latest 5.1.2 to make it work with Chrome 58 on Jenkins.\r\nThis version is not compatible with FF 53 and directConnect, but this should be irrelevant as protractor on Travis does not use directConnect and we don't test FF on Jenkins.", "B_clean_body": ["updat", "protractor", "latest", "make", "it", "work", "chrome", "58", "jenkin", "thi", "version", "not", "compat", "ff", "53", "directconnect", "direct", "connect", "but", "thi", "irrelev", "as", "protractor", "travi", "not", "use", "directconnect", "direct", "connect", "we", "n't", "test", "ff", "jenkin"], "title_sim": [0.009008068778950128], "body_sim": [0.22091913931660098], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1043}, {"A_title": "feat($compile): add more lifecycle hooks to directive controllers", "A_clean_title": ["feat", "compil", "add", "more", "lifecycl", "hook", "direct", "control"], "B_title": "docs(ngAria): fix markdown spacing for headers", "B_clean_title": ["doc", "ngaria", "ng", "aria", "fix", "markdown", "space", "header"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFeature\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nMissing lifecycle hooks for directive controllers\n\n**What is the new behavior (if this is a feature change)?**\n\nAdd these lifecycle hooks\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis change adds in the following new lifecycle hooks, which map in some\nway to those in Angular 2:\n- `$onChanges(changesObj)` - Called whenever one-way bindings are updated. The `changesObj` is a hash whose keys\n  are the names of the bound properties that have changed, and the values are an object of the form\n  `{ currentValue: ..., previousValue: ... }`. Use this hook to trigger updates within a component such as\n  cloning the bound value to prevent accidental mutation of the outer value.\n- `$onDestroy` - Called on a controller when its containing scope is destroyed. Use this hook for releasing\n  external resources, watches and event handlers.\n- `$afterViewInit` - Called after this controller's element and its children been linked. Similar to the post-link\n  function this hook can be used to set up DOM event handlers and do direct DOM manipulation.\n  Note that child elements that contain `templateUrl` directives will not have been compiled and linked since\n  they are waiting for their template to load asynchronously and their own compilation and linking has been\n  suspended until that occurs.\n\nCloses #14127\nCloses #14030\nCloses #14020\nCloses #13991\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "miss", "lifecycl", "hook", "direct", "control", "**what", "new", "behavior", "thi", "featur", "chang", "add", "these", "lifecycl", "hook", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "chang", "add", "follow", "new", "lifecycl", "hook", "which", "map", "some", "way", "those", "angular", "onchang", "chang", "changesobj", "chang", "obj", "call", "whenev", "one", "way", "bind", "are", "updat", "changesobj", "chang", "obj", "hash", "whose", "key", "are", "name", "bound", "properti", "that", "have", "chang", "valu", "are", "object", "form", "currentvalu", "current", "valu", "previousvalu", "previou", "valu", "use", "thi", "hook", "trigger", "updat", "within", "compon", "such", "as", "clone", "bound", "valu", "prevent", "accident", "mutat", "outer", "valu", "ondestroy", "destroy", "call", "control", "when", "it", "contain", "scope", "destroy", "use", "thi", "hook", "releas", "extern", "resourc", "watch", "event", "handler", "afterviewinit", "after", "view", "init", "call", "after", "thi", "control", "'s", "element", "it", "children", "been", "link", "similar", "post", "link", "function", "thi", "hook", "use", "set", "up", "dom", "event", "handler", "direct", "dom", "manipul", "note", "that", "child", "element", "that", "contain", "templateurl", "templat", "url", "direct", "will", "not", "have", "been", "compil", "link", "sinc", "they", "are", "wait", "their", "templat", "load", "asynchron", "their", "own", "compil", "link", "ha", "been", "suspend", "until", "that", "occur", "close", "14127", "close", "14030", "close", "14020", "close", "13991"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "title_sim": [0.01774913054829977], "body_sim": [0.7645904207444875], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 29}, {"A_title": "Overload \"component\" method to accept object map of components", "A_clean_title": ["overload", "compon", "method", "accept", "object", "map", "compon"], "B_title": "Ngoptions documentation change", "B_clean_title": ["ngoption", "document", "chang"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\"component\" method does not allow multiple components registration\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\"component\" method accepts object as a parameter where the keys are component names and the values are the component definition objects\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compon", "method", "not", "allow", "multipl", "compon", "registr", "**what", "new", "behavior", "thi", "featur", "chang", "compon", "method", "accept", "object", "as", "paramet", "where", "key", "are", "compon", "name", "valu", "are", "compon", "definit", "object", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nredundant link to ngOptions, no link to ngRepeat\n\n**What is the new behavior (if this is a feature change)?**\n\nlink to ngRepeat, no redundant link to ngOptions\n\n**Does this PR introduce a breaking change?**\n\nno\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "redund", "link", "ngoption", "ng", "option", "no", "link", "ngrepeat", "ng", "repeat", "**what", "new", "behavior", "thi", "featur", "chang", "link", "ngrepeat", "ng", "repeat", "no", "redund", "link", "ngoption", "ng", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [0.03720571497885478], "body_sim": [0.8228901746386936], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 282}, {"A_title": "docs(guide/Migrating from Previous Versions): fix typo \"indentifiers\"", "A_clean_title": ["doc", "guid", "migrat", "previou", "version", "fix", "typo", "indentifi"], "B_title": "refactor($parse): make use of local variable instead of refetching property", "B_clean_title": ["refactor", "pars", "make", "use", "local", "variabl", "instead", "refetch", "properti"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe word \"identifiers\" is misspelled as \"indentifiers\".\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "word", "identifi", "misspel", "as", "indentifi", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "I swear that variable [wasn't there originally](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa#diff-780de070ede30180f6aedb6c5f7d57caR1218)!", "B_clean_body": ["swear", "that", "variabl", "wa", "n't", "there", "origin", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff", "780de070ede30180f6aedb6c5f7d57car1218", "780de070ede30180f6aedb6c5f7d57ca", "r1218"], "title_sim": [0.081590671354586], "body_sim": [0.3043185385881755], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 7}, {"A_title": "feat(jqLite): return [] for .val() on <select multiple> with no selection", "A_clean_title": ["feat", "jqlite", "jq", "lite", "return", "val", "select", "multipl", "no", "select"], "B_title": "Improve readability of logging on Travis", "B_clean_title": ["improv", "readabl", "log", "travi"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFeature (an API change).\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe `.val()` getter on `<select multiple>...</select>` returns `null` if no options are selected.\n\n**What is the new behavior (if this is a feature change)?**\nThe `.val()` getter on `<select multiple>...</select>` returns an empty array if no options are selected.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features) -- what should I do here?\n\n**Other information**:\n\nFixes #14370\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "api", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "val", "getter", "select", "multipl", "select", "return", "null", "no", "option", "are", "select", "**what", "new", "behavior", "thi", "featur", "chang", "val", "getter", "select", "multipl", "select", "return", "empti", "array", "no", "option", "are", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "what", "here", "**other", "information**", "fix", "14370"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore: \r\n- it hides the dots for unit tests on Travis, which makes it easier to find the separate test tasks and results.\r\n- avoids building package for unit tests (makes the unit test job slightly faster)\r\n- re-arranges the grunt task list to make it easier to read\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "it", "hide", "dot", "unit", "test", "travi", "which", "make", "it", "easier", "find", "separ", "test", "task", "result", "avoid", "build", "packag", "unit", "test", "make", "unit", "test", "job", "slightli", "faster", "re", "arrang", "grunt", "task", "list", "make", "it", "easier", "read"], "title_sim": [0.07280813833038276], "body_sim": [0.4367642373979898], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.09237705083282065, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 277}, {"A_title": "fix($compile): sanitize special chars in directive name", "A_clean_title": ["fix", "compil", "sanit", "special", "char", "direct", "name"], "B_title": "chore(gitignore): add .agignore", "B_clean_title": ["chore", "gitignor", "add", "agignor"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix for \r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nIn HTML markup only directive name's `x-` and `data-` prefixes are being sanitized. (#16278)\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAlso special chars are being sanitized, e.g. `<div _t></div>` will match `t` directive once again\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nShould not\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n@petebacondarwin suggested to update the regex, and I hope that I did it in a way he was thinking about it.", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "html", "markup", "onli", "direct", "name", "'s", "data", "prefix", "are", "be", "sanit", "16278", "**what", "new", "behavior", "thi", "featur", "chang", "also", "special", "char", "are", "be", "sanit", "div", "div", "will", "match", "direct", "onc", "again", "**doe", "thi", "pr", "introduc", "break", "chang", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "petebacondarwin", "suggest", "updat", "regex", "hope", "that", "did", "it", "way", "he", "wa", "think", "about", "it"], "B_body": "I use a .agignore file to skip the build directory and some other files\nwhile searching using Ag (see\nhttps://github.com/ggreer/the_silver_searcher).\n", "B_clean_body": ["use", "agignor", "file", "skip", "build", "directori", "some", "other", "file", "while", "search", "ag", "see", "http", "github", "silver", "searcher", "com", "ggreer"], "title_sim": [-0.0026825665073811414], "body_sim": [0.11922673782420654], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1586}, {"A_title": "test($log): fix up to work with Safari 9", "A_clean_title": ["test", "log", "fix", "up", "work", "safari"], "B_title": "build(*): update Node from 6 to 8, update Yarn", "B_clean_title": ["build", "updat", "node", "updat", "yarn"], "A_body": "On Safari 9.0.2, you are not allowed to write to `sourceUrl` or `line`\non a native Error object.\n\nThis commit uses a custom error instead.\n", "A_clean_body": ["safari", "you", "are", "not", "allow", "write", "sourceurl", "sourc", "url", "or", "line", "nativ", "error", "object", "thi", "commit", "use", "custom", "error", "instead"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBuild-related.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nWe use Node 6 & an old Yarn version.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nWe use Node 8 & a new Yarn version.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\nAngular (2+) switched to Node 8 and so should we.\r\n\r\nRef angular/angular#20807\r\nRef angular/angular#20832\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "build", "relat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "use", "node", "old", "yarn", "version", "**what", "new", "behavior", "thi", "featur", "chang", "we", "use", "node", "new", "yarn", "version", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**", "angular", "2+", "switch", "node", "so", "we", "ref", "angular", "angular", "20807", "ref", "angular", "angular", "20832"], "title_sim": [0.0037000937299578405], "body_sim": [0.172123240479695], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 693}, {"A_title": "docs(ngComponentRouter): add note about shims needed for IE", "A_clean_title": ["doc", "ngcomponentrout", "ng", "compon", "router", "add", "note", "about", "shim", "need", "ie"], "B_title": "fix(Angular.js): not serializing null values", "B_clean_title": ["fix", "angular", "js", "not", "serial", "null", "valu"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\ninfo about es6 shims is missing\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "info", "about", "es6", "shim", "miss"], "B_body": "toKeyValue should not serialize a value if that value is set as null. \n", "B_clean_body": ["tokeyvalu", "key", "valu", "not", "serial", "valu", "that", "valu", "set", "as", "null"], "title_sim": [0.013970512201750168], "body_sim": [0.004332369456876423], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.003900415489704898, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 735}, {"A_title": "fix(ngOptions): ignore comment nodes when removing 'selected' attribute", "A_clean_title": ["fix", "ngoption", "ng", "option", "ignor", "comment", "node", "when", "remov", "'select", "attribut"], "B_title": "fix($compile): don't run unnecessary update to one-way bindings", "B_clean_title": ["fix", "compil", "n't", "run", "unnecessari", "updat", "one", "way", "bind"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the \"selected\" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "regress", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "empti", "option", "ha", "ngif", "ng", "it", "ngoption", "ng", "option", "select", "ngif", "ng", "express", "fals", "then", "error", "thrown", "becaus", "we", "tri", "remov", "select", "attribut", "ngif", "ng", "comment", "node", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nBug Fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe watch handler was triggering on its first invocation, even though\nits change had already been dealt with when setting up the binding.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe handler does not trigger an update on its first invocation\n\n**Does this PR introduce a breaking change?**\n\nNope - I don't think so. Although I had to modify a bunch of tests to ensure that a digest occurred between compilation and the first checks.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n  ~~\\- [ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nCloses #14546\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "watch", "handler", "wa", "trigger", "it", "first", "invoc", "even", "though", "it", "chang", "had", "alreadi", "been", "dealt", "when", "set", "up", "bind", "**what", "new", "behavior", "thi", "featur", "chang", "handler", "not", "trigger", "updat", "it", "first", "invoc", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "n't", "think", "so", "although", "had", "modifi", "bunch", "test", "ensur", "that", "digest", "occur", "between", "compil", "first", "check", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "close", "14546"], "title_sim": [0.2337290610464954], "body_sim": [0.8795147660143225], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.037851282245693, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 205}, {"A_title": "test(Angular): remove special case for Edge", "A_clean_title": ["test", "angular", "remov", "special", "case", "edg"], "B_title": "only use window.jQuery if it supports required jQuery.fn.on", "B_clean_title": ["onli", "use", "window", "jqueri", "queri", "it", "support", "requir", "jqueri", "fn", "queri"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This is a safe and simple fix to the legacy jQuery situation referenced in #2163 until the API in issue #608 is refined and implemented.\n", "B_clean_body": ["thi", "safe", "simpl", "fix", "legaci", "jqueri", "queri", "situat", "referenc", "2163", "until", "api", "issu", "608", "refin", "implement"], "title_sim": [-0.03344698340158197], "body_sim": [0.0777862402421717], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1536}, {"A_title": "feat($timeout): add $timeout service that superceeds $deferred", "A_clean_title": ["feat", "timeout", "add", "timeout", "servic", "that", "superce", "defer"], "B_title": "docs(*): clarify module API and dependency injection rules", "B_clean_title": ["doc", "clarifi", "modul", "api", "depend", "inject", "rule"], "A_body": "$timeout has a better name ($defer got often confused with something related to $q) and\nis actually promise based with cancelation support.\n\nWith this commit the $defer service is deprecated and will be removed before 1.0.\n\nCloses #704, #532\n", "A_clean_body": ["timeout", "ha", "better", "name", "defer", "got", "often", "confus", "someth", "relat", "actual", "promis", "base", "cancel", "support", "thi", "commit", "defer", "servic", "deprec", "will", "remov", "befor", "close", "704", "532"], "B_body": "Closes #16363\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["close", "16363", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.03241145168981212], "body_sim": [0.10076319334957204], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.08351649450719711, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 2057}, {"A_title": "fix(ngAnimate): let $animate.cancel() reject the runner promise", "A_clean_title": ["fix", "nganim", "ng", "anim", "let", "anim", "cancel", "reject", "runner", "promis"], "B_title": "Update fixed docs content (guide)", "B_clean_title": ["updat", "fix", "doc", "content", "guid"], "A_body": "<!-- General PR submission guidelines ../blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #14204\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThere is another aspect to this problem that is not fixed by this PR:\r\n2. Cancelling css animations should immediately abort the animation and set the DOM / css to its final state. This is currently broken in FF and IE11 (at least), see https://bugzilla.mozilla.org/show_bug.cgi?id=1425014. This must be tested with e2e test. Fixing this is not a BC.\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "md", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14204", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "blob", "master", "develop", "commit", "fix", "featur", "doc", "md", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "there", "anoth", "aspect", "thi", "problem", "that", "not", "fix", "by", "thi", "pr", "cancel", "css", "anim", "immedi", "abort", "anim", "set", "dom", "css", "it", "final", "state", "thi", "current", "broken", "ff", "ie11", "at", "least", "see", "http", "mozilla", "cgi", "bugzilla", "bug", "org", "show", "id=1425014", "thi", "must", "test", "e2e", "test", "fix", "thi", "not", "bc"], "B_body": "Couple of typos fixed:\n- indentation\n- batchLogbatchLog -> batchLog\n- start periodic checking\n- missing brace\n", "B_clean_body": ["coupl", "typo", "fix", "indent", "batchlogbatchlog", "batch", "logbatch", "log", "batchlog", "batch", "log", "start", "period", "check", "miss", "brace"], "title_sim": [0.08392041761167648], "body_sim": [0.067499366242684], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2367}, {"A_title": "fix($timeout/$interval): do not trigger a digest when cancelling a $timeout/$interval", "A_clean_title": ["fix", "timeout", "interv", "not", "trigger", "digest", "when", "cancel", "timeout", "interv"], "B_title": "fix(select): keep original selection when using shift to add options \u2026", "B_clean_title": ["fix", "select", "keep", "origin", "select", "when", "shift", "add", "option"], "A_body": "Previously `.catch(noop)` was used on the rejected timeout/interval to prevent an unhandled rejection error. However this would schedule a deferred task to run the `noop`. If the cancelling was outside a digest this could cause a new digest such as with the ng-model `debounce` option.\r\n\r\nFixes #16057", "A_clean_body": ["previous", "catch", "noop", "wa", "use", "reject", "timeout", "interv", "prevent", "unhandl", "reject", "error", "howev", "thi", "would", "schedul", "defer", "task", "run", "noop", "cancel", "wa", "outsid", "digest", "thi", "could", "caus", "new", "digest", "such", "as", "ng", "model", "debounc", "option", "fix", "16057"], "B_body": "\u2026in IE/Edge\r\n\r\nIn IE9-11 + Edge, the selected options were previously incorrect under the following\r\ncircumstances:\r\n- at least two options are selected\r\n- shift+click or shift+down/up is used to add to the selection (any number of options)\r\n\r\nIn these cases, only the last of the previously selected options and the newly selected\r\noptions would be selected.\r\n\r\nThe problems seems to be that the render engine gets confused when an option that\r\nalready has selected = true gets selected = true set again.\r\n\r\nNote that this is not testable via unit test because it's not possible to simulate\r\nclick / keyboard events on option elements (the events are delegated to the select element\r\nchange event).\r\n\r\nFixes #15675\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSee #15675\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~[ ] Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["\u2026in", "ie", "edg", "ie9", "11", "edg", "select", "option", "were", "previous", "incorrect", "under", "follow", "circumst", "at", "least", "two", "option", "are", "select", "shift+click", "or", "shift+down", "up", "use", "add", "select", "ani", "number", "option", "these", "case", "onli", "last", "previous", "select", "option", "newli", "select", "option", "would", "select", "problem", "seem", "that", "render", "engin", "get", "confus", "when", "option", "that", "alreadi", "ha", "select", "true", "get", "select", "true", "set", "again", "note", "that", "thi", "not", "testabl", "via", "unit", "test", "becaus", "it", "'s", "not", "possibl", "simul", "click", "keyboard", "event", "option", "element", "event", "are", "deleg", "select", "element", "chang", "event", "fix", "15675", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "15675", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.09858998761708893], "body_sim": [0.22937426352876852], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.08985392788708182, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 137}, {"A_title": "feat(ngModelOptions): allow to debounce 'default' only, and add catch\u2026", "A_clean_title": ["feat", "ngmodelopt", "ng", "model", "option", "allow", "debounc", "'default", "onli", "add", "catch\u2026"], "B_title": "docs(app): adds roboto font", "B_clean_title": ["doc", "app", "add", "roboto", "font"], "A_body": "\u2026-all\r\n\r\nBREAKING CHANGE:\r\n\r\nthe 'default' key in 'debounce' now only debounces the default event, i.e. the event\r\nthat is added as an update trigger by the different input directives automatically.\r\n\r\nPreviously, it also applied to other update triggers defined in 'updateOn' that\r\ndid not have a corresponding key in the 'debounce'.\r\n\r\nThis behavior is now supported via a special wildcard / catch-all key: '*'.\r\n\r\nSee the following example:\r\n\r\nPre-1.7:\r\n'mouseup' is debounced by 500 milliseconds because 'default' is applied.\r\n```\r\nng-model-options=\"{\r\n  updateOn: 'default blur mouseup',\r\n  debounce: { 'default': 500, 'blur': 0 }\r\n}\r\n```\r\n\r\n1.7:\r\n'mouseup' is debounced by 1000 milliseconds because '*' is applied.\r\n```\r\nng-model-options=\"{\r\n  updateOn: 'default blur mouseup',\r\n  debounce: { 'default': 500, 'blur': 0, '*': 1000 }\r\n}\r\n```\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsee #15411\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nsee above\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYES, see above\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["all", "break", "chang", "'default", "key", "'debounc", "now", "onli", "debounc", "default", "event", "event", "that", "ad", "as", "updat", "trigger", "by", "differ", "input", "direct", "automat", "previous", "it", "also", "appli", "other", "updat", "trigger", "defin", "'updateon", "'updat", "that", "did", "not", "have", "correspond", "key", "'debounc", "thi", "behavior", "now", "support", "via", "special", "wildcard", "catch", "all", "key", "see", "follow", "exampl", "pre", "'mouseup", "debounc", "by", "500", "millisecond", "becaus", "'default", "appli", "ng", "model", "options=", "updateon", "updat", "'default", "blur", "mouseup", "debounc", "'default", "500", "'blur", "'mouseup", "debounc", "by", "1000", "millisecond", "becaus", "appli", "ng", "model", "options=", "updateon", "updat", "'default", "blur", "mouseup", "debounc", "'default", "500", "'blur", "1000", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "15411", "**what", "new", "behavior", "thi", "featur", "chang", "see", "abov", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "see", "abov", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "The Google Material design docs at http://www.google.com/design/spec/style/typography.html state that we should use the font 'Roboto' for our Typography. I went ahead added the font using @import, but we could also download the fonts and add them to the project. I'm fine with either way.\n", "B_clean_body": ["googl", "materi", "design", "doc", "at", "http", "googl", "html", "www", "com", "design", "spec", "style", "typographi", "state", "that", "we", "use", "font", "'roboto", "our", "typographi", "went", "ahead", "ad", "font", "import", "but", "we", "could", "also", "download", "font", "add", "them", "project", "'m", "fine", "either", "way"], "title_sim": [0.2733937786553766], "body_sim": [0.25369317691997684], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1076}, {"A_title": "fix($http): Do not serialize File object", "A_clean_title": ["fix", "http", "not", "serial", "file", "object"], "B_title": "fix($compile): Allow literals in isolate scope references", "B_clean_title": ["fix", "compil", "allow", "liter", "isol", "scope", "refer"], "A_body": "We might auto set X-File headers, when you pass a File object, but I can't find any spec on that...\n(ie X-File-Size, content-type, etc...)\n", "A_clean_body": ["we", "might", "auto", "set", "file", "header", "when", "you", "pass", "file", "object", "but", "ca", "n't", "find", "ani", "spec", "that", "ie", "file", "size", "content", "type", "etc"], "B_body": "When a component uses an isolate scope reference\nand the the component is used with an object literal\na new object is created on every evaluation.\nTherefore the compiler needs to compare\nthe values of the parent and the isolate scope\nusing object equality and not object reference\nequality.\n\nFixes #5296.\n", "B_clean_body": ["when", "compon", "use", "isol", "scope", "refer", "compon", "use", "object", "liter", "new", "object", "creat", "everi", "evalu", "therefor", "compil", "need", "compar", "valu", "parent", "isol", "scope", "object", "equal", "not", "object", "refer", "equal", "fix", "5296"], "title_sim": [0.07847008945524211], "body_sim": [0.05888181626993958], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.06840706439070397, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 655}, {"A_title": "docs(angular.Module): improved documentation for component method", "A_clean_title": ["doc", "angular", "modul", "improv", "document", "compon", "method"], "B_title": "chore(node): add karma launchers for Edge, IE, and Safari", "B_clean_title": ["chore", "node", "add", "karma", "launcher", "edg", "ie", "safari"], "A_body": "Copy improved documentation for component() method from $compileProvider\r\nand add missing object syntax.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDoes not mention all syntaxes, is inconsistent with other documentation.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nFixes these issues\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nno\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["copi", "improv", "document", "compon", "method", "compileprovid", "compil", "provid", "add", "miss", "object", "syntax", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "not", "mention", "all", "syntax", "inconsist", "other", "document", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "these", "issu", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "That makes it easier to test these browsers locally\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["that", "make", "it", "easier", "test", "these", "browser", "local", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.009971220503224453], "body_sim": [0.9839163395989303], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 110}, {"A_title": "fix($parse): standardize one-time literal vs non-literal and interceptors", "A_clean_title": ["fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "B_title": "chore(version-info.js): ignore curl file write errors", "B_clean_title": ["chore", "version", "info", "js", "ignor", "curl", "file", "write", "error"], "A_body": "Previously literal one-time bindings did not use the expression `inputs`, causing infinite digest issues with literal values. This often forces the use of deepEquals when watching one-time literals.\r\n\r\n`ng-class` is one example of deepEquals which is no longer required (and had to be updated to keep all tests passing).\r\n\r\nThis one-time/literal behavior is now also consistently propagated through interceptors (and had to be updated to keep all tests passing).\r\n\r\n----\r\n\r\nThe ngClass/interceptor part was not originally planned but had to be changed to keep tests passing. Maybe this can be split into smaller commits? But it's mainly just deleting...!", "A_clean_body": ["previous", "liter", "one", "time", "bind", "did", "not", "use", "express", "input", "caus", "infinit", "digest", "issu", "liter", "valu", "thi", "often", "forc", "use", "deepequ", "deep", "equal", "when", "watch", "one", "time", "liter", "ng", "class", "one", "exampl", "deepequ", "deep", "equal", "which", "no", "longer", "requir", "had", "updat", "keep", "all", "test", "pass", "thi", "one", "time", "liter", "behavior", "now", "also", "consist", "propag", "through", "interceptor", "had", "updat", "keep", "all", "test", "pass", "ngclass", "interceptor", "ng", "class", "part", "wa", "not", "origin", "plan", "but", "had", "chang", "keep", "test", "pass", "mayb", "thi", "split", "into", "smaller", "commit", "but", "it", "'s", "mainli", "just", "delet"], "B_body": "On Windows, curl can obviously not write to `dev/null`, and throws code 23, which prevents us from checking that the CDN server responded. However, we don't need the file anyway, we just need the status code, so we can ignore the file write error.\n\nThis needs to be tested on Linux / Mac however!\n", "B_clean_body": ["window", "curl", "obvious", "not", "write", "dev", "null", "throw", "code", "23", "which", "prevent", "us", "check", "that", "cdn", "server", "respond", "howev", "we", "n't", "need", "file", "anyway", "we", "just", "need", "statu", "code", "so", "we", "ignor", "file", "write", "error", "thi", "need", "test", "linux", "mac", "howev"], "title_sim": [0.02843265316130869], "body_sim": [0.25737894886131313], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 281}, {"A_title": "refactor($parse): make use of local variable instead of refetching property", "A_clean_title": ["refactor", "pars", "make", "use", "local", "variabl", "instead", "refetch", "properti"], "B_title": "chore(doc-gen, docs-app): generate version for stable snapshot", "B_clean_title": ["chore", "doc", "gen", "doc", "app", "gener", "version", "stabl", "snapshot"], "A_body": "I swear that variable [wasn't there originally](https://github.com/angular/angular.js/commit/fca6be71274e537c7df86ae9e27a3bd1597e9ffa#diff-780de070ede30180f6aedb6c5f7d57caR1218)!", "A_clean_body": ["swear", "that", "variabl", "wa", "n't", "there", "origin", "http", "github", "com", "angular", "angular", "js", "commit", "fca6be71274e537c7df86ae9e27a3bd1597e9ffa", "diff", "780de070ede30180f6aedb6c5f7d57car1218", "780de070ede30180f6aedb6c5f7d57ca", "r1218"], "B_body": "The \"stable snapshot\" is based on the latest commit on the current stable\r\nbranch, i.e. a preview of the next patch version.\r\n\r\nNext thing:\r\n- update the Firebase deployment so that on the branch with distTag = latest gets deployed to docs.angularjs.org and as to gcs as snapshot-stable\r\n\r\n\r\n", "B_clean_body": ["stabl", "snapshot", "base", "latest", "commit", "current", "stabl", "branch", "preview", "next", "patch", "version", "next", "thing", "updat", "firebas", "deploy", "so", "that", "branch", "disttag", "dist", "tag", "latest", "get", "deploy", "doc", "angularj", "org", "as", "gc", "as", "snapshot", "stabl"], "title_sim": [0.05591220164172906], "body_sim": [0.11478216272397763], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 209}, {"A_title": "docs(app): increments year", "A_clean_title": ["doc", "app", "increment", "year"], "B_title": "chore($resource): remove obsolete API", "B_clean_title": ["chore", "resourc", "remov", "obsolet", "api"], "A_body": "Increments the year from 2014 to 2015.\n", "A_clean_body": ["increment", "year", "2014", "2015"], "B_body": "This code has been in the $resource service since 2010, but was\r\nnever documented and can therefore be removed. It'll save precious bytes!\r\n\r\nShout-out to @gkalpak for finding this.\r\n\r\nTechnically, we don't have to remove it, but it doesn't make sense to keep it in the repository either. It leads to devs fixing bugs in undocumented APIs: https://github.com/angular/angular.js/commit/6eb4ffc085cc0fde19cbac2c3da227ff47d71e4e ;)\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nobsolete code removal\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo \ud83d\ude1b \r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been removed\r\n- ~ [ ] Docs have been added / updated (for bug fixes / features) ~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "code", "ha", "been", "resourc", "servic", "sinc", "2010", "but", "wa", "never", "document", "therefor", "remov", "it", "'ll", "save", "preciou", "byte", "shout", "out", "gkalpak", "find", "thi", "technic", "we", "n't", "have", "remov", "it", "but", "it", "n't", "make", "sens", "keep", "it", "repositori", "either", "it", "lead", "dev", "fix", "bug", "undocu", "api", "ap", "http", "github", "com", "angular", "angular", "js", "commit", "6eb4ffc085cc0fde19cbac2c3da227ff47d71e4", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "obsolet", "code", "remov", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "remov", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.014545755276686917], "body_sim": [0.1358015101388761], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1005}, {"A_title": "test(*): run class-related tests everywhere; fix eval syntax", "A_clean_title": ["test", "run", "class", "relat", "test", "everywher", "fix", "eval", "syntax"], "B_title": "fix(css): ng:form should always be a block element", "B_clean_title": ["fix", "css", "ng", "form", "alway", "block", "element"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTest fixes.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThere was a syntax error in class-related tests; the test wasn't failing only because it was disabled everywhere outside of Chrome and Chrome <59 incorrectly accepted it.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n1. Wrap an evaled class definition in parens; previously they weren't.\r\n2. The classes support test was modified to check not only if a class definition parses but also if it stringifies correctly which is required by AngularJS. This restriction disables class-related tests in current Firefox (53) but will work in v55 or newer.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "wa", "syntax", "error", "class", "relat", "test", "test", "wa", "n't", "fail", "onli", "becaus", "it", "wa", "disabl", "everywher", "outsid", "chrome", "chrome", "59", "incorrectli", "accept", "it", "**what", "new", "behavior", "thi", "featur", "chang", "wrap", "eval", "class", "definit", "paren", "previous", "they", "were", "n't", "class", "support", "test", "wa", "modifi", "check", "not", "onli", "class", "definit", "pars", "but", "also", "it", "stringifi", "correctli", "which", "requir", "by", "angularj", "angular", "js", "thi", "restrict", "disabl", "class", "relat", "test", "current", "firefox", "53", "but", "will", "work", "v55", "or", "newer", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "fix for: http://jsfiddle.net/agamennon12345/twcvt/\n", "B_clean_body": ["fix", "http", "jsfiddl", "net", "agamennon12345", "twcvt"], "title_sim": [9.543308472735526e-07], "body_sim": [0.14183747253063292], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2016}, {"A_title": "fix(ngModel): use keydown/change events on IE9 instead of input", "A_clean_title": ["fix", "ngmodel", "ng", "model", "use", "keydown", "chang", "event", "ie9", "instead", "input"], "B_title": "fix(ngAnimate): allow removal of class that is scheduled to be added \u2026", "B_clean_title": ["fix", "nganim", "ng", "anim", "allow", "remov", "class", "that", "schedul", "ad"], "A_body": "On IE9 the input event is not fired when backspace or delete key are pressed or when\ncut is performed. This makes listening on the input event unreliable and therefore\nit's better for us to just use keydown/change events instead.\n\nCloses #879\n", "A_clean_body": ["ie9", "input", "event", "not", "fire", "when", "backspac", "or", "delet", "key", "are", "press", "or", "when", "cut", "perform", "thi", "make", "listen", "input", "event", "unreli", "therefor", "it", "'s", "better", "us", "just", "use", "keydown", "chang", "event", "instead", "close", "879"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14582\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [-] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n\u2026with requestAnimationFrame\n\nThe following case can happen when ngClass updates an element's classes in very quick order in the following way:\n- First animation adds class \"a\"\n- A digest passes, but \"a\" is not yet added to the element\n- Second animation adds class \"b\"\n- No digest passes, and \"a\" is still not added to the element,\n  because requestAnimationFrame hasn't been flushed yet\n- Third animation removes class \"a\"\n- the third animation gets merged into the second animation\n\nBefore this change:\n- Because the element doesn't have class \"a\" yet, ngAnimate\n  resolves that it cannot remove class \"a\". However,\n  the first animation is still running, and finally adds \"a\"\n\nAfter this change:\n- ngAnimate reacts to the temporary class \"add-a\", which indicates\n  that \"a\" is about to be added and decides that \"a\" can be removed\n  after all.\n\nThis is a very rare case where setting the element's class\nis not fast enough, and subsequent animations operate on incorrect assumptions.\n\n\"In the wild\", this is caused by rapidly updating ngClass,\nwhich uses inidvidual addClass and removeClass calls when both operations happen in a single digest.\n\nFixes #14582\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14582", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026with", "requestanimationfram", "request", "anim", "frame", "follow", "case", "happen", "when", "ngclass", "ng", "class", "updat", "element", "'s", "class", "veri", "quick", "order", "follow", "way", "first", "anim", "add", "class", "digest", "pass", "but", "not", "yet", "ad", "element", "second", "anim", "add", "class", "no", "digest", "pass", "still", "not", "ad", "element", "becaus", "requestanimationfram", "request", "anim", "frame", "ha", "n't", "been", "flush", "yet", "third", "anim", "remov", "class", "third", "anim", "get", "merg", "into", "second", "anim", "befor", "thi", "chang", "becaus", "element", "n't", "have", "class", "yet", "nganim", "ng", "anim", "resolv", "that", "it", "not", "remov", "class", "howev", "first", "anim", "still", "run", "final", "add", "after", "thi", "chang", "nganim", "ng", "anim", "react", "temporari", "class", "add", "which", "indic", "that", "about", "ad", "decid", "that", "remov", "after", "all", "thi", "veri", "rare", "case", "where", "set", "element", "'s", "class", "not", "fast", "enough", "subsequ", "anim", "oper", "incorrect", "assumpt", "wild", "thi", "caus", "by", "rapidli", "updat", "ngclass", "ng", "class", "which", "use", "inidvidu", "addclass", "add", "class", "removeclass", "remov", "class", "call", "when", "both", "oper", "happen", "singl", "digest", "fix", "14582"], "title_sim": [0.1314437259484259], "body_sim": [0.12564936040513053], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.13196189009318465, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1499}, {"A_title": "revert: \"fix($compile): do not write @-bound properties if attribute \u2026", "A_clean_title": ["revert", "fix", "compil", "not", "write", "bound", "properti", "attribut"], "B_title": "chore: upgrade grunt packages to match master", "B_clean_title": ["chore", "upgrad", "grunt", "packag", "match", "master"], "A_body": "\u2026is not present\"\n\nThis reverts commit 8a1eb1625c080445ce1e519762e1f2d4fd842b72.\n\nThis commit broke the tabs component on the material project,\nwhich caused internal breakages. Will open a separate issue to\nlook into the issue.\n", "A_clean_body": ["\u2026i", "not", "present", "thi", "revert", "commit", "8a1eb1625c080445ce1e519762e1f2d4fd842b72", "thi", "commit", "broke", "tab", "compon", "materi", "project", "which", "caus", "intern", "breakag", "will", "open", "separ", "issu", "look", "into", "issu"], "B_body": "Seems to fix Jenkins build.\n\nBroken: http://ci.angularjs.org/job/angular.js-angular-v1.0.x/lastBuild/console\n\nFixed: http://ci.angularjs.org/job/angular.js-brian/34/console\n", "B_clean_body": ["seem", "fix", "jenkin", "build", "broken", "http", "angular", "angularj", "js", "v1", "ci", "org", "job", "angular", "lastbuild", "consol", "last", "build", "fix", "http", "angularj", "js", "brian", "34", "consol", "ci", "org", "job", "angular"], "title_sim": [-0.002519884022179624], "body_sim": [0.14359776662216084], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 672}, {"A_title": "docs($compile): remove a mention of preassigning bindings in controllers", "A_clean_title": ["doc", "compil", "remov", "mention", "preassign", "bind", "control"], "B_title": "chore(travis): move docse2e tests into the unit tests vm", "B_clean_title": ["chore", "travi", "move", "docse2", "test", "into", "unit", "test", "vm"], "A_body": "The deprecation warning is no longer needed as the feature has been removed\r\nin 1.7.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nPreassigning bindings to controllers is described as deprecated but still working. This feature has been removed so the warning is no longer needed.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["deprec", "warn", "no", "longer", "need", "as", "featur", "ha", "been", "remov", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "preassign", "bind", "control", "describ", "as", "deprec", "but", "still", "work", "thi", "featur", "ha", "been", "remov", "so", "warn", "no", "longer", "need", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "we spend more time making getting the build ready than running the docs e2e tests.\n\nby piggy-backing on unit tests we'll finish the build faster\n", "B_clean_body": ["we", "spend", "more", "time", "make", "get", "build", "readi", "than", "run", "doc", "e2e", "test", "by", "piggi", "back", "unit", "test", "we", "'ll", "finish", "build", "faster"], "title_sim": [0.017392585280127933], "body_sim": [0.15872980207564438], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 942}, {"A_title": "feat: angularFilter.date: date filter can show day/mon string", "A_clean_title": ["feat", "angularfilt", "date", "angular", "filter", "date", "filter", "show", "day", "mon", "string"], "B_title": "docs(guide/Unit Testing): Typo in 'focused'", "B_clean_title": ["doc", "guid", "unit", "test", "typo", "'focus"], "A_body": "  Support new date format, specifically day of week/Month of year in string\n  e.g. {{ someDate | data:\"EEE, MMM d, yyyy\" }} -> \"Wed, Jul 10, 2011\"\nCloses #396\n", "A_clean_body": ["support", "new", "date", "format", "specif", "day", "week", "month", "year", "string", "somed", "some", "date", "data", "eee", "mmm", "yyyi", "wed", "jul", "10", "2011", "close", "396"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nN/A\n\n**What is the new behavior (if this is a feature change)?**\n\nNone\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "none", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.027230533944128305], "body_sim": [0.06547558306312369], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1767}, {"A_title": "Updating the provider documentation", "A_clean_title": ["updat", "provid", "document"], "B_title": "Docs: update $location guide info; fix some headlines", "B_clean_title": ["doc", "updat", "locat", "guid", "info", "fix", "some", "headlin"], "A_body": "Highlighted the Best Practices section, and took the styling from the Services doc. I also removed some superfluous wording that was in the \"Provider Recipe\"\n", "A_clean_body": ["highlight", "best", "practic", "section", "took", "style", "servic", "doc", "also", "remov", "some", "superflu", "word", "that", "wa", "provid", "recip"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.119369979633746], "body_sim": [0.11292329215768157], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1442}, {"A_title": "Overload \"component\" method to accept object map of components", "A_clean_title": ["overload", "compon", "method", "accept", "object", "map", "compon"], "B_title": "Revert ng style regression for 1.3.x", "B_clean_title": ["revert", "ng", "style", "regress"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\"component\" method does not allow multiple components registration\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\"component\" method accepts object as a parameter where the keys are component names and the values are the component definition objects\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compon", "method", "not", "allow", "multipl", "compon", "registr", "**what", "new", "behavior", "thi", "featur", "chang", "compon", "method", "accept", "object", "as", "paramet", "where", "key", "are", "compon", "name", "valu", "are", "compon", "definit", "object", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "B_body": "I know, 1.4 is around the corner, but this should be handled nevertheless.\n", "B_clean_body": ["know", "around", "corner", "but", "thi", "handl", "nevertheless"], "title_sim": [0.05901392972458701], "body_sim": [0.1736955652088185], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.10175228028337463, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 772}, {"A_title": "fix($httpBackend): Ignore multiple calls to onreadystatechange with read...", "A_clean_title": ["fix", "httpbackend", "http", "backend", "ignor", "multipl", "call", "onreadystatechang", "read"], "B_title": "fix($timeout/$interval): do not trigger a digest when cancelling a $timeout/$interval", "B_clean_title": ["fix", "timeout", "interv", "not", "trigger", "digest", "when", "cancel", "timeout", "interv"], "A_body": "...yState=4\n\nOn mobile webkit `onreadystatechange` might by called multiple times\nwith `readyState===4`  caused by xhrs that are resolved while the app is\nin the background.\n\n Fixes #5426.\n", "A_clean_body": ["ystate=4", "state=4", "mobil", "webkit", "onreadystatechang", "might", "by", "call", "multipl", "time", "readystate===4", "readi", "state===4", "caus", "by", "xhr", "that", "are", "resolv", "while", "app", "background", "fix", "5426"], "B_body": "Previously `.catch(noop)` was used on the rejected timeout/interval to prevent an unhandled rejection error. However this would schedule a deferred task to run the `noop`. If the cancelling was outside a digest this could cause a new digest such as with the ng-model `debounce` option.\r\n\r\nFixes #16057", "B_clean_body": ["previous", "catch", "noop", "wa", "use", "reject", "timeout", "interv", "prevent", "unhandl", "reject", "error", "howev", "thi", "would", "schedul", "defer", "task", "run", "noop", "cancel", "wa", "outsid", "digest", "thi", "could", "caus", "new", "digest", "such", "as", "ng", "model", "debounc", "option", "fix", "16057"], "title_sim": [0.11921079561934472], "body_sim": [0.17837004182301777], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.07869822187051269, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1266}, {"A_title": "fix(jqLite): make removeData() not remove event handlers", "A_clean_title": ["fix", "jqlite", "jq", "lite", "make", "removedata", "remov", "data", "not", "remov", "event", "handler"], "B_title": "Scenario runner navigate 404", "B_clean_title": ["scenario", "runner", "navig", "404"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix but a breaking change as well.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`removeData()` invoked on an element removes its event handlers as well.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n`removeData()` removes just user-set `data`, not internal data storage used for event handling. This aligns jqLite with jQuery.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~ (the current behavior is not documented)\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nFixes #15869", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "but", "break", "chang", "as", "well", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "removedata", "remov", "data", "invok", "element", "remov", "it", "event", "handler", "as", "well", "**what", "new", "behavior", "thi", "featur", "chang", "removedata", "remov", "data", "remov", "just", "user", "set", "data", "not", "intern", "data", "storag", "use", "event", "handl", "thi", "align", "jqlite", "jq", "lite", "jqueri", "queri", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "current", "behavior", "not", "document", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "fix", "15869"], "B_body": "Check if the URL in navigateTo() is going to return a 2xx (success) status code. Now navigateTo() fails tests if navigating to a 404 or a 500. Also display better error messages about sandbox exceptions (cross domain or file://). Better test cases for Application sandbox error handling as well.\n\nAlso implements the http HEAD method in the nodeserver for testing.\n\nNote: This new code will behave badly if your server side code modifies state on a http HEAD request. For example, if your app used onetime URL tokens so that a URL could only be visited once the navigateTo() would fail since it would visit the URL twice. The same is true if you naviateTo('delete_something.html') and performed the actual delete on a HEAD request. No well behaved application should do this since it's entirely against the definition of the HEAD http method.\n", "B_clean_body": ["check", "url", "navigateto", "navig", "go", "return", "2xx", "success", "statu", "code", "now", "navigateto", "navig", "fail", "test", "navig", "404", "or", "500", "also", "display", "better", "error", "messag", "about", "sandbox", "except", "cross", "domain", "or", "file", "better", "test", "case", "applic", "sandbox", "error", "handl", "as", "well", "also", "implement", "http", "head", "method", "nodeserv", "test", "note", "thi", "new", "code", "will", "behav", "badli", "your", "server", "side", "code", "modifi", "state", "http", "head", "request", "exampl", "your", "app", "use", "onetim", "url", "token", "so", "that", "url", "could", "onli", "visit", "onc", "navigateto", "navig", "would", "fail", "sinc", "it", "would", "visit", "url", "twice", "same", "true", "you", "naviateto", "naviat", "html", "'delet", "someth", "perform", "actual", "delet", "head", "request", "no", "well", "behav", "applic", "thi", "sinc", "it", "'s", "entir", "against", "definit", "head", "http", "method"], "title_sim": [0.0], "body_sim": [0.2592041386191692], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.020067084113695927, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2706}, {"A_title": "docs(angular.mock.inject): minor formatting change", "A_clean_title": ["doc", "angular", "mock", "inject", "minor", "format", "chang"], "B_title": "chore(build): fix bower install", "B_clean_title": ["chore", "build", "fix", "bower", "instal"], "A_body": "Without backticks, underscores are rendered as italics.\n", "A_clean_body": ["without", "backtick", "underscor", "are", "render", "as", "ital"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.023768776191946426], "body_sim": [0.022519361793634462], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 291}, {"A_title": "fix(form): preperly clean up when invalid widget is removed", "A_clean_title": ["fix", "form", "preperli", "clean", "up", "when", "invalid", "widget", "remov"], "B_title": "docs: Clarify documentation of input[week]", "B_clean_title": ["doc", "clarifi", "document", "input", "week"], "A_body": "Removing invalid widget sometimes resulted in improper cleanup of the form state.\n", "A_clean_body": ["remov", "invalid", "widget", "sometim", "result", "improp", "cleanup", "form", "state"], "B_body": "Add a note to documentation of input[week] to explicitly state that the\r\nresulting Date object's value is set to Thursday at midnight of the\r\nspecified week\r\n\r\nResolves #15883\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\ndocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nhttps://github.com/angular/angular.js/issues/15883\r\nThe docs do not specify the day and time of a Date created by input[week]\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThe docs now explicitly state that the resulting Date object's value is set to Thursday at midnight of the\r\nspecified week\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nThought this looked like a nice opportunity for baby's first pull request! Hope I did everything right...\r\n", "B_clean_body": ["add", "note", "document", "input", "week", "explicitli", "state", "that", "result", "date", "object", "'s", "valu", "set", "thursday", "at", "midnight", "specifi", "week", "resolv", "15883", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "http", "github", "com", "angular", "angular", "js", "issu", "15883", "doc", "not", "specifi", "day", "time", "date", "creat", "by", "input", "week", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "now", "explicitli", "state", "that", "result", "date", "object", "'s", "valu", "set", "thursday", "at", "midnight", "specifi", "week", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thought", "thi", "look", "like", "nice", "opportun", "babi", "'s", "first", "pull", "request", "hope", "did", "everyth", "right"], "title_sim": [0.020301880730608967], "body_sim": [0.11504992880234895], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.001704651134624674, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1926}, {"A_title": "feat($componentController): provide isolated scope if none is passed", "A_clean_title": ["feat", "componentcontrol", "compon", "control", "provid", "isol", "scope", "none", "pass"], "B_title": "fix(date): parse string input as local time unless TZ is specified", "B_clean_title": ["fix", "date", "pars", "string", "input", "as", "local", "time", "unless", "tz", "specifi"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nfeat\n\n**What is the current behavior? (You can also link to an open issue here)**\n\none must always provide a scope for the $componentController helper, which is annoying\n\n**What is the new behavior (if this is a feature change)?**\n\nnow an isolated child of rootScope is created and used if no scope is provided\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "one", "must", "alway", "provid", "scope", "componentcontrol", "compon", "control", "helper", "which", "annoy", "**what", "new", "behavior", "thi", "featur", "chang", "now", "isol", "child", "rootscop", "root", "scope", "creat", "use", "no", "scope", "provid", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "previously we were always parsing the string input as UTC which cased issues like:\n\n{{ '2012-04-01' | date:'d MMM yyyy' }} renders as 31 Mar 2012\n\nBREAKING CHANGE: string input without timezone info is now parsed as local time/date\n\nCloses #847\n", "B_clean_body": ["previous", "we", "were", "alway", "pars", "string", "input", "as", "utc", "which", "case", "issu", "like", "'2012", "04", "01", "date", "'d", "mmm", "yyyi", "render", "as", "31", "mar", "2012", "break", "chang", "string", "input", "without", "timezon", "info", "now", "pars", "as", "local", "time", "date", "close", "847"], "title_sim": [0.07629639344126296], "body_sim": [0.1183823007692631], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0321261212477933, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1189}, {"A_title": "chore(doc-gen): insert current tagged version if missing from list of\u2026", "A_clean_title": ["chore", "doc", "gen", "insert", "current", "tag", "version", "miss", "list", "of\u2026"], "B_title": "fix($compile): don't run unnecessary update to one-way bindings", "B_clean_title": ["fix", "compil", "n't", "run", "unnecessari", "updat", "one", "way", "bind"], "A_body": "\u2026 all versions\r\n\r\nIn commit ce49edc08b3d642f3768f4282d391062d2f83037, we switched to npm info (now yarn info)\r\ninstead of the local git repository information to get the list of currently available versions for\r\nthe docs app. This means that during a release the version that is currently tagged is not yet\r\navailable on npm, and therefore our list of available versions is incomplete.\r\n\r\nWe now simply add the current build version (read from build/version.json) to the list of all\r\nversions if it fulfills the following conditions:\r\n\r\n- it is not a snapshot build\r\n- it is not already part of the list of all versions (i.e. if you are building locally)\r\n\r\nCloses #15741\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsee above\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["all", "version", "commit", "ce49edc08b3d642f3768f4282d391062d2f83037", "we", "switch", "npm", "info", "now", "yarn", "info", "instead", "local", "git", "repositori", "inform", "get", "list", "current", "avail", "version", "doc", "app", "thi", "mean", "that", "dure", "releas", "version", "that", "current", "tag", "not", "yet", "avail", "npm", "therefor", "our", "list", "avail", "version", "incomplet", "we", "now", "simpli", "add", "current", "build", "version", "read", "json", "build", "version", "list", "all", "version", "it", "fulfil", "follow", "condit", "it", "not", "snapshot", "build", "it", "not", "alreadi", "part", "list", "all", "version", "you", "are", "build", "local", "close", "15741", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "abov", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nBug Fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe watch handler was triggering on its first invocation, even though\nits change had already been dealt with when setting up the binding.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe handler does not trigger an update on its first invocation\n\n**Does this PR introduce a breaking change?**\n\nNope - I don't think so. Although I had to modify a bunch of tests to ensure that a digest occurred between compilation and the first checks.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n  ~~\\- [ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nCloses #14546\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "watch", "handler", "wa", "trigger", "it", "first", "invoc", "even", "though", "it", "chang", "had", "alreadi", "been", "dealt", "when", "set", "up", "bind", "**what", "new", "behavior", "thi", "featur", "chang", "handler", "not", "trigger", "updat", "it", "first", "invoc", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "n't", "think", "so", "although", "had", "modifi", "bunch", "test", "ensur", "that", "digest", "occur", "between", "compil", "first", "check", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "close", "14546"], "title_sim": [0.0016326744337582559], "body_sim": [0.6168504651724677], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.015351501580816341, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 427}, {"A_title": "feat($injector): ability to load new modules after bootstrapping", "A_clean_title": ["feat", "injector", "abil", "load", "new", "modul", "after", "bootstrap"], "B_title": "chore(code.angular): correctly remove old zip files from snapshot", "B_clean_title": ["chore", "code", "angular", "correctli", "remov", "old", "zip", "file", "snapshot"], "A_body": "The new method `$injector.loadNewModules(modules)` will add each of the\r\ninjectables to the injector and execute all of the run blocks for each\r\nmodule passed to the method.\r\n\r\n* The application developer is responsible for loading the code containing\r\nthe modules.\r\n* Modules cannot be unloaded.\r\n* Previously compiled HTML will not be affected by newly loaded directives,\r\nfilters and components.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["new", "method", "injector", "loadnewmodul", "load", "new", "modul", "modul", "will", "add", "each", "inject", "injector", "execut", "all", "run", "block", "each", "modul", "pass", "method", "applic", "develop", "respons", "load", "code", "contain", "modul", "modul", "not", "unload", "previous", "compil", "html", "will", "not", "affect", "by", "newli", "load", "direct", "filter", "compon", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Previously, the event would be triggered on the deletion of the previous zip files,\r\nwhich would delete the current zip file as well\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["previous", "event", "would", "trigger", "delet", "previou", "zip", "file", "which", "would", "delet", "current", "zip", "file", "as", "well", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.11425998114224109], "body_sim": [0.7577698931670962], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0007526833192387424, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 33}, {"A_title": "fix($location): decode non-component special chars in Hashbang URLS", "A_clean_title": ["fix", "locat", "decod", "non", "compon", "special", "char", "hashbang", "url"], "B_title": "fix(ngOptions): remove selected attribute from unselected options", "B_clean_title": ["fix", "ngoption", "ng", "option", "remov", "select", "attribut", "unselect", "option"], "A_body": "Fixes https://github.com/angular/angular.js/pull/16316#issuecomment-347527097\r\n", "A_clean_body": ["fix", "http", "github", "com", "angular", "angular", "js", "pull", "16316", "issuecom", "347527097"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nSee #14892 nad #14419\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~~[ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nWhen the select model changes, we add the \"selected\" attribute to the selected option, so that\nscreen readers know which option is selected.\n\nPreviously, we failed to remove the attribute when the model changed to match a different option, or\nthe unknown / empty option.\n\nWhen using \"track by\", the behavior would also show when a user selected an option, and then the\nmodel was changed, because track by watches the tracked expression, and calls the $render function\non change.\n\nThis fix reads the current select value, finds the matching option and removes the \"selected\"\nattribute.\n\nFixes #14892\nFixes #14419\nRelated #12731\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "14892", "nad", "14419", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "when", "select", "model", "chang", "we", "add", "select", "attribut", "select", "option", "so", "that", "screen", "reader", "know", "which", "option", "select", "previous", "we", "fail", "remov", "attribut", "when", "model", "chang", "match", "differ", "option", "or", "unknown", "empti", "option", "when", "track", "by", "behavior", "would", "also", "show", "when", "user", "select", "option", "then", "model", "wa", "chang", "becaus", "track", "by", "watch", "track", "express", "call", "render", "function", "chang", "thi", "fix", "read", "current", "select", "valu", "find", "match", "option", "remov", "select", "attribut", "fix", "14892", "fix", "14419", "relat", "12731"], "title_sim": [0.03723455132308691], "body_sim": [0.21629372194935584], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0022426181904318834, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 505}, {"A_title": "[[TRAVIS POKE]] fix($location): allow numeric location setter arguments", "A_clean_title": ["travi", "poke", "fix", "locat", "allow", "numer", "locat", "setter", "argument"], "B_title": "fix($compile): correctly handle `null`/`undefined` href `attrs.$set()`", "B_clean_title": ["fix", "compil", "correctli", "handl", "null", "undefin", "href", "attr", "set"], "A_body": "Dupe of #7161, with some amendments\n", "A_clean_body": ["dupe", "7161", "some", "amend"], "B_body": "Accidentally broken while backporting #14890.\r\n\r\nSince #14890, `$$sanitizeUri()` can no longer handle `null`/`undefined` values.\r\nIn 1.7.x, there are no such calls.\r\nIn 1.6.x, there is still one such calls inside `Attributes.$set()`, so it needs to be adjusted accordingly.", "B_clean_body": ["accident", "broken", "while", "backport", "14890", "sinc", "14890", "sanitizeuri", "sanit", "uri", "no", "longer", "handl", "null", "undefin", "valu", "there", "are", "no", "such", "call", "there", "still", "one", "such", "call", "insid", "attribut", "set", "so", "it", "need", "adjust", "accordingli"], "title_sim": [0.054188406141166774], "body_sim": [0.02441333972339609], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.007206836777914551, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1309}, {"A_title": "fix($compile): don't run unnecessary update to one-way bindings", "A_clean_title": ["fix", "compil", "n't", "run", "unnecessari", "updat", "one", "way", "bind"], "B_title": "docs(guide/Conceptual Overview): fix external api example", "B_clean_title": ["doc", "guid", "conceptu", "overview", "fix", "extern", "api", "exampl"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nBug Fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe watch handler was triggering on its first invocation, even though\nits change had already been dealt with when setting up the binding.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe handler does not trigger an update on its first invocation\n\n**Does this PR introduce a breaking change?**\n\nNope - I don't think so. Although I had to modify a bunch of tests to ensure that a digest occurred between compilation and the first checks.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n  ~~\\- [ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nCloses #14546\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "watch", "handler", "wa", "trigger", "it", "first", "invoc", "even", "though", "it", "chang", "had", "alreadi", "been", "dealt", "when", "set", "up", "bind", "**what", "new", "behavior", "thi", "featur", "chang", "handler", "not", "trigger", "updat", "it", "first", "invoc", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "n't", "think", "so", "although", "had", "modifi", "bunch", "test", "ensur", "that", "digest", "occur", "between", "compil", "first", "check", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "close", "14546"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nExample is broken in the snapshot because of changes to JSONP\n\n**Other information**:\n\nThe example will still be broken when opened in a plnkr, because they use the stable version instead of the snapshot.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "broken", "snapshot", "becaus", "chang", "jsonp", "**other", "information**", "exampl", "will", "still", "broken", "when", "open", "plnkr", "becaus", "they", "use", "stabl", "version", "instead", "snapshot"], "title_sim": [0.04721725058100691], "body_sim": [0.731228823975786], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 173}, {"A_title": "fix($rootScope): fix potential memory leak when removing scope listeners (v2)", "A_clean_title": ["fix", "rootscop", "root", "scope", "fix", "potenti", "memori", "leak", "when", "remov", "scope", "listen", "v2"], "B_title": "fix(ngMessage): make ngMessage work with ngBind", "B_clean_title": ["fix", "ngmessag", "ng", "messag", "make", "ngmessag", "ng", "messag", "work", "ngbind", "ng", "bind"], "A_body": "This is the alternative to #16161 that we discussed.\r\n\r\nThis simplifies the listener cleanup and avoids creating sparse listener arrays (unlike #16161) but introduces a new restriction that disallows recursive event $broadcast/$emit-ing.  We could remove this restriction but it would complicate everything event related by requiring a stack for the index.", "A_clean_body": ["thi", "altern", "16161", "that", "we", "discuss", "thi", "simplifi", "listen", "cleanup", "avoid", "creat", "spars", "listen", "array", "unlik", "16161", "but", "introduc", "new", "restrict", "that", "disallow", "recurs", "event", "broadcast", "emit", "ing", "we", "could", "remov", "thi", "restrict", "but", "it", "would", "complic", "everyth", "event", "relat", "by", "requir", "stack", "index"], "B_body": "Fixes #8089 \n\n(I'm not actually sure why this works tbh)\n", "B_clean_body": ["fix", "8089", "'m", "not", "actual", "sure", "whi", "thi", "work", "tbh"], "title_sim": [0.04895501930294672], "body_sim": [0.13966733131165976], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.17898281931549828, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 740}, {"A_title": "fixed opera date.toISOString issue", "A_clean_title": ["fix", "opera", "date", "toisostr", "iso", "string", "issu"], "B_title": "refactor(jqLite): stop patching individual jQuery methods", "B_clean_title": ["refactor", "jqlite", "jq", "lite", "stop", "patch", "individu", "jqueri", "queri", "method"], "A_body": "opera did not implement date.toISOString correctly according to Javascript guideline. \nSo we have to change the toString method of angularDate at line 766 of src/apis.js. \n", "A_clean_body": ["opera", "did", "not", "implement", "date", "toisostr", "iso", "string", "correctli", "accord", "javascript", "guidelin", "so", "we", "have", "chang", "tostr", "string", "method", "angulard", "angular", "date", "at", "line", "766", "js", "src", "api"], "B_body": "Currently Angular monkey-patches a few jQuery methods that remove elements\nfrom the DOM. Since methods like .remove() have multiple signatures\nthat can change what's actually removed, Angular needs to carefully\nrepeat them in its patching or it can break apps using jQuery correctly.\nSuch a strategy is also not future-safe.\n\nInstead of patching individual methods on the prototype, it's better to\nhook into jQuery.cleanData and trigger custom events there. This should be\nsafe as e.g. jQuery UI needs it and uses it. It'll also be future-safe.\n\nThe only drawback is that $destroy is no longer triggered when using $detach\nbut:\n1. Angular doesn't use this method, jqLite doesn't implement it.\n2. Detached elements can be re-attached keeping all their events & data\n    so it makes sense that $destroy is not triggered on them.\n3. The approach from this commit is so much safer that any issues with\n    .detach() working differently are outweighed by the robustness of the code.\n\nBREAKING CHANGE: the $destroy event is no longer triggered when using the\njQuery detach() method. If you want to destroy Angular data attached to the\nelement, use remove().\n\ncc @caitp\n", "B_clean_body": ["current", "angular", "monkey", "patch", "few", "jqueri", "queri", "method", "that", "remov", "element", "dom", "sinc", "method", "like", "remov", "have", "multipl", "signatur", "that", "chang", "what", "'s", "actual", "remov", "angular", "need", "care", "repeat", "them", "it", "patch", "or", "it", "break", "app", "jqueri", "queri", "correctli", "such", "strategi", "also", "not", "futur", "safe", "instead", "patch", "individu", "method", "prototyp", "it", "'s", "better", "hook", "into", "jqueri", "cleandata", "queri", "clean", "data", "trigger", "custom", "event", "there", "thi", "safe", "as", "jqueri", "queri", "ui", "need", "it", "use", "it", "it", "'ll", "also", "futur", "safe", "onli", "drawback", "that", "destroy", "no", "longer", "trigger", "when", "detach", "but", "angular", "n't", "use", "thi", "method", "jqlite", "jq", "lite", "n't", "implement", "it", "detach", "element", "re", "attach", "keep", "all", "their", "event", "data", "so", "it", "make", "sens", "that", "destroy", "not", "trigger", "them", "approach", "thi", "commit", "so", "much", "safer", "that", "ani", "issu", "detach", "work", "differ", "are", "outweigh", "by", "robust", "code", "break", "chang", "destroy", "event", "no", "longer", "trigger", "when", "jqueri", "queri", "detach", "method", "you", "want", "destroy", "angular", "data", "attach", "element", "use", "remov", "cc", "caitp"], "title_sim": [-0.022722432853543275], "body_sim": [0.15622793316675107], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1061}, {"A_title": "refactor($parse): remove unused expression arguments", "A_clean_title": ["refactor", "pars", "remov", "unus", "express", "argument"], "B_title": "chore(travis): turn on caching for node_modules and bower_components directories", "B_clean_title": ["chore", "travi", "turn", "cach", "node", "modul", "bower", "compon", "directori"], "A_body": "Not sure if I'm missing some...?\n", "A_clean_body": ["not", "sure", "'m", "miss", "some"], "B_body": "The cache behavior is documented at http://docs.travis-ci.com/user/caching/\n\nThis commit also disabled our custom caching via npm-bundler-deps.sh\n", "B_clean_body": ["cach", "behavior", "document", "at", "http", "travi", "ci", "doc", "com", "user", "cach", "thi", "commit", "also", "disabl", "our", "custom", "cach", "via", "npm", "bundler", "dep", "sh"], "title_sim": [0.014023701498406472], "body_sim": [-0.06687292262886128], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 605}, {"A_title": "feat($parse): support trailing commas in object & array literals", "A_clean_title": ["feat", "pars", "support", "trail", "comma", "object", "array", "liter"], "B_title": "perf(ngOptions): use documentFragment to populate select", "B_clean_title": ["perf", "ngoption", "ng", "option", "use", "documentfrag", "document", "fragment", "popul", "select"], "A_body": "Per ECMAScript 5.1 specification trailing commas are allowed in object and\narray literals. All modern browsers as well as IE>8 support this syntax.\nThis commit adds support for such syntax to Angular expressions.\n\nI'm creating a new pull request as @btford asked me to re-open #3685 with an explanation\nand I don't have privileges to re-open prs.\n\nMain use case of trailing commas are when using multi-line notation for objects/arrays. When you have sth like:\n\n``` javascript\n{\n    par1: \"val1\",\n    par3: \"val3\",\n    par2: \"val2\",\n}\n```\n\nit's much easier to move lines 2. and 3. around without causing errors. Such reordering is cumberscome when trailing commas are ommited. I agree readability is a little reduced when using a single-line form, but for multi-line ones it's IMO a godsend.\n\nCurrently there are no good tools to minify Angular expressions so this might be less used form now but once such a tool is created, for longer objects/arrays such notation would help.\n", "A_clean_body": ["per", "ecmascript", "ecma", "script", "specif", "trail", "comma", "are", "allow", "object", "array", "liter", "all", "modern", "browser", "as", "well", "as", "ie", "support", "thi", "syntax", "thi", "commit", "add", "support", "such", "syntax", "angular", "express", "'m", "creat", "new", "pull", "request", "as", "btford", "ask", "me", "re", "open", "3685", "explan", "n't", "have", "privileg", "re", "open", "pr", "main", "use", "case", "trail", "comma", "are", "when", "multi", "line", "notat", "object", "array", "when", "you", "have", "sth", "like", "javascript", "par1", "val1", "par3", "val3", "par2", "val2", "it", "'s", "much", "easier", "move", "line", "around", "without", "caus", "error", "such", "reorder", "cumberscom", "when", "trail", "comma", "are", "ommit", "agre", "readabl", "littl", "reduc", "when", "singl", "line", "form", "but", "multi", "line", "one", "it", "'s", "imo", "godsend", "current", "there", "are", "no", "good", "tool", "minifi", "angular", "express", "so", "thi", "might", "less", "use", "form", "now", "but", "onc", "such", "tool", "creat", "longer", "object", "array", "such", "notat", "would", "help"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nperf/fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n- ngoptions is slow in ie with many options\n- strange freezes in ie in some cases\n\n**Does this PR introduce a breaking change?**\na tiny one possibly - now the select element is completely emptied before the options are appended\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThis changes the way option elements are generated when the ngOption collection changes.\nPreviously, we would re-use option elements when possible (updating their text and\nlabel). Now, we first remove all currently displayed options and the create new options for the\ncollection. The new options are first appended to a documentFragment, which is in the end appended\nto the selectElement.\n\nUsing documentFragment improves render performance in IE with large option collections\n(> 100 elements) considerably.\n\nAlways creating new options fixes issues in IE where the select would become unresponsive to user\ninput.\n\nFixes #13607\nFixes #12076\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "perf", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "ngoption", "slow", "ie", "mani", "option", "strang", "freez", "ie", "some", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "tini", "one", "possibl", "now", "select", "element", "complet", "empti", "befor", "option", "are", "append", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "chang", "way", "option", "element", "are", "gener", "when", "ngoption", "ng", "option", "collect", "chang", "previous", "we", "would", "re", "use", "option", "element", "when", "possibl", "updat", "their", "text", "label", "now", "we", "first", "remov", "all", "current", "display", "option", "creat", "new", "option", "collect", "new", "option", "are", "first", "append", "documentfrag", "document", "fragment", "which", "end", "append", "selectel", "select", "element", "documentfrag", "document", "fragment", "improv", "render", "perform", "ie", "larg", "option", "collect", "100", "element", "consider", "alway", "creat", "new", "option", "fix", "issu", "ie", "where", "select", "would", "becom", "unrespons", "user", "input", "fix", "13607", "fix", "12076"], "title_sim": [0.024525431839965008], "body_sim": [0.33552407296558606], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.003287220793440931, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 962}, {"A_title": "chore(yarn): rely on Travis built-in Yarn support, update Yarn in Jenkins", "A_clean_title": ["chore", "yarn", "reli", "travi", "built", "yarn", "support", "updat", "yarn", "jenkin"], "B_title": "fix($scope): fixes multiple root element error when there is a whites\u2026", "B_clean_title": ["fix", "scope", "fix", "multipl", "root", "element", "error", "when", "there", "whites\u2026"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe install an old Yarn verison manually.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nOn Travis we rely on built-in Yarn support and we only cache the Yarn cache, not `node_modules`. We install a new Yarn verison manually on Jenkins; the location of the install script changed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "instal", "old", "yarn", "verison", "manual", "**what", "new", "behavior", "thi", "featur", "chang", "travi", "we", "reli", "built", "yarn", "support", "we", "onli", "cach", "yarn", "cach", "not", "node", "modul", "we", "instal", "new", "yarn", "verison", "manual", "jenkin", "locat", "instal", "script", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nIf one tries to load a directive with a top-level comment angular throws an error \nError: [$compile:tplrt] Template for directive 'myDirective' must have exactly one root element\nhttps://github.com/angular/angular.js/issues/15108\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nfixes multiple root element error when there is a whitespace after a comment\n\nAdded new conditional for NODE_TYPE_TEXT inside removeComments method of $compile\nAdded corresponding unit tests.\n\nCloses #15108\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "one", "tri", "load", "direct", "top", "level", "comment", "angular", "throw", "error", "error", "compil", "tplrt", "templat", "direct", "'mydirect", "'mi", "direct", "must", "have", "exactli", "one", "root", "element", "http", "github", "com", "angular", "angular", "js", "issu", "15108", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "multipl", "root", "element", "error", "when", "there", "whitespac", "after", "comment", "ad", "new", "condit", "node", "type", "text", "insid", "removecom", "remov", "comment", "method", "compil", "ad", "correspond", "unit", "test", "close", "15108"], "title_sim": [0.07215609890318425], "body_sim": [0.8490966950254601], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 189}, {"A_title": "fix(sanitizeUri): sanitize URIs that contain IDEOGRAPHIC SPACE chars", "A_clean_title": ["fix", "sanitizeuri", "sanit", "uri", "sanit", "uri", "ur", "that", "contain", "ideograph", "space", "char"], "B_title": "docs(guide/Unit Testing): Changed $scope = {} to $scope = $rootScope.\u2026", "B_clean_title": ["doc", "guid", "unit", "test", "chang", "scope", "scope", "rootscop", "root", "scope"], "A_body": "Chrome 62 was not sanitizing dangerous URLs containing\r\nJavaScript, if they started with these \"whitespace\" characters.\r\n\r\nCloses #16288\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#16288\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nURIs are sanitized correctly on Chrome 62\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["chrome", "62", "wa", "not", "sanit", "danger", "url", "ur", "ls", "contain", "javascript", "java", "script", "they", "start", "these", "whitespac", "charact", "close", "16288", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "16288", "**what", "new", "behavior", "thi", "featur", "chang", "uri", "ur", "are", "sanit", "correctli", "chrome", "62", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "\u2026$new()\r\n\r\n{} will just create an empty object. This will break if the module uses for example $watch or others.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["new", "will", "just", "creat", "empti", "object", "thi", "will", "break", "modul", "use", "exampl", "watch", "or", "other", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.0042992099941680855], "body_sim": [0.8900322501934437], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1}, {"A_title": "docs(faq): clarify the versioning strategy", "A_clean_title": ["doc", "faq", "clarifi", "version", "strategi"], "B_title": "Overload \"component\" method to accept object map of components", "B_clean_title": ["overload", "compon", "method", "accept", "object", "map", "compon"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nInformation is not super clear\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nclarify info on:\r\n- When do features and breaking changes appear\r\n- Relationship with Semver\r\n- Compatibility of core and optional modules \r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "inform", "not", "super", "clear", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "clarifi", "info", "when", "featur", "break", "chang", "appear", "relationship", "semver", "compat", "core", "option", "modul"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\"component\" method does not allow multiple components registration\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\"component\" method accepts object as a parameter where the keys are component names and the values are the component definition objects\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compon", "method", "not", "allow", "multipl", "compon", "registr", "**what", "new", "behavior", "thi", "featur", "chang", "compon", "method", "accept", "object", "as", "paramet", "where", "key", "are", "compon", "name", "valu", "are", "compon", "definit", "object", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.039596173946349685], "body_sim": [0.8932853912614152], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 90}, {"A_title": "feat(scope): add listener deregistration fn for $watch and $on", "A_clean_title": ["feat", "scope", "add", "listen", "deregistr", "fn", "watch"], "B_title": "fix($location): rewrite links with nested elements", "B_clean_title": ["fix", "locat", "rewrit", "link", "nest", "element"], "A_body": "- both $watch and $on now return a function which when called\n  deregisters the listener\n- $removeListener was removed and replaced with the above\n- added more tests for $watch and $on\n\nCloses #542\n", "A_clean_body": ["both", "watch", "now", "return", "function", "which", "when", "call", "deregist", "listen", "removelisten", "remov", "listen", "wa", "remov", "replac", "abov", "ad", "more", "test", "watch", "close", "542"], "B_body": "So docs is fixed now, inner links do not reload the page:\nhttp://ci.angularjs.org/job/angular.js-vojta/41/artifact/build/pkg/0.10.4-849c5365/docs-0.10.4-849c5365/index.html\n\nFor example:\n\n``` html\n<a href=\"some/link\">inner <span>text</span></a>\n```\n\nIf you click on \"text\", then the span element is event.target, so we need to traverse the DOM.\n", "B_clean_body": ["so", "doc", "fix", "now", "inner", "link", "not", "reload", "page", "http", "angularj", "js", "10", "849c5365", "doc", "10", "html", "ci", "org", "job", "angular", "vojta", "41", "artifact", "build", "pkg", "849c5365", "index", "exampl", "html", "href=", "some", "link", "inner", "span", "text", "span", "you", "click", "text", "then", "span", "element", "event", "target", "so", "we", "need", "travers", "dom"], "title_sim": [-0.012313416873634339], "body_sim": [0.06636345206329161], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.00956260116256474, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 49}, {"A_title": "fix($sce): do not assume $document[0] exists", "A_clean_title": ["fix", "sce", "not", "assum", "document", "exist"], "B_title": "chore(styleDirective): remove an unneccessary directive definition", "B_clean_title": ["chore", "styledirect", "style", "direct", "remov", "unneccessari", "direct", "definit"], "A_body": "this is important so that people can mock $window without having to add stuff that angular uses internally into it\n\nCloses #9661\n", "A_clean_body": ["thi", "import", "so", "that", "peopl", "mock", "window", "without", "have", "add", "stuff", "that", "angular", "use", "intern", "into", "it", "close", "9661"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nChore / Cleanup\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nSince the style directive is defined as a non-terminal element directive\nwith no behavior on link, we may as well not define anything at all.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "cleanup", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "sinc", "style", "direct", "defin", "as", "non", "termin", "element", "direct", "no", "behavior", "link", "we", "may", "as", "well", "not", "defin", "anyth", "at", "all"], "title_sim": [0.12025135554186793], "body_sim": [0.2727555781111985], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 657}, {"A_title": "build(*): update Node from 6 to 8, update Yarn", "A_clean_title": ["build", "updat", "node", "updat", "yarn"], "B_title": "fix(guide) broken title overflow in navlist", "B_clean_title": ["fix", "guid", "broken", "titl", "overflow", "navlist"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBuild-related.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nWe use Node 6 & an old Yarn version.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nWe use Node 8 & a new Yarn version.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\nAngular (2+) switched to Node 8 and so should we.\r\n\r\nRef angular/angular#20807\r\nRef angular/angular#20832\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "build", "relat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "use", "node", "old", "yarn", "version", "**what", "new", "behavior", "thi", "featur", "chang", "we", "use", "node", "new", "yarn", "version", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**", "angular", "2+", "switch", "node", "so", "we", "ref", "angular", "angular", "20807", "ref", "angular", "angular", "20832"], "B_body": "## Before\n\n![screen shot 2013-08-30 at 1 25 41 pm](https://f.cloud.github.com/assets/1016365/1060537/8829f31a-11b3-11e3-8620-9751954915f4.png)\n## After\n\n![screen shot 2013-08-30 at 1 25 31 pm](https://f.cloud.github.com/assets/1016365/1060540/8b6e9efe-11b3-11e3-8777-fa52f5236a74.png)\n", "B_clean_body": ["befor", "screen", "shot", "2013", "08", "30", "at", "25", "41", "pm", "http", "11b3", "11e3", "8620", "cloud", "github", "9751954915f4", "png", "com", "asset", "1016365", "1060537", "8829f31a", "after", "screen", "shot", "2013", "08", "30", "at", "25", "31", "pm", "http", "11b3", "11e3", "8777", "cloud", "github", "fa52f5236a74", "png", "com", "asset", "1016365", "1060540", "8b6e9ef"], "title_sim": [0.11457608593123043], "body_sim": [0.23227066325885962], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1558}, {"A_title": "test($resource): check we do not throw if response.data is the resour\u2026", "A_clean_title": ["test", "resourc", "check", "we", "not", "throw", "respons", "data", "resour\u2026"], "B_title": "fix(select): don't register options when select has no ngModel", "B_clean_title": ["fix", "select", "n't", "regist", "option", "when", "select", "ha", "no", "ngmodel", "ng", "model"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n\u2026ce object\n\nCloses #4508\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026ce", "object", "close", "4508"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nOptions are added even if select has no ngModel. ngValue replaces the value attribute of the element with a hashed value, and this might break tests (it does in angular material)\n\n**What is the new behavior (if this is a feature change)?**\nOptions are not added to select\n\n**Does this PR introduce a breaking change?**\n?\nI can't think of a valid use case where you'd want registerning options without ngModel integration. If you don't have model binding, then you don't need to store the options internally. You can actually use ngOptions without ngModel to render a list of options - but you don't need to register the options for that.\n\nThe registerOption function is also not documented, so this is an implementation detail from the perspective of the user\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nWhen option elements use ngValue, value or interpolated text simply to set\nthe option value, i.e. when the parent select doesn't have an ngModel,\nthere is no necessity in registering the options with the select controller.\nThis was previously no problem, as the ngModelController is set to a noop controller,\nso that all further interactions are aborted ($render etc)\n\nHowever, ngValue sets a hashed value inside the option value (to support arbitrary object types).\nThis can cause issues with tests that expect unhashed values.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "option", "are", "ad", "even", "select", "ha", "no", "ngmodel", "ng", "model", "ngvalu", "ng", "valu", "replac", "valu", "attribut", "element", "hash", "valu", "thi", "might", "break", "test", "it", "angular", "materi", "**what", "new", "behavior", "thi", "featur", "chang", "option", "are", "not", "ad", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ca", "n't", "think", "valid", "use", "case", "where", "you", "'d", "want", "registern", "option", "without", "ngmodel", "ng", "model", "integr", "you", "n't", "have", "model", "bind", "then", "you", "n't", "need", "store", "option", "intern", "you", "actual", "use", "ngoption", "ng", "option", "without", "ngmodel", "ng", "model", "render", "list", "option", "but", "you", "n't", "need", "regist", "option", "that", "registeropt", "regist", "option", "function", "also", "not", "document", "so", "thi", "implement", "detail", "perspect", "user", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "when", "option", "element", "use", "ngvalu", "ng", "valu", "valu", "or", "interpol", "text", "simpli", "set", "option", "valu", "when", "parent", "select", "n't", "have", "ngmodel", "ng", "model", "there", "no", "necess", "regist", "option", "select", "control", "thi", "wa", "previous", "no", "problem", "as", "ngmodelcontrol", "ng", "model", "control", "set", "noop", "control", "so", "that", "all", "further", "interact", "are", "abort", "render", "etc", "howev", "ngvalu", "ng", "valu", "set", "hash", "valu", "insid", "option", "valu", "support", "arbitrari", "object", "type", "thi", "caus", "issu", "test", "that", "expect", "unhash", "valu"], "title_sim": [-0.019012012181641346], "body_sim": [0.5323853401794492], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.009863637156996025, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 28}, {"A_title": "docs(faq): clarify the versioning strategy", "A_clean_title": ["doc", "faq", "clarifi", "version", "strategi"], "B_title": "refactor($parse): remove unused expression arguments", "B_clean_title": ["refactor", "pars", "remov", "unus", "express", "argument"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nInformation is not super clear\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nclarify info on:\r\n- When do features and breaking changes appear\r\n- Relationship with Semver\r\n- Compatibility of core and optional modules \r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "inform", "not", "super", "clear", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "clarifi", "info", "when", "featur", "break", "chang", "appear", "relationship", "semver", "compat", "core", "option", "modul"], "B_body": "Not sure if I'm missing some...?\n", "B_clean_body": ["not", "sure", "'m", "miss", "some"], "title_sim": [0.009281247064719663], "body_sim": [0.014011457640745451], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 156}, {"A_title": "feat(ngMock): add support for `$animate.closeAndFlush()`", "A_clean_title": ["feat", "ngmock", "ng", "mock", "add", "support", "anim", "closeandflush", "close", "flush"], "B_title": "chore(*): bump Yarn in Jenkins init-node script", "B_clean_title": ["chore", "bump", "yarn", "jenkin", "init", "node", "script"], "A_body": "Use `$animate.closeAndFlush()` to close all running animations.\n\nCloses #13005\n", "A_clean_body": ["use", "anim", "closeandflush", "close", "flush", "close", "all", "run", "anim", "close", "13005"], "B_body": "Without it Jenkins builds are broken.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["without", "it", "jenkin", "build", "are", "broken", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.04378032830428462], "body_sim": [0.003920832550219977], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 701}, {"A_title": "fix($location): do not decode forward slashes in the path in HTML5 mode", "A_clean_title": ["fix", "locat", "not", "decod", "forward", "slash", "path", "html5", "mode"], "B_title": "docs(guide/Developer Guide): Update twitter handle", "B_clean_title": ["doc", "guid", "develop", "guid", "updat", "twitter", "handl"], "A_body": "Closes #16312\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nbug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nSee #16312\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nIt depends what people expected of the location escaping...\r\nI think what we had before was buggy. So no.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["close", "16312", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "16312", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "it", "depend", "what", "peopl", "expect", "locat", "escap", "think", "what", "we", "had", "befor", "wa", "buggi", "so", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Replaced the old Angular twitter handle with the new one.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["replac", "old", "angular", "twitter", "handl", "new", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.08347038178132683], "body_sim": [0.9839479005237872], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 208}, {"A_title": "docs(changelog): Change for labels and style consistency", "A_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "B_title": "chore(docs): don't use bower for docs dependencies", "B_clean_title": ["chore", "doc", "n't", "use", "bower", "doc", "depend"], "A_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "A_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nchore\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nDocs app uses bower\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nNo use of bower in the docs application\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "doc", "app", "use", "bower", "**what", "new", "behavior", "thi", "featur", "chang", "no", "use", "bower", "doc", "applic", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.2532582056785857], "body_sim": [0.4506077628478985], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 225}, {"A_title": "docs(linky): mark \"target\" param as optional in linky filter", "A_clean_title": ["doc", "linki", "mark", "target", "param", "as", "option", "linki", "filter"], "B_title": "chore(doc-gen): add production deployment environment", "B_clean_title": ["chore", "doc", "gen", "add", "product", "deploy", "environ"], "A_body": "This argument is optional in practice, and it is not provided in many of the examples in the documentation.\r\nIts optional presence is handled here:\r\nhttps://github.com/angular/angular.js/blob/master/src/ngSanitize/filter/linky.js#L185.\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe second argument to ngSanitize's \"linky\" filter is marked as non-optional, it is handled as optional and usage shows it as being optional.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nngSanitize's \"linky\" filter has it's second parameter marked as optional.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "argument", "option", "practic", "it", "not", "provid", "mani", "exampl", "document", "it", "option", "presenc", "handl", "here", "http", "js", "github", "com", "angular", "angular", "js", "blob", "master", "src", "ngsanit", "filter", "linki", "ng", "sanit", "l185", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "second", "argument", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "mark", "as", "non", "option", "it", "handl", "as", "option", "usag", "show", "it", "as", "be", "option", "**what", "new", "behavior", "thi", "featur", "chang", "ngsanit", "ng", "sanit", "'s", "linki", "filter", "ha", "it", "'s", "second", "paramet", "mark", "as", "option", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "This is a part of a fix for https://github.com/angular/dgeni/issues/56\n", "B_clean_body": ["thi", "part", "fix", "http", "github", "com", "angular", "dgeni", "issu", "56"], "title_sim": [0.037965465791195384], "body_sim": [0.4828148469876353], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1367}, {"A_title": "[Style] Docs gulpfile.js - Spacing Consistency", "A_clean_title": ["style", "doc", "gulpfil", "js", "space", "consist"], "B_title": "refactor($interpolate): remove unnecessary else", "B_clean_title": ["refactor", "interpol", "remov", "unnecessari"], "A_body": "Updated gulpfile.js in Docs so that spacing is consistency.\n", "A_clean_body": ["updat", "gulpfil", "js", "doc", "so", "that", "space", "consist"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nCleaner code.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "cleaner", "code", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.0016970624910323607], "body_sim": [0.29705116289879363], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 473}, {"A_title": "test(support): verify support tests results in all tested browsers", "A_clean_title": ["test", "support", "verifi", "support", "test", "result", "all", "test", "browser"], "B_title": "fix($resource): properly call error callback when resource is called with", "B_clean_title": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nNew tests.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nIt's not tested whether browsers pass or fail specific support tests used to skip particular test blocks.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll browsers have verified support tests results.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "new", "test", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "it", "'s", "not", "test", "whether", "browser", "pass", "or", "fail", "specif", "support", "test", "use", "skip", "particular", "test", "block", "**what", "new", "behavior", "thi", "featur", "chang", "all", "browser", "have", "verifi", "support", "test", "result", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "fix($resource): properly call error callback when resource is called with two arguments\n", "B_clean_body": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call", "two", "argument"], "title_sim": [0.17639774970868696], "body_sim": [0.06696066252163171], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.010578621536648273, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2105}, {"A_title": "fix(booleanAttrs): convert to boolean", "A_clean_title": ["fix", "booleanattr", "boolean", "attr", "convert", "boolean"], "B_title": "fix($compile): throw error in $onChanges immediately", "B_clean_title": ["fix", "compil", "throw", "error", "onchang", "chang", "immedi"], "A_body": "jQuery's attr() does not handle 0 as false, when it comes to boolean attrs.\n\nAnother solution might be to not set attr() for boolean attrs at all...\n", "A_clean_body": ["jqueri", "queri", "'s", "attr", "not", "handl", "as", "fals", "when", "it", "come", "boolean", "attr", "anoth", "solut", "might", "not", "set", "attr", "boolean", "attr", "at", "all"], "B_body": "This brings it in line with how we throw errors in a digest cycle.\r\n\r\nCloses https://github.com/angular/angular.js/issues/15578\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "bring", "it", "line", "how", "we", "throw", "error", "digest", "cycl", "close", "http", "github", "com", "angular", "angular", "js", "issu", "15578", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.2883925488761066], "body_sim": [0.028188620803288104], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2172}, {"A_title": "refactor($parse): remove unnecessary .constant if when collecting inputs", "A_clean_title": ["refactor", "pars", "remov", "unnecessari", "constant", "when", "collect", "input"], "B_title": "refactor(jqLite): wrap the jqueryVersion binding in a span", "B_clean_title": ["refactor", "jqlite", "jq", "lite", "wrap", "jqueryvers", "jqueri", "version", "bind", "span"], "A_body": "The `if`s are unnecessary because the calculation of `ast.toWatch` should have taken constants into account already.", "A_clean_body": ["are", "unnecessari", "becaus", "calcul", "ast", "towatch", "watch", "have", "taken", "constant", "into", "account", "alreadi"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRefactor\n\n**What is the current behavior? (You can also link to an open issue here)**\nBindings are not wrapped in `<span>`s in some e2e tests.\n\n**What is the new behavior (if this is a feature change)?**\nBindings are now wrapped in `<span>`s.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nProtractor's by.binding selector selects the whole element in which the binding\nis contained as otherwise it can't know which bit of text has been interpolated.\n\nIt's safer to wrap the binding in a span so that we're sure what the e2e tests\nare exactly testing.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "bind", "are", "not", "wrap", "span", "some", "e2e", "test", "**what", "new", "behavior", "thi", "featur", "chang", "bind", "are", "now", "wrap", "span", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "protractor", "'s", "by", "bind", "selector", "select", "whole", "element", "which", "bind", "contain", "as", "otherwis", "it", "ca", "n't", "know", "which", "bit", "text", "ha", "been", "interpol", "it", "'s", "safer", "wrap", "bind", "span", "so", "that", "we", "'re", "sure", "what", "e2e", "test", "are", "exactli", "test"], "title_sim": [0.3407831844869804], "body_sim": [0.15003838276745235], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 280}, {"A_title": "fix($compile): sanitize values bound to img[src]", "A_clean_title": ["fix", "compil", "sanit", "valu", "bound", "img", "src"], "B_title": "refactor($controller): remove unused injected $window", "B_clean_title": ["refactor", "control", "remov", "unus", "inject", "window"], "A_body": "Ref: 9532234bf1c408af9a6fd2c4743fdb585b920531\n", "A_clean_body": ["ref", "9532234bf1c408af9a6fd2c4743fdb585b920531"], "B_body": "This got left behind after e269c14425a3209040f65c022658770e00a36f16", "B_clean_body": ["thi", "got", "left", "behind", "after", "e269c14425a3209040f65c022658770e00a36f16"], "title_sim": [0.030477344244846834], "body_sim": [-0.0152426891127511], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1370}, {"A_title": "fix(select): remove workaround for Chrome bug", "A_clean_title": ["fix", "select", "remov", "workaround", "chrome", "bug"], "B_title": "Revert \"fix($parse): standardize one-time literal vs non-literal and interceptors\"", "B_clean_title": ["revert", "fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nRemoves a no-longer need workaround\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\nIn the Chrome issue (https://bugs.chromium.org/p/chromium/issues/detail?id=381459)\nI noticed that the bug can't be reproduced in Chrome 45 and the issue was\nclosed subsequently. I've also tested again with Chrome 51 and it still works.\n\nRelated: #6828\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "remov", "no", "longer", "need", "workaround", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "chrome", "issu", "http", "chromium", "bug", "org", "chromium", "issu", "detail", "id=381459", "notic", "that", "bug", "ca", "n't", "reproduc", "chrome", "45", "issu", "wa", "close", "subsequ", "'ve", "also", "test", "again", "chrome", "51", "it", "still", "work", "relat", "6828"], "B_body": "Reverts 60394a9d91dad8932fa900af7c8529837f1d4557 to fix #15905 in 1.6. Currently plan is to NOT revert in 1.7.\r\n\r\nFixes #15905 ", "B_clean_body": ["revert", "60394a9d91dad8932fa900af7c8529837f1d4557", "fix", "15905", "current", "plan", "not", "revert", "fix", "15905"], "title_sim": [0.04434018402595322], "body_sim": [0.24873924221149862], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0013461236394935593, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 335}, {"A_title": "feat(ngModel): bind to getters/setters", "A_clean_title": ["feat", "ngmodel", "ng", "model", "bind", "getter", "setter"], "B_title": "docs($sanitizeProvider): fix param comment for enableSvg", "B_clean_title": ["doc", "sanitizeprovid", "sanit", "provid", "fix", "param", "comment", "enablesvg", "enabl", "svg"], "A_body": "Currently, you might do this if you want to bind to getters/setters:\n\n> controller\n\n``` javascript\n// ...\n$scope.watch(function () {\n  return myModel.getterSetter();\n}, function (newValue) {\n  $scope.someProp = newValue;\n});\n\n$scope.watch('someProp', function (newValue) {\n  myModel.getterSetter(newValue);\n});\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"someProp\">\n```\n\nThe implementation in this PR changes the semantics of `ngModel` in the following ways:\n\nIf the expression bound to `ngModel` resolves to a function, the function is invoked to get the current value to be expressed in the DOM. When the binding changes, if the expression bound to `ngModel` resolves to a function (at that time) the function is invoked with the new value.\n\nThis means instead, you could do this:\n\n> controller\n\n``` javascript\n// ...\n$scope.myModel = myModel;\n// ...\n```\n\n> template\n\n``` html\n<input ng-model=\"myModel.getterSetter\">\n```\n\nI like that to end developers, this feels like \"uniform access\" for common cases. I don't like that this means there's a difference in semantics between `ngModel` and expressions elsewhere in Angular.\n\nThis would be a breaking change, but I don't think that this would affect any legitimate use cases. The only case I can think of is if hypothetically, you bind to some property that's originally a function, overwriting it with a string. I can't think of any good reason to write controller code like that.\n\n@IgorMinar suggested a different syntax so that the difference in semantics is obvious. Something like:\n\n``` html\n<input ng-model=\"myModel.getterSetter()\">\n```\n\nI like that this makes the semantics obvious. I don't like that this still violates the \"uniform access principle.\"\n\nCloses #768\n", "A_clean_body": ["current", "you", "might", "thi", "you", "want", "bind", "getter", "setter", "control", "javascript", "scope", "watch", "function", "return", "mymodel", "gettersett", "my", "model", "getter", "setter", "function", "newvalu", "new", "valu", "scope", "someprop", "some", "prop", "newvalu", "new", "valu", "scope", "watch", "'someprop", "'some", "prop", "function", "newvalu", "new", "valu", "mymodel", "gettersett", "my", "model", "getter", "setter", "newvalu", "new", "valu", "templat", "html", "input", "ng", "model=", "someprop", "some", "prop", "implement", "thi", "pr", "chang", "semant", "ngmodel", "ng", "model", "follow", "way", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "function", "invok", "get", "current", "valu", "express", "dom", "when", "bind", "chang", "express", "bound", "ngmodel", "ng", "model", "resolv", "function", "at", "that", "time", "function", "invok", "new", "valu", "thi", "mean", "instead", "you", "could", "thi", "control", "javascript", "scope", "mymodel", "my", "model", "mymodel", "my", "model", "templat", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "end", "develop", "thi", "feel", "like", "uniform", "access", "common", "case", "n't", "like", "that", "thi", "mean", "there", "'s", "differ", "semant", "between", "ngmodel", "ng", "model", "express", "elsewher", "angular", "thi", "would", "break", "chang", "but", "n't", "think", "that", "thi", "would", "affect", "ani", "legitim", "use", "case", "onli", "case", "think", "hypothet", "you", "bind", "some", "properti", "that", "'s", "origin", "function", "overwrit", "it", "string", "ca", "n't", "think", "ani", "good", "reason", "write", "control", "code", "like", "that", "igorminar", "igor", "minar", "suggest", "differ", "syntax", "so", "that", "differ", "semant", "obviou", "someth", "like", "html", "input", "ng", "model=", "mymodel", "gettersett", "my", "model", "getter", "setter", "like", "that", "thi", "make", "semant", "obviou", "n't", "like", "that", "thi", "still", "violat", "uniform", "access", "principl", "close", "768"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe param is listed as type boolean, but has an erroneous comment describing it as a regex. (Maybe from a much earlier version of Angular?)\n\n**What is the new behavior (if this is a feature change)?**\n\nNo behavior change. Fixes the doc comment.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nI submitted a pull request for this previously, but the commit had the wrong email address so it didn't catch my CLA, so I'm resubmitting now.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "param", "list", "as", "type", "boolean", "but", "ha", "erron", "comment", "describ", "it", "as", "regex", "mayb", "much", "earlier", "version", "angular", "**what", "new", "behavior", "thi", "featur", "chang", "no", "behavior", "chang", "fix", "doc", "comment", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "submit", "pull", "request", "thi", "previous", "but", "commit", "had", "wrong", "email", "address", "so", "it", "did", "n't", "catch", "my", "cla", "so", "'m", "resubmit", "now"], "title_sim": [0.11227945317998066], "body_sim": [0.26485077198903334], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0054318082002959974, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 674}, {"A_title": "chore: upgrade grunt packages to match master", "A_clean_title": ["chore", "upgrad", "grunt", "packag", "match", "master"], "B_title": "feat(input): add support for input[type=range]", "B_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "A_body": "Seems to fix Jenkins build.\n\nBroken: http://ci.angularjs.org/job/angular.js-angular-v1.0.x/lastBuild/console\n\nFixed: http://ci.angularjs.org/job/angular.js-brian/34/console\n", "A_clean_body": ["seem", "fix", "jenkin", "build", "broken", "http", "angular", "angularj", "js", "v1", "ci", "org", "job", "angular", "lastbuild", "consol", "last", "build", "fix", "http", "angularj", "js", "brian", "34", "consol", "ci", "org", "job", "angular"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "title_sim": [0.017852057513443056], "body_sim": [0.2356887559746857], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1042}, {"A_title": "test($parse): add tests for watching one-time array/object literals", "A_clean_title": ["test", "pars", "add", "test", "watch", "one", "time", "array", "object", "liter"], "B_title": "docs app style updates", "B_clean_title": ["doc", "app", "style", "updat"], "A_body": "These are some examples of cases which 189461f9bf6fda18ddbd16c42f2e959cf939c3da enabled. All the one-time tests failed before that commit.\r\n\r\nIt's possible that these overlap with [these tests](https://github.com/angular/angular.js/blob/189461f9bf6fda18ddbd16c42f2e959cf939c3da/test/ng/parseSpec.js#L2692) a bit (the non-deep ones), but I think at least the `should ignore changes within nested objects` tests are a good addition.", "A_clean_body": ["these", "are", "some", "exampl", "case", "which", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "enabl", "all", "one", "time", "test", "fail", "befor", "that", "commit", "it", "'s", "possibl", "that", "these", "overlap", "these", "test", "http", "js", "github", "com", "angular", "angular", "js", "blob", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "test", "ng", "parsespec", "pars", "spec", "l2692", "bit", "non", "deep", "one", "but", "think", "at", "least", "ignor", "chang", "within", "nest", "object", "test", "are", "good", "addit"], "B_body": "This updates the docs app to the new header style found on angularjs.org.\r\n\r\nI've also taken the liberty to update the menu entries on the doc site - pending approval I'll update the org site, too (would fix https://github.com/angular/angular.js/issues/14351)\r\n\r\nAnd fixes https://github.com/angular/angular.js/issues/14963\r\n\r\nNotable differences between org / docs:\r\n- search icon\r\n- font family / weight (should we update?)\r\n- no drop shadow on navbar because there's a secondary bar on docs\r\n\r\nNotable differences between docs old / new:\r\n- mobile: the top header + search are fixed, sub header is relative (previously all relative)\r\n- mobile search close icon has moved over the search bar, because I had some problems giving it it's previous position while keeping the search results scrollable (oh my)\r\n\r\nImplementation notes:\r\n- angular-topnav.css is included as is from org site\r\n- several overrides necessary because org uses bootstrap 2 / docs uses bs 3 (oh my)\r\n- org site uses one breakpoint at 800px, docs uses one at 768 and one at 992. I tested it and it doesn't affect the common screen sizes\r\n\r\nFuture work:\r\n- clean up the css and maybe implement sass for the docs app\r\n\r\nScreens:\r\n\r\n![fireshot screen capture 014 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop dropdown open](https://cloud.githubusercontent.com/assets/1153097/22548685/f47fb29c-e947-11e6-8f41-a6ab683a4037.png)\r\n![fireshot screen capture 015 - angularjs_ api_ api reference - localhost_8000_build_docs_api desktop search](https://cloud.githubusercontent.com/assets/1153097/22548686/f481f354-e947-11e6-8ea6-735012fe9c9c.png)\r\n![fireshot screen capture 016 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone dropdown](https://cloud.githubusercontent.com/assets/1153097/22548683/f47f66ac-e947-11e6-87b3-8317404394a1.png)\r\n![fireshot screen capture 017 - angularjs_ api_ api reference - localhost_8000_build_docs_api phone search](https://cloud.githubusercontent.com/assets/1153097/22548684/f47fad88-e947-11e6-80c6-9beb87f70c53.png)\r\n", "B_clean_body": ["thi", "updat", "doc", "app", "new", "header", "style", "found", "angularj", "org", "'ve", "also", "taken", "liberti", "updat", "menu", "entri", "doc", "site", "pend", "approv", "'ll", "updat", "org", "site", "too", "would", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14351", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "14963", "notabl", "differ", "between", "org", "doc", "search", "icon", "font", "famili", "weight", "we", "updat", "no", "drop", "shadow", "navbar", "becaus", "there", "'s", "secondari", "bar", "doc", "notabl", "differ", "between", "doc", "old", "new", "mobil", "top", "header", "search", "are", "fix", "sub", "header", "rel", "previous", "all", "rel", "mobil", "search", "close", "icon", "ha", "move", "over", "search", "bar", "becaus", "had", "some", "problem", "give", "it", "it", "'s", "previou", "posit", "while", "keep", "search", "result", "scrollabl", "oh", "my", "implement", "note", "angular", "topnav", "css", "includ", "as", "org", "site", "sever", "overrid", "necessari", "becaus", "org", "use", "bootstrap", "doc", "use", "bs", "oh", "my", "org", "site", "use", "one", "breakpoint", "at", "800px", "doc", "use", "one", "at", "768", "one", "at", "992", "test", "it", "it", "n't", "affect", "common", "screen", "size", "futur", "work", "clean", "up", "css", "mayb", "implement", "sass", "doc", "app", "screen", "fireshot", "screen", "captur", "014", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "dropdown", "open", "http", "e947", "11e6", "8f41", "githubusercont", "a6ab683a4037", "png", "cloud", "com", "asset", "1153097", "22548685", "f47fb29c", "fireshot", "screen", "captur", "015", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "desktop", "search", "http", "e947", "11e6", "8ea6", "githubusercont", "735012fe9c9c", "png", "cloud", "com", "asset", "1153097", "22548686", "f481f354", "fireshot", "screen", "captur", "016", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "dropdown", "http", "e947", "11e6", "87b3", "githubusercont", "8317404394a1", "png", "cloud", "com", "asset", "1153097", "22548683", "f47f66ac", "fireshot", "screen", "captur", "017", "angularj", "api", "api", "refer", "localhost", "8000", "build", "doc", "api", "phone", "search", "http", "e947", "11e6", "80c6", "githubusercont", "9beb87f70c53", "png", "cloud", "com", "asset", "1153097", "22548684", "f47fad88"], "title_sim": [0.012261763434836526], "body_sim": [0.37901437384138814], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0056439644824797216, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 396}, {"A_title": "Merge parse changes into v1.6.x", "A_clean_title": ["merg", "pars", "chang", "into", "v1"], "B_title": "docs(developers.md): update node version as specified in package.json", "B_clean_title": ["doc", "develop", "md", "updat", "node", "version", "as", "specifi", "packag", "json"], "A_body": "Just to run travis...", "A_clean_body": ["just", "run", "travi"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`DEVELOPERS.MD` contains different node version from package.json. `Yarn install` works with 8.9.1+ only and doesn't work with 6.x as specified in docs.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nDocs are updated in accordance with package.json.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNot.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nSorry, this might be a very small and not significant fix, but I guess still requires some attention.\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "develop", "md", "contain", "differ", "node", "version", "packag", "json", "yarn", "instal", "work", "1+", "onli", "n't", "work", "as", "specifi", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "doc", "are", "updat", "accord", "packag", "json", "**doe", "thi", "pr", "introduc", "break", "chang", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "sorri", "thi", "might", "veri", "small", "not", "signific", "fix", "but", "guess", "still", "requir", "some", "attent"], "title_sim": [0.08526082611817931], "body_sim": [0.0166273839344182], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 162}, {"A_title": "chore(code.angular): correctly remove old zip files from snapshot", "A_clean_title": ["chore", "code", "angular", "correctli", "remov", "old", "zip", "file", "snapshot"], "B_title": "docs(guide/Expressions): Redirection to MDN", "B_clean_title": ["doc", "guid", "express", "redirect", "mdn"], "A_body": "Previously, the event would be triggered on the deletion of the previous zip files,\r\nwhich would delete the current zip file as well\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["previous", "event", "would", "trigger", "delet", "previou", "zip", "file", "which", "would", "delet", "current", "zip", "file", "as", "well", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\n**What is the new behavior (if this is a feature change)?**\n\n**Does this PR introduce a breaking change?**\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nIt is better to link to the English version of MDN rather than German version\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "it", "better", "link", "english", "version", "mdn", "rather", "than", "german", "version"], "title_sim": [0.0035642462729268912], "body_sim": [0.9488244167331014], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 403}, {"A_title": "fix(jqLite): make removeData() not remove event handlers", "A_clean_title": ["fix", "jqlite", "jq", "lite", "make", "removedata", "remov", "data", "not", "remov", "event", "handler"], "B_title": "chore(docs): update to lunr-0.5.12", "B_clean_title": ["chore", "doc", "updat", "lunr", "12"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix but a breaking change as well.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`removeData()` invoked on an element removes its event handlers as well.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n`removeData()` removes just user-set `data`, not internal data storage used for event handling. This aligns jqLite with jQuery.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nYes.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~ (the current behavior is not documented)\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nFixes #15869", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "but", "break", "chang", "as", "well", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "removedata", "remov", "data", "invok", "element", "remov", "it", "event", "handler", "as", "well", "**what", "new", "behavior", "thi", "featur", "chang", "removedata", "remov", "data", "remov", "just", "user", "set", "data", "not", "intern", "data", "storag", "use", "event", "handl", "thi", "align", "jqlite", "jq", "lite", "jqueri", "queri", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "current", "behavior", "not", "document", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "fix", "15869"], "B_body": "This improves the search results for certain terms. Compare the results for **scope**:\nCurrently:\n![search-scope-current](https://cloud.githubusercontent.com/assets/1153097/10083876/adc9c410-6300-11e5-8781-73cb2046f548.PNG)\n\nAfter the update:\n![search-scope-new](https://cloud.githubusercontent.com/assets/1153097/10083878/b0bf0ff4-6300-11e5-8b9a-7e2c87920a73.PNG)\n", "B_clean_body": ["thi", "improv", "search", "result", "certain", "term", "compar", "result", "**scope**", "current", "search", "scope", "current", "http", "6300", "11e5", "8781", "githubusercont", "73cb2046f548", "png", "cloud", "com", "asset", "1153097", "10083876", "adc9c410", "after", "updat", "search", "scope", "new", "http", "6300", "11e5", "8b9a", "githubusercont", "7e2c87920a73", "png", "cloud", "com", "asset", "1153097", "10083878", "b0bf0ff4"], "title_sim": [0.005293894877387072], "body_sim": [0.3578625003123795], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 914}, {"A_title": "docs(guide/Migrating from Previous Versions): add info for 1.4 ngPatt\u2026", "A_clean_title": ["doc", "guid", "migrat", "previou", "version", "add", "info", "ngpatt\u2026", "ng", "patt\u2026"], "B_title": "fix($browser): should use first value for a cookie.", "B_clean_title": ["fix", "browser", "use", "first", "valu", "cooki"], "A_body": "\u2026ern and pattern breaking change\r\n\r\nIntroduced in commit 0e00108\r\n\r\nCloses #15758\r\n\r\n", "A_clean_body": ["\u2026ern", "pattern", "break", "chang", "introduc", "commit", "0e00108", "close", "15758"], "B_body": "With this change, $browser.cookies()[\"foo\"] will behave like\ndocCookies.getItem(\"foo\") where docCookies is defined at\nhttps://developer.mozilla.org/en-US/docs/DOM/document.cookie\n\nRef: https://github.com/angular/angular.js/issues/2635\n\nThis fixes the issue where, if there's a value for the XSRF-TOKEN cookie\nvalue with the path /, then that value is used for all applications in\nthe domain even if they set path specific values for XSRF-TOKEN.\n", "B_clean_body": ["thi", "chang", "browser", "cooki", "foo", "will", "behav", "like", "doccooki", "getitem", "doc", "cooki", "get", "item", "foo", "where", "doccooki", "doc", "cooki", "defin", "at", "http", "mozilla", "cooki", "develop", "org", "en", "us", "doc", "dom", "document", "ref", "http", "github", "com", "angular", "angular", "js", "issu", "2635", "thi", "fix", "issu", "where", "there", "'s", "valu", "xsrf", "token", "cooki", "valu", "path", "then", "that", "valu", "use", "all", "applic", "domain", "even", "they", "set", "path", "specif", "valu", "xsrf", "token"], "title_sim": [-0.012086527681845032], "body_sim": [0.10856659475199294], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1390}, {"A_title": "Increase performance when checking if element is animatable", "A_clean_title": ["increas", "perform", "when", "check", "element", "animat"], "B_title": "docs(guide/Unit Testing): Changed $scope = {} to $scope = $rootScope.\u2026", "B_clean_title": ["doc", "guid", "unit", "test", "chang", "scope", "scope", "rootscop", "root", "scope"], "A_body": "Built upon PR #13783 \n", "A_clean_body": ["built", "upon", "pr", "13783"], "B_body": "\u2026$new()\r\n\r\n{} will just create an empty object. This will break if the module uses for example $watch or others.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["new", "will", "just", "creat", "empti", "object", "thi", "will", "break", "modul", "use", "exampl", "watch", "or", "other", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.042107724429777914], "body_sim": [0.6183421103559373], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 654}, {"A_title": "fix($timeout/$interval): do not trigger a digest when cancelling a $timeout/$interval", "A_clean_title": ["fix", "timeout", "interv", "not", "trigger", "digest", "when", "cancel", "timeout", "interv"], "B_title": "feat($parse): support trailing commas in object & array literals", "B_clean_title": ["feat", "pars", "support", "trail", "comma", "object", "array", "liter"], "A_body": "Previously `.catch(noop)` was used on the rejected timeout/interval to prevent an unhandled rejection error. However this would schedule a deferred task to run the `noop`. If the cancelling was outside a digest this could cause a new digest such as with the ng-model `debounce` option.\r\n\r\nFixes #16057", "A_clean_body": ["previous", "catch", "noop", "wa", "use", "reject", "timeout", "interv", "prevent", "unhandl", "reject", "error", "howev", "thi", "would", "schedul", "defer", "task", "run", "noop", "cancel", "wa", "outsid", "digest", "thi", "could", "caus", "new", "digest", "such", "as", "ng", "model", "debounc", "option", "fix", "16057"], "B_body": "Per ECMAScript 5.1 specification trailing commas are allowed in object and\narray literals. All modern browsers as well as IE>8 support this syntax.\nThis commit adds support for such syntax to Angular expressions.\n\nI'm creating a new pull request as @btford asked me to re-open #3685 with an explanation\nand I don't have privileges to re-open prs.\n\nMain use case of trailing commas are when using multi-line notation for objects/arrays. When you have sth like:\n\n``` javascript\n{\n    par1: \"val1\",\n    par3: \"val3\",\n    par2: \"val2\",\n}\n```\n\nit's much easier to move lines 2. and 3. around without causing errors. Such reordering is cumberscome when trailing commas are ommited. I agree readability is a little reduced when using a single-line form, but for multi-line ones it's IMO a godsend.\n\nCurrently there are no good tools to minify Angular expressions so this might be less used form now but once such a tool is created, for longer objects/arrays such notation would help.\n", "B_clean_body": ["per", "ecmascript", "ecma", "script", "specif", "trail", "comma", "are", "allow", "object", "array", "liter", "all", "modern", "browser", "as", "well", "as", "ie", "support", "thi", "syntax", "thi", "commit", "add", "support", "such", "syntax", "angular", "express", "'m", "creat", "new", "pull", "request", "as", "btford", "ask", "me", "re", "open", "3685", "explan", "n't", "have", "privileg", "re", "open", "pr", "main", "use", "case", "trail", "comma", "are", "when", "multi", "line", "notat", "object", "array", "when", "you", "have", "sth", "like", "javascript", "par1", "val1", "par3", "val3", "par2", "val2", "it", "'s", "much", "easier", "move", "line", "around", "without", "caus", "error", "such", "reorder", "cumberscom", "when", "trail", "comma", "are", "ommit", "agre", "readabl", "littl", "reduc", "when", "singl", "line", "form", "but", "multi", "line", "one", "it", "'s", "imo", "godsend", "current", "there", "are", "no", "good", "tool", "minifi", "angular", "express", "so", "thi", "might", "less", "use", "form", "now", "but", "onc", "such", "tool", "creat", "longer", "object", "array", "such", "notat", "would", "help"], "title_sim": [-0.0437322314560151], "body_sim": [0.2569105489648249], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.007640348146506983, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1399}, {"A_title": "fix($parse): make promise unwrapping opt-in", "A_clean_title": ["fix", "pars", "make", "promis", "unwrap", "opt"], "B_title": "docs(*): document the breaking change introduced in e1da4be", "B_clean_title": ["doc", "document", "break", "chang", "introduc", "e1da4b"], "A_body": "Previously promises found anywhere in the expression during expression\nevaluation would evaluate to undefined while unresolved and to the\nfulfillment value if fulfilled.\n\nThis is a feature that didn't prove to be wildly useful or popular,\nprimarily because of the dichotomy between data access in templates\n(accessed as raw values) and controller code (accessed as promises).\n\nIn most code we ended up resolving promises manually in controllers\nanyway and thus unifying the model access there.\n\nOther downsides of automatic promise unwrapping:\n- when building components it's often desirable to receive the\n  raw promises\n- adds complexity and slows down expression evaluation\n- makes expression code pre-generation unattractive due to the\n  amount of code that needs to be generated\n- makes IDE auto-completion and tool support hard\n- adds too much magic\n\nCloses #4158\nCloses #4270\n", "A_clean_body": ["previous", "promis", "found", "anywher", "express", "dure", "express", "evalu", "would", "evalu", "undefin", "while", "unresolv", "fulfil", "valu", "fulfil", "thi", "featur", "that", "did", "n't", "prove", "wildli", "use", "or", "popular", "primarili", "becaus", "dichotomi", "between", "data", "access", "templat", "access", "as", "raw", "valu", "control", "code", "access", "as", "promis", "most", "code", "we", "end", "up", "resolv", "promis", "manual", "control", "anyway", "thu", "unifi", "model", "access", "there", "other", "downsid", "automat", "promis", "unwrap", "when", "build", "compon", "it", "'s", "often", "desir", "receiv", "raw", "promis", "add", "complex", "slow", "down", "express", "evalu", "make", "express", "code", "pre", "gener", "unattract", "due", "amount", "code", "that", "need", "gener", "make", "ide", "auto", "complet", "tool", "support", "hard", "add", "too", "much", "magic", "close", "4158", "close", "4270"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nAlthough e1da4be introduced a breaking change, it wasn't documented as such.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe breaking change is documented.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n<sub>(In a way. \"Let me introduce you this breaking change. It has been around for 2 releases, but I don't think you've met.)\"</sub>\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "although", "e1da4b", "introduc", "break", "chang", "it", "wa", "n't", "document", "as", "such", "**what", "new", "behavior", "thi", "featur", "chang", "break", "chang", "document", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "sub", "way", "let", "me", "introduc", "you", "thi", "break", "chang", "it", "ha", "been", "around", "releas", "but", "n't", "think", "you", "'ve", "met", "sub", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.019830030965787178], "body_sim": [0.12094205037969344], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.013474521551349495, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1145}, {"A_title": "chore(*): update protractor", "A_clean_title": ["chore", "updat", "protractor"], "B_title": "test($compile): fix IE specific test.", "B_clean_title": ["test", "compil", "fix", "ie", "specif", "test"], "A_body": "Update protractor to latest 5.1.2 to make it work with Chrome 58 on Jenkins.\r\nThis version is not compatible with FF 53 and directConnect, but this should be irrelevant as protractor on Travis does not use directConnect and we don't test FF on Jenkins.", "A_clean_body": ["updat", "protractor", "latest", "make", "it", "work", "chrome", "58", "jenkin", "thi", "version", "not", "compat", "ff", "53", "directconnect", "direct", "connect", "but", "thi", "irrelev", "as", "protractor", "travi", "not", "use", "directconnect", "direct", "connect", "we", "n't", "test", "ff", "jenkin"], "B_body": "For some reason, the tests pass but the build doesn't turn green on http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/ (e.g. http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/89/  )\n", "B_clean_body": ["some", "reason", "test", "pass", "but", "build", "n't", "turn", "green", "http", "angularj", "js", "chirayu", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular", "http", "angularj", "js", "chirayu", "89", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular"], "title_sim": [0.036592706177063346], "body_sim": [0.14303902104867341], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1421}, {"A_title": "feat($controller): throw error when requested controller is not regis\u2026", "A_clean_title": ["feat", "control", "throw", "error", "when", "request", "control", "not", "regis\u2026"], "B_title": "fix(input[text]): composing function dosen't works properly in IE", "B_clean_title": ["fix", "input", "text", "compos", "function", "dose", "n't", "work", "properli", "ie"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nwhen a requested controller is not found (not registered), then a pretty non-descriptive ng:areq error is thrown\n\n**What is the new behavior (if this is a feature change)?**\na new error is thrown\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n\u2026tered\n\nPreviously, it would throw the ng:areq error, which is less\nspecific and just informs that the requested controller did\nnot yield a function. Given how commonly controllers are used\nin Angular, it makes sense to have a specific error.\n\nThe ng:areq error is still thrown when the registered controller\nis not a function.\n\nCloses #14980\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "request", "control", "not", "found", "not", "regist", "then", "pretti", "non", "descript", "ng", "areq", "error", "thrown", "**what", "new", "behavior", "thi", "featur", "chang", "new", "error", "thrown", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026tere", "previous", "it", "would", "throw", "ng", "areq", "error", "which", "less", "specif", "just", "inform", "that", "request", "control", "did", "not", "yield", "function", "given", "how", "commonli", "control", "are", "use", "angular", "it", "make", "sens", "have", "specif", "error", "ng", "areq", "error", "still", "thrown", "when", "regist", "control", "not", "function", "close", "14980"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nComposing function dosen't works properly in IE. Please refer to https://github.com/angular/angular.js/issues/6656 and \"Other information\" below.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt works properly in IE.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nI have investigated on #6656 issue and I found composing function works differently in only IE.\r\nI confirmed this by the scenario below.\r\n - Code changes to investigate this problem(just added console.log)\r\n    ![2017-10-12 17_53_02-engineering-system - c__users_jileeon_documents_git_engineering-system - _p](https://user-images.githubusercontent.com/5166067/31534128-7aac2cba-b030-11e7-8fb6-5a4754dcb0ed.png)\r\n - Scenario\r\n  1. Just type '\uc774\uc7ac\uc775' and focusout.(in IE and Chrome)\r\n - Result(attached images show differences)\r\n   console.log in Chrome\r\n    ![2017-10-12 18_57_52-developer tools - http___127 0 0 1_8888_system_requests_2279](https://user-images.githubusercontent.com/5166067/31534418-ccd3e2d4-b031-11e7-980e-009b635d0bba.png)\r\n   console.log in IE\r\n    ![2017-10-12 18_58_43-f12](https://user-images.githubusercontent.com/5166067/31534528-39585bba-b032-11e7-9486-34f9f479b6e9.png)\r\n   It shows that last values of $viewValue are different. '\uc774\uc7ac\uc774'(IE) != '\uc774\uc7ac\uc775'(Chrome)\r\n   Because 'compositionend' event is not occurred in IE. So $viewValue is not updated with last value in the textbox. It means that IE triggers composition events('compositionstart', 'compositionupdate', 'compositionend') wrong.\r\n   So I added additional condition(ev.originalEvent.data !== undefined) on 'if (composing) return;' statement.\r\n   As you saw these console logs(IE and Chrome) above, this additional condition makes composing function works properly in IE.(by checking ev.originalEvent.data value. if its value is undefined, $viewValue going to be updated with last value in the textbox in IE. So it works like 'compositionend').\r\n   In addition, When IE fixes this wrong event triggering, It works fine without any problems. ", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "compos", "function", "dose", "n't", "work", "properli", "ie", "pleas", "refer", "http", "github", "com", "angular", "angular", "js", "issu", "6656", "other", "inform", "below", "**what", "new", "behavior", "thi", "featur", "chang", "it", "work", "properli", "ie", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "have", "investig", "6656", "issu", "found", "compos", "function", "work", "differ", "onli", "ie", "confirm", "thi", "by", "scenario", "below", "code", "chang", "investig", "thi", "problem", "just", "ad", "consol", "log", "2017", "10", "12", "engin", "system", "17", "53", "02", "system", "user", "jileeon", "document", "git", "engin", "http", "7aac2cba", "b030", "11e7", "8fb6", "user", "imag", "githubusercont", "5a4754dcb0", "png", "com", "5166067", "31534128", "scenario", "just", "type", "focusout", "ie", "chrome", "result", "attach", "imag", "show", "differ", "consol", "log", "chrome", "2017", "10", "12", "develop", "18", "57", "52", "tool", "http", "127", "8888", "system", "request", "2279", "http", "ccd3e2d4", "b031", "11e7", "980e", "user", "imag", "githubusercont", "009b635d0bba", "png", "com", "5166067", "31534418", "consol", "log", "ie", "2017", "10", "12", "f12", "18", "58", "43", "http", "39585bba", "b032", "11e7", "9486", "user", "imag", "githubusercont", "34f9f479b6e9", "png", "com", "5166067", "31534528", "it", "show", "that", "last", "valu", "viewvalu", "view", "valu", "are", "differ", "ie", "chrome", "becaus", "'compositionend", "event", "not", "occur", "ie", "so", "viewvalu", "view", "valu", "not", "updat", "last", "valu", "textbox", "it", "mean", "that", "ie", "trigger", "composit", "event", "'compositionstart", "'compositionupd", "'compositionend", "wrong", "so", "ad", "addit", "condit", "ev", "originalev", "data", "origin", "event", "undefin", "'if", "compos", "return", "statement", "as", "you", "saw", "these", "consol", "log", "ie", "chrome", "abov", "thi", "addit", "condit", "make", "compos", "function", "work", "properli", "ie", "by", "check", "ev", "originalev", "data", "origin", "event", "valu", "it", "valu", "undefin", "viewvalu", "view", "valu", "go", "updat", "last", "valu", "textbox", "ie", "so", "it", "work", "like", "'compositionend", "addit", "when", "ie", "fix", "thi", "wrong", "event", "trigger", "it", "work", "fine", "without", "ani", "problem"], "title_sim": [0.04546165750711482], "body_sim": [0.5915176557301389], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.007186962197555023, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 428}, {"A_title": "fix($location): do not $digest if browser's url changes within $apply", "A_clean_title": ["fix", "locat", "not", "digest", "browser", "'s", "url", "chang", "within", "appli"], "B_title": "docs(app): increments year", "B_clean_title": ["doc", "app", "increment", "year"], "A_body": "Chrome (probably other browsers as well) fires 'hashchange' event synchronously, so if you change raw location from within $apply/$digest, we don't want to $apply twice. (It would throw an exception).\n", "A_clean_body": ["chrome", "probabl", "other", "browser", "as", "well", "fire", "'hashchang", "event", "synchron", "so", "you", "chang", "raw", "locat", "within", "appli", "digest", "we", "n't", "want", "appli", "twice", "it", "would", "throw", "except"], "B_body": "Increments the year from 2014 to 2015.\n", "B_clean_body": ["increment", "year", "2014", "2015"], "title_sim": [0.1313114228605082], "body_sim": [0.07792834033907918], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1094}, {"A_title": "Feat: ngRef directive to publish controllers, or elements into current scope ", "A_clean_title": ["feat", "ngref", "ng", "ref", "direct", "publish", "control", "or", "element", "into", "current", "scope"], "B_title": "chore(travis): split out the docs e2e tests into their own travis job", "B_clean_title": ["chore", "travi", "split", "out", "doc", "e2e", "test", "into", "their", "own", "travi", "job"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\npublish a component's or element-directive's, or jqlite wrapped DOM element into the containing scope\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nThis is a rebased and updated version of https://github.com/angular/angular.js/pull/14080 with the following changes:\r\n\r\n- publish the jqlite-wrapped DOM element instead of the raw DOM element. In AngularJS, we don't deal with raw DOM elements, so this would create an inconsistency\r\n- introduce a `ngRefElement` attribute that indicates that you always want to publish the jqlite-wrapped DOM element, even if a controller exists\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "**what", "new", "behavior", "thi", "featur", "chang", "publish", "compon", "'s", "or", "element", "direct", "'s", "or", "jqlite", "wrap", "dom", "element", "into", "contain", "scope", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "rebas", "updat", "version", "http", "github", "com", "angular", "angular", "js", "pull", "14080", "follow", "chang", "publish", "jqlite", "wrap", "dom", "element", "instead", "raw", "dom", "element", "angularj", "angular", "js", "we", "n't", "deal", "raw", "dom", "element", "so", "thi", "would", "creat", "inconsist", "introduc", "ngrefel", "ng", "ref", "element", "attribut", "that", "indic", "that", "you", "alway", "want", "publish", "jqlite", "wrap", "dom", "element", "even", "control", "exist"], "B_body": "Previously, they were in the 'unit' job to save travis VMs, but this\nwas confusing and made it more difficult to track down errors easily.\n", "B_clean_body": ["previous", "they", "were", "'unit", "job", "save", "travi", "vm", "ms", "but", "thi", "wa", "confus", "made", "it", "more", "difficult", "track", "down", "error", "easili"], "title_sim": [0.08587020205228248], "body_sim": [0.11849107935248203], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1171}, {"A_title": "docs(angular.mock.inject): minor formatting change", "A_clean_title": ["doc", "angular", "mock", "inject", "minor", "format", "chang"], "B_title": "feat(input): added drop event support", "B_clean_title": ["feat", "input", "ad", "drop", "event", "support"], "A_body": "Without backticks, underscores are rendered as italics.\n", "A_clean_body": ["without", "backtick", "underscor", "are", "render", "as", "ital"], "B_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\ndrop event not support\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nadded drop event support \r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "drop", "event", "not", "support", "**what", "new", "behavior", "thi", "featur", "chang", "ad", "drop", "event", "support", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.03883142577622617], "body_sim": [0.07179098306862083], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 488}, {"A_title": "fix($parse): fix infinite digest errors when watching objects with .valueOf in literals", "A_clean_title": ["fix", "pars", "fix", "infinit", "digest", "error", "when", "watch", "object", "valueof", "valu", "liter"], "B_title": "fix($compile): don't run unnecessary update to one-way bindings", "B_clean_title": ["fix", "compil", "n't", "run", "unnecessari", "updat", "one", "way", "bind"], "A_body": "I think this is an edge case of https://github.com/angular/angular.js/commit/7084deccaac5855d7148fb6d91dcb83c16b079c4 (and [1.6.x](https://github.com/angular/angular.js/commit/25f008f541d68b09efd7b428b648c6d4899e6972)) that was not handled. If those objects (in the literals) have a `.valueOf` function that returns something other then `this` it will cause an infinite digest.\r\n\r\nThis should probably also go into 1.6?", "A_clean_body": ["think", "thi", "edg", "case", "http", "github", "com", "angular", "angular", "js", "commit", "7084deccaac5855d7148fb6d91dcb83c16b079c4", "http", "github", "com", "angular", "angular", "js", "commit", "25f008f541d68b09efd7b428b648c6d4899e6972", "that", "wa", "not", "handl", "those", "object", "liter", "have", "valueof", "valu", "function", "that", "return", "someth", "other", "then", "thi", "it", "will", "caus", "infinit", "digest", "thi", "probabl", "also", "go", "into"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nBug Fix\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe watch handler was triggering on its first invocation, even though\nits change had already been dealt with when setting up the binding.\n\n**What is the new behavior (if this is a feature change)?**\n\nThe handler does not trigger an update on its first invocation\n\n**Does this PR introduce a breaking change?**\n\nNope - I don't think so. Although I had to modify a bunch of tests to ensure that a digest occurred between compilation and the first checks.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n  ~~\\- [ ] Docs have been added / updated (for bug fixes / features)~~\n\n**Other information**:\n\nCloses #14546\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "watch", "handler", "wa", "trigger", "it", "first", "invoc", "even", "though", "it", "chang", "had", "alreadi", "been", "dealt", "when", "set", "up", "bind", "**what", "new", "behavior", "thi", "featur", "chang", "handler", "not", "trigger", "updat", "it", "first", "invoc", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "n't", "think", "so", "although", "had", "modifi", "bunch", "test", "ensur", "that", "digest", "occur", "between", "compil", "first", "check", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "close", "14546"], "title_sim": [0.22253360836079253], "body_sim": [0.44349780258306654], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.14341229884583606, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 322}, {"A_title": "$resource with promises", "A_clean_title": ["resourc", "promis"], "B_title": "fix(ngModel, input): improve handling of built-in named parsers", "B_clean_title": ["fix", "ngmodel", "ng", "model", "input", "improv", "handl", "built", "name", "parser"], "A_body": "This is just finishing https://github.com/angular/angular.js/pull/2060.\n\nMy changes, that will get squashed into the first commit:\n- change `.$resolved` to be boolean (true/false), rather than undefined/true\n- keep the original promise (do not update `.$promise` after subsequent instance calls)\n- success callbacks gets response (with value as `.resource`), instead of direct value (this is just reverting to the original behavior of $resource)\n- docs: reflect these changes\n- some style/formatting (reverting trailing white spaces, etc.)\n\n**Passsing whole response into the promise:**\nI did this, because I think it is very helpful to have access to the http response. More than that, people might be already relying on it.\nThe reason for passing just the value (resource instance) was to simplify $route resolve, but I think it's not that worse (unless I'm missing something):\n\n``` javascript\n// passing whole response\nMyController.resolve = function(MyResource) {\n  return MyResource.get(...).promise.then(function(response) {\n    return response.resource;\n  });\n};\n\n// passing direct resource instace\nMyController.resolve = function(MyResource) {\n  return MyResource.get(...).promise;\n};\n```\n\nBefore merging:\n- [ ] squash\n- [ ] add BREAKING CHANGE message\n", "A_clean_body": ["thi", "just", "finish", "http", "github", "com", "angular", "angular", "js", "pull", "2060", "my", "chang", "that", "will", "get", "squash", "into", "first", "commit", "chang", "resolv", "boolean", "true", "fals", "rather", "than", "undefin", "true", "keep", "origin", "promis", "not", "updat", "promis", "after", "subsequ", "instanc", "call", "success", "callback", "get", "respons", "valu", "as", "resourc", "instead", "direct", "valu", "thi", "just", "revert", "origin", "behavior", "resourc", "doc", "reflect", "these", "chang", "some", "style", "format", "revert", "trail", "white", "space", "etc", "**passs", "whole", "respons", "into", "promis", "did", "thi", "becaus", "think", "it", "veri", "help", "have", "access", "http", "respons", "more", "than", "that", "peopl", "might", "alreadi", "reli", "it", "reason", "pass", "just", "valu", "resourc", "instanc", "wa", "simplifi", "rout", "resolv", "but", "think", "it", "'s", "not", "that", "wors", "unless", "'m", "miss", "someth", "javascript", "pass", "whole", "respons", "mycontrol", "resolv", "my", "control", "function", "myresourc", "my", "resourc", "return", "myresourc", "get", "my", "resourc", "promis", "then", "function", "respons", "return", "respons", "resourc", "pass", "direct", "resourc", "instac", "mycontrol", "resolv", "my", "control", "function", "myresourc", "my", "resourc", "return", "myresourc", "get", "my", "resourc", "promis", "befor", "merg", "squash", "add", "break", "chang", "messag"], "B_body": "This commit changes how input elements use the private $$parserName\r\nproperty on the ngModelController to name parse errors. Until now,\r\nthe input types (number, date etc.) would set $$parserName when\r\nthe inputs were initialized, which meant that any other parsers on\r\nthe ngModelController would also be named after that type. The\r\neffect of that was that the `$error` property and the `ng-invalid-...`\r\nclass would always be that of the built-in parser, even if the custom\r\nparser had nothing to do with it.\r\n\r\nThe new behavior is that the $$parserName is only set if the actual\r\nparser is invalid, i.e. returns `undefined`.\r\n\r\nAlso, $$parserName has been removed from input[email] and input[url],\r\nas these types do not have a built-in parser anymore.\r\n\r\nBREAKING CHANGE:\r\n\r\nCustom parsers that fail to parse on input types email, url, date, month, time,\r\ndatetime-local, week, do no longer set $error[inputType], and no longer set the class\r\n`ng-invalid-[inputType]`. Instead, they set $error.parse and `ng-invalid-parse`.\r\n\r\nCloses #14292 \r\nCloses #10076\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nThis is a general fix to https://github.com/angular/angular.js/issues/10076 and also incorporates the changes in https://github.com/angular/angular.js/pull/14292.\r\nWhile it's not a very common problem, I always found this section of the API very strange, especially since it uses an undocumented API (so if you stumble on it, it's even more difficult to find out what causes it).\r\nSince https://github.com/angular/angular.js/pull/14292 is already a very small BC I thought a general solution to this issue would be welcome.\r\nNote that I will include tests for the other input types if this implementation is approved.\r\n\r\n", "B_clean_body": ["thi", "commit", "chang", "how", "input", "element", "use", "privat", "parsernam", "parser", "name", "properti", "ngmodelcontrol", "ng", "model", "control", "name", "pars", "error", "until", "now", "input", "type", "number", "date", "etc", "would", "set", "parsernam", "parser", "name", "when", "input", "were", "initi", "which", "meant", "that", "ani", "other", "parser", "ngmodelcontrol", "ng", "model", "control", "would", "also", "name", "after", "that", "type", "effect", "that", "wa", "that", "error", "properti", "ng", "invalid", "class", "would", "alway", "that", "built", "parser", "even", "custom", "parser", "had", "noth", "it", "new", "behavior", "that", "parsernam", "parser", "name", "onli", "set", "actual", "parser", "invalid", "return", "undefin", "also", "parsernam", "parser", "name", "ha", "been", "remov", "input", "email", "input", "url", "as", "these", "type", "not", "have", "built", "parser", "anymor", "break", "chang", "custom", "parser", "that", "fail", "pars", "input", "type", "email", "url", "date", "month", "time", "datetim", "local", "week", "no", "longer", "set", "error", "inputtyp", "input", "type", "no", "longer", "set", "class", "ng", "invalid", "inputtyp", "input", "type", "instead", "they", "set", "error", "pars", "ng", "invalid", "pars", "close", "14292", "close", "10076", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "gener", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "10076", "also", "incorpor", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "while", "it", "'s", "not", "veri", "common", "problem", "alway", "found", "thi", "section", "api", "veri", "strang", "especi", "sinc", "it", "use", "undocu", "api", "so", "you", "stumbl", "it", "it", "'s", "even", "more", "difficult", "find", "out", "what", "caus", "it", "sinc", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "alreadi", "veri", "small", "bc", "thought", "gener", "solut", "thi", "issu", "would", "welcom", "note", "that", "will", "includ", "test", "other", "input", "type", "thi", "implement", "approv"], "title_sim": [-0.022157286592213228], "body_sim": [0.321940134445373], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.040411877704381476, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1665}, {"A_title": "refactor($compile): remove unnecessary try/catch", "A_clean_title": ["refactor", "compil", "remov", "unnecessari", "tri", "catch"], "B_title": "fix(ngAria): do not set aria attributes on input[type=\"hidden\"]", "B_clean_title": ["fix", "ngaria", "ng", "aria", "not", "set", "aria", "attribut", "input", "type=", "hidden"], "A_body": "I don't see anything in there that could throw...\n", "A_clean_body": ["n't", "see", "anyth", "there", "that", "could", "throw"], "B_body": "This fixes a error found by @edclements  using the Google Accessibility Developer Tools audit.\r\nInput fields of type hidden shouldn't have aria attributes.\r\nhttps://www.w3.org/TR/html-aria/#allowed-aria-roles-states-and-properties-1\r\n\r\nCloses #15113\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\naria attributes added to input type hidden\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nNot anymore.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI would say not actually, because the previous behavior didnt follow the spec and I can'T see why anyone would rely on this behavior. It was marked as breaking change in https://github.com/angular/angular.js/pull/15113, though\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\nRebased and updated version of https://github.com/angular/angular.js/pull/15113\r\n", "B_clean_body": ["thi", "fix", "error", "found", "by", "edclement", "googl", "access", "develop", "tool", "audit", "input", "field", "type", "hidden", "n't", "have", "aria", "attribut", "http", "w3", "aria", "www", "org", "tr", "html", "allow", "aria", "role", "state", "properti", "close", "15113", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "aria", "attribut", "ad", "input", "type", "hidden", "**what", "new", "behavior", "thi", "featur", "chang", "not", "anymor", "**doe", "thi", "pr", "introduc", "break", "chang", "would", "say", "not", "actual", "becaus", "previou", "behavior", "didnt", "follow", "spec", "can't", "see", "whi", "anyon", "would", "reli", "thi", "behavior", "it", "wa", "mark", "as", "break", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "15113", "though", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "rebas", "updat", "version", "http", "github", "com", "angular", "angular", "js", "pull", "15113"], "title_sim": [-0.012072367253820514], "body_sim": [0.16498250676095758], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.16799035016559483, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 764}, {"A_title": "fix(docsApp): show correct version number in api index", "A_clean_title": ["fix", "docsapp", "doc", "app", "show", "correct", "version", "number", "api", "index"], "B_title": "docs(ngRepeat): Correct typo", "B_clean_title": ["doc", "ngrepeat", "ng", "repeat", "correct", "typo"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfix in the docs app\n\n**What is the current behavior? (You can also link to an open issue here)**\nOn https://docs.angularjs.org/api, the text currently says \n\n> These pages contain the AngularJS reference materials for version 1.5.8 arbitrary-fallbacks.\n\nbut the default docs are for the master / snapshot version. \n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n\n**Other information**:\n\nPreviously, the index would show the version of Angular that runs on\nthe page, not the version for which the docs are. This meant that in\nthat snapshot docs the stable version was displayed.\n\nThe `$scope.docsVersion` value was used in the plnkr opening code, but\nhas not been used since https://github.com/angular/angular.js/commit/bdec35cebc89e0d80a04eeffbd71ad999fc7e61a.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "http", "angularj", "doc", "org", "api", "text", "current", "say", "these", "page", "contain", "angularj", "angular", "js", "refer", "materi", "version", "arbitrari", "fallback", "but", "default", "doc", "are", "master", "snapshot", "version", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "previous", "index", "would", "show", "version", "angular", "that", "run", "page", "not", "version", "which", "doc", "are", "thi", "meant", "that", "that", "snapshot", "doc", "stabl", "version", "wa", "display", "scope", "docsvers", "doc", "version", "valu", "wa", "use", "plnkr", "open", "code", "but", "ha", "not", "been", "use", "sinc", "http", "github", "com", "angular", "angular", "js", "commit", "bdec35cebc89e0d80a04eeffbd71ad999fc7e61a"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nN/A\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nN/A\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nN/A", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.17479764383237156], "body_sim": [0.7280446503871316], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 266}, {"A_title": "fix($controller): remove the option to instantiate controllers from c\u2026", "A_clean_title": ["fix", "control", "remov", "option", "instanti", "control", "c\u2026"], "B_title": "docs(changelog): Change for labels and style consistency", "B_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "A_body": "\u2026onstructors on `window`\r\n\r\nThis also removes the likewise deprecated `$controllerProvider.allowGlobals()` method.\r\n\r\nCloses #15349\r\n\r\nBREAKING CHANGE:\r\n\r\nThe option to instantiate controllers from constructors on the global `window` object\r\nhas been removed. Likewise, the deprecated `$controllerProvider.allowGlobals()`\r\nmethod that could enable this behavior, has been removed.\r\n\r\nThis behavior had been deprecated since AngularJS v1.3.0, because polluting the global scope\r\nis bad. To migrate, remove the call to $controllerProvider.allowGlobals() in the config, and\r\nregister your controller via the Module API or the $controllerProvider, e.g.\r\n\r\n```\r\nangular.module('myModule', []).controller('myController', function() {...});\r\n\r\nangular.module('myModule', []).config(function($controllerProvider) {\r\n  $controllerProvider.register('myController', function() {...});\r\n});\r\n\r\n```\r\n", "A_clean_body": ["\u2026onstructor", "window", "thi", "also", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "close", "15349", "break", "chang", "option", "instanti", "control", "constructor", "global", "window", "object", "ha", "been", "remov", "likewis", "deprec", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "method", "that", "could", "enabl", "thi", "behavior", "ha", "been", "remov", "thi", "behavior", "had", "been", "deprec", "sinc", "angularj", "angular", "js", "v1", "becaus", "pollut", "global", "scope", "bad", "migrat", "remov", "call", "controllerprovid", "allowglob", "control", "provid", "allow", "global", "config", "regist", "your", "control", "via", "modul", "api", "or", "controllerprovid", "control", "provid", "angular", "modul", "'mymodul", "'mi", "modul", "control", "'mycontrol", "'mi", "control", "function", "angular", "modul", "'mymodul", "'mi", "modul", "config", "function", "controllerprovid", "control", "provid", "controllerprovid", "regist", "control", "provid", "'mycontrol", "'mi", "control", "function"], "B_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "B_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "title_sim": [-0.010905185913710102], "body_sim": [0.14646238264235495], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 313}, {"A_title": "fix(): fix scoping for transclusion directives inside replace directive", "A_clean_title": ["fix", "fix", "scope", "transclus", "direct", "insid", "replac", "direct"], "B_title": "docs(app): fixes material build", "B_clean_title": ["doc", "app", "fix", "materi", "build"], "A_body": "Tweaks to the implementation of #12975\n\nCloses #12975\nCloses #12936 \n", "A_clean_body": ["tweak", "implement", "12975", "close", "12975", "close", "12936"], "B_body": "The theme css files were reorganized at some point in Angular Material 0.7.x and the build is now failing because the files are missing. The styles on the site do not work correctly now with 0.7.x because the css is missing. This change will keep us on 0.6.x until we can update the theme issue.\n", "B_clean_body": ["theme", "css", "file", "were", "reorgan", "at", "some", "point", "angular", "materi", "build", "now", "fail", "becaus", "file", "are", "miss", "style", "site", "not", "work", "correctli", "now", "becaus", "css", "miss", "thi", "chang", "will", "keep", "us", "until", "we", "updat", "theme", "issu"], "title_sim": [0.09455821893909969], "body_sim": [0.0904836759678788], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 290}, {"A_title": "fix($animateCss): remove animation end event listeners on close", "A_clean_title": ["fix", "animatecss", "anim", "css", "remov", "anim", "end", "event", "listen", "close"], "B_title": "WIP: even-more-perf-rebased", "B_clean_title": ["wip", "even", "more", "perf", "rebas"], "A_body": "Previously the transition/animation end events were not removed when the\nanimation was closed. This normally didn't matter, because\nthe close function knows the animation are closed and won't do work\ntwice.\nHowever, the listeners themselves do computation that could fail when\nthe event was missing some data, for example when the event was\ntriggered instead of natural.\n\nCloses #10387\n", "A_clean_body": ["previous", "transit", "anim", "end", "event", "were", "not", "remov", "when", "anim", "wa", "close", "thi", "normal", "did", "n't", "matter", "becaus", "close", "function", "know", "anim", "are", "close", "wo", "n't", "work", "twice", "howev", "listen", "themselv", "comput", "that", "could", "fail", "when", "event", "wa", "miss", "some", "data", "exampl", "when", "event", "wa", "trigger", "instead", "natur", "close", "10387"], "B_body": "ignore this pr, it's here just for CI testing\n", "B_clean_body": ["ignor", "thi", "pr", "it", "'s", "here", "just", "ci", "test"], "title_sim": [-0.03800165508092992], "body_sim": [0.07289226917592297], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0020647693673902985, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 477}, {"A_title": "docs(guide/Developer Guide): Update twitter handle", "A_clean_title": ["doc", "guid", "develop", "guid", "updat", "twitter", "handl"], "B_title": "docs($sanitizeProvider): fix param comment for enableSvg", "B_clean_title": ["doc", "sanitizeprovid", "sanit", "provid", "fix", "param", "comment", "enablesvg", "enabl", "svg"], "A_body": "Replaced the old Angular twitter handle with the new one.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["replac", "old", "angular", "twitter", "handl", "new", "one", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe param is listed as type boolean, but has an erroneous comment describing it as a regex. (Maybe from a much earlier version of Angular?)\n\n**What is the new behavior (if this is a feature change)?**\n\nNo behavior change. Fixes the doc comment.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nI submitted a pull request for this previously, but the commit had the wrong email address so it didn't catch my CLA, so I'm resubmitting now.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "param", "list", "as", "type", "boolean", "but", "ha", "erron", "comment", "describ", "it", "as", "regex", "mayb", "much", "earlier", "version", "angular", "**what", "new", "behavior", "thi", "featur", "chang", "no", "behavior", "chang", "fix", "doc", "comment", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "submit", "pull", "request", "thi", "previous", "but", "commit", "had", "wrong", "email", "address", "so", "it", "did", "n't", "catch", "my", "cla", "so", "'m", "resubmit", "now"], "title_sim": [0.11938302386814502], "body_sim": [0.941008509299567], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 343}, {"A_title": "refactor($compile): reuse shared simpleCompare method", "A_clean_title": ["refactor", "compil", "reus", "share", "simplecompar", "simpl", "compar", "method"], "B_title": "fix($scope): fixes multiple root element error when there is a whites\u2026", "B_clean_title": ["fix", "scope", "fix", "multipl", "root", "element", "error", "when", "there", "whites\u2026"], "A_body": "I think this could be used in some other places as well once it's available...", "A_clean_body": ["think", "thi", "could", "use", "some", "other", "place", "as", "well", "onc", "it", "'s", "avail"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nBug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nIf one tries to load a directive with a top-level comment angular throws an error \nError: [$compile:tplrt] Template for directive 'myDirective' must have exactly one root element\nhttps://github.com/angular/angular.js/issues/15108\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nfixes multiple root element error when there is a whitespace after a comment\n\nAdded new conditional for NODE_TYPE_TEXT inside removeComments method of $compile\nAdded corresponding unit tests.\n\nCloses #15108\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "one", "tri", "load", "direct", "top", "level", "comment", "angular", "throw", "error", "error", "compil", "tplrt", "templat", "direct", "'mydirect", "'mi", "direct", "must", "have", "exactli", "one", "root", "element", "http", "github", "com", "angular", "angular", "js", "issu", "15108", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "multipl", "root", "element", "error", "when", "there", "whitespac", "after", "comment", "ad", "new", "condit", "node", "type", "text", "insid", "removecom", "remov", "comment", "method", "compil", "ad", "correspond", "unit", "test", "close", "15108"], "title_sim": [0.17918790496200054], "body_sim": [0.08674599393783206], "file_list_sim": 0.25, "overlap_files_len": 1, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 189}, {"A_title": "fix(package.json): use full version numbers when interpolating", "A_clean_title": ["fix", "packag", "json", "use", "full", "version", "number", "when", "interpol"], "B_title": "fix(Angular): deprecate angular.merge", "B_clean_title": ["fix", "angular", "deprec", "angular", "merg"], "A_body": "When using less than 3 numbers in npm package version together with\ntilde interpolation, it lets major version upgrades, e.g. \"~0.10\" means\nat least 0.10 and less than 1.0; this pattern would match e.g. 0.11, 0.12 etc.\nBesides, some package.json dependencies were upgraded.\n", "A_clean_body": ["when", "less", "than", "number", "npm", "packag", "version", "togeth", "tild", "interpol", "it", "let", "major", "version", "upgrad", "~0", "10", "mean", "at", "least", "10", "less", "than", "thi", "pattern", "would", "match", "11", "12", "etc", "besid", "some", "packag", "json", "depend", "were", "upgrad"], "B_body": "This function has problems with special object types but since it's not used in core,\r\nit is not worth implementing fixes for these cases.\r\nA general purpose library like lodash (provides `merge`) should be used instead.\r\n\r\nCloses #12653\r\nCloses #14941\r\nCloses #15180\r\nCloses #15992\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDeprecation\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nUnclear API support\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDeprecation / docs update\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nNot sure if this should be marked fix or feat\r\n~If we deprecate only in 1.7.0, then the known issue section can still go in 1.6.x~\r\n", "B_clean_body": ["thi", "function", "ha", "problem", "special", "object", "type", "but", "sinc", "it", "'s", "not", "use", "core", "it", "not", "worth", "implement", "fix", "these", "case", "gener", "purpos", "librari", "like", "lodash", "provid", "merg", "use", "instead", "close", "12653", "close", "14941", "close", "15180", "close", "15992", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "deprec", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "unclear", "api", "support", "**what", "new", "behavior", "thi", "featur", "chang", "deprec", "doc", "updat", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "not", "sure", "thi", "mark", "fix", "or", "feat", "~if", "we", "deprec", "onli", "then", "known", "issu", "section", "still", "go", "x~"], "title_sim": [0.10887768604694512], "body_sim": [0.08237678758799921], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1385}, {"A_title": "fix(jqLite): use XHTML-compliant HTML as input for jqLite", "A_clean_title": ["fix", "jqlite", "jq", "lite", "use", "xhtml", "compliant", "html", "as", "input", "jqlite", "jq", "lite"], "B_title": "test($sanitize): exclude elclob test in Edge 17", "B_clean_title": ["test", "sanit", "exclud", "elclob", "test", "edg", "17"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#6917\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nClosing tags are added to HTML passed to jqLite which should make it XHTML-compliant.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated (N/A)\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass (we don't test on XHTML so it can't be tested)\r\n\r\n**Other information**:\r\n\r\nFixes #6917", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "6917", "**what", "new", "behavior", "thi", "featur", "chang", "close", "tag", "are", "ad", "html", "pass", "jqlite", "jq", "lite", "which", "make", "it", "xhtml", "compliant", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "we", "n't", "test", "xhtml", "so", "it", "ca", "n't", "test", "**other", "information**", "fix", "6917"], "B_body": "We don't exclude Edge completely to know if the bug has been fixed\r\nin the next version\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["we", "n't", "exclud", "edg", "complet", "know", "bug", "ha", "been", "fix", "next", "version", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [0.05412091519268927], "body_sim": [0.9830908115394115], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 37}, {"A_title": "docs(PULL_REQUEST_TEMPLATE.md): fix broken links in PR template", "A_clean_title": ["doc", "md", "pull", "request", "templat", "fix", "broken", "link", "pr", "templat"], "B_title": "chore(yarn): rely on Travis built-in Yarn support, update Yarn in Jenkins", "B_clean_title": ["chore", "yarn", "reli", "travi", "built", "yarn", "support", "updat", "yarn", "jenkin"], "A_body": "fix broken links in PR template", "A_clean_body": ["fix", "broken", "link", "pr", "templat"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nChore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWe install an old Yarn verison manually.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nOn Travis we rely on built-in Yarn support and we only cache the Yarn cache, not `node_modules`. We install a new Yarn verison manually on Jenkins; the location of the install script changed.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "we", "instal", "old", "yarn", "verison", "manual", "**what", "new", "behavior", "thi", "featur", "chang", "travi", "we", "reli", "built", "yarn", "support", "we", "onli", "cach", "yarn", "cach", "not", "node", "modul", "we", "instal", "new", "yarn", "verison", "manual", "jenkin", "locat", "instal", "script", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.04600042208877691], "body_sim": [0.5109719106768141], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 271}, {"A_title": "refactor($location): move repeated path normalization code into helper method", "A_clean_title": ["refactor", "locat", "move", "repeat", "path", "normal", "code", "into", "helper", "method"], "B_title": "docs(*): don't hide results for middle-clicks", "B_clean_title": ["doc", "n't", "hide", "result", "middl", "click"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRefactor to reduce duplicate code\r\n\r\n**Other information**:\r\nI originally did this as part of an attempted solution in #16611, but I thought it might be worth committing on it's own.\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "refactor", "reduc", "duplic", "code", "**other", "information**", "origin", "did", "thi", "as", "part", "attempt", "solut", "16611", "but", "thought", "it", "might", "worth", "commit", "it", "'s", "own"], "B_body": "Middle-clicking opens a link in a new tab; it shouldn't close the results list\r\nas the user may want to open more of those links.\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nMiddle-clicking on a link in the results list (which opens a link in a new tab) closes the list.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nList is kept open in such a case.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["middl", "click", "open", "link", "new", "tab", "it", "n't", "close", "result", "list", "as", "user", "may", "want", "open", "more", "those", "link", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "middl", "click", "link", "result", "list", "which", "open", "link", "new", "tab", "close", "list", "**what", "new", "behavior", "thi", "featur", "chang", "list", "kept", "open", "such", "case", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "~~doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.011432524674585443], "body_sim": [0.6695135310319229], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.001233402418279922, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 280}, {"A_title": "fix(ngOptions): override select option registration", "A_clean_title": ["fix", "ngoption", "ng", "option", "overrid", "select", "option", "registr"], "B_title": "docs(faq): clarify the versioning strategy", "B_clean_title": ["doc", "faq", "clarifi", "version", "strategi"], "A_body": "When ngOptions is present on a select, the option directive should not be able to\nregister options on the selectCtrl since this may cause errors during the\nngOptions lifecycle.\n\nThis can happen in the following cases:\n- there is a blank option below the select element, an ngModel\n  directive, an ngOptions directive and some other directive on the select\n  element, which compiles the children of the select\n  (i.e. the option elements) before ngOptions is has finished linking.\n- there is a blank option below the select element, an ngModel\n  directive, an ngOptions directive and another directive, which uses\n  templateUrl and replace:true.\n\nWhat happens is:\n- the option directive is compiled and adds an element `$destroy` listener\n  that will call `ngModel.$render` when the option element is removed.\n- when `ngOptions` processes the option, it removes the element, and\n  triggers the `$destroy` listener on the option.\n- the registered `$destroy` listener calls `$render` on `ngModel`.\n- $render calls `selectCtrl.writeValue()`, which accesses the `options`\n  object in the `ngOptions` directive.\n- Since `ngOptions` has not yet completed linking the `options` has not\n  yet been defined and we get an error.\n\nThis fix moves the registration code for the `option` directive into the\n`SelectController`, which can then be easily overridden by the `ngOptions`\ndirective as a `noop`.\n\nFixes #11685\nCloses #12972\nCloses #12968\n", "A_clean_body": ["when", "ngoption", "ng", "option", "present", "select", "option", "direct", "not", "abl", "regist", "option", "selectctrl", "select", "ctrl", "sinc", "thi", "may", "caus", "error", "dure", "ngoption", "ng", "option", "lifecycl", "thi", "happen", "follow", "case", "there", "blank", "option", "below", "select", "element", "ngmodel", "ng", "model", "direct", "ngoption", "ng", "option", "direct", "some", "other", "direct", "select", "element", "which", "compil", "children", "select", "option", "element", "befor", "ngoption", "ng", "option", "ha", "finish", "link", "there", "blank", "option", "below", "select", "element", "ngmodel", "ng", "model", "direct", "ngoption", "ng", "option", "direct", "anoth", "direct", "which", "use", "templateurl", "templat", "url", "replac", "true", "what", "happen", "option", "direct", "compil", "add", "element", "destroy", "listen", "that", "will", "call", "ngmodel", "ng", "model", "render", "when", "option", "element", "remov", "when", "ngoption", "ng", "option", "process", "option", "it", "remov", "element", "trigger", "destroy", "listen", "option", "regist", "destroy", "listen", "call", "render", "ngmodel", "ng", "model", "render", "call", "selectctrl", "writevalu", "select", "ctrl", "write", "valu", "which", "access", "option", "object", "ngoption", "ng", "option", "direct", "sinc", "ngoption", "ng", "option", "ha", "not", "yet", "complet", "link", "option", "ha", "not", "yet", "been", "defin", "we", "get", "error", "thi", "fix", "move", "registr", "code", "option", "direct", "into", "selectcontrol", "select", "control", "which", "then", "easili", "overridden", "by", "ngoption", "ng", "option", "direct", "as", "noop", "fix", "11685", "close", "12972", "close", "12968"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nInformation is not super clear\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\nclarify info on:\r\n- When do features and breaking changes appear\r\n- Relationship with Semver\r\n- Compatibility of core and optional modules \r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "inform", "not", "super", "clear", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "clarifi", "info", "when", "featur", "break", "chang", "appear", "relationship", "semver", "compat", "core", "option", "modul"], "title_sim": [0.014782874354541566], "body_sim": [0.12654296269347468], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 534}, {"A_title": "docs(faq): document the AngularJS/jqLite deprecation strategy", "A_clean_title": ["doc", "faq", "document", "angularj", "jqlite", "angular", "js", "jq", "lite", "deprec", "strategi"], "B_title": "fix($httpBackend): use ActiveX XHR when making PATCH requests on IE8", "B_clean_title": ["fix", "httpbackend", "http", "backend", "use", "activex", "activ", "xhr", "when", "make", "patch", "request", "ie8"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThe deprecation strategy is not specified.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThe deprecation strategy is specified.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\nFixes #15282", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "deprec", "strategi", "not", "specifi", "**what", "new", "behavior", "thi", "featur", "chang", "deprec", "strategi", "specifi", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**", "fix", "15282"], "B_body": "IE8's native XHR doesn't support PATCH requests, but the ActiveX one does.\n\nCloses #2518\nCloses #5043\n", "B_clean_body": ["ie8", "'s", "nativ", "xhr", "n't", "support", "patch", "request", "but", "activex", "activ", "one", "close", "2518", "close", "5043"], "title_sim": [0.08230732577942465], "body_sim": [0.0016720977512945426], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1188}, {"A_title": "fix(ngOptions): ignore comment nodes when removing 'selected' attribute", "A_clean_title": ["fix", "ngoption", "ng", "option", "ignor", "comment", "node", "when", "remov", "'select", "attribut"], "B_title": "test($compile): fix IE specific test.", "B_clean_title": ["test", "compil", "fix", "ie", "specif", "test"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the \"selected\" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n~The logic is different in master, and the bug should not be happening there.~ The same bug exists on master\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "regress", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "empti", "option", "ha", "ngif", "ng", "it", "ngoption", "ng", "option", "select", "ngif", "ng", "express", "fals", "then", "error", "thrown", "becaus", "we", "tri", "remov", "select", "attribut", "ngif", "ng", "comment", "node", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "~the", "logic", "differ", "master", "bug", "not", "happen", "there", "same", "bug", "exist", "master"], "B_body": "For some reason, the tests pass but the build doesn't turn green on http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/ (e.g. http://ci.angularjs.org/user/chirayu/my-views/view/chirayu/job/angular.js-chirayu/89/  )\n", "B_clean_body": ["some", "reason", "test", "pass", "but", "build", "n't", "turn", "green", "http", "angularj", "js", "chirayu", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular", "http", "angularj", "js", "chirayu", "89", "ci", "org", "user", "chirayu", "my", "view", "view", "chirayu", "job", "angular"], "title_sim": [0.11221086776396093], "body_sim": [0.10220374219860887], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.00526527051852127, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1254}, {"A_title": "docs($interpolateProvider): document XSS in $interpolate", "A_clean_title": ["doc", "interpolateprovid", "interpol", "provid", "document", "xss", "interpol"], "B_title": "chore(doc-gen): insert current tagged version if missing from list of\u2026", "B_clean_title": ["chore", "doc", "gen", "insert", "current", "tag", "version", "miss", "list", "of\u2026"], "A_body": "`$interpolateProvider.startSymbol` & friends are often used dangerously, to embed Angular templating in other templating languages. This change documents that that is a very dangerous practice.\n", "A_clean_body": ["interpolateprovid", "startsymbol", "interpol", "provid", "start", "symbol", "friend", "are", "often", "use", "danger", "emb", "angular", "templat", "other", "templat", "languag", "thi", "chang", "document", "that", "that", "veri", "danger", "practic"], "B_body": "\u2026 all versions\r\n\r\nIn commit ce49edc08b3d642f3768f4282d391062d2f83037, we switched to npm info (now yarn info)\r\ninstead of the local git repository information to get the list of currently available versions for\r\nthe docs app. This means that during a release the version that is currently tagged is not yet\r\navailable on npm, and therefore our list of available versions is incomplete.\r\n\r\nWe now simply add the current build version (read from build/version.json) to the list of all\r\nversions if it fulfills the following conditions:\r\n\r\n- it is not a snapshot build\r\n- it is not already part of the list of all versions (i.e. if you are building locally)\r\n\r\nCloses #15741\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsee above\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["all", "version", "commit", "ce49edc08b3d642f3768f4282d391062d2f83037", "we", "switch", "npm", "info", "now", "yarn", "info", "instead", "local", "git", "repositori", "inform", "get", "list", "current", "avail", "version", "doc", "app", "thi", "mean", "that", "dure", "releas", "version", "that", "current", "tag", "not", "yet", "avail", "npm", "therefor", "our", "list", "avail", "version", "incomplet", "we", "now", "simpli", "add", "current", "build", "version", "read", "json", "build", "version", "list", "all", "version", "it", "fulfil", "follow", "condit", "it", "not", "snapshot", "build", "it", "not", "alreadi", "part", "list", "all", "version", "you", "are", "build", "local", "close", "15741", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "see", "abov", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "**other", "information**"], "title_sim": [0.03910639867192347], "body_sim": [0.1920618578421525], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.00743370328009145, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 656}, {"A_title": "test(Angular): remove special case for Edge", "A_clean_title": ["test", "angular", "remov", "special", "case", "edg"], "B_title": "feat(ngMocks): Describe unflushed http requests", "B_clean_title": ["feat", "ngmock", "ng", "mock", "describ", "unflush", "http", "request"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "The current implementation of $httpBackend.verifyNoOutstandingRequest\r\ngives an integer number describing how many requests are unflushed.\r\n\r\nWhile it's superficially easy to solve test errors from that message\r\nby simply adding an additional $httpBackend.flush(), if a developer\r\nis truly not expecting the code to make further requests this is\r\nnot ideal.\r\n\r\nThis change explicitly prints out which additional requests remain\r\nunflushed in the error message, helping her determine if the code\r\nneeds changing, or if an additional flush is appropriate.\r\n\r\nBefore this change:\r\n\r\n    Unflushed requests: 1\r\n\r\nAfter this change:\r\n\r\n    Unflushed requests:\r\n      GET /some\r\n\r\nCloses #10596\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA feature improving the output of ngMocks \"Unflushed requests\" error message.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe error message includes the number of requests remaining unflushed.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nThe error message now includes a brief description of which requests remain unflushed.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo - unless the error messages are considered public API.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["current", "implement", "httpbackend", "verifynooutstandingrequest", "http", "backend", "verifi", "no", "outstand", "request", "give", "integ", "number", "describ", "how", "mani", "request", "are", "unflush", "while", "it", "'s", "superfici", "easi", "solv", "test", "error", "that", "messag", "by", "simpli", "ad", "addit", "httpbackend", "flush", "http", "backend", "develop", "truli", "not", "expect", "code", "make", "further", "request", "thi", "not", "ideal", "thi", "chang", "explicitli", "print", "out", "which", "addit", "request", "remain", "unflush", "error", "messag", "help", "her", "determin", "code", "need", "chang", "or", "addit", "flush", "appropri", "befor", "thi", "chang", "unflush", "request", "after", "thi", "chang", "unflush", "request", "get", "some", "close", "10596", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "improv", "output", "ngmock", "ng", "mock", "unflush", "request", "error", "messag", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "error", "messag", "includ", "number", "request", "remain", "unflush", "**what", "new", "behavior", "thi", "featur", "chang", "error", "messag", "now", "includ", "brief", "descript", "which", "request", "remain", "unflush", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "unless", "error", "messag", "are", "consid", "public", "api", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.06478082115885385], "body_sim": [0.7257865710601036], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 381}, {"A_title": "feat(jqLite): return [] for .val() on <select multiple> with no selection", "A_clean_title": ["feat", "jqlite", "jq", "lite", "return", "val", "select", "multipl", "no", "select"], "B_title": "feat(docs): adding the <doc:protractor> ngdoc-tag", "B_clean_title": ["feat", "doc", "ad", "doc", "protractor", "ngdoc", "tag"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nFeature (an API change).\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe `.val()` getter on `<select multiple>...</select>` returns `null` if no options are selected.\n\n**What is the new behavior (if this is a feature change)?**\nThe `.val()` getter on `<select multiple>...</select>` returns an empty array if no options are selected.\n\n**Does this PR introduce a breaking change?**\nYes.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features) -- what should I do here?\n\n**Other information**:\n\nFixes #14370\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "api", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "val", "getter", "select", "multipl", "select", "return", "null", "no", "option", "are", "select", "**what", "new", "behavior", "thi", "featur", "chang", "val", "getter", "select", "multipl", "select", "return", "empti", "array", "no", "option", "are", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "what", "here", "**other", "information**", "fix", "14370"], "B_body": "This is the first step in migrating tests from doc:scenario to doc:protractor.\nIn-documentation examples with doc:protractor sections will have their contents\noutput to a tab on the docs site as well as output to a standalone test file in\nbuild/docs/ptore2e.\n", "B_clean_body": ["thi", "first", "step", "migrat", "test", "doc", "scenario", "doc", "protractor", "document", "exampl", "doc", "protractor", "section", "will", "have", "their", "content", "output", "tab", "doc", "site", "as", "well", "as", "output", "standalon", "test", "file", "build", "doc", "ptore2"], "title_sim": [0.11769166620348066], "body_sim": [0.26733816452019227], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.1238788024914003, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 972}, {"A_title": "Fix scenario runner on IE7, IE8", "A_clean_title": ["fix", "scenario", "runner", "ie7", "ie8"], "B_title": "chore(travis): move docse2e tests into the unit tests vm", "B_clean_title": ["chore", "travi", "move", "docse2", "test", "into", "unit", "test", "vm"], "A_body": "I did only remove config attribute from docs-scenario.html (`ng:scenario-output=\"json\"`) as I don't think we want this change. We could use just `html` output, as that's actually the only output being used, but using `json` output wouldn't display any result and scenario runner wouldn't work with JSTD.\n\nCouple of failing tests on both IE7, IE8 had been fixed with that commit.\nThe issue with input.enter() is fixed.\n- add ng:disabled, ng:checked, ng:multiple, ng:readonly, ng:selected\n- fetch fixed cookbook/advancedform (use ng:disabled)\n- fire keydown instead of change on input\n- remove frame when test finishes\n", "A_clean_body": ["did", "onli", "remov", "config", "attribut", "doc", "scenario", "html", "ng", "scenario", "output=", "json", "as", "n't", "think", "we", "want", "thi", "chang", "we", "could", "use", "just", "html", "output", "as", "that", "'s", "actual", "onli", "output", "be", "use", "but", "json", "output", "would", "n't", "display", "ani", "result", "scenario", "runner", "would", "n't", "work", "jstd", "coupl", "fail", "test", "both", "ie7", "ie8", "had", "been", "fix", "that", "commit", "issu", "input", "enter", "fix", "add", "ng", "disabl", "ng", "check", "ng", "multipl", "ng", "readonli", "ng", "select", "fetch", "fix", "cookbook", "advancedform", "use", "ng", "disabl", "fire", "keydown", "instead", "chang", "input", "remov", "frame", "when", "test", "finish"], "B_body": "we spend more time making getting the build ready than running the docs e2e tests.\n\nby piggy-backing on unit tests we'll finish the build faster\n", "B_clean_body": ["we", "spend", "more", "time", "make", "get", "build", "readi", "than", "run", "doc", "e2e", "test", "by", "piggi", "back", "unit", "test", "we", "'ll", "finish", "build", "faster"], "title_sim": [0.10928891346627814], "body_sim": [0.17829327940089287], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1173}, {"A_title": "fix(select): don't register options when select has no ngModel", "A_clean_title": ["fix", "select", "n't", "regist", "option", "when", "select", "ha", "no", "ngmodel", "ng", "model"], "B_title": "fix(input): correctly handle invalid model values for `input[date/time/\u2026...", "B_clean_title": ["fix", "input", "correctli", "handl", "invalid", "model", "valu", "input", "date", "time"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nOptions are added even if select has no ngModel. ngValue replaces the value attribute of the element with a hashed value, and this might break tests (it does in angular material)\n\n**What is the new behavior (if this is a feature change)?**\nOptions are not added to select\n\n**Does this PR introduce a breaking change?**\n?\nI can't think of a valid use case where you'd want registerning options without ngModel integration. If you don't have model binding, then you don't need to store the options internally. You can actually use ngOptions without ngModel to render a list of options - but you don't need to register the options for that.\n\nThe registerOption function is also not documented, so this is an implementation detail from the perspective of the user\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nWhen option elements use ngValue, value or interpolated text simply to set\nthe option value, i.e. when the parent select doesn't have an ngModel,\nthere is no necessity in registering the options with the select controller.\nThis was previously no problem, as the ngModelController is set to a noop controller,\nso that all further interactions are aborted ($render etc)\n\nHowever, ngValue sets a hashed value inside the option value (to support arbitrary object types).\nThis can cause issues with tests that expect unhashed values.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "option", "are", "ad", "even", "select", "ha", "no", "ngmodel", "ng", "model", "ngvalu", "ng", "valu", "replac", "valu", "attribut", "element", "hash", "valu", "thi", "might", "break", "test", "it", "angular", "materi", "**what", "new", "behavior", "thi", "featur", "chang", "option", "are", "not", "ad", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ca", "n't", "think", "valid", "use", "case", "where", "you", "'d", "want", "registern", "option", "without", "ngmodel", "ng", "model", "integr", "you", "n't", "have", "model", "bind", "then", "you", "n't", "need", "store", "option", "intern", "you", "actual", "use", "ngoption", "ng", "option", "without", "ngmodel", "ng", "model", "render", "list", "option", "but", "you", "n't", "need", "regist", "option", "that", "registeropt", "regist", "option", "function", "also", "not", "document", "so", "thi", "implement", "detail", "perspect", "user", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "when", "option", "element", "use", "ngvalu", "ng", "valu", "valu", "or", "interpol", "text", "simpli", "set", "option", "valu", "when", "parent", "select", "n't", "have", "ngmodel", "ng", "model", "there", "no", "necess", "regist", "option", "select", "control", "thi", "wa", "previous", "no", "problem", "as", "ngmodelcontrol", "ng", "model", "control", "set", "noop", "control", "so", "that", "all", "further", "interact", "are", "abort", "render", "etc", "howev", "ngvalu", "ng", "valu", "set", "hash", "valu", "insid", "option", "valu", "support", "arbitrari", "object", "type", "thi", "caus", "issu", "test", "that", "expect", "unhash", "valu"], "B_body": "...]`\n\nSimilar to `input[number]` Angular will throw if the model value\nfor a `input[date]` is not a `Date` object.\nFor `Invalid Date`s (dates who\u2019s `getTime()` is `NaN`) `input[date]` \nwill render an empty string.\n\nCloses #8949\n", "B_clean_body": ["similar", "input", "number", "angular", "will", "throw", "model", "valu", "input", "date", "not", "date", "object", "invalid", "date", "date", "who", "gettim", "get", "time", "nan", "na", "input", "date", "will", "render", "empti", "string", "close", "8949"], "title_sim": [0.22545537143545272], "body_sim": [0.14003623275575916], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.02939047677282918, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 641}, {"A_title": "docs($sanitizeProvider): fix param comment for enableSvg", "A_clean_title": ["doc", "sanitizeprovid", "sanit", "provid", "fix", "param", "comment", "enablesvg", "enabl", "svg"], "B_title": "fix(numberFilter): correctly round fractions despite floating-point arithmetics issues in JS", "B_clean_title": ["fix", "numberfilt", "number", "filter", "correctli", "round", "fraction", "despit", "float", "point", "arithmet", "issu", "js"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThe param is listed as type boolean, but has an erroneous comment describing it as a regex. (Maybe from a much earlier version of Angular?)\n\n**What is the new behavior (if this is a feature change)?**\n\nNo behavior change. Fixes the doc comment.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\nI submitted a pull request for this previously, but the commit had the wrong email address so it didn't catch my CLA, so I'm resubmitting now.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "param", "list", "as", "type", "boolean", "but", "ha", "erron", "comment", "describ", "it", "as", "regex", "mayb", "much", "earlier", "version", "angular", "**what", "new", "behavior", "thi", "featur", "chang", "no", "behavior", "chang", "fix", "doc", "comment", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "submit", "pull", "request", "thi", "previous", "but", "commit", "had", "wrong", "email", "address", "so", "it", "did", "n't", "catch", "my", "cla", "so", "'m", "resubmit", "now"], "B_body": "Closes #7870\nCloses #7878\n", "B_clean_body": ["close", "7870", "close", "7878"], "title_sim": [0.12493917048043288], "body_sim": [-0.0035617299458201596], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 675}, {"A_title": "Fix deprecate ngtouch", "A_clean_title": ["fix", "deprec", "ngtouch"], "B_title": "docs(app): adds roboto font", "B_clean_title": ["doc", "app", "add", "roboto", "font"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "The Google Material design docs at http://www.google.com/design/spec/style/typography.html state that we should use the font 'Roboto' for our Typography. I went ahead added the font using @import, but we could also download the fonts and add them to the project. I'm fine with either way.\n", "B_clean_body": ["googl", "materi", "design", "doc", "at", "http", "googl", "html", "www", "com", "design", "spec", "style", "typographi", "state", "that", "we", "use", "font", "'roboto", "our", "typographi", "went", "ahead", "ad", "font", "import", "but", "we", "could", "also", "download", "font", "add", "them", "project", "'m", "fine", "either", "way"], "title_sim": [0.013885597617049123], "body_sim": [0.3018711916339435], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1147}, {"A_title": "docs(contributing): fix indentation for proper Markdown syntax", "A_clean_title": ["doc", "contribut", "fix", "indent", "proper", "markdown", "syntax"], "B_title": "chore: unit test latest + latest-1 version of FF, Chrome, Edge", "B_clean_title": ["chore", "unit", "test", "latest", "latest", "version", "ff", "chrome", "edg"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nMarkdown isn't displayed properly.\n\n**What is the new behavior (if this is a feature change)?**\nMarkdown is displayed properly.\n\n**Does this PR introduce a breaking change?**\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "markdown", "n't", "display", "properli", "**what", "new", "behavior", "thi", "featur", "chang", "markdown", "display", "properli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "At the moment, we use fixed versions of these browsers to test - especially for FF and Chrome it's useful to test the latest, as they release faster.\r\nFor the future, we could also look into using  `latest-1` additionally.", "B_clean_body": ["at", "moment", "we", "use", "fix", "version", "these", "browser", "test", "especi", "ff", "chrome", "it", "'s", "use", "test", "latest", "as", "they", "releas", "faster", "futur", "we", "could", "also", "look", "into", "latest", "addit"], "title_sim": [0.018804334517612865], "body_sim": [0.16904115082775878], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 255}, {"A_title": "test(jQuery): test not firing $destroy on jQuery.cleanData with jQuery UI", "A_clean_title": ["test", "jqueri", "queri", "test", "not", "fire", "destroy", "jqueri", "cleandata", "queri", "clean", "data", "jqueri", "queri", "ui"], "B_title": "docs(*): ensure jsdoc type expressions are valid", "B_clean_title": ["doc", "ensur", "jsdoc", "type", "express", "are", "valid"], "A_body": "So far it wasn't tested that Angular's logic for skipping it triggering\nthe $destroy event on jQuery.cleanData in the replaceWith internal function\nworks correctly when Angular is not the last one to patch the cleanData method\n(e.g. if jQuery UI does the patching later). This commits adds the relevant\ntest.\n\nRef #8486\n\ncc @IgorMinar\n", "A_clean_body": ["so", "far", "it", "wa", "n't", "test", "that", "angular", "'s", "logic", "skip", "it", "trigger", "destroy", "event", "jqueri", "cleandata", "queri", "clean", "data", "replacewith", "replac", "intern", "function", "work", "correctli", "when", "angular", "not", "last", "one", "patch", "cleandata", "clean", "data", "method", "jqueri", "queri", "ui", "patch", "later", "thi", "commit", "add", "relev", "test", "ref", "8486", "cc", "igorminar", "igor", "minar"], "B_body": "These changes are to coincide with the forthcoming change to dgeni-packages: https://github.com/angular/dgeni-packages/pull/10\n\nThere are a bunch of invalid jsdoc type expressions that will break if you use the new dgeni tagParser.  This PR will fix those.  Unfortunately, the docs will look wrong if we merge them before the new tagParser arrives.\n", "B_clean_body": ["these", "chang", "are", "coincid", "forthcom", "chang", "dgeni", "packag", "http", "packag", "pull", "10", "github", "com", "angular", "dgeni", "there", "are", "bunch", "invalid", "jsdoc", "type", "express", "that", "will", "break", "you", "use", "new", "dgeni", "tagpars", "tag", "parser", "thi", "pr", "will", "fix", "those", "unfortun", "doc", "will", "look", "wrong", "we", "merg", "them", "befor", "new", "tagpars", "tag", "parser", "arriv"], "title_sim": [0.015162615220280897], "body_sim": [0.23935140667175914], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 173}, {"A_title": "Chore travis split unit", "A_clean_title": ["chore", "travi", "split", "unit"], "B_title": "fix(ngMockE2E): ensure that mocked $httpBackend uses correct $browser", "B_clean_title": ["fix", "ngmocke2", "ng", "mock", "e2e", "ensur", "that", "mock", "httpbackend", "http", "backend", "use", "correct", "browser"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "The fix from #13124 enabled ngMock and ngMockE2E to work together but\r\ndid it in a way that meant that the \"real\" `$httpBackend` service that\r\nwas used in pass-through depended upon a different `$browser` service\r\nto the rest of the app.\r\n\r\nThis broke Protractor since it watches the `$browser` for outstanding\r\nrequests and the pass through requests were being tracked by the wrong\r\n`$browser` instance.\r\n\r\nCloses #15593\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["fix", "13124", "enabl", "ngmock", "ng", "mock", "ngmocke2", "ng", "mock", "e2e", "work", "togeth", "but", "did", "it", "way", "that", "meant", "that", "real", "httpbackend", "http", "backend", "servic", "that", "wa", "use", "pass", "through", "depend", "upon", "differ", "browser", "servic", "rest", "app", "thi", "broke", "protractor", "sinc", "it", "watch", "browser", "outstand", "request", "pass", "through", "request", "were", "be", "track", "by", "wrong", "browser", "instanc", "close", "15593", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.0347097871981974], "body_sim": [0.9079061115893603], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.08140301537419199, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 281}, {"A_title": "feat(ngCookies): support sameSite option", "A_clean_title": ["feat", "ngcooki", "ng", "cooki", "support", "samesit", "same", "site", "option"], "B_title": "fix(guide) broken title overflow in navlist", "B_clean_title": ["fix", "guid", "broken", "titl", "overflow", "navlist"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nfeature for issue https://github.com/angular/angular.js/issues/16543\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nsupport sameSite option for ngCookie\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "issu", "http", "github", "com", "angular", "angular", "js", "issu", "16543", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "support", "samesit", "same", "site", "option", "ngcooki", "ng", "cooki", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "## Before\n\n![screen shot 2013-08-30 at 1 25 41 pm](https://f.cloud.github.com/assets/1016365/1060537/8829f31a-11b3-11e3-8620-9751954915f4.png)\n## After\n\n![screen shot 2013-08-30 at 1 25 31 pm](https://f.cloud.github.com/assets/1016365/1060540/8b6e9efe-11b3-11e3-8777-fa52f5236a74.png)\n", "B_clean_body": ["befor", "screen", "shot", "2013", "08", "30", "at", "25", "41", "pm", "http", "11b3", "11e3", "8620", "cloud", "github", "9751954915f4", "png", "com", "asset", "1016365", "1060537", "8829f31a", "after", "screen", "shot", "2013", "08", "30", "at", "25", "31", "pm", "http", "11b3", "11e3", "8777", "cloud", "github", "fa52f5236a74", "png", "com", "asset", "1016365", "1060540", "8b6e9ef"], "title_sim": [0.11370038588771654], "body_sim": [0.29775516605623065], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1704}, {"A_title": "docs($sceProvider): XSS when turning of SCE", "A_clean_title": ["doc", "sceprovid", "sce", "provid", "xss", "when", "turn", "sce"], "B_title": "fix(testabilityPatch): reset cache after memory leak detection", "B_clean_title": ["fix", "testabilitypatch", "testabl", "patch", "reset", "cach", "after", "memori", "leak", "detect"], "A_body": "Document that turning off SCE is very, very dangerous and should normally not be used by applications.\n", "A_clean_body": ["document", "that", "turn", "off", "sce", "veri", "veri", "danger", "normal", "not", "use", "by", "applic"], "B_body": "When you have a test failure in the angular.js project, which also causes a memory leak, such as a failure to dealocate an element or a scope, you often get a false-negative failure for every subsequent test. This change ensures that after such an error, the cache is reset so that subsequent tests can run normally.\n", "B_clean_body": ["when", "you", "have", "test", "failur", "angular", "js", "project", "which", "also", "caus", "memori", "leak", "such", "as", "failur", "dealoc", "element", "or", "scope", "you", "often", "get", "fals", "neg", "failur", "everi", "subsequ", "test", "thi", "chang", "ensur", "that", "after", "such", "error", "cach", "reset", "so", "that", "subsequ", "test", "run", "normal"], "title_sim": [0.16317640404166553], "body_sim": [0.2867012545518464], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 11}, {"A_title": "docs($log): describe your change...", "A_clean_title": ["doc", "log", "describ", "your", "chang"], "B_title": "Scenario runner element", "B_clean_title": ["scenario", "runner", "element"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nDocument update\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nThe documentation for $log doesn't mention blackboxing, by which a developer can see the originating line of calls to $log.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nA brief, browser-agnostic mention of blackboxing was added to the page.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "document", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "document", "log", "n't", "mention", "blackbox", "by", "which", "develop", "see", "origin", "line", "call", "log", "**what", "new", "behavior", "thi", "featur", "chang", "brief", "browser", "agnost", "mention", "blackbox", "wa", "ad", "page", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Adds all the missing jQuery methods to element() DSL\n", "B_clean_body": ["add", "all", "miss", "jqueri", "queri", "method", "element", "dsl"], "title_sim": [-0.00021743747846867756], "body_sim": [0.023876575551066627], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.013348718787359338, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2264}, {"A_title": "test(ngMock): remove a broken jqLite cache clearing", "A_clean_title": ["test", "ngmock", "ng", "mock", "remov", "broken", "jqlite", "jq", "lite", "cach", "clear"], "B_title": "fix($httpBackend): Ignore multiple calls to onreadystatechange with read...", "B_clean_title": ["fix", "httpbackend", "http", "backend", "ignor", "multipl", "call", "onreadystatechang", "read"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nA test change.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n`angular.element.cache` is reset to an empty object in one spec.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nIt's no longer reset at all.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- ~~Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated~~\r\n- ~~Fix/Feature: Tests have been added; existing tests pass~~\r\n\r\n**Other information**:\r\n\r\nThis is blocking PR #16512.", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "angular", "element", "cach", "reset", "empti", "object", "one", "spec", "**what", "new", "behavior", "thi", "featur", "chang", "it", "'s", "no", "longer", "reset", "at", "all", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "~~fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updated~~", "~~fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass~~", "**other", "information**", "thi", "block", "pr", "16512"], "B_body": "...yState=4\n\nOn mobile webkit `onreadystatechange` might by called multiple times\nwith `readyState===4`  caused by xhrs that are resolved while the app is\nin the background.\n\n Fixes #5426.\n", "B_clean_body": ["ystate=4", "state=4", "mobil", "webkit", "onreadystatechang", "might", "by", "call", "multipl", "time", "readystate===4", "readi", "state===4", "caus", "by", "xhr", "that", "are", "resolv", "while", "app", "background", "fix", "5426"], "title_sim": [0.0416481206153836], "body_sim": [0.11909657799884435], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 1545}, {"A_title": "docs($location): fix typo", "A_clean_title": ["doc", "locat", "fix", "typo"], "B_title": "fix($compile): create new (isolate) scopes for directives on root elements", "B_clean_title": ["fix", "compil", "creat", "new", "isol", "scope", "direct", "root", "element"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "previously we would not create them and it's causing all kinds of issues and accidental leaks\n\nCloses #817\n", "B_clean_body": ["previous", "we", "would", "not", "creat", "them", "it", "'s", "caus", "all", "kind", "issu", "accident", "leak", "close", "817"], "title_sim": [0.1238819585357701], "body_sim": [0.14756092707662402], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2121}, {"A_title": "docs($filter): add link to built-in filters page", "A_clean_title": ["doc", "filter", "add", "link", "built", "filter", "page"], "B_title": "Improve module template, add custom installation notes for ngMock", "B_clean_title": ["improv", "modul", "templat", "add", "custom", "instal", "note", "ngmock", "ng", "mock"], "A_body": "tired to seek page with built-in filters every time I go to filters\n", "A_clean_body": ["tire", "seek", "page", "built", "filter", "everi", "time", "go", "filter"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n- module install page doesn't mention npm\n- ngMock install page is misleading, as angular-mocks shouldn't be included in application code\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Docs have been added / updated (for bug fixes / features)\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "modul", "instal", "page", "n't", "mention", "npm", "ngmock", "ng", "mock", "instal", "page", "mislead", "as", "angular", "mock", "n't", "includ", "applic", "code", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [0.12169578617330788], "body_sim": [0.09025517266892373], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.030358624993654226, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 101}, {"A_title": "perf(jqLite): avoid repeated add/removeAttribute in jqLiteRemoveClass", "A_clean_title": ["perf", "jqlite", "jq", "lite", "avoid", "repeat", "add", "removeattribut", "remov", "attribut", "jqliteremoveclass", "jq", "lite", "remov", "class"], "B_title": "docs: load angular from can only on production", "B_clean_title": ["doc", "load", "angular", "onli", "product"], "A_body": "This does something similar to what was suggested in #16078, although keeps it a little more like `jqLiteAddClass` for now.", "A_clean_body": ["thi", "someth", "similar", "what", "wa", "suggest", "16078", "although", "keep", "it", "littl", "more", "like", "jqliteaddclass", "jq", "lite", "add", "class", "now"], "B_body": "So that when running the docs locally, eg. during e2e testing, we use the latest build version of angular, rather than the stable one from CDN.\n", "B_clean_body": ["so", "that", "when", "run", "doc", "local", "eg", "dure", "e2e", "test", "we", "use", "latest", "build", "version", "angular", "rather", "than", "stabl", "one", "cdn"], "title_sim": [-0.03264230769033966], "body_sim": [0.10351921053595327], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1772}, {"A_title": "chore(*): normalize Vojta's email in .mailmap correctly", "A_clean_title": ["chore", "normal", "vojta", "'s", "email", "mailmap", "correctli"], "B_title": "fix(css): ng:form should always be a block element", "B_clean_title": ["fix", "css", "ng", "form", "alway", "block", "element"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nchore\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nVojta's mails are not normalized.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThey are normalized.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "vojta", "'s", "mail", "are", "not", "normal", "**what", "new", "behavior", "thi", "featur", "chang", "they", "are", "normal", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "**other", "information**"], "B_body": "fix for: http://jsfiddle.net/agamennon12345/twcvt/\n", "B_clean_body": ["fix", "http", "jsfiddl", "net", "agamennon12345", "twcvt"], "title_sim": [-0.0012194746653801805], "body_sim": [0.09119752809790396], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2216}, {"A_title": "feat($rootScope): allow suspending and resuming watchers on scope", "A_clean_title": ["feat", "rootscop", "root", "scope", "allow", "suspend", "resum", "watcher", "scope"], "B_title": " \tdocs(ngRepeat): mention limitations of object iteration", "B_clean_title": ["doc", "ngrepeat", "ng", "repeat", "mention", "limit", "object", "iter"], "A_body": "This is a rebase of @shahata's original PR at #10658.\r\nWe need to think about @lgalfaso's concerns (https://github.com/angular/angular.js/pull/10658#issuecomment-75211793 and https://github.com/angular/angular.js/pull/10658#issuecomment-78611215) before merging...", "A_clean_body": ["thi", "rebas", "shahata", "'s", "origin", "pr", "at", "10658", "we", "need", "think", "about", "lgalfaso", "'s", "concern", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "75211793", "http", "github", "com", "angular", "angular", "js", "pull", "10658", "issuecom", "78611215", "befor", "merg"], "B_body": "Issue is tracked in issue Related #6266\n", "B_clean_body": ["issu", "track", "issu", "relat", "6266"], "title_sim": [0.055323520540204375], "body_sim": [0.10615181004719765], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.037072301188804745, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 630}, {"A_title": "test(Angular): remove special case for Edge", "A_clean_title": ["test", "angular", "remov", "special", "case", "edg"], "B_title": "Revert \"fix($parse): standardize one-time literal vs non-literal and interceptors\"", "B_clean_title": ["revert", "fix", "pars", "standard", "one", "time", "liter", "vs", "non", "liter", "interceptor"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Reverts 60394a9d91dad8932fa900af7c8529837f1d4557 to fix #15905 in 1.6. Currently plan is to NOT revert in 1.7.\r\n\r\nFixes #15905 ", "B_clean_body": ["revert", "60394a9d91dad8932fa900af7c8529837f1d4557", "fix", "15905", "current", "plan", "not", "revert", "fix", "15905"], "title_sim": [0.02962397496577672], "body_sim": [0.22974013181121322], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 369}, {"A_title": "feat($sanitize): Added support for the sftp protocol in $$ SanitizeUriProvider and linky filter", "A_clean_title": ["feat", "sanit", "ad", "support", "sftp", "protocol", "sanitizeuriprovid", "sanit", "uri", "provid", "linki", "filter"], "B_title": "fix(input[radio]): use non-strict comparison for checkedness", "B_clean_title": ["fix", "input", "radio", "use", "non", "strict", "comparison", "checked"], "A_body": "\u2026 SanitizeUriProvider\r\n\r\nAdded support for the sftp protocol in $$ SanitizeUriProvider and linky filter\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nsftp not suported\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nsftp suported\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["sanitizeuriprovid", "sanit", "uri", "provid", "ad", "support", "sftp", "protocol", "sanitizeuriprovid", "sanit", "uri", "provid", "linki", "filter", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "sftp", "not", "suport", "**what", "new", "behavior", "thi", "featur", "chang", "sftp", "suport", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nReverting a Breaking Change\n\n**What is the current behavior? (You can also link to an open issue here)**\nCheckedness is determined by comparing $viewValue and value strictly.\n\n**What is the new behavior (if this is a feature change)?**\nCheckedness is determined by comparing $viewValue and value non-strictly.\n\n**Does this PR introduce a breaking change?**\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\nThis was introduced during the switch to ESLint, but it is a breaking change.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "revert", "break", "chang", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "checked", "determin", "by", "compar", "viewvalu", "view", "valu", "valu", "strictli", "**what", "new", "behavior", "thi", "featur", "chang", "checked", "determin", "by", "compar", "viewvalu", "view", "valu", "valu", "non", "strictli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "thi", "wa", "introduc", "dure", "switch", "eslint", "es", "lint", "but", "it", "break", "chang"], "title_sim": [0.01737995774194789], "body_sim": [0.8352432975472078], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0033747167836564096, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 267}, {"A_title": "fix(jqLite): use XHTML-compliant HTML as input for jqLite", "A_clean_title": ["fix", "jqlite", "jq", "lite", "use", "xhtml", "compliant", "html", "as", "input", "jqlite", "jq", "lite"], "B_title": "chore(doc-gen): render @example tag for ngdoc @method", "B_clean_title": ["chore", "doc", "gen", "render", "exampl", "tag", "ngdoc", "method"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nBug fix.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n#6917\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nClosing tags are added to HTML passed to jqLite which should make it XHTML-compliant.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated (N/A)\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass (we don't test on XHTML so it can't be tested)\r\n\r\n**Other information**:\r\n\r\nFixes #6917", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "6917", "**what", "new", "behavior", "thi", "featur", "chang", "close", "tag", "are", "ad", "html", "pass", "jqlite", "jq", "lite", "which", "make", "it", "xhtml", "compliant", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "we", "n't", "test", "xhtml", "so", "it", "ca", "n't", "test", "**other", "information**", "fix", "6917"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeat / fix to the docs app\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`@example` in  `@method` is not rendered\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "feat", "fix", "doc", "app", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "method", "not", "render", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format"], "title_sim": [0.05981929195263603], "body_sim": [0.9143003831877303], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 483}, {"A_title": "fix($parse): fix infinite digest errors when watching objects with .valueOf in literals", "A_clean_title": ["fix", "pars", "fix", "infinit", "digest", "error", "when", "watch", "object", "valueof", "valu", "liter"], "B_title": "docs(changelog): Change for labels and style consistency", "B_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "A_body": "I think this is an edge case of https://github.com/angular/angular.js/commit/7084deccaac5855d7148fb6d91dcb83c16b079c4 (and [1.6.x](https://github.com/angular/angular.js/commit/25f008f541d68b09efd7b428b648c6d4899e6972)) that was not handled. If those objects (in the literals) have a `.valueOf` function that returns something other then `this` it will cause an infinite digest.\r\n\r\nThis should probably also go into 1.6?", "A_clean_body": ["think", "thi", "edg", "case", "http", "github", "com", "angular", "angular", "js", "commit", "7084deccaac5855d7148fb6d91dcb83c16b079c4", "http", "github", "com", "angular", "angular", "js", "commit", "25f008f541d68b09efd7b428b648c6d4899e6972", "that", "wa", "not", "handl", "those", "object", "liter", "have", "valueof", "valu", "function", "that", "return", "someth", "other", "then", "thi", "it", "will", "caus", "infinit", "digest", "thi", "probabl", "also", "go", "into"], "B_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "B_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "title_sim": [-0.014210427600264834], "body_sim": [0.22002291592541184], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 342}, {"A_title": "fix($compile): throw error in $onChanges immediately", "A_clean_title": ["fix", "compil", "throw", "error", "onchang", "chang", "immedi"], "B_title": "Update fixed docs content (guide)", "B_clean_title": ["updat", "fix", "doc", "content", "guid"], "A_body": "This brings it in line with how we throw errors in a digest cycle.\r\n\r\nCloses https://github.com/angular/angular.js/issues/15578\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["thi", "bring", "it", "line", "how", "we", "throw", "error", "digest", "cycl", "close", "http", "github", "com", "angular", "angular", "js", "issu", "15578", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "Couple of typos fixed:\n- indentation\n- batchLogbatchLog -> batchLog\n- start periodic checking\n- missing brace\n", "B_clean_body": ["coupl", "typo", "fix", "indent", "batchlogbatchlog", "batch", "logbatch", "log", "batchlog", "batch", "log", "start", "period", "check", "miss", "brace"], "title_sim": [0.059217378471699444], "body_sim": [0.044450903574368074], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2459}, {"A_title": "chore(gitignore): exclude .log and .stackdump files", "A_clean_title": ["chore", "gitignor", "exclud", "log", "stackdump", "file"], "B_title": "docs(guide/Component Router): fix npm typo", "B_clean_title": ["doc", "guid", "compon", "router", "fix", "npm", "typo"], "A_body": "Ignore those pesky .log files that are often generated by node and .stackdump, which is created by ConEmu.\n", "A_clean_body": ["ignor", "those", "peski", "log", "file", "that", "are", "often", "gener", "by", "node", "stackdump", "which", "creat", "by", "conemu", "con", "emu"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nFix a npm install typo in the component router guide https://docs.angularjs.org/guide/component-router\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nThere is a typo for installing angular via npm in the component router guide\n\n**What is the new behavior (if this is a feature change)?**\n\nThe typo is fixed\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nFix a typo in npm install instructions\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "npm", "instal", "typo", "compon", "router", "guid", "http", "router", "angularj", "doc", "org", "guid", "compon", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "instal", "angular", "via", "npm", "compon", "router", "guid", "**what", "new", "behavior", "thi", "featur", "chang", "typo", "fix", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "fix", "typo", "npm", "instal", "instruct"], "title_sim": [-0.0017039753849911016], "body_sim": [0.03530123292832877], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2}, {"A_title": "perf(jqLite): avoid repeated add/removeAttribute in jqLiteRemoveClass", "A_clean_title": ["perf", "jqlite", "jq", "lite", "avoid", "repeat", "add", "removeattribut", "remov", "attribut", "jqliteremoveclass", "jq", "lite", "remov", "class"], "B_title": "WIP: Scroll to anchor", "B_clean_title": ["wip", "scroll", "anchor"], "A_body": "This does something similar to what was suggested in #16078, although keeps it a little more like `jqLiteAddClass` for now.", "A_clean_body": ["thi", "someth", "similar", "what", "wa", "suggest", "16078", "although", "keep", "it", "littl", "more", "like", "jqliteaddclass", "jq", "lite", "add", "class", "now"], "B_body": "We need to find a name for this service...\n\nIt's actually only the last commit, I put it on the top of Misko's branch...\n", "B_clean_body": ["we", "need", "find", "name", "thi", "servic", "it", "'s", "actual", "onli", "last", "commit", "put", "it", "top", "misko", "'s", "branch"], "title_sim": [-0.024668001715286193], "body_sim": [0.2882409491998598], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.13547440806527275, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2080}, {"A_title": "feat: angularFilter.date: date filter can show day/mon string", "A_clean_title": ["feat", "angularfilt", "date", "angular", "filter", "date", "filter", "show", "day", "mon", "string"], "B_title": "fix($compile): sanitize values bound to img[src]", "B_clean_title": ["fix", "compil", "sanit", "valu", "bound", "img", "src"], "A_body": "  Support new date format, specifically day of week/Month of year in string\n  e.g. {{ someDate | data:\"EEE, MMM d, yyyy\" }} -> \"Wed, Jul 10, 2011\"\nCloses #396\n", "A_clean_body": ["support", "new", "date", "format", "specif", "day", "week", "month", "year", "string", "somed", "some", "date", "data", "eee", "mmm", "yyyi", "wed", "jul", "10", "2011", "close", "396"], "B_body": "Ref: 9532234bf1c408af9a6fd2c4743fdb585b920531\n", "B_clean_body": ["ref", "9532234bf1c408af9a6fd2c4743fdb585b920531"], "title_sim": [-0.01444564176951744], "body_sim": [-0.004328597526957448], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.004421796202093237, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 730}, {"A_title": "docs(changelog): Change for labels and style consistency", "A_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "B_title": "feat($controller): throw error when requested controller is not regis\u2026", "B_clean_title": ["feat", "control", "throw", "error", "when", "request", "control", "not", "regis\u2026"], "A_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "A_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nwhen a requested controller is not found (not registered), then a pretty non-descriptive ng:areq error is thrown\n\n**What is the new behavior (if this is a feature change)?**\na new error is thrown\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\n\u2026tered\n\nPreviously, it would throw the ng:areq error, which is less\nspecific and just informs that the requested controller did\nnot yield a function. Given how commonly controllers are used\nin Angular, it makes sense to have a specific error.\n\nThe ng:areq error is still thrown when the registered controller\nis not a function.\n\nCloses #14980\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "request", "control", "not", "found", "not", "regist", "then", "pretti", "non", "descript", "ng", "areq", "error", "thrown", "**what", "new", "behavior", "thi", "featur", "chang", "new", "error", "thrown", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026tere", "previous", "it", "would", "throw", "ng", "areq", "error", "which", "less", "specif", "just", "inform", "that", "request", "control", "did", "not", "yield", "function", "given", "how", "commonli", "control", "are", "use", "angular", "it", "make", "sens", "have", "specif", "error", "ng", "areq", "error", "still", "thrown", "when", "regist", "control", "not", "function", "close", "14980"], "title_sim": [-0.06818341756215107], "body_sim": [0.37424017236201557], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": -1, "time": 113}, {"A_title": "docs($animation): fix weird spaces around colons", "A_clean_title": ["doc", "anim", "fix", "weird", "space", "around", "colon"], "B_title": "chore(docs-app): ensure ToC links contain the path", "B_clean_title": ["chore", "doc", "app", "ensur", "toc", "link", "contain", "path"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSpacing around colons is weird.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "space", "around", "colon", "weird", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "Without the path the browser address changes so the hash\r\nfragment is directly on the base url. Then on refresh the\r\nbrowser navigates to an invalid page.\r\n\r\nCloses #16608\r\n", "B_clean_body": ["without", "path", "browser", "address", "chang", "so", "hash", "fragment", "directli", "base", "url", "then", "refresh", "browser", "navig", "invalid", "page", "close", "16608"], "title_sim": [0.23162382340401522], "body_sim": [0.09551676609635397], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 507}, {"A_title": "perf(orderBy): copy array with slice instead of for loop", "A_clean_title": ["perf", "orderbi", "order", "by", "copi", "array", "slice", "instead", "loop"], "B_title": "test($log): run all $log tests in IE9 & non-IE9 logging mode", "B_clean_title": ["test", "log", "run", "all", "log", "test", "ie9", "non", "ie9", "log", "mode"], "A_body": "Lets see if this can be backported (I mostly just want to keep tests in synch)\n\nUse array slice method to copy entire array instead of a for loop\nhttp://jsperf.com/new-array-vs-splice-vs-slice/54\n", "A_clean_body": ["let", "see", "thi", "backport", "mostli", "just", "want", "keep", "test", "synch", "use", "array", "slice", "method", "copi", "entir", "array", "instead", "loop", "http", "array", "vs", "splice", "vs", "slice", "54", "jsperf", "com", "new"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTests update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nIE 9 mode (missing `console.log.apply`) has a separate more restricted describe block.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll tests tha define `console.log` properly are run in both modes: with `apply` and without one.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nIn IE 9 console methods don't inherit from Function.prototype and, hence, don't\r\nhave apply. Until recently IE 9 logging in AngularJS was restricted to the\r\nfirst 2 parameters but that changed as we could just reuse\r\nFunction.prototype.apply everywhere, creating one code path for all browsers.\r\nTherefore, we can now run all tests in modes where apply exists on logging\r\nmethods and where it doesn't.\r\n\r\nRef #15911\r\nRef b277e3ead7296ae27106fe7ac37696635c6bfda1", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "ie", "mode", "miss", "consol", "log", "appli", "ha", "separ", "more", "restrict", "describ", "block", "**what", "new", "behavior", "thi", "featur", "chang", "all", "test", "tha", "defin", "consol", "log", "properli", "are", "run", "both", "mode", "appli", "without", "one", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "ie", "consol", "method", "n't", "inherit", "function", "prototyp", "henc", "don't", "have", "appli", "until", "recent", "ie", "log", "angularj", "angular", "js", "wa", "restrict", "first", "paramet", "but", "that", "chang", "as", "we", "could", "just", "reus", "function", "prototyp", "appli", "everywher", "creat", "one", "code", "path", "all", "browser", "therefor", "we", "now", "run", "all", "test", "mode", "where", "appli", "exist", "log", "method", "where", "it", "n't", "ref", "15911", "ref", "b277e3ead7296ae27106fe7ac37696635c6bfda1"], "title_sim": [0.021577222114061042], "body_sim": [0.1802596474228201], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.005260463764081703, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 917}, {"A_title": "fix(ngModel, input): improve handling of built-in named parsers", "A_clean_title": ["fix", "ngmodel", "ng", "model", "input", "improv", "handl", "built", "name", "parser"], "B_title": "fix($resource): properly call error callback when resource is called with", "B_clean_title": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call"], "A_body": "This commit changes how input elements use the private $$parserName\r\nproperty on the ngModelController to name parse errors. Until now,\r\nthe input types (number, date etc.) would set $$parserName when\r\nthe inputs were initialized, which meant that any other parsers on\r\nthe ngModelController would also be named after that type. The\r\neffect of that was that the `$error` property and the `ng-invalid-...`\r\nclass would always be that of the built-in parser, even if the custom\r\nparser had nothing to do with it.\r\n\r\nThe new behavior is that the $$parserName is only set if the actual\r\nparser is invalid, i.e. returns `undefined`.\r\n\r\nAlso, $$parserName has been removed from input[email] and input[url],\r\nas these types do not have a built-in parser anymore.\r\n\r\nBREAKING CHANGE:\r\n\r\nCustom parsers that fail to parse on input types email, url, date, month, time,\r\ndatetime-local, week, do no longer set $error[inputType], and no longer set the class\r\n`ng-invalid-[inputType]`. Instead, they set $error.parse and `ng-invalid-parse`.\r\n\r\nCloses #14292 \r\nCloses #10076\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nbugfix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nYes\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](../DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](../DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\nThis is a general fix to https://github.com/angular/angular.js/issues/10076 and also incorporates the changes in https://github.com/angular/angular.js/pull/14292.\r\nWhile it's not a very common problem, I always found this section of the API very strange, especially since it uses an undocumented API (so if you stumble on it, it's even more difficult to find out what causes it).\r\nSince https://github.com/angular/angular.js/pull/14292 is already a very small BC I thought a general solution to this issue would be welcome.\r\nNote that I will include tests for the other input types if this implementation is approved.\r\n\r\n", "A_clean_body": ["thi", "commit", "chang", "how", "input", "element", "use", "privat", "parsernam", "parser", "name", "properti", "ngmodelcontrol", "ng", "model", "control", "name", "pars", "error", "until", "now", "input", "type", "number", "date", "etc", "would", "set", "parsernam", "parser", "name", "when", "input", "were", "initi", "which", "meant", "that", "ani", "other", "parser", "ngmodelcontrol", "ng", "model", "control", "would", "also", "name", "after", "that", "type", "effect", "that", "wa", "that", "error", "properti", "ng", "invalid", "class", "would", "alway", "that", "built", "parser", "even", "custom", "parser", "had", "noth", "it", "new", "behavior", "that", "parsernam", "parser", "name", "onli", "set", "actual", "parser", "invalid", "return", "undefin", "also", "parsernam", "parser", "name", "ha", "been", "remov", "input", "email", "input", "url", "as", "these", "type", "not", "have", "built", "parser", "anymor", "break", "chang", "custom", "parser", "that", "fail", "pars", "input", "type", "email", "url", "date", "month", "time", "datetim", "local", "week", "no", "longer", "set", "error", "inputtyp", "input", "type", "no", "longer", "set", "class", "ng", "invalid", "inputtyp", "input", "type", "instead", "they", "set", "error", "pars", "ng", "invalid", "pars", "close", "14292", "close", "10076", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bugfix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "ye", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "md", "develop", "commit", "fix", "featur", "doc", "md", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**", "thi", "gener", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "10076", "also", "incorpor", "chang", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "while", "it", "'s", "not", "veri", "common", "problem", "alway", "found", "thi", "section", "api", "veri", "strang", "especi", "sinc", "it", "use", "undocu", "api", "so", "you", "stumbl", "it", "it", "'s", "even", "more", "difficult", "find", "out", "what", "caus", "it", "sinc", "http", "github", "com", "angular", "angular", "js", "pull", "14292", "alreadi", "veri", "small", "bc", "thought", "gener", "solut", "thi", "issu", "would", "welcom", "note", "that", "will", "includ", "test", "other", "input", "type", "thi", "implement", "approv"], "B_body": "fix($resource): properly call error callback when resource is called with two arguments\n", "B_clean_body": ["fix", "resourc", "properli", "call", "error", "callback", "when", "resourc", "call", "two", "argument"], "title_sim": [0.016189470063998745], "body_sim": [0.09707648285641776], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.09162880561161502, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 2292}, {"A_title": "refactor($compile): remove unnecessary try/catch", "A_clean_title": ["refactor", "compil", "remov", "unnecessari", "tri", "catch"], "B_title": "Improve module template, add custom installation notes for ngMock", "B_clean_title": ["improv", "modul", "templat", "add", "custom", "instal", "note", "ngmock", "ng", "mock"], "A_body": "I don't see anything in there that could throw...\n", "A_clean_body": ["n't", "see", "anyth", "there", "that", "could", "throw"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n- module install page doesn't mention npm\n- ngMock install page is misleading, as angular-mocks shouldn't be included in application code\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Docs have been added / updated (for bug fixes / features)\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "modul", "instal", "page", "n't", "mention", "npm", "ngmock", "ng", "mock", "instal", "page", "mislead", "as", "angular", "mock", "n't", "includ", "applic", "code", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur"], "title_sim": [-0.05724923684461859], "body_sim": [0.12994766289413767], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0051019953586969435, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 165}, {"A_title": "docs(ngRepeat): I added the phrase \"and by age\" on line 236", "A_clean_title": ["doc", "ngrepeat", "ng", "repeat", "ad", "phrase", "by", "age", "line", "236"], "B_title": "chore(doc-gen, docs-app): create plnkr examples with correct Angular \u2026", "B_clean_title": ["chore", "doc", "gen", "doc", "app", "creat", "plnkr", "exampl", "correct", "angular"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\ndocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nNo change in behavior introduced \n\n**What is the new behavior (if this is a feature change)?**\n\nNo change in behavior introduced\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nThe example seems to also be filtering by age. It threw me off a bit because I was getting results when I entered numbers in the input field.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "no", "chang", "behavior", "introduc", "**what", "new", "behavior", "thi", "featur", "chang", "no", "chang", "behavior", "introduc", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "exampl", "seem", "also", "filter", "by", "age", "it", "threw", "me", "off", "bit", "becaus", "wa", "get", "result", "when", "enter", "number", "input", "field"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs-gen / app fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nThe plnkr examples include the latest stable Angular version instead of the snapshot version when opened from snapshot docs.\n\n**What is the new behavior (if this is a feature change)?**\nFixes the plnkr examples generated from snapshot docs\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- ~[ ] Tests for the changes have been added (for bug fixes / features)~\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\n\n**Other information**:\n\n\u2026version\n\nWhen the docs are based on the snapshot, the plnkr examples must use the snapshot files\nfrom code.angularjs.org\n\nFixes https://github.com/angular/angular.js/issues/15267\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "gen", "app", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "plnkr", "exampl", "includ", "latest", "stabl", "angular", "version", "instead", "snapshot", "version", "when", "open", "snapshot", "doc", "**what", "new", "behavior", "thi", "featur", "chang", "fix", "plnkr", "exampl", "gener", "snapshot", "doc", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "\u2026version", "when", "doc", "are", "base", "snapshot", "plnkr", "exampl", "must", "use", "snapshot", "file", "code", "angularj", "org", "fix", "http", "github", "com", "angular", "angular", "js", "issu", "15267"], "title_sim": [0.13321873746768795], "body_sim": [0.9184244956061614], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 58}, {"A_title": "Update badjsonp.ngdoc", "A_clean_title": ["updat", "badjsonp", "ngdoc"], "B_title": "Revert ng style regression for 1.3.x", "B_clean_title": ["revert", "ng", "style", "regress"], "A_body": "\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nThis is docs update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nThere is a typo in badjsonp.ngdoc\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nDocumentation is now correct.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "thi", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "there", "typo", "badjsonp", "ngdoc", "**what", "new", "behavior", "thi", "featur", "chang", "document", "now", "correct", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "I know, 1.4 is around the corner, but this should be handled nevertheless.\n", "B_clean_body": ["know", "around", "corner", "but", "thi", "handl", "nevertheless"], "title_sim": [0.004279194770835951], "body_sim": [0.16209202250925434], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 732}, {"A_title": "feat(security): explicitly whitelist URL schemes for bootstrap.", "A_clean_title": ["feat", "secur", "explicitli", "whitelist", "url", "scheme", "bootstrap"], "B_title": "docs(input[range]): Fix erroneous examples", "B_clean_title": ["doc", "input", "rang", "fix", "erron", "exampl"], "A_body": "Many browsers have some extension URL scheme. It is unclear how many of\r\nthose have the security issue of allowing parser-inserted loads of\r\nextension URLs.\r\n\r\nTo be conservative, this code whitelists the URL schemes that are known\r\nto be subject to CSP, i.e. the ones that are expected and safe.\r\n\r\nNote: there is no change in tests as behavior does not change for any known URL.", "A_clean_body": ["mani", "browser", "have", "some", "extens", "url", "scheme", "it", "unclear", "how", "mani", "those", "have", "secur", "issu", "allow", "parser", "insert", "load", "extens", "url", "ur", "ls", "conserv", "thi", "code", "whitelist", "url", "scheme", "that", "are", "known", "subject", "csp", "one", "that", "are", "expect", "safe", "note", "there", "no", "chang", "test", "as", "behavior", "not", "chang", "ani", "known", "url"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocumentation update. \n\n**What is the current behavior? (You can also link to an open issue here)**\n\nExamples of input[range] doesn't works well because it use only the `scope.min` value instead of `scope.max`\n\n**What is the new behavior (if this is a feature change)?**\n- When updating min value, it update the min only.\n- When updating max value, it update the max only.\n\n**Does this PR introduce a breaking change?**\n\nNo.\n\n**Please check if the PR fulfills these requirements**\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "document", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "input", "rang", "n't", "work", "well", "becaus", "it", "use", "onli", "scope", "min", "valu", "instead", "scope", "max", "**what", "new", "behavior", "thi", "featur", "chang", "when", "updat", "min", "valu", "it", "updat", "min", "onli", "when", "updat", "max", "valu", "it", "updat", "max", "onli", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [-0.03575639324033991], "body_sim": [0.22839205941887789], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 70}, {"A_title": "docs(guide/Unit Testing): Typo in 'focused'", "A_clean_title": ["doc", "guid", "unit", "test", "typo", "'focus"], "B_title": "docs($compile): add more info about optional bindings", "B_clean_title": ["doc", "compil", "add", "more", "info", "about", "option", "bind"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nN/A\n\n**What is the new behavior (if this is a feature change)?**\n\nNone\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "none", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "This also deletes the incorrect info that a missing attribute\r\nin a non-optional binding will throw.\r\n\r\nCloses #15989\r\n\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\ndocs\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nmissing / incorrect info\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\ninfo!\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n101% not\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["thi", "also", "delet", "incorrect", "info", "that", "miss", "attribut", "non", "option", "bind", "will", "throw", "close", "15989", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "miss", "incorrect", "info", "**what", "new", "behavior", "thi", "featur", "chang", "info", "**doe", "thi", "pr", "introduc", "break", "chang", "101", "not", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.11994072367184362], "body_sim": [0.955130215108844], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 403}, {"A_title": "fix(input): correctly handle invalid model values for `input[date/time/\u2026...", "A_clean_title": ["fix", "input", "correctli", "handl", "invalid", "model", "valu", "input", "date", "time"], "B_title": "docs(guide/Conceptual Overview): fix external api example", "B_clean_title": ["doc", "guid", "conceptu", "overview", "fix", "extern", "api", "exampl"], "A_body": "...]`\n\nSimilar to `input[number]` Angular will throw if the model value\nfor a `input[date]` is not a `Date` object.\nFor `Invalid Date`s (dates who\u2019s `getTime()` is `NaN`) `input[date]` \nwill render an empty string.\n\nCloses #8949\n", "A_clean_body": ["similar", "input", "number", "angular", "will", "throw", "model", "valu", "input", "date", "not", "date", "object", "invalid", "date", "date", "who", "gettim", "get", "time", "nan", "na", "input", "date", "will", "render", "empti", "string", "close", "8949"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\ndocs\n\n**What is the current behavior? (You can also link to an open issue here)**\nExample is broken in the snapshot because of changes to JSONP\n\n**Other information**:\n\nThe example will still be broken when opened in a plnkr, because they use the stable version instead of the snapshot.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "exampl", "broken", "snapshot", "becaus", "chang", "jsonp", "**other", "information**", "exampl", "will", "still", "broken", "when", "open", "plnkr", "becaus", "they", "use", "stabl", "version", "instead", "snapshot"], "title_sim": [0.06239081578036886], "body_sim": [0.030685650882094902], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 759}, {"A_title": "docs(*): remove usage of global grunt-cli", "A_clean_title": ["doc", "remov", "usag", "global", "grunt", "cli"], "B_title": "feat(input): add support for input[type=range]", "B_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nCurrently, the contributing docs tell people to globally install grunt and build angularjs using the `grunt` cli command.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nThis commit ensures grunt is not required globally by updating all the commands to use `yarn grunt` instead of `grunt`.\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "current", "contribut", "doc", "tell", "peopl", "global", "instal", "grunt", "build", "angularj", "grunt", "cli", "command", "**what", "new", "behavior", "thi", "featur", "chang", "thi", "commit", "ensur", "grunt", "not", "requir", "global", "by", "updat", "all", "command", "use", "yarn", "grunt", "instead", "grunt", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "title_sim": [-0.005464297032288572], "body_sim": [0.8384193424840866], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.019022089850606026, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 465}, {"A_title": "test($log): run all $log tests in IE9 & non-IE9 logging mode", "A_clean_title": ["test", "log", "run", "all", "log", "test", "ie9", "non", "ie9", "log", "mode"], "B_title": "docs(ngMockE2E): add docs for $httpBackend.matchLatestDefinitionEnabl\u2026", "B_clean_title": ["doc", "ngmocke2", "ng", "mock", "e2e", "add", "doc", "httpbackend", "matchlatestdefinitionenabl\u2026", "http", "backend", "match", "latest", "definit", "enabl\u2026"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\nTests update.\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\nIE 9 mode (missing `console.log.apply`) has a separate more restricted describe block.\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\nAll tests tha define `console.log` properly are run in both modes: with `apply` and without one.\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\nNo.\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\nIn IE 9 console methods don't inherit from Function.prototype and, hence, don't\r\nhave apply. Until recently IE 9 logging in AngularJS was restricted to the\r\nfirst 2 parameters but that changed as we could just reuse\r\nFunction.prototype.apply everywhere, creating one code path for all browsers.\r\nTherefore, we can now run all tests in modes where apply exists on logging\r\nmethods and where it doesn't.\r\n\r\nRef #15911\r\nRef b277e3ead7296ae27106fe7ac37696635c6bfda1", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "test", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "ie", "mode", "miss", "consol", "log", "appli", "ha", "separ", "more", "restrict", "describ", "block", "**what", "new", "behavior", "thi", "featur", "chang", "all", "test", "tha", "defin", "consol", "log", "properli", "are", "run", "both", "mode", "appli", "without", "one", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "ie", "consol", "method", "n't", "inherit", "function", "prototyp", "henc", "don't", "have", "appli", "until", "recent", "ie", "log", "angularj", "angular", "js", "wa", "restrict", "first", "paramet", "but", "that", "chang", "as", "we", "could", "just", "reus", "function", "prototyp", "appli", "everywher", "creat", "one", "code", "path", "all", "browser", "therefor", "we", "now", "run", "all", "test", "mode", "where", "appli", "exist", "log", "method", "where", "it", "n't", "ref", "15911", "ref", "b277e3ead7296ae27106fe7ac37696635c6bfda1"], "B_body": "\u2026ed()\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\n\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ ] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["\u2026ed", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "title_sim": [-0.03276643867708222], "body_sim": [0.7700261626239656], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.15117027606891018, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 371}, {"A_title": "feat(input) add ng:minlength and ng:maxlength validation support", "A_clean_title": ["feat", "input", "add", "ng", "minlength", "ng", "maxlength", "valid", "support"], "B_title": "fix(AngularPublic): expose missing angular public methods", "B_clean_title": ["fix", "angularpubl", "angular", "public", "expos", "miss", "angular", "public", "method"], "A_body": "notes(igor): I also e2e tests and refactorred the e2e test example to be\nmore clear about what is a variable and what is an html/framework api.\n", "A_clean_body": ["note", "igor", "also", "e2e", "test", "refactor", "e2e", "test", "exampl", "more", "clear", "about", "what", "variabl", "what", "html", "framework", "api"], "B_body": "- expose lowercase, uppercase and isDate to angular public api\n- remove unnecessary extention of jqLite at an early stage\n", "B_clean_body": ["expos", "lowercas", "uppercas", "isdat", "date", "angular", "public", "api", "remov", "unnecessari", "extent", "jqlite", "jq", "lite", "at", "earli", "stage"], "title_sim": [0.008212912927952013], "body_sim": [0.39098298622152194], "file_list_sim": 0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 56}, {"A_title": "fix(ngOptions): ignore comment nodes when removing 'selected' attribute", "A_clean_title": ["fix", "ngoption", "ng", "option", "ignor", "comment", "node", "when", "remov", "'select", "attribut"], "B_title": "fix(package.json): use full version numbers when interpolating", "B_clean_title": ["fix", "packag", "json", "use", "full", "version", "number", "when", "interpol"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfix (regression)\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen an empty option has ngIf on it in an ngOptions select, and the ngIf expression is false, then\r\nan error is thrown, because we try to remove the \"selected\" attribute from the ngIf comment node.\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- ~[ ] Docs have been added / updated (for bug fixes / features)~\r\n\r\n**Other information**:\r\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "regress", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "empti", "option", "ha", "ngif", "ng", "it", "ngoption", "ng", "option", "select", "ngif", "ng", "express", "fals", "then", "error", "thrown", "becaus", "we", "tri", "remov", "select", "attribut", "ngif", "ng", "comment", "node", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "B_body": "When using less than 3 numbers in npm package version together with\ntilde interpolation, it lets major version upgrades, e.g. \"~0.10\" means\nat least 0.10 and less than 1.0; this pattern would match e.g. 0.11, 0.12 etc.\nBesides, some package.json dependencies were upgraded.\n", "B_clean_body": ["when", "less", "than", "number", "npm", "packag", "version", "togeth", "tild", "interpol", "it", "let", "major", "version", "upgrad", "~0", "10", "mean", "at", "least", "10", "less", "than", "thi", "pattern", "would", "match", "11", "12", "etc", "besid", "some", "packag", "json", "depend", "were", "upgrad"], "title_sim": [0.10698003580759984], "body_sim": [0.07254621518099588], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1198}, {"A_title": "fix(booleanAttrs): convert to boolean", "A_clean_title": ["fix", "booleanattr", "boolean", "attr", "convert", "boolean"], "B_title": "Fix: set $submitted on child forms when form is submitted", "B_clean_title": ["fix", "set", "submit", "child", "form", "when", "form", "submit"], "A_body": "jQuery's attr() does not handle 0 as false, when it comes to boolean attrs.\n\nAnother solution might be to not set attr() for boolean attrs at all...\n", "A_clean_body": ["jqueri", "queri", "'s", "attr", "not", "handl", "as", "fals", "when", "it", "come", "boolean", "attr", "anoth", "solut", "might", "not", "set", "attr", "boolean", "attr", "at", "all"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nFix\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nWhen submitting a form, $submitted is not set on child forms\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nI don't think so.\r\nNo one in #10071 said that his might be breaking.\r\nAngularJS doesn't have nested form isolation, and ngForm is only for grouping sub-forms. I think that it's expected that a submission event will affect all sub-forms.\r\nProbably: https://github.com/angular/angular.js/pull/11023#issuecomment-143162373\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\nFollow up to https://github.com/angular/angular.js/pull/11023", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "when", "submit", "form", "submit", "not", "set", "child", "form", "**doe", "thi", "pr", "introduc", "break", "chang", "n't", "think", "so", "no", "one", "10071", "said", "that", "hi", "might", "break", "angularj", "angular", "js", "n't", "have", "nest", "form", "isol", "ngform", "ng", "form", "onli", "group", "sub", "form", "think", "that", "it", "'s", "expect", "that", "submiss", "event", "will", "affect", "all", "sub", "form", "probabl", "http", "github", "com", "angular", "angular", "js", "pull", "11023", "issuecom", "143162373", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "follow", "up", "http", "github", "com", "angular", "angular", "js", "pull", "11023"], "title_sim": [0.15198684753194286], "body_sim": [0.11211224346777805], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.15562929721253244, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1797}, {"A_title": "feat(input): added drop event support", "A_clean_title": ["feat", "input", "ad", "drop", "event", "support"], "B_title": "fix($httpBackend): Ignore multiple calls to onreadystatechange with read...", "B_clean_title": ["fix", "httpbackend", "http", "backend", "ignor", "multipl", "call", "onreadystatechang", "read"], "A_body": "<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nfeature\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\ndrop event not support\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nadded drop event support \r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nno\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [x] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "drop", "event", "not", "support", "**what", "new", "behavior", "thi", "featur", "chang", "ad", "drop", "event", "support", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "...yState=4\n\nOn mobile webkit `onreadystatechange` might by called multiple times\nwith `readyState===4`  caused by xhrs that are resolved while the app is\nin the background.\n\n Fixes #5426.\n", "B_clean_body": ["ystate=4", "state=4", "mobil", "webkit", "onreadystatechang", "might", "by", "call", "multipl", "time", "readystate===4", "readi", "state===4", "caus", "by", "xhr", "that", "are", "resolv", "while", "app", "background", "fix", "5426"], "title_sim": [0.13815212765191281], "body_sim": [0.09942126330100969], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0006050048821688965, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1484}, {"A_title": "test(modules): fix module tests which got disabled by ngMobile", "A_clean_title": ["test", "modul", "fix", "modul", "test", "which", "got", "disabl", "by", "ngmobil", "ng", "mobil"], "B_title": "docs(app): matches anchor tags to current docs theme", "B_clean_title": ["doc", "app", "match", "anchor", "tag", "current", "doc", "theme"], "A_body": "When ngMobile was merged in, we accidentaly included angular-scenario.js\nin the test file set for modules. Loading this file overrode jasmine's\n`it` and `describe` global functions which essentially disabled all of\n~200 unit tests for wrapped modules.\n\nThis change refactors the code to run the wrapped module tests.\n\nI had to extract browserTrigger from scenario runner in order to achieve\nthis without code duplication.\n", "A_clean_body": ["when", "ngmobil", "ng", "mobil", "wa", "merg", "we", "accidentali", "includ", "angular", "scenario", "js", "test", "file", "set", "modul", "load", "thi", "file", "overrod", "jasmine'", "it", "describ", "global", "function", "which", "essenti", "disabl", "all", "~200", "unit", "test", "wrap", "modul", "thi", "chang", "refactor", "code", "run", "wrap", "modul", "test", "had", "extract", "browsertrigg", "browser", "trigger", "scenario", "runner", "order", "achiev", "thi", "without", "code", "duplic"], "B_body": "Updates the styles for the anchor tags to match the current docs theme.\n", "B_clean_body": ["updat", "style", "anchor", "tag", "match", "current", "doc", "theme"], "title_sim": [0.038894942891179216], "body_sim": [0.02815944516122385], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 601}, {"A_title": " \tdocs(ngRepeat): mention limitations of object iteration", "A_clean_title": ["doc", "ngrepeat", "ng", "repeat", "mention", "limit", "object", "iter"], "B_title": "revert: \"fix($compile): do not write @-bound properties if attribute \u2026", "B_clean_title": ["revert", "fix", "compil", "not", "write", "bound", "properti", "attribut"], "A_body": "Issue is tracked in issue Related #6266\n", "A_clean_body": ["issu", "track", "issu", "relat", "6266"], "B_body": "\u2026is not present\"\n\nThis reverts commit 8a1eb1625c080445ce1e519762e1f2d4fd842b72.\n\nThis commit broke the tabs component on the material project,\nwhich caused internal breakages. Will open a separate issue to\nlook into the issue.\n", "B_clean_body": ["\u2026i", "not", "present", "thi", "revert", "commit", "8a1eb1625c080445ce1e519762e1f2d4fd842b72", "thi", "commit", "broke", "tab", "compon", "materi", "project", "which", "caus", "intern", "breakag", "will", "open", "separ", "issu", "look", "into", "issu"], "title_sim": [0.07705616408101287], "body_sim": [0.156969617887524], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 221}, {"A_title": "chore(styleDirective): remove an unneccessary directive definition", "A_clean_title": ["chore", "styledirect", "style", "direct", "remov", "unneccessari", "direct", "definit"], "B_title": "docs($animation): fix weird spaces around colons", "B_clean_title": ["doc", "anim", "fix", "weird", "space", "around", "colon"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nChore / Cleanup\n\n**Does this PR introduce a breaking change?**\n\nNope\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nSince the style directive is defined as a non-terminal element directive\nwith no behavior on link, we may as well not define anything at all.\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "chore", "cleanup", "**doe", "thi", "pr", "introduc", "break", "chang", "nope", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "sinc", "style", "direct", "defin", "as", "non", "termin", "element", "direct", "no", "behavior", "link", "we", "may", "as", "well", "not", "defin", "anyth", "at", "all"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nDocs update\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\nSpacing around colons is weird.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nN/A\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nN/A\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] ~~Tests for the changes have been added (for bug fixes / features)~~\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n**Other information**:\r\n\r\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "space", "around", "colon", "weird", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "~~test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.04164392062937367], "body_sim": [0.9240133562455352], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 182}, {"A_title": "fix(date): parse string input as local time unless TZ is specified", "A_clean_title": ["fix", "date", "pars", "string", "input", "as", "local", "time", "unless", "tz", "specifi"], "B_title": "fix(select): don't register options when select has no ngModel", "B_clean_title": ["fix", "select", "n't", "regist", "option", "when", "select", "ha", "no", "ngmodel", "ng", "model"], "A_body": "previously we were always parsing the string input as UTC which cased issues like:\n\n{{ '2012-04-01' | date:'d MMM yyyy' }} renders as 31 Mar 2012\n\nBREAKING CHANGE: string input without timezone info is now parsed as local time/date\n\nCloses #847\n", "A_clean_body": ["previous", "we", "were", "alway", "pars", "string", "input", "as", "utc", "which", "case", "issu", "like", "'2012", "04", "01", "date", "'d", "mmm", "yyyi", "render", "as", "31", "mar", "2012", "break", "chang", "string", "input", "without", "timezon", "info", "now", "pars", "as", "local", "time", "date", "close", "847"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nbug fix\n\n**What is the current behavior? (You can also link to an open issue here)**\nOptions are added even if select has no ngModel. ngValue replaces the value attribute of the element with a hashed value, and this might break tests (it does in angular material)\n\n**What is the new behavior (if this is a feature change)?**\nOptions are not added to select\n\n**Does this PR introduce a breaking change?**\n?\nI can't think of a valid use case where you'd want registerning options without ngModel integration. If you don't have model binding, then you don't need to store the options internally. You can actually use ngOptions without ngModel to render a list of options - but you don't need to register the options for that.\n\nThe registerOption function is also not documented, so this is an implementation detail from the perspective of the user\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n\n**Other information**:\n\nWhen option elements use ngValue, value or interpolated text simply to set\nthe option value, i.e. when the parent select doesn't have an ngModel,\nthere is no necessity in registering the options with the select controller.\nThis was previously no problem, as the ngModelController is set to a noop controller,\nso that all further interactions are aborted ($render etc)\n\nHowever, ngValue sets a hashed value inside the option value (to support arbitrary object types).\nThis can cause issues with tests that expect unhashed values.\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "bug", "fix", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "option", "are", "ad", "even", "select", "ha", "no", "ngmodel", "ng", "model", "ngvalu", "ng", "valu", "replac", "valu", "attribut", "element", "hash", "valu", "thi", "might", "break", "test", "it", "angular", "materi", "**what", "new", "behavior", "thi", "featur", "chang", "option", "are", "not", "ad", "select", "**doe", "thi", "pr", "introduc", "break", "chang", "ca", "n't", "think", "valid", "use", "case", "where", "you", "'d", "want", "registern", "option", "without", "ngmodel", "ng", "model", "integr", "you", "n't", "have", "model", "bind", "then", "you", "n't", "need", "store", "option", "intern", "you", "actual", "use", "ngoption", "ng", "option", "without", "ngmodel", "ng", "model", "render", "list", "option", "but", "you", "n't", "need", "regist", "option", "that", "registeropt", "regist", "option", "function", "also", "not", "document", "so", "thi", "implement", "detail", "perspect", "user", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "**other", "information**", "when", "option", "element", "use", "ngvalu", "ng", "valu", "valu", "or", "interpol", "text", "simpli", "set", "option", "valu", "when", "parent", "select", "n't", "have", "ngmodel", "ng", "model", "there", "no", "necess", "regist", "option", "select", "control", "thi", "wa", "previous", "no", "problem", "as", "ngmodelcontrol", "ng", "model", "control", "set", "noop", "control", "so", "that", "all", "further", "interact", "are", "abort", "render", "etc", "howev", "ngvalu", "ng", "valu", "set", "hash", "valu", "insid", "option", "valu", "support", "arbitrari", "object", "type", "thi", "caus", "issu", "test", "that", "expect", "unhash", "valu"], "title_sim": [0.03040940595727881], "body_sim": [0.14996674698990423], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.001516240411508042, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 1272}, {"A_title": "docs($interpolateProvider): document XSS in $interpolate", "A_clean_title": ["doc", "interpolateprovid", "interpol", "provid", "document", "xss", "interpol"], "B_title": "perf(jqLite): avoid repeated add/removeAttribute in jqLiteRemoveClass", "B_clean_title": ["perf", "jqlite", "jq", "lite", "avoid", "repeat", "add", "removeattribut", "remov", "attribut", "jqliteremoveclass", "jq", "lite", "remov", "class"], "A_body": "`$interpolateProvider.startSymbol` & friends are often used dangerously, to embed Angular templating in other templating languages. This change documents that that is a very dangerous practice.\n", "A_clean_body": ["interpolateprovid", "startsymbol", "interpol", "provid", "start", "symbol", "friend", "are", "often", "use", "danger", "emb", "angular", "templat", "other", "templat", "languag", "thi", "chang", "document", "that", "that", "veri", "danger", "practic"], "B_body": "This does something similar to what was suggested in #16078, although keeps it a little more like `jqLiteAddClass` for now.", "B_clean_body": ["thi", "someth", "similar", "what", "wa", "suggest", "16078", "although", "keep", "it", "littl", "more", "like", "jqliteaddclass", "jq", "lite", "add", "class", "now"], "title_sim": [-0.042462596400449325], "body_sim": [0.15793367443871875], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0025026159439718726, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 670}, {"A_title": "docs(guide/External Resources): describe your change...", "A_clean_title": ["doc", "guid", "extern", "resourc", "describ", "your", "chang"], "B_title": "docs(guide/Unit Testing): Typo in 'focused'", "B_clean_title": ["doc", "guid", "unit", "test", "typo", "'focus"], "A_body": "Deprecating content @ deleted URL\r\n\r\n<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->\r\n**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nRemoving URL \r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\n\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [ ] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)\r\n- [ X] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated\r\n- [ ] Fix/Feature: Tests have been added; existing tests pass\r\n\r\n**Other information**:\r\n\r\n", "A_clean_body": ["deprec", "content", "delet", "url", "gener", "pr", "submiss", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "submit", "pr", "**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "remov", "url", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "**doe", "thi", "pr", "introduc", "break", "chang", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "commit", "fix", "featur", "doc", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "develop", "document", "have", "been", "ad", "updat", "fix", "featur", "test", "have", "been", "ad", "exist", "test", "pass", "**other", "information**"], "B_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\n\nDocs update\n\n**What is the current behavior? (You can also link to an open issue here)**\n\nN/A\n\n**What is the new behavior (if this is a feature change)?**\n\nNone\n\n**Does this PR introduce a breaking change?**\n\nNo\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n", "B_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "doc", "updat", "**what", "current", "behavior", "you", "also", "link", "open", "issu", "here", "**what", "new", "behavior", "thi", "featur", "chang", "none", "**doe", "thi", "pr", "introduc", "break", "chang", "no", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**"], "title_sim": [0.14636684890331766], "body_sim": [0.8876027537478857], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 626}, {"A_title": "fix(testabilityPatch): reset cache after memory leak detection", "A_clean_title": ["fix", "testabilitypatch", "testabl", "patch", "reset", "cach", "after", "memori", "leak", "detect"], "B_title": "docs(changelog): Change for labels and style consistency", "B_clean_title": ["doc", "changelog", "chang", "label", "style", "consist"], "A_body": "When you have a test failure in the angular.js project, which also causes a memory leak, such as a failure to dealocate an element or a scope, you often get a false-negative failure for every subsequent test. This change ensures that after such an error, the cache is reset so that subsequent tests can run normally.\n", "A_clean_body": ["when", "you", "have", "test", "failur", "angular", "js", "project", "which", "also", "caus", "memori", "leak", "such", "as", "failur", "dealoc", "element", "or", "scope", "you", "often", "get", "fals", "neg", "failur", "everi", "subsequ", "test", "thi", "chang", "ensur", "that", "after", "such", "error", "cach", "reset", "so", "that", "subsequ", "test", "run", "normal"], "B_body": "Remove 'Breaking Changes' label where there are no breaking changes.\n\nOnly for '1.4.0-rc.2', breaking changes have different styling (bold without bulleted list). Change to be consistent with others\n", "B_clean_body": ["remov", "'break", "chang", "label", "where", "there", "are", "no", "break", "chang", "onli", "rc", "break", "chang", "have", "differ", "style", "bold", "without", "bullet", "list", "chang", "consist", "other"], "title_sim": [0.02498298363423259], "body_sim": [0.2615199077461866], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.0, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 199}, {"A_title": "feat(input): add support for input[type=range]", "A_clean_title": ["feat", "input", "add", "support", "input", "type=rang"], "B_title": "test($parse): add tests for watching one-time array/object literals", "B_clean_title": ["test", "pars", "add", "test", "watch", "one", "time", "array", "object", "liter"], "A_body": "**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\nfeature\n\n**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been added / updated (for bug fixes / features)\n\n**Other information**:\n\nthe input[type=range] behavior is the same of an input[type=number]\nwith min=0, max=100 and step=1 as defaults\n\nCloses #5892\nCloses #9715\n", "A_clean_body": ["**what", "kind", "chang", "thi", "pr", "introduc", "bug", "fix", "featur", "doc", "updat", "featur", "**pleas", "check", "pr", "fulfil", "these", "requirements**", "commit", "messag", "follow", "our", "guidelin", "http", "md", "github", "com", "angular", "angular", "js", "blob", "master", "contribut", "commit", "messag", "format", "test", "chang", "have", "been", "ad", "bug", "fix", "featur", "doc", "have", "been", "ad", "updat", "bug", "fix", "featur", "**other", "information**", "input", "type=rang", "behavior", "same", "input", "type=numb", "min=0", "max=100", "step=1", "as", "default", "close", "5892", "close", "9715"], "B_body": "These are some examples of cases which 189461f9bf6fda18ddbd16c42f2e959cf939c3da enabled. All the one-time tests failed before that commit.\r\n\r\nIt's possible that these overlap with [these tests](https://github.com/angular/angular.js/blob/189461f9bf6fda18ddbd16c42f2e959cf939c3da/test/ng/parseSpec.js#L2692) a bit (the non-deep ones), but I think at least the `should ignore changes within nested objects` tests are a good addition.", "B_clean_body": ["these", "are", "some", "exampl", "case", "which", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "enabl", "all", "one", "time", "test", "fail", "befor", "that", "commit", "it", "'s", "possibl", "that", "these", "overlap", "these", "test", "http", "js", "github", "com", "angular", "angular", "js", "blob", "189461f9bf6fda18ddbd16c42f2e959cf939c3da", "test", "ng", "parsespec", "pars", "spec", "l2692", "bit", "non", "deep", "one", "but", "think", "at", "least", "ignor", "chang", "within", "nest", "object", "test", "are", "good", "addit"], "title_sim": [0.06737605068429532], "body_sim": [0.3677507310014021], "file_list_sim": 0.0, "overlap_files_len": 0, "code_sim": [0.16002775801643662, 0.0], "location_sim": [0.0, 0.0], "pattern": 0, "time": 609}]